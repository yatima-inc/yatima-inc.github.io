{"name":"Lean.Elab.PreDefinition.Structural.Basic","instances":[{"typeNames":["Lean.Elab.Structural.M"],"name":"Lean.Elab.Structural.instInhabitedM","className":"Inhabited"}],"imports":["Init","Lean.Meta.Basic","Lean.Meta.ForEachExpr"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L61-L64","name":"Lean.Elab.Structural.recArgHasLooseBVarsAt","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.recArgHasLooseBVarsAt","doc":"Return true iff `e` contains an application `recFnName .. t ..` where the term `t` is\n  the argument we are trying to recurse on, and it contains loose bound variables.\n\n  We use this test to decide whether we should process a matcher-application as a regular\n  applicaton or not. That is, whether we should push the `below` argument should be affected by the matcher or not.\n  If `e` does not contain an application of the form `recFnName .. t ..`, then we know\n  the recursion doesn't depend on any pattern variable in this matcher.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L49-L50","name":"Lean.Elab.Structural.run","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.run","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L46-L47","name":"Lean.Elab.Structural.instInhabitedM","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.instInhabitedM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L44-L44","name":"Lean.Elab.Structural.M","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.M","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L36-L42","name":"Lean.Elab.Structural.State","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.State","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L33-L34","name":"Lean.Elab.Structural.RecArgInfo.recArgPos","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.RecArgInfo.recArgPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L11-L31","name":"Lean.Elab.Structural.RecArgInfo","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.RecArgInfo","doc":""}]}