{"name":"Lean.Parser.Basic","instances":[{"typeNames":["Lean.Parser.InputContext"],"name":"Lean.Parser.instInhabitedInputContext","className":"Inhabited"},{"typeNames":["Lean.Parser.Error"],"name":"Lean.Parser.instInhabitedError","className":"Inhabited"},{"typeNames":["Lean.Parser.Error"],"name":"Lean.Parser.instBEqError","className":"BEq"},{"typeNames":["Lean.Parser.Error"],"name":"Lean.Parser.Error.instToStringError","className":"ToString"},{"typeNames":["Lean.Parser.ParserFn"],"name":"Lean.Parser.instInhabitedParserFn","className":"Inhabited"},{"typeNames":["Lean.Parser.FirstTokens"],"name":"Lean.Parser.instInhabitedFirstTokens","className":"Inhabited"},{"typeNames":["Lean.Parser.FirstTokens"],"name":"Lean.Parser.FirstTokens.instToStringFirstTokens","className":"ToString"},{"typeNames":["Lean.Parser.ParserInfo"],"name":"Lean.Parser.instInhabitedParserInfo","className":"Inhabited"},{"typeNames":["Lean.Parser.Parser"],"name":"Lean.Parser.instInhabitedParser","className":"Inhabited"},{"typeNames":["Lean.Parser.Parser"],"name":"Lean.Parser.instAndThenParser","className":"AndThen"},{"typeNames":["Lean.Parser.OrElseOnAntiquotBehavior"],"name":"Lean.Parser.instBEqOrElseOnAntiquotBehavior","className":"BEq"},{"typeNames":["Lean.Parser.Parser"],"name":"Lean.Parser.instOrElseParser","className":"OrElse"},{"typeNames":["Lean.Parser.TokenMap"],"name":"Lean.Parser.TokenMap.instInhabitedTokenMap","className":"Inhabited"},{"typeNames":["Lean.Parser.TokenMap"],"name":"Lean.Parser.TokenMap.instEmptyCollectionTokenMap","className":"EmptyCollection"},{"typeNames":["Lean.Parser.TokenMap","Prod","Lean.Name","List"],"name":"Lean.Parser.TokenMap.instForInTokenMapProdNameList","className":"ForIn"},{"typeNames":["Lean.Parser.PrattParsingTables"],"name":"Lean.Parser.instInhabitedPrattParsingTables","className":"Inhabited"},{"typeNames":["Lean.Parser.LeadingIdentBehavior"],"name":"Lean.Parser.instInhabitedLeadingIdentBehavior","className":"Inhabited"},{"typeNames":["Lean.Parser.LeadingIdentBehavior"],"name":"Lean.Parser.instBEqLeadingIdentBehavior","className":"BEq"},{"typeNames":["Lean.Parser.LeadingIdentBehavior"],"name":"Lean.Parser.instReprLeadingIdentBehavior","className":"Repr"},{"typeNames":["Lean.Parser.ParserCategory"],"name":"Lean.Parser.instInhabitedParserCategory","className":"Inhabited"},{"typeNames":["String","Lean.Parser.Parser"],"name":"Lean.Parser.instCoeStringParser","className":"Coe"}],"imports":["Init","Lean.Data.Trie","Lean.Data.Position","Lean.Syntax","Lean.Environment","Lean.Message"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1948-L1949","name":"Lean.Syntax.forArgsM","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.forArgsM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1945-L1946","name":"Lean.Syntax.foldArgs","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.foldArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1942-L1943","name":"Lean.Syntax.foldArgsM","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.foldArgsM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1930-L1933","name":"Lean.Parser.skip","docLink":"./Lean/Parser/Basic.html#Lean.Parser.skip","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1924-L1928","name":"Lean.Parser.fieldIdx","docLink":"./Lean/Parser/Basic.html#Lean.Parser.fieldIdx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1914-L1922","name":"Lean.Parser.fieldIdxFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.fieldIdxFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1907-L1912","name":"Lean.Parser.prattParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.prattParser","doc":"Implements a variant of Pratt's algorithm. In Pratt's algorithms tokens have a right and left binding power.\n  In our implementation, parsers have precedence instead. This method selects a parser (or more, via\n  `longestMatchFn`) from `leadingTable` based on the current token. Note that the unindexed `leadingParsers` parsers\n  are also tried. We have the unidexed `leadingParsers` because some parsers do not have a \"first token\". Example:\n  ```\n  syntax term:51 \"â‰¤\" ident \"<\" term \"|\" term : index\n  ```\n  Example, in principle, the set of first tokens for this parser is any token that can start a term, but this set\n  is always changing. Thus, this parsing rule is stored as an unindexed leading parser at `leadingParsers`.\n  After processing the leading parser, we chain with parsers from `trailingTable`/`trailingParsers` that have precedence\n  at least `c.prec` where `c` is the `ParsingContext`. Recall that `c.prec` is set by `categoryParser`.\n\n  Note that in the original Pratt's algorith, precedences are only checked before calling trailing parsers. In our\n  implementation, leading *and* trailing parsers check the precendece. We claim our algorithm is more flexible,\n  modular and easier to understand.\n\n  `antiquotParser` should be a `mkAntiquot` parser (or always fail) and is tried before all other parsers.\n  It should not be added to the regular leading parsers because it would heavily\n  overlap with antiquotation parsers nested inside them. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1866-L1884","name":"Lean.Parser.trailingLoop","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingLoop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1863-L1864","name":"Lean.Parser.trailingLoopStep","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingLoopStep","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1860-L1861","name":"Lean.Parser.leadingParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1849-L1858","name":"Lean.Parser.leadingParserAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingParserAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1842-L1843","name":"Lean.Parser.categoryParserOfStack","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserOfStack","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1833-L1840","name":"Lean.Parser.categoryParserOfStackFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserOfStackFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1830-L1831","name":"Lean.Parser.sepBy1","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1827-L1828","name":"Lean.Parser.sepBy","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1824-L1825","name":"Lean.Parser.sepByElemParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByElemParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1817-L1818","name":"Lean.Parser.nodeWithAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeWithAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1813-L1815","name":"Lean.Parser.withAntiquotSpliceAndSuffix","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotSpliceAndSuffix","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1803-L1811","name":"Lean.Parser.withAntiquotSuffixSplice","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotSuffixSplice","doc":"Parse `suffix` after an antiquotation, e.g. `$x,*`, and put both into a new node. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1786-L1792","name":"Lean.Parser.mkAntiquotSplice","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAntiquotSplice","doc":"Parse `$[p]suffix`, e.g. `$[p],*`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1782-L1783","name":"Lean.Parser.withoutInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1777-L1780","name":"Lean.Parser.withAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquot","doc":"Optimized version of `mkAntiquot ... <|> p`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1765-L1774","name":"Lean.Parser.withAntiquotFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1752-L1763","name":"Lean.Parser.mkAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAntiquot","doc":"Define parser for `$e` (if anonymous == true) and `$e:name`.\n`kind` is embedded in the antiquotation's kind, and checked at syntax `match` unless `isPseudoKind` is false.\nAntiquotations can be escaped as in `$$e`, which produces the syntax tree for `$e`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1745-L1746","name":"Lean.Parser.unicodeSymbol","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbol","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1742-L1743","name":"Lean.Parser.nonReservedSymbol","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbol","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1740-L1740","name":"Lean.Parser.instCoeStringParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instCoeStringParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1737-L1738","name":"Lean.Parser.symbol","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbol","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1727-L1735","name":"Lean.Parser.tokenWithAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenWithAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1717-L1725","name":"Lean.Parser.tokenAntiquotFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenAntiquotFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1715-L1715","name":"Lean.Parser.antiquotExpr","docLink":"./Lean/Parser/Basic.html#Lean.Parser.antiquotExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1714-L1714","name":"Lean.Parser.antiquotNestedExpr","docLink":"./Lean/Parser/Basic.html#Lean.Parser.antiquotNestedExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1710-L1711","name":"Lean.Parser.pushNone","docLink":"./Lean/Parser/Basic.html#Lean.Parser.pushNone","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1707-L1708","name":"Lean.Parser.setExpected","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setExpected","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1702-L1705","name":"Lean.Parser.setExpectedFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setExpectedFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1687-L1700","name":"Lean.Parser.checkNoImmediateColon","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoImmediateColon","doc":"Fail if previous token is immediately followed by ':'. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1679-L1680","name":"Lean.Parser.termParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.termParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1674-L1676","name":"Lean.Parser.categoryParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1671-L1672","name":"Lean.Parser.categoryParserFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1669-L1669","name":"Lean.Parser.categoryParserFnExtension","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFnExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1667-L1667","name":"Lean.Parser.categoryParserFnRef","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFnRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1665-L1665","name":"Lean.Parser.CategoryParserFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.CategoryParserFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1636-L1663","name":"Lean.Parser.indexed","docLink":"./Lean/Parser/Basic.html#Lean.Parser.indexed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1634-L1634","name":"Lean.Parser.ParserCategories","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1632-L1632","name":"Lean.Parser.instInhabitedParserCategory","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParserCategory","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1614-L1632","name":"Lean.Parser.ParserCategory","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory","doc":"Each parser category is implemented using a Pratt's parser.\n  The system comes equipped with the following categories: `level`, `term`, `tactic`, and `command`.\n  Users and plugins may define extra categories.\n\n  The method\n  ```\n  categoryParser `term prec\n  ```\n  executes the Pratt's parser for category `term` with precedence `prec`.\n  That is, only parsers with precedence at least `prec` are considered.\n  The method `termParser prec` is equivalent to the method above.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1599-L1599","name":"Lean.Parser.instReprLeadingIdentBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instReprLeadingIdentBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1599-L1599","name":"Lean.Parser.instBEqLeadingIdentBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqLeadingIdentBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1599-L1599","name":"Lean.Parser.instInhabitedLeadingIdentBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedLeadingIdentBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1584-L1599","name":"Lean.Parser.LeadingIdentBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior","doc":"The type `LeadingIdentBehavior` specifies how the parsing table\n  lookup function behaves for identifiers.  The function `prattParser`\n  uses two tables `leadingTable` and `trailingTable`. They map tokens\n  to parsers.\n\n  We use `LeadingIdentBehavior.symbol` and `LeadingIdentBehavior.both`\n  and `nonReservedSymbol` parser to implement the `tactic` parsers.\n  The idea is to avoid creating a reserved symbol for each\n  builtin tactic (e.g., `apply`, `assumption`, etc.).  That is, users\n  may still use these symbols as identifiers (e.g., naming a\n  function).\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1569-L1569","name":"Lean.Parser.instInhabitedPrattParsingTables","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedPrattParsingTables","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1563-L1567","name":"Lean.Parser.PrattParsingTables","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1559-L1559","name":"Lean.Parser.TokenMap.instForInTokenMapProdNameList","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instForInTokenMapProdNameList","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1557-L1557","name":"Lean.Parser.TokenMap.instEmptyCollectionTokenMap","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instEmptyCollectionTokenMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1555-L1555","name":"Lean.Parser.TokenMap.instInhabitedTokenMap","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instInhabitedTokenMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1550-L1553","name":"Lean.Parser.TokenMap.insert","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.insert","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1546-L1546","name":"Lean.Parser.TokenMap","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap","doc":"A multimap indexed by tokens. Used for indexing parsers by their leading token. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1540-L1541","name":"Lean.Parser.eoi","docLink":"./Lean/Parser/Basic.html#Lean.Parser.eoi","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1535-L1538","name":"Lean.Parser.eoiFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.eoiFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1530-L1533","name":"Lean.Parser.withoutForbidden","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutForbidden","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1525-L1528","name":"Lean.Parser.withForbidden","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withForbidden","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1520-L1523","name":"Lean.Parser.withoutPosition","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutPosition","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1512-L1518","name":"Lean.Parser.withPositionAfterLinebreak","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withPositionAfterLinebreak","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1506-L1510","name":"Lean.Parser.withPosition","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withPosition","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1503-L1504","name":"Lean.Parser.checkLineEq","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLineEq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1494-L1501","name":"Lean.Parser.checkLineEqFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLineEqFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1491-L1492","name":"Lean.Parser.checkColGt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1482-L1489","name":"Lean.Parser.checkColGtFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGtFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1479-L1480","name":"Lean.Parser.checkColGe","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1470-L1477","name":"Lean.Parser.checkColGeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1465-L1468","name":"Lean.Parser.anyOfFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.anyOfFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1455-L1463","name":"Lean.Parser.longestMatchFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1447-L1452","name":"Lean.Parser.longestMatchFnAux.parse","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFnAux.parse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1446-L1453","name":"Lean.Parser.longestMatchFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1443-L1444","name":"Lean.Parser.longestMatchMkResult","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchMkResult","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1418-L1441","name":"Lean.Parser.longestMatchStep","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchStep","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1392-L1416","name":"Lean.Parser.runLongestMatchParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.runLongestMatchParser","doc":"Auxiliary function used to execute parsers provided to `longestMatchFn`.\n Push `left?` into the stack if it is not `none`, and execute `p`.\n\n Remark: `p` must produce exactly one syntax node.\n Remark: the `left?` is not none when we are processing trailing parsers. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1383-L1384","name":"Lean.Parser.invalidLongestMatchParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.invalidLongestMatchParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1378-L1379","name":"Lean.Parser.ParserState.replaceLongest","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.replaceLongest","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1374-L1376","name":"Lean.Parser.ParserState.keepLatest","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepLatest","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1367-L1372","name":"Lean.Parser.ParserState.mergeErrors","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mergeErrors","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1363-L1365","name":"Lean.Parser.ParserState.keepPrevError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepPrevError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1359-L1361","name":"Lean.Parser.ParserState.keepNewError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepNewError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1355-L1357","name":"Lean.Parser.ParserState.keepTop","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepTop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1348-L1351","name":"Lean.Parser.identEq","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identEq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1338-L1346","name":"Lean.Parser.identEqFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identEqFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1334-L1336","name":"Lean.Parser.rawIdentNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawIdentNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1329-L1332","name":"Lean.Parser.identNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1323-L1327","name":"Lean.Parser.identFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1318-L1321","name":"Lean.Parser.nameLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nameLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1312-L1316","name":"Lean.Parser.nameLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nameLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1307-L1310","name":"Lean.Parser.charLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1301-L1305","name":"Lean.Parser.charLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1296-L1299","name":"Lean.Parser.strLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1290-L1294","name":"Lean.Parser.strLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1285-L1288","name":"Lean.Parser.scientificLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.scientificLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1278-L1283","name":"Lean.Parser.scientificLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.scientificLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1273-L1276","name":"Lean.Parser.numLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1266-L1271","name":"Lean.Parser.numLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1263-L1264","name":"Lean.Parser.mkAtomicInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAtomicInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1257-L1261","name":"Lean.Parser.unicodeSymbolNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1254-L1255","name":"Lean.Parser.unicodeSymbolFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1249-L1252","name":"Lean.Parser.unicodeSymbolInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1246-L1247","name":"Lean.Parser.unicodeSymbolFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1241-L1244","name":"Lean.Parser.checkNoWsBefore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoWsBefore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1237-L1239","name":"Lean.Parser.checkNoWsBeforeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoWsBeforeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1227-L1230","name":"Lean.Parser.checkLinebreakBefore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLinebreakBefore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1223-L1225","name":"Lean.Parser.checkLinebreakBeforeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLinebreakBeforeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1218-L1221","name":"Lean.Parser.checkTailLinebreak","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailLinebreak","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1213-L1216","name":"Lean.Parser.checkWsBefore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkWsBefore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1209-L1211","name":"Lean.Parser.checkWsBeforeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkWsBeforeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1204-L1207","name":"Lean.Parser.checkTailWs","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailWs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1195-L1201","name":"Lean.Parser.strAux.parse","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strAux.parse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1194-L1202","name":"Lean.Parser.strAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1189-L1192","name":"Lean.Parser.nonReservedSymbolNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1181-L1187","name":"Lean.Parser.nonReservedSymbolInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1178-L1179","name":"Lean.Parser.nonReservedSymbolFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1161-L1176","name":"Lean.Parser.nonReservedSymbolFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolFnAux","doc":"Check if the following token is the symbol _or_ identifier `sym`. Useful for\n    parsing local tokens that have not been added to the token table (but may have\n    been so by some unrelated code).\n\n    For example, the universe `max` Function is parsed using this combinator so that\n    it can still be used as an identifier outside of universe (but registering it\n    as a token in a Term Syntax would not break the universe Parser). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1149-L1152","name":"Lean.Parser.checkTailNoWs","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailNoWs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1144-L1147","name":"Lean.Parser.symbolNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1141-L1142","name":"Lean.Parser.symbolFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1136-L1139","name":"Lean.Parser.symbolInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1133-L1134","name":"Lean.Parser.symbolFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1122-L1131","name":"Lean.Parser.satisfySymbolFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.satisfySymbolFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1116-L1120","name":"Lean.Parser.rawIdentFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawIdentFn","doc":"Treat keywords as identifiers. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1108-L1113","name":"Lean.Parser.peekToken","docLink":"./Lean/Parser/Basic.html#Lean.Parser.peekToken","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1099-L1106","name":"Lean.Parser.peekTokenAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.peekTokenAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1086-L1097","name":"Lean.Parser.tokenFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1011-L1041","name":"Lean.Parser.identFnAux.parse","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFnAux.parse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1010-L1042","name":"Lean.Parser.identFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L995-L1008","name":"Lean.Parser.mkIdResult","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkIdResult","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L978-L993","name":"Lean.Parser.mkTokenAndFixPos","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkTokenAndFixPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L956-L967","name":"Lean.Parser.isIdCont","docLink":"./Lean/Parser/Basic.html#Lean.Parser.isIdCont","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L934-L954","name":"Lean.Parser.numberFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numberFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L930-L932","name":"Lean.Parser.hexNumberFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.hexNumberFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L926-L928","name":"Lean.Parser.octalNumberFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.octalNumberFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L922-L924","name":"Lean.Parser.binNumberFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.binNumberFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L907-L920","name":"Lean.Parser.decimalNumberFn.parseOptExp","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn.parseOptExp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L893-L905","name":"Lean.Parser.decimalNumberFn.parseOptDot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn.parseOptDot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L881-L920","name":"Lean.Parser.decimalNumberFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L869-L879","name":"Lean.Parser.strLitFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L853-L867","name":"Lean.Parser.charLitFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L842-L851","name":"Lean.Parser.mkNodeToken","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkNodeToken","doc":"Push `(Syntax.node tk <new-atom>)` into syntax stack "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L838-L839","name":"Lean.Parser.quotedCharFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.quotedCharFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L835-L836","name":"Lean.Parser.isQuotableCharDefault","docLink":"./Lean/Parser/Basic.html#Lean.Parser.isQuotableCharDefault","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L820-L833","name":"Lean.Parser.quotedCharCoreFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.quotedCharCoreFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L810-L818","name":"Lean.Parser.hexDigitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.hexDigitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L807-L808","name":"Lean.Parser.rawCh","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawCh","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L804-L805","name":"Lean.Parser.chFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.chFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L799-L802","name":"Lean.Parser.rawFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawFn","doc":"Match an arbitrary Parser and return the consumed String in a `Syntax.atom`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L779-L780","name":"Lean.Parser.mkEmptySubstringAt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkEmptySubstringAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L754-L777","name":"Lean.Parser.whitespace","docLink":"./Lean/Parser/Basic.html#Lean.Parser.whitespace","doc":"Consume whitespace and comments "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L751-L751","name":"Lean.Parser.finishCommentBlock.eoi","docLink":"./Lean/Parser/Basic.html#Lean.Parser.finishCommentBlock.eoi","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L727-L751","name":"Lean.Parser.finishCommentBlock","docLink":"./Lean/Parser/Basic.html#Lean.Parser.finishCommentBlock","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L724-L725","name":"Lean.Parser.takeWhile1Fn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeWhile1Fn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L721-L722","name":"Lean.Parser.takeWhileFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeWhileFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L715-L719","name":"Lean.Parser.takeUntilFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeUntilFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L709-L713","name":"Lean.Parser.satisfyFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.satisfyFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L706-L707","name":"Lean.Parser.many1Unbox","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1Unbox","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L701-L704","name":"Lean.Parser.withResultOf","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L696-L699","name":"Lean.Parser.withResultOfInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOfInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L689-L694","name":"Lean.Parser.withResultOfFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOfFn","doc":"Apply `f` to the syntax object produced by `p` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L683-L686","name":"Lean.Parser.sepBy1NoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1NoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L678-L681","name":"Lean.Parser.sepByNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L672-L676","name":"Lean.Parser.sepBy1Info","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1Info","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L667-L670","name":"Lean.Parser.sepByInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L663-L665","name":"Lean.Parser.sepBy1Fn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1Fn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L659-L661","name":"Lean.Parser.sepByFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L626-L629","name":"Lean.Parser.many1NoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1NoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L621-L624","name":"Lean.Parser.many1Fn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1Fn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L616-L619","name":"Lean.Parser.manyNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L611-L614","name":"Lean.Parser.manyFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L599-L609","name":"Lean.Parser.manyAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L595-L597","name":"Lean.Parser.notFollowedBy","docLink":"./Lean/Parser/Basic.html#Lean.Parser.notFollowedBy","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L585-L593","name":"Lean.Parser.notFollowedByFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.notFollowedByFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L580-L583","name":"Lean.Parser.lookahead","docLink":"./Lean/Parser/Basic.html#Lean.Parser.lookahead","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L574-L578","name":"Lean.Parser.lookaheadFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.lookaheadFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L569-L572","name":"Lean.Parser.optionalNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionalNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L563-L567","name":"Lean.Parser.optionaInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionaInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L556-L561","name":"Lean.Parser.optionalFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionalFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L551-L554","name":"Lean.Parser.atomic","docLink":"./Lean/Parser/Basic.html#Lean.Parser.atomic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L545-L549","name":"Lean.Parser.atomicFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.atomicFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L540-L543","name":"Lean.Parser.noFirstTokenInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.noFirstTokenInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L537-L538","name":"Lean.Parser.instOrElseParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instOrElseParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L532-L535","name":"Lean.Parser.orelse","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelse","doc":"Run `p`, falling back to `q` if `p` failed without consuming any input.\n\n  NOTE: In order for the pretty printer to retrace an `orelse`, `p` must be a call to `node` or some other parser\n  producing a single node kind. Nested `orelse` calls are flattened for this, i.e. `(node k1 p1 <|> node k2 p2) <|> ...`\n  is fine as well. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L520-L524","name":"Lean.Parser.orelseInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L517-L518","name":"Lean.Parser.orelseFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L488-L515","name":"Lean.Parser.orelseFnCore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseFnCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L486-L486","name":"Lean.Parser.instBEqOrElseOnAntiquotBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqOrElseOnAntiquotBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L482-L486","name":"Lean.Parser.OrElseOnAntiquotBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L474-L479","name":"Lean.Parser.mergeOrElseErrors","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mergeOrElseErrors","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L471-L472","name":"Lean.Parser.trailingNode","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L466-L469","name":"Lean.Parser.trailingNodeAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNodeAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L463-L464","name":"Lean.Parser.leadingNode","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L458-L461","name":"Lean.Parser.suppressInsideQuot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.suppressInsideQuot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L455-L456","name":"Lean.Parser.suppressInsideQuotFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.suppressInsideQuotFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L450-L453","name":"Lean.Parser.decQuotDepth","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decQuotDepth","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L445-L448","name":"Lean.Parser.incQuotDepth","docLink":"./Lean/Parser/Basic.html#Lean.Parser.incQuotDepth","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L437-L440","name":"Lean.Parser.setLhsPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setLhsPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L433-L435","name":"Lean.Parser.setLhsPrecFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setLhsPrecFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L428-L431","name":"Lean.Parser.checkLhsPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLhsPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L424-L426","name":"Lean.Parser.checkLhsPrecFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLhsPrecFn","doc":"Succeeds if `c.lhsPrec >= prec` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L418-L421","name":"Lean.Parser.checkPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L414-L416","name":"Lean.Parser.checkPrecFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkPrecFn","doc":"Succeeds if `c.prec <= prec` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L409-L411","name":"Lean.Parser.errorAtSavedPos","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorAtSavedPos","doc":"Generate an error at the position saved with the `withPosition` combinator.\nIf `delta == true`, then it reports at saved position+1.\nThis useful to make sure a parser consumed at least one character.  "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L398-L404","name":"Lean.Parser.errorAtSavedPosFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorAtSavedPosFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L393-L396","name":"Lean.Parser.error","docLink":"./Lean/Parser/Basic.html#Lean.Parser.error","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L390-L391","name":"Lean.Parser.errorFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L385-L388","name":"Lean.Parser.node","docLink":"./Lean/Parser/Basic.html#Lean.Parser.node","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L379-L383","name":"Lean.Parser.nodeInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L374-L377","name":"Lean.Parser.trailingNodeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNodeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L369-L372","name":"Lean.Parser.nodeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L366-L367","name":"Lean.Parser.instAndThenParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instAndThenParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L361-L364","name":"Lean.Parser.andthen","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthen","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L355-L359","name":"Lean.Parser.andthenInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthenInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L351-L353","name":"Lean.Parser.andthenFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthenFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L346-L349","name":"Lean.Parser.checkStackTop","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkStackTop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L342-L344","name":"Lean.Parser.checkStackTopFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkStackTopFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L339-L340","name":"Lean.Parser.epsilonInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.epsilonInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L335-L337","name":"Lean.Parser.dbgTraceState","docLink":"./Lean/Parser/Basic.html#Lean.Parser.dbgTraceState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L325-L333","name":"Lean.Parser.dbgTraceStateFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.dbgTraceStateFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L323-L323","name":"Lean.Parser.TrailingParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TrailingParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L321-L321","name":"Lean.Parser.instInhabitedParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L318-L321","name":"Lean.Parser.Parser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Parser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L316-L316","name":"Lean.Parser.instInhabitedParserInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParserInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L312-L316","name":"Lean.Parser.ParserInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L308-L308","name":"Lean.Parser.FirstTokens.instToStringFirstTokens","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.instToStringFirstTokens","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L302-L306","name":"Lean.Parser.FirstTokens.toStr","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.toStr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L293-L300","name":"Lean.Parser.FirstTokens.merge","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.merge","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L289-L291","name":"Lean.Parser.FirstTokens.toOptional","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.toOptional","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L283-L287","name":"Lean.Parser.FirstTokens.seq","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.seq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L279-L279","name":"Lean.Parser.instInhabitedFirstTokens","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedFirstTokens","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L274-L279","name":"Lean.Parser.FirstTokens","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L271-L272","name":"Lean.Parser.instInhabitedParserFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParserFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L269-L269","name":"Lean.Parser.ParserFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L263-L265","name":"Lean.Parser.ParserState.mkUnexpectedErrorAt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkUnexpectedErrorAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L258-L261","name":"Lean.Parser.ParserState.mkErrorsAt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkErrorsAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L253-L256","name":"Lean.Parser.ParserState.mkErrorAt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkErrorAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L250-L251","name":"Lean.Parser.ParserState.mkEOIError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkEOIError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L246-L248","name":"Lean.Parser.ParserState.mkUnexpectedError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkUnexpectedError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L242-L244","name":"Lean.Parser.ParserState.mkError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L238-L240","name":"Lean.Parser.ParserState.setError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.setError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L230-L236","name":"Lean.Parser.ParserState.mkTrailingNode","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkTrailingNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L211-L228","name":"Lean.Parser.ParserState.mkNode","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L204-L209","name":"Lean.Parser.ParserState.toErrorMsg","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.toErrorMsg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L201-L202","name":"Lean.Parser.ParserState.next","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.next","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L198-L199","name":"Lean.Parser.ParserState.shrinkStack","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.shrinkStack","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L195-L196","name":"Lean.Parser.ParserState.popSyntax","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.popSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L192-L193","name":"Lean.Parser.ParserState.pushSyntax","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.pushSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L189-L190","name":"Lean.Parser.ParserState.setCache","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.setCache","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L186-L187","name":"Lean.Parser.ParserState.setPos","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.setPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L183-L184","name":"Lean.Parser.ParserState.restore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.restore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L180-L181","name":"Lean.Parser.ParserState.stackSize","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.stackSize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L177-L178","name":"Lean.Parser.ParserState.hasError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.hasError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L163-L173","name":"Lean.Parser.ParserState","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L157-L159","name":"Lean.Parser.Error.merge","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Error.merge","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L155-L155","name":"Lean.Parser.Error.instToStringError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Error.instToStringError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L147-L153","name":"Lean.Parser.Error.toString","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Error.toString","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L137-L137","name":"Lean.Parser.instBEqError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L137-L137","name":"Lean.Parser.instInhabitedError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L134-L137","name":"Lean.Parser.Error","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Error","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L125-L132","name":"Lean.Parser.ParserContext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserContext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L118-L123","name":"Lean.Parser.ParserModuleContext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserModuleContext","doc":"Input context derived from elaboration of previous commands. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L115-L115","name":"Lean.Parser.instInhabitedInputContext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedInputContext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L111-L115","name":"Lean.Parser.InputContext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.InputContext","doc":"Input string and related data. Recall that the `FileMap` is a helper structure for mapping\n`String.Pos` in the input string to line/column information.  "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L105-L106","name":"Lean.Parser.SyntaxNodeKindSet.insert","docLink":"./Lean/Parser/Basic.html#Lean.Parser.SyntaxNodeKindSet.insert","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L103-L103","name":"Lean.Parser.SyntaxNodeKindSet","docLink":"./Lean/Parser/Basic.html#Lean.Parser.SyntaxNodeKindSet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L101-L101","name":"Lean.Parser.TokenTable","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenTable","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L97-L99","name":"Lean.Parser.initCacheForInput","docLink":"./Lean/Parser/Basic.html#Lean.Parser.initCacheForInput","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L94-L95","name":"Lean.Parser.ParserCache","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCache","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L89-L92","name":"Lean.Parser.TokenCacheEntry","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenCacheEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L87-L87","name":"Lean.Parser.Token","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Token","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L85-L85","name":"Lean.Parser.minPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.minPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L84-L84","name":"Lean.Parser.leadPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L83-L83","name":"Lean.Parser.argPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.argPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L82-L82","name":"Lean.Parser.maxPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.maxPrec","doc":"Maximal (and function application) precedence.\n   In the standard lean language, no parser has precedence higher than `maxPrec`.\n\n   Note that nothing prevents users from using a higher precedence, but we strongly\n   discourage them from doing it. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L74-L75","name":"Lean.Parser.getNext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.getNext","doc":"Return character after position `pos` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L70-L71","name":"Lean.Parser.mkIdent","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkIdent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L67-L68","name":"Lean.Parser.mkAtom","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAtom","doc":""}]}