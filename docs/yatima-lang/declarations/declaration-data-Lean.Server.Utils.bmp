{"name":"Lean.Server.Utils","instances":[{"typeNames":["Lean.Server.DocumentMeta"],"name":"Lean.Server.instInhabitedDocumentMeta","className":"Inhabited"}],"imports":["Init","Lean.Data.Position","Lean.Data.Lsp","Lean.Server.InfoUtils","Init.System.FilePath","Lean.Parser.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L167-L168","name":"String.Range.toLspRange","docLink":"./Lean/Server/Utils.html#String.Range.toLspRange","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L162-L163","name":"Lean.Server.publishProgressDone","docLink":"./Lean/Server/Utils.html#Lean.Server.publishProgressDone","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L159-L160","name":"Lean.Server.publishProgressAtPos","docLink":"./Lean/Server/Utils.html#Lean.Server.publishProgressAtPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L149-L157","name":"Lean.Server.publishProgress","docLink":"./Lean/Server/Utils.html#Lean.Server.publishProgress","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L138-L147","name":"Lean.Server.publishDiagnostics","docLink":"./Lean/Server/Utils.html#Lean.Server.publishDiagnostics","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L135-L136","name":"Lean.Server.foldDocumentChanges","docLink":"./Lean/Server/Utils.html#Lean.Server.foldDocumentChanges","doc":"Returns the document contents with all changes applied. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L128-L132","name":"Lean.Server.applyDocumentChange","docLink":"./Lean/Server/Utils.html#Lean.Server.applyDocumentChange","doc":"Returns the document contents with the change applied. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L113-L123","name":"Lean.Server.maybeTee","docLink":"./Lean/Server/Utils.html#Lean.Server.maybeTee","doc":"Duplicates an I/O stream to a log file `fName` in LEAN_SERVER_LOG_DIR\nif that envvar is set. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L102-L107","name":"Lean.Server.replaceLspRange","docLink":"./Lean/Server/Utils.html#Lean.Server.replaceLspRange","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L97-L100","name":"Lean.Server.DocumentMeta.mkInputContext","docLink":"./Lean/Server/Utils.html#Lean.Server.DocumentMeta.mkInputContext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L95-L95","name":"Lean.Server.instInhabitedDocumentMeta","docLink":"./Lean/Server/Utils.html#Lean.Server.instInhabitedDocumentMeta","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L91-L95","name":"Lean.Server.DocumentMeta","docLink":"./Lean/Server/Utils.html#Lean.Server.DocumentMeta","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L79-L85","name":"Lean.Lsp.DocumentUri.toPath?","docLink":"./Lean/Server/Utils.html#Lean.Lsp.DocumentUri.toPath?","doc":"Return local path from file:// URI, if any. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L68-L76","name":"Lean.Lsp.DocumentUri.ofPath","docLink":"./Lean/Server/Utils.html#Lean.Lsp.DocumentUri.ofPath","doc":"Transform the given path to a file:// URI. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L54-L60","name":"IO.FS.Stream.withPrefix","docLink":"./Lean/Server/Utils.html#IO.FS.Stream.withPrefix","doc":"Prefixes all written outputs with `pre`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L41-L51","name":"IO.FS.Stream.chainLeft","docLink":"./Lean/Server/Utils.html#IO.FS.Stream.chainLeft","doc":"Like `tee a | b` on Unix. See `chainOut`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L26-L38","name":"IO.FS.Stream.chainRight","docLink":"./Lean/Server/Utils.html#IO.FS.Stream.chainRight","doc":"Chains two streams by creating a new stream s.t. writing to it\njust writes to `a` but reading from it also duplicates the read output\ninto `b`, c.f. `a | tee b` on Unix.\nNB: if `a` is written to but this stream is never read from,\nthe output will *not* be duplicated. Use this if you only care\nabout the data that was actually read. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L15-L16","name":"IO.throwServerError","docLink":"./Lean/Server/Utils.html#IO.throwServerError","doc":""}]}