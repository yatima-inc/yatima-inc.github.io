{"name":"LSpec.SlimCheck.Checkable","instances":[{"typeNames":["SlimCheck.TestResult"],"name":"SlimCheck.instInhabitedTestResult","className":"Inhabited"},{"typeNames":["SlimCheck.Configuration"],"name":"SlimCheck.instInhabitedConfiguration","className":"Inhabited"},{"typeNames":[],"name":"SlimCheck.instPrintableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["SlimCheck.TestResult"],"name":"SlimCheck.TestResult.instToStringTestResult","className":"ToString"},{"typeNames":["And"],"name":"SlimCheck.Checkable.andCheckable","className":"SlimCheck.Checkable"},{"typeNames":["Or"],"name":"SlimCheck.Checkable.orCheckable","className":"SlimCheck.Checkable"},{"typeNames":["Iff"],"name":"SlimCheck.Checkable.iffCheckable","className":"SlimCheck.Checkable"},{"typeNames":["SlimCheck.NamedBinder"],"name":"SlimCheck.Checkable.decGuardCheckable","className":"SlimCheck.Checkable"},{"typeNames":["SlimCheck.NamedBinder"],"name":"SlimCheck.Checkable.forallTypesCheckable","className":"SlimCheck.Checkable"},{"typeNames":["OptionT"],"name":"SlimCheck.Checkable.instInhabitedOptionT","className":"Inhabited"},{"typeNames":["SlimCheck.NamedBinder"],"name":"SlimCheck.Checkable.varCheckable","className":"SlimCheck.Checkable"},{"typeNames":["SlimCheck.NamedBinder"],"name":"SlimCheck.Checkable.propVarCheckable","className":"SlimCheck.Checkable"},{"typeNames":["SlimCheck.NamedBinder"],"name":"SlimCheck.Checkable.unusedVarCheckable","className":"SlimCheck.Checkable"},{"typeNames":[],"name":"SlimCheck.Checkable.decidableCheckable","className":"SlimCheck.Checkable"},{"typeNames":["Eq"],"name":"SlimCheck.Eq.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["Ne"],"name":"SlimCheck.Ne.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["LE.le"],"name":"SlimCheck.LE.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["LT.lt"],"name":"SlimCheck.LT.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["And"],"name":"SlimCheck.And.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["Or"],"name":"SlimCheck.Or.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["Iff"],"name":"SlimCheck.Iff.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":[],"name":"SlimCheck.Imp.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["Not"],"name":"SlimCheck.Not.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["True"],"name":"SlimCheck.True.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["False"],"name":"SlimCheck.False.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["Eq","Bool","Bool.true"],"name":"SlimCheck.Bool.printableProp","className":"SlimCheck.PrintableProp"}],"imports":["Init","LSpec.SlimCheck.Sampleable","Lean"],"declarations":[{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L506-L510","name":"SlimCheck.Checkable.check.go","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.check.go","doc":"HACK: https://github.com/leanprover/lean4/issues/1247 "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L504-L510","name":"SlimCheck.Checkable.check","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.check","doc":"Run a test suite for `p` and throw an exception if `p` does not not hold."},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L485-L495","name":"SlimCheck.Decorations.tacticMk_decorations","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Decorations.tacticMk_decorations","doc":"In a goal of the shape `‚ä¢ DecorationsOf p`, `mk_decoration` examines\nthe syntax of `p` and adds `NamedBinder` around universal quantifications\nto improve error messages. This tool can be used in the declaration of a\nfunction as follows:\n```lean\ndef foo (p : Prop) (p' : Decorations.DecorationsOf p := by mk_decorations) [Checkable p'] : ...\n```\n`p` is the parameter given by the user, `p'` is a definitionally equivalent\nproposition where the quantifiers are annotated with `NamedBinder`.\n"},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L480-L480","name":"SlimCheck.Decorations.DecorationsOf","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Decorations.DecorationsOf","doc":"`DecorationsOf p` is used as a hint to `mk_decorations` to specify\nthat the goal should be satisfied with a proposition equivalent to `p`\nwith added annotations. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L466-L475","name":"SlimCheck.Decorations.addDecorations","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Decorations.addDecorations","doc":"Traverse the syntax of a proposition to find universal quantifiers\nquantifiers and add `NamedBinder` annotations next to them. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L453-L456","name":"SlimCheck.Checkable.checkIO","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.checkIO","doc":"Run a test suite for `p` in `BaseIO` using the global RNG in `stdGenRef`. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L449-L450","name":"SlimCheck.Checkable.runSuite","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.runSuite","doc":"Try to find a counter-example of `p`. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L435-L446","name":"SlimCheck.Checkable.runSuiteAux","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.runSuiteAux","doc":"Try `n` times to find a counter-example for `p`. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L428-L432","name":"SlimCheck.giveUp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.giveUp","doc":"Count the number of times the test procedure gave up. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L418-L425","name":"SlimCheck.retry","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.retry","doc":"Execute `cmd` and repeat every time the result is `gave_up` (at most `n` times). "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L409-L410","name":"SlimCheck.Bool.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Bool.printableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L406-L407","name":"SlimCheck.False.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.False.printableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L403-L404","name":"SlimCheck.True.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.True.printableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L400-L401","name":"SlimCheck.Not.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Not.printableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L397-L398","name":"SlimCheck.Imp.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Imp.printableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L394-L395","name":"SlimCheck.Iff.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Iff.printableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L391-L392","name":"SlimCheck.Or.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Or.printableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L388-L389","name":"SlimCheck.And.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.And.printableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L385-L386","name":"SlimCheck.LT.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.LT.printableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L382-L383","name":"SlimCheck.LE.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.LE.printableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L379-L380","name":"SlimCheck.Ne.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Ne.printableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L376-L377","name":"SlimCheck.Eq.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Eq.printableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L364-L370","name":"SlimCheck.Checkable.decidableCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.decidableCheckable","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L354-L362","name":"SlimCheck.Checkable.unusedVarCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.unusedVarCheckable","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L348-L352","name":"SlimCheck.Checkable.propVarCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.propVarCheckable","doc":"Test a universal property about propositions "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L329-L345","name":"SlimCheck.Checkable.varCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.varCheckable","doc":"Test a universal property by creating a sample of the right type and instantiating the\nbound variable with it. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L319-L325","name":"SlimCheck.Checkable.minimize","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.minimize","doc":"Once a property fails to hold on an example, look for smaller counter-examples\nto show the user. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L297-L315","name":"SlimCheck.Checkable.minimizeAux","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.minimizeAux","doc":"Shrink a counter-example `x` by using `Shrinkable.shrink x`, picking the first\ncandidate that falsifies a property and recursively shrinking that one.\nThe process is guaranteed to terminate because `shrink x` produces\na proof that all the values it produces are smaller (according to `SizeOf`)\nthan `x`. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L289-L290","name":"SlimCheck.Checkable.instInhabitedOptionT","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.instInhabitedOptionT","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L284-L286","name":"SlimCheck.Checkable.addShrinks","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.addShrinks","doc":"Increase the number of shrinking steps in a test result.\n"},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L270-L279","name":"SlimCheck.Checkable.formatFailure","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.formatFailure","doc":"Format the counter-examples found in a test failure.\n"},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L262-L265","name":"SlimCheck.Checkable.forallTypesCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.forallTypesCheckable","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L249-L260","name":"SlimCheck.Checkable.decGuardCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.decGuardCheckable","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L244-L247","name":"SlimCheck.Checkable.iffCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.iffCheckable","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L233-L242","name":"SlimCheck.Checkable.key","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.key","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L220-L230","name":"SlimCheck.Checkable.orCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.orCheckable","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L214-L218","name":"SlimCheck.Checkable.andCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.andCheckable","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L212-L212","name":"SlimCheck.Checkable.slimTrace","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.slimTrace","doc":"A `dbgTrace` with special formatting "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L209-L209","name":"SlimCheck.Checkable.runProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.runProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L197-L201","name":"SlimCheck.Configuration.verbose","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Configuration.verbose","doc":"A configuration with all the trace options enabled, useful for debugging. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L188-L190","name":"SlimCheck.TestResult.isFailure","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.isFailure","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L184-L186","name":"SlimCheck.TestResult.addVarInfo","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.addVarInfo","doc":"Add some formatting to the information recorded by `addInfo`. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L176-L181","name":"SlimCheck.TestResult.addInfo","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.addInfo","doc":"When we assign a value to a universally quantified variable,\nwe record that value using this function so that our counter-examples\ncan be informative. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L170-L171","name":"SlimCheck.TestResult.iff","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.iff","doc":"Test `q` by testing `p` and proving the equivalence between the two. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L162-L167","name":"SlimCheck.TestResult.imp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.imp","doc":"If `q ‚Üí p`, then `¬¨ p ‚Üí ¬¨ q` which means that testing `p` can allow us\nto find counter-examples to `q`. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L147-L158","name":"SlimCheck.TestResult.or","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.or","doc":"Combine the test result for properties `p` and `q` to create a test for their disjunction. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L138-L144","name":"SlimCheck.TestResult.and","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.and","doc":"Combine the test result for properties `p` and `q` to create a test for their conjunction. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L133-L135","name":"SlimCheck.TestResult.combine","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.combine","doc":"Applicative combinator proof carrying test results. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L130-L130","name":"SlimCheck.TestResult.instToStringTestResult","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.instToStringTestResult","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L124-L128","name":"SlimCheck.TestResult.toString","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.toString","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L120-L120","name":"SlimCheck.NamedBinder","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.NamedBinder","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L117-L118","name":"SlimCheck.Checkable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable","doc":"`Checkable p` uses random examples to try to disprove `p`. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L113-L114","name":"SlimCheck.instPrintableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.instPrintableProp","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L108-L109","name":"SlimCheck.PrintableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.PrintableProp","doc":"`PrintableProp p` allows one to print a proposition so that\n`SlimCheck` can indicate how values relate to each other.\nIt's basically a poor man's delaborator.\n"},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L101-L101","name":"SlimCheck.instInhabitedConfiguration","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.instInhabitedConfiguration","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L91-L101","name":"SlimCheck.Configuration","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Configuration","doc":"Configuration for testing a property. "},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L88-L88","name":"SlimCheck.instInhabitedTestResult","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.instInhabitedTestResult","doc":""},{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L84-L88","name":"SlimCheck.TestResult","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult","doc":"Result of trying to disprove `p`\nThe constructors are:\n  *  `success : (PSum Unit p) ‚Üí TestResult p`\n     succeed when we find another example satisfying `p`\n     In `success h`, `h` is an optional proof of the proposition.\n     Without the proof, all we know is that we found one example\n     where `p` holds. With a proof, the one test was sufficient to\n     prove that `p` holds and we do not need to keep finding examples.\n   * `gaveUp : ‚Ñï ‚Üí TestResult p`\n     give up when a well-formed example cannot be generated.\n     `gaveUp n` tells us that `n` invalid examples were tried.\n     Above 100, we give up on the proposition and report that we\n     did not find a way to properly test it.\n   * `failure : ¬¨ p ‚Üí (List String) ‚Üí ‚Ñï ‚Üí TestResult p`\n     a counter-example to `p`; the strings specify values for the relevant variables.\n     `failure h vs n` also carries a proof that `p` does not hold. This way, we can\n     guarantee that there will be no false positive. The last component, `n`,\n     is the number of times that the counter-example was shrunk.\n"}]}