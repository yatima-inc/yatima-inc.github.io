{"name":"Lean.Parser.Do","instances":[],"imports":["Init","Lean.Parser.Term"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L134-L134","name":"Lean.Parser.Term.termReturn","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termReturn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L133-L133","name":"Lean.Parser.Term.termTry","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termTry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L132-L132","name":"Lean.Parser.Term.termFor","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termFor","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L131-L131","name":"Lean.Parser.Term.termUnless","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termUnless","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L128-L128","name":"Lean.Parser.Term.doElem.quot","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doElem.quot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L126-L126","name":"Lean.Parser.Term.do","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.do","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L124-L124","name":"Lean.Parser.Term.doNested","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doNested","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L123-L123","name":"Lean.Parser.Term.doExpr","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doExpr","doc":"We use `notFollowedBy` to avoid counterintuitive behavior.\n\nFor example, the `if`-term parser\ndoesn't enforce indentation restrictions, but we don't want it to be used when `doIf` fails.\nNote that parser priorities would not solve this problem since the `doIf` parser is failing while the `if`\nparser is succeeding. The first `notFollowedBy` prevents this problem.\n\nConsider the `doElem` `x := (a, b⟩` it contains an error since we are using `⟩` instead of `)`. Thus, `doReassign` parser fails.\nHowever, `doExpr` would succeed consuming just `x`, and cryptic error message is generated after that.\nThe second `notFollowedBy` prevents this problem.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L109-L109","name":"Lean.Parser.Term.doAssert","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doAssert","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L108-L108","name":"Lean.Parser.Term.doDbgTrace","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doDbgTrace","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L107-L107","name":"Lean.Parser.Term.doReturn","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doReturn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L106-L106","name":"Lean.Parser.Term.doContinue","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doContinue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L105-L105","name":"Lean.Parser.Term.doBreak","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doBreak","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L103-L103","name":"Lean.Parser.Term.doTry","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doTry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L102-L102","name":"Lean.Parser.Term.doFinally","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doFinally","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L101-L101","name":"Lean.Parser.Term.doCatchMatch","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doCatchMatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L100-L100","name":"Lean.Parser.Term.doCatch","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doCatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L98-L98","name":"Lean.Parser.Term.doMatch","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doMatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L97-L97","name":"Lean.Parser.Term.doMatchAlts","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doMatchAlts","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L95-L95","name":"Lean.Parser.Term.doFor","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doFor","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L94-L94","name":"Lean.Parser.Term.doForDecl","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doForDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L93-L93","name":"Lean.Parser.Term.doUnless","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doUnless","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L89-L92","name":"Lean.Parser.Term.doIf","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L88-L88","name":"Lean.Parser.Term.doIfCond","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfCond","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L87-L87","name":"Lean.Parser.Term.doIfProp","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfProp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L86-L86","name":"Lean.Parser.Term.doIfLet","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfLet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L85-L85","name":"Lean.Parser.Term.doIfLetBind","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfLetBind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L84-L84","name":"Lean.Parser.Term.doIfLetPure","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfLetPure","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L82-L82","name":"Lean.Parser.Term.elseIf","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.elseIf","doc":"In `do` blocks, we support `if` without an `else`. Thus, we use indentation to prevent examples such as\n```\nif c_1 then\n  if c_2 then\n    action_1\nelse\n  action_2\n```\nfrom being parsed as\n```\nif c_1 then {\n  if c_2 then {\n    action_1\n  } else {\n    action_2\n  }\n}\n```\nWe also have special support for `else if` because we don't want to write\n```\nif c_1 then\n  action_1\nelse if c_2 then\n       action_2\n     else\n       action_3\n```\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L52-L52","name":"Lean.Parser.Term.doHave","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doHave","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L51-L51","name":"Lean.Parser.Term.doReassignArrow","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doReassignArrow","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L50-L50","name":"Lean.Parser.Term.doReassign","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doReassign","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L48-L48","name":"Lean.Parser.Term.letIdDeclNoBinders","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.letIdDeclNoBinders","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L44-L44","name":"Lean.Parser.Term.doLetArrow","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doLetArrow","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L43-L43","name":"Lean.Parser.Term.doPatDecl","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doPatDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L42-L42","name":"Lean.Parser.Term.doIdDecl","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIdDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L41-L41","name":"Lean.Parser.Term.doLetRec","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doLetRec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L39-L39","name":"Lean.Parser.Term.doLetElse","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doLetElse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L38-L38","name":"Lean.Parser.Term.doLet","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doLet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L33-L36","name":"Lean.Parser.Term.notFollowedByRedefinedTermToken","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.notFollowedByRedefinedTermToken","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L25-L25","name":"Lean.Parser.Term.termBeforeDo","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termBeforeDo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L24-L24","name":"Lean.Parser.Term.doSeq","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doSeq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L23-L23","name":"Lean.Parser.Term.doSeqBracketed","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doSeqBracketed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L22-L22","name":"Lean.Parser.Term.doSeqIndent","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doSeqIndent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L21-L21","name":"Lean.Parser.Term.doSeqItem","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doSeqItem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L19-L19","name":"Lean.Parser.Term.liftMethod","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.liftMethod","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L18-L18","name":"Lean.Parser.Term.leftArrow","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.leftArrow","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L14-L15","name":"Lean.Parser.doElemParser","docLink":"./Lean/Parser/Do.html#Lean.Parser.doElemParser","doc":""}]}