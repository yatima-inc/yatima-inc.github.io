{"name":"Lean.Elab.DefView","instances":[{"typeNames":["Lean.Elab.DefKind"],"name":"Lean.Elab.instInhabitedDefKind","className":"Inhabited"},{"typeNames":["Lean.Elab.DefKind"],"name":"Lean.Elab.instBEqDefKind","className":"BEq"},{"typeNames":["Lean.Elab.DefView"],"name":"Lean.Elab.instInhabitedDefView","className":"Inhabited"}],"imports":["Init","Std.ShareCommon","Lean.Parser.Command","Lean.Util.CollectLevelParams","Lean.Util.FoldConsts","Lean.Meta.ForEachExpr","Lean.Meta.CollectFVars","Lean.Elab.Command","Lean.Elab.SyntheticMVars","Lean.Elab.Binders","Lean.Elab.DeclUtil"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L156-L171","name":"Lean.Elab.Command.mkDefView","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefView","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L147-L154","name":"Lean.Elab.Command.isDefLike","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.isDefLike","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L139-L145","name":"Lean.Elab.Command.mkDefViewOfExample","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfExample","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L126-L137","name":"Lean.Elab.Command.mkDefViewOfOpaque","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfOpaque","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L109-L124","name":"Lean.Elab.Command.mkDefViewOfInstance","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfInstance","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L83-L107","name":"Lean.Elab.Command.mkInstanceName","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkInstanceName","doc":"Generate a name for an instance with the given type.\nNote that we elaborate the type twice. Once for producing the name, and another when elaborating the declaration. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L74-L78","name":"Lean.Elab.Command.mkFreshInstanceName","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkFreshInstanceName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L68-L72","name":"Lean.Elab.Command.mkDefViewOfTheorem","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L61-L66","name":"Lean.Elab.Command.mkDefViewOfDef","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfDef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L53-L59","name":"Lean.Elab.Command.mkDefViewOfAbbrev","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfAbbrev","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L47-L48","name":"Lean.Elab.DefView.isInstance","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.isInstance","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L45-L45","name":"Lean.Elab.instInhabitedDefView","docLink":"./Lean/Elab/DefView.html#Lean.Elab.instInhabitedDefView","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L36-L45","name":"Lean.Elab.DefView","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L32-L34","name":"Lean.Elab.DefKind.isExample","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isExample","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L26-L30","name":"Lean.Elab.DefKind.isDefOrAbbrevOrOpaque","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isDefOrAbbrevOrOpaque","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L22-L24","name":"Lean.Elab.DefKind.isTheorem","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L20-L20","name":"Lean.Elab.instBEqDefKind","docLink":"./Lean/Elab/DefView.html#Lean.Elab.instBEqDefKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L20-L20","name":"Lean.Elab.instInhabitedDefKind","docLink":"./Lean/Elab/DefView.html#Lean.Elab.instInhabitedDefKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L18-L20","name":"Lean.Elab.DefKind","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind","doc":""}]}