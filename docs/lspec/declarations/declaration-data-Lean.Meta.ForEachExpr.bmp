{"name":"Lean.Meta.ForEachExpr","instances":[],"imports":["Init","Lean.Expr","Lean.Util.MonadCache","Lean.Meta.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L109-L124","name":"Lean.Meta.mkForallFVars'","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.mkForallFVars'","doc":"Similar to `mkForallFVars`, but tries to infer better binder names when `xs` contains metavariables.\nLet `?m` be a metavariable in `xs` s.t. `?m` does not have a user facing name.\nThen, we try to find an application `f ... ?m` in the other binder typer and `type`, and\n(temporarily) use the corresponding parameter name (with a fresh macro scope) as the user facing name for `?m`.\nThe \"renaming\" is temporary.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L98-L100","name":"Lean.Meta.resetMVarUserNames","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.resetMVarUserNames","doc":"Remove user facing name for metavariables in `toReset`.\nThis a low-level method for \"undoing\" the effect of `setMVarUserNamesAt`\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L76-L92","name":"Lean.Meta.setMVarUserNamesAt","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.setMVarUserNamesAt","doc":"Auxiliary method for (temporarily) setting the user facing name of metavariables.\nLet `?m` be a metavariable in `isTarget.contains ?m`, and `?m` does not have a user facing name.\nThen, we try to find an application `f ... ?m` in `e`, and (temporarily) use the\ncorresponding parameter name (with a fresh macro scope) as the user facing name for `?m`.\nThis method returns all metavariables whose user facing name has been updated.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L58-L61","name":"Lean.Meta.forEachExpr","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.forEachExpr","doc":"Similar to `Expr.forEach`, but creates free variables whenever going inside of a binder. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L54-L55","name":"Lean.Meta.forEachExpr'","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.forEachExpr'","doc":"Similar to `Expr.forEach'`, but creates free variables whenever going inside of a binder. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L37-L47","name":"Lean.Meta.ForEachExpr.visit","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.ForEachExpr.visit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L13-L13","name":"Lean.Meta.ForEachExpr.M","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.ForEachExpr.M","doc":""}]}