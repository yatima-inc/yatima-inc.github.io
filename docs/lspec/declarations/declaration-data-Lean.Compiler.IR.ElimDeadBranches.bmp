{"name":"Lean.Compiler.IR.ElimDeadBranches","instances":[{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.instInhabitedValue","className":"Inhabited"},{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.instReprValue","className":"Repr"},{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.instToFormatValue","className":"Std.ToFormat"},{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.instToStringValue","className":"ToString"},{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.Value.instBEqValue","className":"BEq"},{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.Value.instToFormatValue","className":"Std.ToFormat"},{"typeNames":["Lean.IR.UnreachableBranches.Value"],"name":"Lean.IR.UnreachableBranches.Value.instToStringValue","className":"ToString"}],"imports":["Init","Lean.Compiler.IR.Format","Lean.Compiler.IR.Basic","Lean.Compiler.IR.CompilerM"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L315-L329","name":"Lean.IR.elimDeadBranches","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.elimDeadBranches","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L306-L309","name":"Lean.IR.UnreachableBranches.elimDead","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.elimDead","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L289-L304","name":"Lean.IR.UnreachableBranches.elimDeadAux","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.elimDeadAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L285-L287","name":"Lean.IR.UnreachableBranches.inferMain","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.inferMain","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L269-L283","name":"Lean.IR.UnreachableBranches.inferStep","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.inferStep","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L239-L267","name":"Lean.IR.UnreachableBranches.interpFnBody","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.interpFnBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L212-L225","name":"Lean.IR.UnreachableBranches.updateJPParamsAssignment","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.updateJPParamsAssignment","doc":"Return true if the assignment of at least one parameter has been updated. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L206-L209","name":"Lean.IR.UnreachableBranches.updateCurrFnSummary","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.updateCurrFnSummary","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L200-L204","name":"Lean.IR.UnreachableBranches.containsCtor","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.containsCtor","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L186-L198","name":"Lean.IR.UnreachableBranches.interpExpr","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.interpExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L181-L184","name":"Lean.IR.UnreachableBranches.projValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.projValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L178-L179","name":"Lean.IR.UnreachableBranches.resetParamAssignment","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.resetParamAssignment","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L174-L176","name":"Lean.IR.UnreachableBranches.resetVarAssignment","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.resetVarAssignment","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L169-L172","name":"Lean.IR.UnreachableBranches.updateVarAssignment","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.updateVarAssignment","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L164-L167","name":"Lean.IR.UnreachableBranches.findArgValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.findArgValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L158-L162","name":"Lean.IR.UnreachableBranches.findVarValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.findVarValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L154-L154","name":"Lean.IR.UnreachableBranches.M","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L150-L152","name":"Lean.IR.UnreachableBranches.InterpState","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L144-L148","name":"Lean.IR.UnreachableBranches.InterpContext","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L142-L142","name":"Lean.IR.UnreachableBranches.Assignment","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Assignment","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L139-L140","name":"Lean.IR.UnreachableBranches.getFunctionSummary?","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.getFunctionSummary?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L136-L137","name":"Lean.IR.UnreachableBranches.addFunctionSummary","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.addFunctionSummary","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L127-L127","name":"Lean.IR.UnreachableBranches.functionSummariesExt","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.functionSummariesExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L125-L125","name":"Lean.IR.UnreachableBranches.FunctionSummaries","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.FunctionSummaries","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L120-L121","name":"Lean.IR.UnreachableBranches.Value.widening","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.widening","doc":"Widening operator that guarantees termination in our abstract interpreter. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L96-L117","name":"Lean.IR.UnreachableBranches.Value.truncate.go","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.truncate.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L93-L117","name":"Lean.IR.UnreachableBranches.Value.truncate","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.truncate","doc":"Make sure constructors of recursive inductive datatypes can only occur once in each path.\nValues at depth > truncateMaxDepth are also approximated at `top`.\nWe use this function this function to implement a simple widening operation for our abstract\ninterpreter.\nRecall the widening functions is used to ensure termination in abstract interpreters.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L84-L84","name":"Lean.IR.UnreachableBranches.Value.truncateMaxDepth","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.truncateMaxDepth","doc":"In `truncate`, we approximate a value as `top` if depth > `truncateMaxDepth`.\nTODO: add option to control this parameter.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L78-L78","name":"Lean.IR.UnreachableBranches.Value.instToStringValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.instToStringValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L77-L77","name":"Lean.IR.UnreachableBranches.Value.instToFormatValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.instToFormatValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L71-L75","name":"Lean.IR.UnreachableBranches.Value.format","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.format","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L58-L69","name":"Lean.IR.UnreachableBranches.Value.merge","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.merge","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L51-L56","name":"Lean.IR.UnreachableBranches.Value.addChoice","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.addChoice","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L49-L49","name":"Lean.IR.UnreachableBranches.Value.instBEqValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.instBEqValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L39-L47","name":"Lean.IR.UnreachableBranches.Value.beq","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.beq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L34-L35","name":"Lean.IR.UnreachableBranches.instToStringValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instToStringValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L31-L32","name":"Lean.IR.UnreachableBranches.instToFormatValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instToFormatValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L20-L29","name":"Lean.IR.UnreachableBranches.Value.toFormat","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.toFormat","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L18-L18","name":"Lean.IR.UnreachableBranches.instReprValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instReprValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L18-L18","name":"Lean.IR.UnreachableBranches.instInhabitedValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instInhabitedValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L13-L18","name":"Lean.IR.UnreachableBranches.Value","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value","doc":"Value used in the abstract interpreter "}]}