{"name":"Lean.Elab.PreDefinition.Basic","instances":[{"typeNames":["Lean.Elab.PreDefinition"],"name":"Lean.Elab.instInhabitedPreDefinition","className":"Inhabited"}],"imports":["Init","Lean.Util.SCC","Lean.Compiler.NoncomputableAttr","Lean.Meta.AbstractNestedProofs","Lean.Meta.Transform","Lean.Elab.Term","Lean.Elab.RecAppSyntax","Lean.Elab.DefView"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L187-L194","name":"Lean.Elab.ensureNoRecFn","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.ensureNoRecFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L170-L182","name":"Lean.Elab.addAndCompilePartialRec","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.addAndCompilePartialRec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L148-L168","name":"Lean.Elab.addAndCompileUnsafe","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.addAndCompileUnsafe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L145-L146","name":"Lean.Elab.eraseRecAppSyntax","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.eraseRecAppSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L142-L143","name":"Lean.Elab.eraseRecAppSyntaxExpr","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.eraseRecAppSyntaxExpr","doc":"Eliminate recursive application annotations containing syntax. These annotations are used by the well-founded recursion module\nto produce better error messages. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L136-L137","name":"Lean.Elab.addNonRec","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.addNonRec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L133-L134","name":"Lean.Elab.addAndCompileNonRec","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.addAndCompileNonRec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L78-L80","name":"Lean.Elab.addAsAxiom","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.addAsAxiom","doc":"Auxiliary method for (temporarily) adding pre definition as an axiom "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L70-L75","name":"Lean.Elab.abstractNestedProofs","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.abstractNestedProofs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L66-L68","name":"Lean.Elab.applyAttributesOf","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.applyAttributesOf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L52-L64","name":"Lean.Elab.fixLevelParams","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.fixLevelParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L40-L41","name":"Lean.Elab.levelMVarToParamPreDecls","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.levelMVarToParamPreDecls","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L32-L34","name":"Lean.Elab.instantiateMVarsAtPreDecls","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.instantiateMVarsAtPreDecls","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L30-L30","name":"Lean.Elab.instInhabitedPreDefinition","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.instInhabitedPreDefinition","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L22-L30","name":"Lean.Elab.PreDefinition","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition","doc":"A (potentially recursive) definition.\nThe elaborator converts it into Kernel definitions using many different strategies.\n"}]}