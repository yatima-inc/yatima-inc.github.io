{"name":"Lean.Attributes","instances":[{"typeNames":["Lean.AttributeApplicationTime"],"name":"Lean.instInhabitedAttributeApplicationTime","className":"Inhabited"},{"typeNames":["Lean.AttributeApplicationTime"],"name":"Lean.instBEqAttributeApplicationTime","className":"BEq"},{"typeNames":["Lean.ImportM","Lean.AttrM"],"name":"Lean.instMonadLiftImportMAttrM","className":"MonadLift"},{"typeNames":["Lean.AttributeImplCore"],"name":"Lean.instInhabitedAttributeImplCore","className":"Inhabited"},{"typeNames":["Lean.AttributeKind"],"name":"Lean.instBEqAttributeKind","className":"BEq"},{"typeNames":["Lean.AttributeKind"],"name":"Lean.instInhabitedAttributeKind","className":"Inhabited"},{"typeNames":["Lean.AttributeKind"],"name":"Lean.instToStringAttributeKind","className":"ToString"},{"typeNames":["Lean.AttributeImpl"],"name":"Lean.instInhabitedAttributeImpl","className":"Inhabited"},{"typeNames":["Lean.TagAttribute"],"name":"Lean.instInhabitedTagAttribute","className":"Inhabited"},{"typeNames":["Lean.ParametricAttribute"],"name":"Lean.instInhabitedParametricAttribute","className":"Inhabited"},{"typeNames":["Lean.EnumAttributes"],"name":"Lean.instInhabitedEnumAttributes","className":"Inhabited"},{"typeNames":["Lean.AttributeExtensionState"],"name":"Lean.instInhabitedAttributeExtensionState","className":"Inhabited"}],"imports":["Init","Lean.Syntax","Lean.CoreM","Lean.ResolveName"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L450-L451","name":"Lean.getNumBuiltiAttributesImpl","docLink":"./Lean/Attributes.html#Lean.getNumBuiltiAttributesImpl","doc":"`getNumBuiltinAttributes` implementation "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L439-L447","name":"Lean.updateEnvAttributesImpl","docLink":"./Lean/Attributes.html#Lean.updateEnvAttributesImpl","doc":"`updateEnvAttributes` implementation "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L433-L435","name":"Lean.Attribute.erase","docLink":"./Lean/Attributes.html#Lean.Attribute.erase","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L429-L431","name":"Lean.Attribute.add","docLink":"./Lean/Attributes.html#Lean.Attribute.add","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L422-L427","name":"Lean.registerAttributeOfBuilder","docLink":"./Lean/Attributes.html#Lean.registerAttributeOfBuilder","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L415-L420","name":"Lean.registerAttributeOfDecl","docLink":"./Lean/Attributes.html#Lean.registerAttributeOfDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L409-L413","name":"Lean.getAttributeImpl","docLink":"./Lean/Attributes.html#Lean.getAttributeImpl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L405-L407","name":"Lean.getAttributeNames","docLink":"./Lean/Attributes.html#Lean.getAttributeNames","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L402-L403","name":"Lean.isAttribute","docLink":"./Lean/Attributes.html#Lean.isAttribute","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L398-L400","name":"Lean.getBuiltinAttributeApplicationTime","docLink":"./Lean/Attributes.html#Lean.getBuiltinAttributeApplicationTime","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L391-L395","name":"Lean.getBuiltinAttributeImpl","docLink":"./Lean/Attributes.html#Lean.getBuiltinAttributeImpl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L388-L389","name":"Lean.getBuiltinAttributeNames","docLink":"./Lean/Attributes.html#Lean.getBuiltinAttributeNames","doc":"Return the name of all registered attributes. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L384-L385","name":"Lean.isBuiltinAttribute","docLink":"./Lean/Attributes.html#Lean.isBuiltinAttribute","doc":"Return true iff `n` is the name of a registered attribute. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L372-L372","name":"Lean.attributeExtension","docLink":"./Lean/Attributes.html#Lean.attributeExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L351-L354","name":"Lean.mkAttributeImplOfEntry","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L349-L349","name":"Lean.mkAttributeImplOfConstant","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfConstant","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L340-L346","name":"Lean.mkAttributeImplOfConstantUnsafe","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfConstantUnsafe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L334-L334","name":"Lean.AttributeExtension","docLink":"./Lean/Attributes.html#Lean.AttributeExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L332-L332","name":"Lean.instInhabitedAttributeExtensionState","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeExtensionState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L329-L332","name":"Lean.AttributeExtensionState","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L325-L327","name":"Lean.AttributeExtensionOLeanEntry","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L319-L323","name":"Lean.mkAttributeImplOfBuilder","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfBuilder","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L314-L317","name":"Lean.registerAttributeImplBuilder","docLink":"./Lean/Attributes.html#Lean.registerAttributeImplBuilder","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L312-L312","name":"Lean.attributeImplBuilderTableRef","docLink":"./Lean/Attributes.html#Lean.attributeImplBuilderTableRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L310-L310","name":"Lean.AttributeImplBuilderTable","docLink":"./Lean/Attributes.html#Lean.AttributeImplBuilderTable","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L309-L309","name":"Lean.AttributeImplBuilder","docLink":"./Lean/Attributes.html#Lean.AttributeImplBuilder","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L295-L301","name":"Lean.EnumAttributes.setValue","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.setValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L287-L293","name":"Lean.EnumAttributes.getValue","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.getValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L253-L283","name":"Lean.registerEnumAttributes","docLink":"./Lean/Attributes.html#Lean.registerEnumAttributes","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L251-L251","name":"Lean.instInhabitedEnumAttributes","docLink":"./Lean/Attributes.html#Lean.instInhabitedEnumAttributes","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L248-L251","name":"Lean.EnumAttributes","docLink":"./Lean/Attributes.html#Lean.EnumAttributes","doc":"Given a list `[a₁, ..., a_n]` of elements of type `α`, `EnumAttributes` provides an attribute `Attr_i` for\nassociating a value `a_i` with an declaration. `α` is usually an enumeration type.\nNote that whenever we register an `EnumAttributes`, we create `n` attributes, but only one environment extension. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L234-L240","name":"Lean.ParametricAttribute.setParam","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.setParam","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L226-L232","name":"Lean.ParametricAttribute.getParam?","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.getParam?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L196-L222","name":"Lean.registerParametricAttribute","docLink":"./Lean/Attributes.html#Lean.registerParametricAttribute","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L190-L194","name":"Lean.ParametricAttributeImpl","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L188-L188","name":"Lean.instInhabitedParametricAttribute","docLink":"./Lean/Attributes.html#Lean.instInhabitedParametricAttribute","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L185-L188","name":"Lean.ParametricAttribute","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute","doc":"A `TagAttribute` variant where we can attach parameters to attributes.\n  It is slightly more expensive and consumes a little bit more memory than `TagAttribute`.\n\n  They provide the function `pAttr.getParam env decl` which returns `some p` iff declaration `decl`\n  contains the attribute `pAttr` with parameter `p`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L172-L175","name":"Lean.TagAttribute.hasTag","docLink":"./Lean/Attributes.html#Lean.TagAttribute.hasTag","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L141-L168","name":"Lean.registerTagAttribute","docLink":"./Lean/Attributes.html#Lean.registerTagAttribute","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L139-L139","name":"Lean.instInhabitedTagAttribute","docLink":"./Lean/Attributes.html#Lean.instInhabitedTagAttribute","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L136-L139","name":"Lean.TagAttribute","docLink":"./Lean/Attributes.html#Lean.TagAttribute","doc":"Tag attributes are simple and efficient. They are useful for marking declarations in the modules where\n  they were defined.\n\n  The startup cost for this kind of attribute is very small since `addImportedFn` is a constant function.\n\n  They provide the predicate `tagAttr.hasTag env decl` which returns true iff declaration `decl`\n  is tagged in the environment `env`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L121-L125","name":"Lean.Attribute.Builtin.getPrio","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getPrio","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L114-L119","name":"Lean.getAttrParamOptPrio","docLink":"./Lean/Attributes.html#Lean.getAttrParamOptPrio","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L111-L112","name":"Lean.Attribute.Builtin.getId","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L107-L109","name":"Lean.Attribute.Builtin.getId?","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getId?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L102-L105","name":"Lean.Attribute.Builtin.getIdent","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getIdent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L90-L100","name":"Lean.Attribute.Builtin.getIdent?","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getIdent?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L81-L88","name":"Lean.Attribute.Builtin.ensureNoArgs","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.ensureNoArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L61-L66","name":"Lean.registerBuiltinAttribute","docLink":"./Lean/Attributes.html#Lean.registerBuiltinAttribute","doc":"Low level attribute registration function. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L58-L58","name":"Lean.attributeMapRef","docLink":"./Lean/Attributes.html#Lean.attributeMapRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L54-L54","name":"Lean.instInhabitedAttributeImpl","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeImpl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L50-L54","name":"Lean.AttributeImpl","docLink":"./Lean/Attributes.html#Lean.AttributeImpl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L44-L48","name":"Lean.instToStringAttributeKind","docLink":"./Lean/Attributes.html#Lean.instToStringAttributeKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L42-L42","name":"Lean.instInhabitedAttributeKind","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L42-L42","name":"Lean.instBEqAttributeKind","docLink":"./Lean/Attributes.html#Lean.instBEqAttributeKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L40-L42","name":"Lean.AttributeKind","docLink":"./Lean/Attributes.html#Lean.AttributeKind","doc":"You can tag attributes with the 'local' or 'scoped' kind.\nFor example: `attribute [local myattr, scoped yourattr, theirattr]`.\n\nThis is used to indicate how an attribute should be scoped.\n- local means that the attribute should only be applied in the current scope and forgotten once the current section, namespace, or file is closed.\n- scoped means that the attribute should only be applied while the namespace is open.\n- global means that the attribute should always be applied.\n\nNote that the attribute handler (`AttributeImpl.add`) is responsible for interpreting the kind and\nmaking sure that these kinds are respected.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L27-L27","name":"Lean.instInhabitedAttributeImplCore","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeImplCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L21-L27","name":"Lean.AttributeImplCore","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L18-L19","name":"Lean.instMonadLiftImportMAttrM","docLink":"./Lean/Attributes.html#Lean.instMonadLiftImportMAttrM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L16-L16","name":"Lean.AttrM","docLink":"./Lean/Attributes.html#Lean.AttrM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L14-L14","name":"Lean.instBEqAttributeApplicationTime","docLink":"./Lean/Attributes.html#Lean.instBEqAttributeApplicationTime","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L14-L14","name":"Lean.instInhabitedAttributeApplicationTime","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeApplicationTime","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L12-L14","name":"Lean.AttributeApplicationTime","docLink":"./Lean/Attributes.html#Lean.AttributeApplicationTime","doc":""}]}