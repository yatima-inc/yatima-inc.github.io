{"name":"Lean.Environment","instances":[{"typeNames":["Lean.EnvExtensionState"],"name":"Lean.instInhabitedEnvExtensionState","className":"Inhabited"},{"typeNames":["Lean.ModuleIdx"],"name":"Lean.instInhabitedModuleIdx","className":"Inhabited"},{"typeNames":["Lean.Import"],"name":"Lean.instToStringImport","className":"ToString"},{"typeNames":["Lean.EnvExtensionEntry"],"name":"Lean.instNonemptyEnvExtensionEntry","className":"Nonempty"},{"typeNames":["Lean.ModuleData"],"name":"Lean.instInhabitedModuleData","className":"Inhabited"},{"typeNames":["Lean.EnvironmentHeader"],"name":"Lean.instInhabitedEnvironmentHeader","className":"Inhabited"},{"typeNames":["Lean.Environment"],"name":"Lean.instInhabitedEnvironment","className":"Inhabited"},{"typeNames":["Lean.EnvExtensionInterface"],"name":"Lean.instInhabitedEnvExtensionInterface","className":"Inhabited"},{"typeNames":["Lean.EnvExtensionInterfaceUnsafe.Ext"],"name":"Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","className":"Inhabited"},{"typeNames":["Lean.EnvExtension"],"name":"Lean.EnvExtension.instInhabitedEnvExtension","className":"Inhabited"},{"typeNames":["Lean.PersistentEnvExtensionState"],"name":"Lean.instInhabitedPersistentEnvExtensionState","className":"Inhabited"},{"typeNames":["Lean.PersistentEnvExtension"],"name":"Lean.instInhabitedPersistentEnvExtension","className":"Inhabited"},{"typeNames":["Lean.SimplePersistentEnvExtension"],"name":"Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","className":"Inhabited"},{"typeNames":["Lean.TagDeclarationExtension"],"name":"Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","className":"Inhabited"},{"typeNames":["Lean.MapDeclarationExtension"],"name":"Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","className":"Inhabited"},{"typeNames":[],"name":"Lean.instMonadEnv","className":"Lean.MonadEnv"}],"imports":["Init","Std.Data.HashMap","Lean.ImportingFlag","Lean.Data.SMap","Lean.Declaration","Lean.LocalContext","Lean.Util.Path","Lean.Util.FindExpr","Lean.Util.Profile"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L837-L839","name":"Lean.instMonadEnv","docLink":"./Lean/Environment.html#Lean.instMonadEnv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L831-L833","name":"Lean.MonadEnv","docLink":"./Lean/Environment.html#Lean.MonadEnv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L827-L827","name":"Lean.Kernel.whnf","docLink":"./Lean/Environment.html#Lean.Kernel.whnf","doc":"Kernel WHNF function. We use it mainly for debugging purposes.\nRecall that the Kernel type checker does not support metavariables.\nWhen implementing automation, consider using the `MetaM` methods. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L820-L820","name":"Lean.Kernel.isDefEq","docLink":"./Lean/Environment.html#Lean.Kernel.isDefEq","doc":"Kernel isDefEq predicate. We use it mainly for debugging purposes.\nRecall that the Kernel type checker does not support metavariables.\nWhen implementing automation, consider using the `MetaM` methods. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L801-L808","name":"Lean.Environment.hasUnsafe","docLink":"./Lean/Environment.html#Lean.Environment.hasUnsafe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L791-L799","name":"Lean.Environment.evalConstCheck","docLink":"./Lean/Environment.html#Lean.Environment.evalConstCheck","doc":"Like `evalConst`, but first check that `constName` indeed is a declaration of type `typeName`.\nNote that this function cannot guarantee that `typeName` is in fact the name of the type `Î±`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L784-L784","name":"Lean.Environment.evalConst","docLink":"./Lean/Environment.html#Lean.Environment.evalConst","doc":"Evaluate the given declaration under the given environment to a value of the given type.\nThis function is only safe to use if the type matches the declaration's type in the environment\nand if `enableInitializersExecution` has been used before importing any modules. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L761-L777","name":"Lean.Environment.displayStats","docLink":"./Lean/Environment.html#Lean.Environment.displayStats","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L756-L758","name":"Lean.Environment.add","docLink":"./Lean/Environment.html#Lean.Environment.add","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L743-L744","name":"Lean.Environment.getNamespaceSet","docLink":"./Lean/Environment.html#Lean.Environment.getNamespaceSet","doc":"Return a set containing all namespaces in `env`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L739-L740","name":"Lean.Environment.isNamespace","docLink":"./Lean/Environment.html#Lean.Environment.isNamespace","doc":"Return `true` if `n` is the name of a namespace in `env`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L735-L736","name":"Lean.Environment.registerNamespace","docLink":"./Lean/Environment.html#Lean.Environment.registerNamespace","doc":"Register a new namespace in the environment. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L722-L725","name":"Lean.namespacesExt","docLink":"./Lean/Environment.html#Lean.namespacesExt","doc":"Environment extension for tracking all `namespace` declared by users.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L718-L720","name":"Lean.withImportModules","docLink":"./Lean/Environment.html#Lean.withImportModules","doc":"Create environment object from imports and free compacted regions after calling `act`. No live references to the\nenvironment object or imported objects may exist after `act` finishes. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L696-L713","name":"Lean.importModules.importMods","docLink":"./Lean/Environment.html#Lean.importModules.importMods","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L657-L713","name":"Lean.importModules","docLink":"./Lean/Environment.html#Lean.importModules","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L650-L654","name":"Lean.ImportState","docLink":"./Lean/Environment.html#Lean.ImportState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L623-L623","name":"Lean.getNumBuiltiAttributes","docLink":"./Lean/Environment.html#Lean.getNumBuiltiAttributes","doc":"\"Forward declaration\" for retrieving the number of builtin attributes. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L621-L621","name":"Lean.updateEnvAttributes","docLink":"./Lean/Environment.html#Lean.updateEnvAttributes","doc":"\"Forward declaration\" needed for updating the attribute table with user-defined attributes.\nUser-defined attributes are declared using the `initialize` command. The `initialize` command is just syntax sugar for the `init` attribute.\nThe `init` attribute is initialized after the `attributeExtension` is initialized. We cannot change the order since the `init` attribute is an attribute,\nand requires this extension.\nThe `attributeExtension` initializer uses `attributeMapRef` to initialize the attribute mapping.\nWhen we a new user-defined attribute declaration is imported, `attributeMapRef` is updated.\nLater, we set this method with code that adds the user-defined attributes that were imported after we initialized `attributeExtension`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L593-L594","name":"Lean.writeModule","docLink":"./Lean/Environment.html#Lean.writeModule","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L577-L590","name":"Lean.mkModuleData","docLink":"./Lean/Environment.html#Lean.mkModuleData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L559-L575","name":"Lean.Environment.freeRegions","docLink":"./Lean/Environment.html#Lean.Environment.freeRegions","doc":"Free compacted regions of imports. No live references to imported objects may exist at the time of invocation; in\nparticular, `env` should be the last reference to any `Environment` derived from these imports. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L553-L553","name":"Lean.readModuleData","docLink":"./Lean/Environment.html#Lean.readModuleData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L551-L551","name":"Lean.saveModuleData","docLink":"./Lean/Environment.html#Lean.saveModuleData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L543-L546","name":"Lean.MapDeclarationExtension.contains","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.contains","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L535-L541","name":"Lean.MapDeclarationExtension.find?","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.find?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L531-L533","name":"Lean.MapDeclarationExtension.insert","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.insert","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L528-L529","name":"Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L518-L524","name":"Lean.mkMapDeclarationExtension","docLink":"./Lean/Environment.html#Lean.mkMapDeclarationExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L516-L516","name":"Lean.MapDeclarationExtension","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension","doc":"Environment extension for mapping declarations to values.\nDeclarations must only be inserted into the mapping in the module where they were declared. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L506-L509","name":"Lean.TagDeclarationExtension.isTagged","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.isTagged","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L502-L504","name":"Lean.TagDeclarationExtension.tag","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.tag","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L499-L500","name":"Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L489-L495","name":"Lean.mkTagDeclarationExtension","docLink":"./Lean/Environment.html#Lean.mkTagDeclarationExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L487-L487","name":"Lean.TagDeclarationExtension","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension","doc":"Environment extension for tagging declarations.\nDeclarations must only be tagged in the module where they were declared. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L480-L481","name":"Lean.SimplePersistentEnvExtension.modifyState","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.modifyState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L477-L478","name":"Lean.SimplePersistentEnvExtension.setState","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.setState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L474-L475","name":"Lean.SimplePersistentEnvExtension.getState","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L471-L472","name":"Lean.SimplePersistentEnvExtension.getEntries","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getEntries","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L468-L469","name":"Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L455-L464","name":"Lean.registerSimplePersistentEnvExtension","docLink":"./Lean/Environment.html#Lean.registerSimplePersistentEnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L449-L453","name":"Lean.SimplePersistentEnvExtensionDescr","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L446-L447","name":"Lean.mkStateFromImportedEntries","docLink":"./Lean/Environment.html#Lean.mkStateFromImportedEntries","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L444-L444","name":"Lean.SimplePersistentEnvExtension","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension","doc":"Simple `PersistentEnvExtension` that implements `exportEntriesFn` using a list of entries. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L441-L441","name":"Lean.registerPersistentEnvExtension","docLink":"./Lean/Environment.html#Lean.registerPersistentEnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L419-L438","name":"Lean.registerPersistentEnvExtensionUnsafe","docLink":"./Lean/Environment.html#Lean.registerPersistentEnvExtensionUnsafe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L411-L417","name":"Lean.PersistentEnvExtensionDescr","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L409-L409","name":"Lean.persistentEnvExtensionsRef","docLink":"./Lean/Environment.html#Lean.persistentEnvExtensionsRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L404-L405","name":"Lean.PersistentEnvExtension.modifyState","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.modifyState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L401-L402","name":"Lean.PersistentEnvExtension.setState","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.setState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L398-L399","name":"Lean.PersistentEnvExtension.getState","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.getState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L393-L396","name":"Lean.PersistentEnvExtension.addEntry","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.addEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L390-L391","name":"Lean.PersistentEnvExtension.getModuleEntries","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.getModuleEntries","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L378-L386","name":"Lean.instInhabitedPersistentEnvExtension","docLink":"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L375-L376","name":"Lean.instInhabitedPersistentEnvExtensionState","docLink":"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtensionState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L367-L373","name":"Lean.PersistentEnvExtension","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension","doc":"An environment extension with support for storing/retrieving entries from a .olean file.\n   - Î± is the type of the entries that are stored in .olean files.\n   - Î² is the type of values used to update the state.\n   - Ï is the actual state.\n\n   Remark: for most extensions Î± and Î² coincide.\n\n   Note that `addEntryFn` is not in `IO`. This is intentional, and allows us to write simple functions such as\n   ```\n   def addAlias (env : Environment) (a : Name) (e : Name) : Environment :=\n   aliasExtension.addEntry env (a, e)\n   ```\n   without using `IO`. We have many functions like `addAlias`.\n\n   `Î±` and âµÎ²` do not coincide for extensions where the data used to update the state contains, for example,\n   closures which we currently cannot store in files. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L349-L349","name":"Lean.ImportM","docLink":"./Lean/Environment.html#Lean.ImportM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L345-L347","name":"Lean.ImportM.Context","docLink":"./Lean/Environment.html#Lean.ImportM.Context","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L341-L343","name":"Lean.PersistentEnvExtensionState","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L330-L339","name":"Lean.mkEmptyEnvironment","docLink":"./Lean/Environment.html#Lean.mkEmptyEnvironment","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L326-L326","name":"Lean.registerEnvExtension","docLink":"./Lean/Environment.html#Lean.registerEnvExtension","doc":"Environment extensions can only be registered during initialization.\n   Reasons:\n   1- Our implementation assumes the number of extensions does not change after an environment object is created.\n   2- We do not use any synchronization primitive to access `envExtensionsRef`.\n\n   Note that by default, extension state is *not* stored in .olean files and will not propagate across `import`s.\n   For that, you need to register a persistent environment extension. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L316-L316","name":"Lean.EnvExtension.getState","docLink":"./Lean/Environment.html#Lean.EnvExtension.getState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L315-L315","name":"Lean.EnvExtension.modifyState","docLink":"./Lean/Environment.html#Lean.EnvExtension.modifyState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L314-L314","name":"Lean.EnvExtension.setState","docLink":"./Lean/Environment.html#Lean.EnvExtension.setState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L313-L313","name":"Lean.EnvExtension.instInhabitedEnvExtension","docLink":"./Lean/Environment.html#Lean.EnvExtension.instInhabitedEnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L307-L307","name":"Lean.EnvExtension","docLink":"./Lean/Environment.html#Lean.EnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L305-L305","name":"Lean.EnvExtensionInterfaceImp","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceImp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L291-L300","name":"Lean.EnvExtensionInterfaceUnsafe.imp","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.imp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L287-L289","name":"Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L275-L285","name":"Lean.EnvExtensionInterfaceUnsafe.registerExt","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.registerExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L268-L273","name":"Lean.EnvExtensionInterfaceUnsafe.getState","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.getState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L258-L266","name":"Lean.EnvExtensionInterfaceUnsafe.modifyState","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.modifyState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L252-L256","name":"Lean.EnvExtensionInterfaceUnsafe.setState","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.setState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L241-L248","name":"Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L238-L248","name":"Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize","doc":"User-defined environment extensions are declared using the `initialize` command.\nThis command is just syntax sugar for the `init` attribute.\nWhen we `import` lean modules, the vector stored at `envExtensionsRef` may increase in size because of\nuser-defined environment extensions. When this happens, we must adjust the size of the `env.extensions`.\nThis method is invoked when processing `import`s.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L227-L227","name":"Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L224-L227","name":"Lean.EnvExtensionInterfaceUnsafe.Ext","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L209-L219","name":"Lean.instInhabitedEnvExtensionInterface","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvExtensionInterface","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L199-L207","name":"Lean.EnvExtensionInterface","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface","doc":"Interface for managing environment extensions. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L194-L194","name":"Lean.Environment.addDecl","docLink":"./Lean/Environment.html#Lean.Environment.addDecl","doc":"Type check given declaration and add it to the environment "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L176-L188","name":"Lean.KernelException","docLink":"./Lean/Environment.html#Lean.KernelException","doc":"Exceptions that can be raised by the Kernel when type checking new declarations. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L170-L171","name":"Lean.Environment.getModuleIdx?","docLink":"./Lean/Environment.html#Lean.Environment.getModuleIdx?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L165-L168","name":"Lean.Environment.isConstructor","docLink":"./Lean/Environment.html#Lean.Environment.isConstructor","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L162-L163","name":"Lean.Environment.getModuleIdxFor?","docLink":"./Lean/Environment.html#Lean.Environment.getModuleIdxFor?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L147-L148","name":"Lean.Environment.mainModule","docLink":"./Lean/Environment.html#Lean.Environment.mainModule","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L143-L144","name":"Lean.Environment.setMainModule","docLink":"./Lean/Environment.html#Lean.Environment.setMainModule","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L139-L140","name":"Lean.Environment.allImportedModuleNames","docLink":"./Lean/Environment.html#Lean.Environment.allImportedModuleNames","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L136-L137","name":"Lean.Environment.imports","docLink":"./Lean/Environment.html#Lean.Environment.imports","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L133-L134","name":"Lean.Environment.contains","docLink":"./Lean/Environment.html#Lean.Environment.contains","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L129-L131","name":"Lean.Environment.find?","docLink":"./Lean/Environment.html#Lean.Environment.find?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L125-L126","name":"Lean.Environment.addAux","docLink":"./Lean/Environment.html#Lean.Environment.addAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L121-L121","name":"Lean.instInhabitedEnvironment","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvironment","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L102-L121","name":"Lean.Environment","docLink":"./Lean/Environment.html#Lean.Environment","doc":"An environment stores declarations provided by the user. The kernel\ncurrently supports different kinds of declarations such as definitions, theorems,\nand inductive families. Each has a unique identifier (i.e., `Name`), and can be\nparameterized by a sequence of universe parameters.\nA constant in Lean is just a reference to a `ConstantInfo` object. The main task of\nthe kernel is to type check these declarations and refuse type incorrect ones. The\nkernel does not allow declarations containing metavariables and/or free variables\nto be added to an environment. Environments are never destructively updated.\n\nThe environment also contains a collction of extensions. For example, the `simp` theorems\ndeclared by users are stored in an environment extension. Users can declare new extensions\nusing meta-programming.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L84-L84","name":"Lean.instInhabitedEnvironmentHeader","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvironmentHeader","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L61-L84","name":"Lean.EnvironmentHeader","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader","doc":"Environment fields that are not used often. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L58-L58","name":"Lean.instInhabitedModuleData","docLink":"./Lean/Environment.html#Lean.instInhabitedModuleData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L54-L58","name":"Lean.ModuleData","docLink":"./Lean/Environment.html#Lean.ModuleData","doc":"Content of a .olean file.\nWe use `compact.cpp` to generate the image of this object in disk. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L50-L50","name":"Lean.instNonemptyEnvExtensionEntry","docLink":"./Lean/Environment.html#Lean.instNonemptyEnvExtensionEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L49-L49","name":"Lean.EnvExtensionEntry","docLink":"./Lean/Environment.html#Lean.EnvExtensionEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L48-L48","name":"Lean.EnvExtensionEntrySpec","docLink":"./Lean/Environment.html#Lean.EnvExtensionEntrySpec","doc":"Opaque persistent environment extension entry. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L45-L45","name":"Lean.CompactedRegion.free","docLink":"./Lean/Environment.html#Lean.CompactedRegion.free","doc":"Free a compacted region and its contents. No live references to the contents may exist at the time of invocation. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L41-L41","name":"Lean.CompactedRegion.isMemoryMapped","docLink":"./Lean/Environment.html#Lean.CompactedRegion.isMemoryMapped","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L38-L38","name":"Lean.CompactedRegion","docLink":"./Lean/Environment.html#Lean.CompactedRegion","doc":"A compacted region holds multiple Lean objects in a contiguous memory region, which can be read/written to/from disk.\nObjects inside the region do not have reference counters and cannot be freed individually. The contents of .olean\nfiles are compacted regions. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L32-L32","name":"Lean.instToStringImport","docLink":"./Lean/Environment.html#Lean.instToStringImport","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L28-L30","name":"Lean.Import","docLink":"./Lean/Environment.html#Lean.Import","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L26-L26","name":"Lean.ConstMap","docLink":"./Lean/Environment.html#Lean.ConstMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L24-L24","name":"Lean.instInhabitedModuleIdx","docLink":"./Lean/Environment.html#Lean.instInhabitedModuleIdx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L22-L22","name":"Lean.ModuleIdx.toNat","docLink":"./Lean/Environment.html#Lean.ModuleIdx.toNat","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L21-L21","name":"Lean.ModuleIdx","docLink":"./Lean/Environment.html#Lean.ModuleIdx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L19-L19","name":"Lean.instInhabitedEnvExtensionState","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvExtensionState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L18-L18","name":"Lean.EnvExtensionState","docLink":"./Lean/Environment.html#Lean.EnvExtensionState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L17-L17","name":"Lean.EnvExtensionStateSpec","docLink":"./Lean/Environment.html#Lean.EnvExtensionStateSpec","doc":"Opaque environment extension state. "}]}