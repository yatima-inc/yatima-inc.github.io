{"modules":{"Std.ShareCommon":"./Std/ShareCommon.html","Std.Data.RBTree":"./Std/Data/RBTree.html","Std.Data.RBMap":"./Std/Data/RBMap.html","Std.Data.PersistentHashSet":"./Std/Data/PersistentHashSet.html","Std.Data.PersistentHashMap":"./Std/Data/PersistentHashMap.html","Std.Data.PersistentArray":"./Std/Data/PersistentArray.html","Std.Data.HashSet":"./Std/Data/HashSet.html","Std.Data.HashMap":"./Std/Data/HashMap.html","Std.Data.AssocList":"./Std/Data/AssocList.html","Lean.Widget.UserWidget":"./Lean/Widget/UserWidget.html","Lean.Widget.TaggedText":"./Lean/Widget/TaggedText.html","Lean.Widget.InteractiveGoal":"./Lean/Widget/InteractiveGoal.html","Lean.Widget.InteractiveDiagnostic":"./Lean/Widget/InteractiveDiagnostic.html","Lean.Widget.InteractiveCode":"./Lean/Widget/InteractiveCode.html","Lean.Widget.Basic":"./Lean/Widget/Basic.html","Lean.Widget":"./Lean/Widget.html","Lean.Util.Trace":"./Lean/Util/Trace.html","Lean.Util.Sorry":"./Lean/Util/Sorry.html","Lean.Util.SCC":"./Lean/Util/SCC.html","Lean.Util.ReplaceLevel":"./Lean/Util/ReplaceLevel.html","Lean.Util.ReplaceExpr":"./Lean/Util/ReplaceExpr.html","Lean.Util.Recognizers":"./Lean/Util/Recognizers.html","Lean.Util.RecDepth":"./Lean/Util/RecDepth.html","Lean.Util.Profile":"./Lean/Util/Profile.html","Lean.Util.Paths":"./Lean/Util/Paths.html","Lean.Util.Path":"./Lean/Util/Path.html","Lean.Util.PPExt":"./Lean/Util/PPExt.html","Lean.Util.OccursCheck":"./Lean/Util/OccursCheck.html","Lean.Util.MonadCache":"./Lean/Util/MonadCache.html","Lean.Util.MonadBacktrack":"./Lean/Util/MonadBacktrack.html","Lean.Util.HasConstCache":"./Lean/Util/HasConstCache.html","Lean.Util.ForEachExpr":"./Lean/Util/ForEachExpr.html","Lean.Util.FoldConsts":"./Lean/Util/FoldConsts.html","Lean.Util.FindMVar":"./Lean/Util/FindMVar.html","Lean.Util.FindLevelMVar":"./Lean/Util/FindLevelMVar.html","Lean.Util.FindExpr":"./Lean/Util/FindExpr.html","Lean.Util.CollectMVars":"./Lean/Util/CollectMVars.html","Lean.Util.CollectLevelParams":"./Lean/Util/CollectLevelParams.html","Lean.Util.CollectFVars":"./Lean/Util/CollectFVars.html","Lean.Util":"./Lean/Util.html","Lean.ToExpr":"./Lean/ToExpr.html","Lean.Syntax":"./Lean/Syntax.html","Lean.SubExpr":"./Lean/SubExpr.html","Lean.Structure":"./Lean/Structure.html","Lean.Server.Watchdog":"./Lean/Server/Watchdog.html","Lean.Server.Utils":"./Lean/Server/Utils.html","Lean.Server.Snapshots":"./Lean/Server/Snapshots.html","Lean.Server.Rpc.RequestHandling":"./Lean/Server/Rpc/RequestHandling.html","Lean.Server.Rpc.Deriving":"./Lean/Server/Rpc/Deriving.html","Lean.Server.Rpc.Basic":"./Lean/Server/Rpc/Basic.html","Lean.Server.Rpc":"./Lean/Server/Rpc.html","Lean.Server.Requests":"./Lean/Server/Requests.html","Lean.Server.References":"./Lean/Server/References.html","Lean.Server.InfoUtils":"./Lean/Server/InfoUtils.html","Lean.Server.GoTo":"./Lean/Server/GoTo.html","Lean.Server.FileWorker.WidgetRequests":"./Lean/Server/FileWorker/WidgetRequests.html","Lean.Server.FileWorker.Utils":"./Lean/Server/FileWorker/Utils.html","Lean.Server.FileWorker.RequestHandling":"./Lean/Server/FileWorker/RequestHandling.html","Lean.Server.FileWorker":"./Lean/Server/FileWorker.html","Lean.Server.FileSource":"./Lean/Server/FileSource.html","Lean.Server.Completion":"./Lean/Server/Completion.html","Lean.Server.AsyncList":"./Lean/Server/AsyncList.html","Lean.Server":"./Lean/Server.html","Lean.ScopedEnvExtension":"./Lean/ScopedEnvExtension.html","Lean.Runtime":"./Lean/Runtime.html","Lean.ResolveName":"./Lean/ResolveName.html","Lean.ReducibilityAttrs":"./Lean/ReducibilityAttrs.html","Lean.ProjFns":"./Lean/ProjFns.html","Lean.PrettyPrinter.Parenthesizer":"./Lean/PrettyPrinter/Parenthesizer.html","Lean.PrettyPrinter.Formatter":"./Lean/PrettyPrinter/Formatter.html","Lean.PrettyPrinter.Delaborator.TopDownAnalyze":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html","Lean.PrettyPrinter.Delaborator.SubExpr":"./Lean/PrettyPrinter/Delaborator/SubExpr.html","Lean.PrettyPrinter.Delaborator.Options":"./Lean/PrettyPrinter/Delaborator/Options.html","Lean.PrettyPrinter.Delaborator.Builtins":"./Lean/PrettyPrinter/Delaborator/Builtins.html","Lean.PrettyPrinter.Delaborator.Basic":"./Lean/PrettyPrinter/Delaborator/Basic.html","Lean.PrettyPrinter.Delaborator":"./Lean/PrettyPrinter/Delaborator.html","Lean.PrettyPrinter.Basic":"./Lean/PrettyPrinter/Basic.html","Lean.PrettyPrinter":"./Lean/PrettyPrinter.html","Lean.ParserCompiler.Attribute":"./Lean/ParserCompiler/Attribute.html","Lean.ParserCompiler":"./Lean/ParserCompiler.html","Lean.Parser.Term":"./Lean/Parser/Term.html","Lean.Parser.Tactic":"./Lean/Parser/Tactic.html","Lean.Parser.Syntax":"./Lean/Parser/Syntax.html","Lean.Parser.StrInterpolation":"./Lean/Parser/StrInterpolation.html","Lean.Parser.Module":"./Lean/Parser/Module.html","Lean.Parser.Level":"./Lean/Parser/Level.html","Lean.Parser.Extra":"./Lean/Parser/Extra.html","Lean.Parser.Extension":"./Lean/Parser/Extension.html","Lean.Parser.Do":"./Lean/Parser/Do.html","Lean.Parser.Command":"./Lean/Parser/Command.html","Lean.Parser.Basic":"./Lean/Parser/Basic.html","Lean.Parser.Attr":"./Lean/Parser/Attr.html","Lean.Parser":"./Lean/Parser.html","Lean.MonadEnv":"./Lean/MonadEnv.html","Lean.Modifiers":"./Lean/Modifiers.html","Lean.MetavarContext":"./Lean/MetavarContext.html","Lean.Meta.WHNF":"./Lean/Meta/WHNF.html","Lean.Meta.UnificationHint":"./Lean/Meta/UnificationHint.html","Lean.Meta.TransparencyMode":"./Lean/Meta/TransparencyMode.html","Lean.Meta.Transform":"./Lean/Meta/Transform.html","Lean.Meta.Tactic.Util":"./Lean/Meta/Tactic/Util.html","Lean.Meta.Tactic.UnifyEq":"./Lean/Meta/Tactic/UnifyEq.html","Lean.Meta.Tactic.Unfold":"./Lean/Meta/Tactic/Unfold.html","Lean.Meta.Tactic.Subst":"./Lean/Meta/Tactic/Subst.html","Lean.Meta.Tactic.SplitIf":"./Lean/Meta/Tactic/SplitIf.html","Lean.Meta.Tactic.Split":"./Lean/Meta/Tactic/Split.html","Lean.Meta.Tactic.Simp.Types":"./Lean/Meta/Tactic/Simp/Types.html","Lean.Meta.Tactic.Simp.SimpTheorems":"./Lean/Meta/Tactic/Simp/SimpTheorems.html","Lean.Meta.Tactic.Simp.SimpCongrTheorems":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html","Lean.Meta.Tactic.Simp.SimpAll":"./Lean/Meta/Tactic/Simp/SimpAll.html","Lean.Meta.Tactic.Simp.Rewrite":"./Lean/Meta/Tactic/Simp/Rewrite.html","Lean.Meta.Tactic.Simp.Main":"./Lean/Meta/Tactic/Simp/Main.html","Lean.Meta.Tactic.Simp":"./Lean/Meta/Tactic/Simp.html","Lean.Meta.Tactic.Rewrite":"./Lean/Meta/Tactic/Rewrite.html","Lean.Meta.Tactic.Revert":"./Lean/Meta/Tactic/Revert.html","Lean.Meta.Tactic.Replace":"./Lean/Meta/Tactic/Replace.html","Lean.Meta.Tactic.Rename":"./Lean/Meta/Tactic/Rename.html","Lean.Meta.Tactic.Refl":"./Lean/Meta/Tactic/Refl.html","Lean.Meta.Tactic.LinearArith.Solver":"./Lean/Meta/Tactic/LinearArith/Solver.html","Lean.Meta.Tactic.LinearArith.Simp":"./Lean/Meta/Tactic/LinearArith/Simp.html","Lean.Meta.Tactic.LinearArith.Nat.Solver":"./Lean/Meta/Tactic/LinearArith/Nat/Solver.html","Lean.Meta.Tactic.LinearArith.Nat.Simp":"./Lean/Meta/Tactic/LinearArith/Nat/Simp.html","Lean.Meta.Tactic.LinearArith.Nat.Basic":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html","Lean.Meta.Tactic.LinearArith.Nat":"./Lean/Meta/Tactic/LinearArith/Nat.html","Lean.Meta.Tactic.LinearArith.Main":"./Lean/Meta/Tactic/LinearArith/Main.html","Lean.Meta.Tactic.LinearArith.Basic":"./Lean/Meta/Tactic/LinearArith/Basic.html","Lean.Meta.Tactic.LinearArith":"./Lean/Meta/Tactic/LinearArith.html","Lean.Meta.Tactic.Intro":"./Lean/Meta/Tactic/Intro.html","Lean.Meta.Tactic.Injection":"./Lean/Meta/Tactic/Injection.html","Lean.Meta.Tactic.Induction":"./Lean/Meta/Tactic/Induction.html","Lean.Meta.Tactic.Generalize":"./Lean/Meta/Tactic/Generalize.html","Lean.Meta.Tactic.FVarSubst":"./Lean/Meta/Tactic/FVarSubst.html","Lean.Meta.Tactic.ElimInfo":"./Lean/Meta/Tactic/ElimInfo.html","Lean.Meta.Tactic.Delta":"./Lean/Meta/Tactic/Delta.html","Lean.Meta.Tactic.Contradiction":"./Lean/Meta/Tactic/Contradiction.html","Lean.Meta.Tactic.Constructor":"./Lean/Meta/Tactic/Constructor.html","Lean.Meta.Tactic.Congr":"./Lean/Meta/Tactic/Congr.html","Lean.Meta.Tactic.Clear":"./Lean/Meta/Tactic/Clear.html","Lean.Meta.Tactic.Cleanup":"./Lean/Meta/Tactic/Cleanup.html","Lean.Meta.Tactic.Cases":"./Lean/Meta/Tactic/Cases.html","Lean.Meta.Tactic.AuxLemma":"./Lean/Meta/Tactic/AuxLemma.html","Lean.Meta.Tactic.Assumption":"./Lean/Meta/Tactic/Assumption.html","Lean.Meta.Tactic.Assert":"./Lean/Meta/Tactic/Assert.html","Lean.Meta.Tactic.Apply":"./Lean/Meta/Tactic/Apply.html","Lean.Meta.Tactic.Acyclic":"./Lean/Meta/Tactic/Acyclic.html","Lean.Meta.Tactic.AC.Main":"./Lean/Meta/Tactic/AC/Main.html","Lean.Meta.Tactic.AC":"./Lean/Meta/Tactic/AC.html","Lean.Meta.Tactic":"./Lean/Meta/Tactic.html","Lean.Meta.SynthInstance":"./Lean/Meta/SynthInstance.html","Lean.Meta.Structure":"./Lean/Meta/Structure.html","Lean.Meta.SizeOf":"./Lean/Meta/SizeOf.html","Lean.Meta.ReduceEval":"./Lean/Meta/ReduceEval.html","Lean.Meta.Reduce":"./Lean/Meta/Reduce.html","Lean.Meta.RecursorInfo":"./Lean/Meta/RecursorInfo.html","Lean.Meta.PPGoal":"./Lean/Meta/PPGoal.html","Lean.Meta.Offset":"./Lean/Meta/Offset.html","Lean.Meta.MatchUtil":"./Lean/Meta/MatchUtil.html","Lean.Meta.Match.Value":"./Lean/Meta/Match/Value.html","Lean.Meta.Match.MatcherInfo":"./Lean/Meta/Match/MatcherInfo.html","Lean.Meta.Match.MatchPatternAttr":"./Lean/Meta/Match/MatchPatternAttr.html","Lean.Meta.Match.MatchEqsExt":"./Lean/Meta/Match/MatchEqsExt.html","Lean.Meta.Match.MatchEqs":"./Lean/Meta/Match/MatchEqs.html","Lean.Meta.Match.Match":"./Lean/Meta/Match/Match.html","Lean.Meta.Match.MVarRenaming":"./Lean/Meta/Match/MVarRenaming.html","Lean.Meta.Match.CaseValues":"./Lean/Meta/Match/CaseValues.html","Lean.Meta.Match.CaseArraySizes":"./Lean/Meta/Match/CaseArraySizes.html","Lean.Meta.Match.Basic":"./Lean/Meta/Match/Basic.html","Lean.Meta.Match":"./Lean/Meta/Match.html","Lean.Meta.LevelDefEq":"./Lean/Meta/LevelDefEq.html","Lean.Meta.KExprMap":"./Lean/Meta/KExprMap.html","Lean.Meta.KAbstract":"./Lean/Meta/KAbstract.html","Lean.Meta.Instances":"./Lean/Meta/Instances.html","Lean.Meta.Injective":"./Lean/Meta/Injective.html","Lean.Meta.InferType":"./Lean/Meta/InferType.html","Lean.Meta.Inductive":"./Lean/Meta/Inductive.html","Lean.Meta.IndPredBelow":"./Lean/Meta/IndPredBelow.html","Lean.Meta.GlobalInstances":"./Lean/Meta/GlobalInstances.html","Lean.Meta.GetConst":"./Lean/Meta/GetConst.html","Lean.Meta.GeneralizeVars":"./Lean/Meta/GeneralizeVars.html","Lean.Meta.GeneralizeTelescope":"./Lean/Meta/GeneralizeTelescope.html","Lean.Meta.FunInfo":"./Lean/Meta/FunInfo.html","Lean.Meta.ForEachExpr":"./Lean/Meta/ForEachExpr.html","Lean.Meta.ExprTraverse":"./Lean/Meta/ExprTraverse.html","Lean.Meta.ExprLens":"./Lean/Meta/ExprLens.html","Lean.Meta.ExprDefEq":"./Lean/Meta/ExprDefEq.html","Lean.Meta.Eval":"./Lean/Meta/Eval.html","Lean.Meta.Eqns":"./Lean/Meta/Eqns.html","Lean.Meta.DiscrTreeTypes":"./Lean/Meta/DiscrTreeTypes.html","Lean.Meta.DiscrTree":"./Lean/Meta/DiscrTree.html","Lean.Meta.DecLevel":"./Lean/Meta/DecLevel.html","Lean.Meta.Constructions":"./Lean/Meta/Constructions.html","Lean.Meta.CongrTheorems":"./Lean/Meta/CongrTheorems.html","Lean.Meta.CollectMVars":"./Lean/Meta/CollectMVars.html","Lean.Meta.CollectFVars":"./Lean/Meta/CollectFVars.html","Lean.Meta.Coe":"./Lean/Meta/Coe.html","Lean.Meta.Closure":"./Lean/Meta/Closure.html","Lean.Meta.Check":"./Lean/Meta/Check.html","Lean.Meta.CasesOn":"./Lean/Meta/CasesOn.html","Lean.Meta.Basic":"./Lean/Meta/Basic.html","Lean.Meta.AppBuilder":"./Lean/Meta/AppBuilder.html","Lean.Meta.AbstractNestedProofs":"./Lean/Meta/AbstractNestedProofs.html","Lean.Meta.AbstractMVars":"./Lean/Meta/AbstractMVars.html","Lean.Meta.ACLt":"./Lean/Meta/ACLt.html","Lean.Meta":"./Lean/Meta.html","Lean.Message":"./Lean/Message.html","Lean.Log":"./Lean/Log.html","Lean.LocalContext":"./Lean/LocalContext.html","Lean.LoadDynlib":"./Lean/LoadDynlib.html","Lean.Linter.Util":"./Lean/Linter/Util.html","Lean.Linter.UnusedVariables":"./Lean/Linter/UnusedVariables.html","Lean.Linter.MissingDocs":"./Lean/Linter/MissingDocs.html","Lean.Linter.Builtin":"./Lean/Linter/Builtin.html","Lean.Linter":"./Lean/Linter.html","Lean.Level":"./Lean/Level.html","Lean.LazyInitExtension":"./Lean/LazyInitExtension.html","Lean.KeyedDeclsAttribute":"./Lean/KeyedDeclsAttribute.html","Lean.InternalExceptionId":"./Lean/InternalExceptionId.html","Lean.ImportingFlag":"./Lean/ImportingFlag.html","Lean.Hygiene":"./Lean/Hygiene.html","Lean.HeadIndex":"./Lean/HeadIndex.html","Lean.Expr":"./Lean/Expr.html","Lean.Exception":"./Lean/Exception.html","Lean.Eval":"./Lean/Eval.html","Lean.Environment":"./Lean/Environment.html","Lean.Elab.Util":"./Lean/Elab/Util.html","Lean.Elab.Term":"./Lean/Elab/Term.html","Lean.Elab.Tactic.Unfold":"./Lean/Elab/Tactic/Unfold.html","Lean.Elab.Tactic.Split":"./Lean/Elab/Tactic/Split.html","Lean.Elab.Tactic.Simp":"./Lean/Elab/Tactic/Simp.html","Lean.Elab.Tactic.Rewrite":"./Lean/Elab/Tactic/Rewrite.html","Lean.Elab.Tactic.Meta":"./Lean/Elab/Tactic/Meta.html","Lean.Elab.Tactic.Match":"./Lean/Elab/Tactic/Match.html","Lean.Elab.Tactic.Location":"./Lean/Elab/Tactic/Location.html","Lean.Elab.Tactic.Injection":"./Lean/Elab/Tactic/Injection.html","Lean.Elab.Tactic.Induction":"./Lean/Elab/Tactic/Induction.html","Lean.Elab.Tactic.Generalize":"./Lean/Elab/Tactic/Generalize.html","Lean.Elab.Tactic.ElabTerm":"./Lean/Elab/Tactic/ElabTerm.html","Lean.Elab.Tactic.Delta":"./Lean/Elab/Tactic/Delta.html","Lean.Elab.Tactic.Conv.Unfold":"./Lean/Elab/Tactic/Conv/Unfold.html","Lean.Elab.Tactic.Conv.Simp":"./Lean/Elab/Tactic/Conv/Simp.html","Lean.Elab.Tactic.Conv.Rewrite":"./Lean/Elab/Tactic/Conv/Rewrite.html","Lean.Elab.Tactic.Conv.Pattern":"./Lean/Elab/Tactic/Conv/Pattern.html","Lean.Elab.Tactic.Conv.Delta":"./Lean/Elab/Tactic/Conv/Delta.html","Lean.Elab.Tactic.Conv.Congr":"./Lean/Elab/Tactic/Conv/Congr.html","Lean.Elab.Tactic.Conv.Change":"./Lean/Elab/Tactic/Conv/Change.html","Lean.Elab.Tactic.Conv.Basic":"./Lean/Elab/Tactic/Conv/Basic.html","Lean.Elab.Tactic.Conv":"./Lean/Elab/Tactic/Conv.html","Lean.Elab.Tactic.Congr":"./Lean/Elab/Tactic/Congr.html","Lean.Elab.Tactic.Config":"./Lean/Elab/Tactic/Config.html","Lean.Elab.Tactic.Calc":"./Lean/Elab/Tactic/Calc.html","Lean.Elab.Tactic.Cache":"./Lean/Elab/Tactic/Cache.html","Lean.Elab.Tactic.BuiltinTactic":"./Lean/Elab/Tactic/BuiltinTactic.html","Lean.Elab.Tactic.Basic":"./Lean/Elab/Tactic/Basic.html","Lean.Elab.Tactic":"./Lean/Elab/Tactic.html","Lean.Elab.SyntheticMVars":"./Lean/Elab/SyntheticMVars.html","Lean.Elab.Syntax":"./Lean/Elab/Syntax.html","Lean.Elab.Structure":"./Lean/Elab/Structure.html","Lean.Elab.StructInst":"./Lean/Elab/StructInst.html","Lean.Elab.SetOption":"./Lean/Elab/SetOption.html","Lean.Elab.RecAppSyntax":"./Lean/Elab/RecAppSyntax.html","Lean.Elab.Quotation.Util":"./Lean/Elab/Quotation/Util.html","Lean.Elab.Quotation.Precheck":"./Lean/Elab/Quotation/Precheck.html","Lean.Elab.Quotation":"./Lean/Elab/Quotation.html","Lean.Elab.Print":"./Lean/Elab/Print.html","Lean.Elab.PreDefinition.WF.TerminationHint":"./Lean/Elab/PreDefinition/WF/TerminationHint.html","Lean.Elab.PreDefinition.WF.Rel":"./Lean/Elab/PreDefinition/WF/Rel.html","Lean.Elab.PreDefinition.WF.PackMutual":"./Lean/Elab/PreDefinition/WF/PackMutual.html","Lean.Elab.PreDefinition.WF.PackDomain":"./Lean/Elab/PreDefinition/WF/PackDomain.html","Lean.Elab.PreDefinition.WF.Main":"./Lean/Elab/PreDefinition/WF/Main.html","Lean.Elab.PreDefinition.WF.Ite":"./Lean/Elab/PreDefinition/WF/Ite.html","Lean.Elab.PreDefinition.WF.Fix":"./Lean/Elab/PreDefinition/WF/Fix.html","Lean.Elab.PreDefinition.WF.Eqns":"./Lean/Elab/PreDefinition/WF/Eqns.html","Lean.Elab.PreDefinition.WF":"./Lean/Elab/PreDefinition/WF.html","Lean.Elab.PreDefinition.Structural.SmartUnfolding":"./Lean/Elab/PreDefinition/Structural/SmartUnfolding.html","Lean.Elab.PreDefinition.Structural.Preprocess":"./Lean/Elab/PreDefinition/Structural/Preprocess.html","Lean.Elab.PreDefinition.Structural.Main":"./Lean/Elab/PreDefinition/Structural/Main.html","Lean.Elab.PreDefinition.Structural.IndPred":"./Lean/Elab/PreDefinition/Structural/IndPred.html","Lean.Elab.PreDefinition.Structural.FindRecArg":"./Lean/Elab/PreDefinition/Structural/FindRecArg.html","Lean.Elab.PreDefinition.Structural.Eqns":"./Lean/Elab/PreDefinition/Structural/Eqns.html","Lean.Elab.PreDefinition.Structural.Basic":"./Lean/Elab/PreDefinition/Structural/Basic.html","Lean.Elab.PreDefinition.Structural.BRecOn":"./Lean/Elab/PreDefinition/Structural/BRecOn.html","Lean.Elab.PreDefinition.Structural":"./Lean/Elab/PreDefinition/Structural.html","Lean.Elab.PreDefinition.MkInhabitant":"./Lean/Elab/PreDefinition/MkInhabitant.html","Lean.Elab.PreDefinition.Main":"./Lean/Elab/PreDefinition/Main.html","Lean.Elab.PreDefinition.Eqns":"./Lean/Elab/PreDefinition/Eqns.html","Lean.Elab.PreDefinition.Basic":"./Lean/Elab/PreDefinition/Basic.html","Lean.Elab.PreDefinition":"./Lean/Elab/PreDefinition.html","Lean.Elab.PatternVar":"./Lean/Elab/PatternVar.html","Lean.Elab.Open":"./Lean/Elab/Open.html","Lean.Elab.Notation":"./Lean/Elab/Notation.html","Lean.Elab.MutualDef":"./Lean/Elab/MutualDef.html","Lean.Elab.Mixfix":"./Lean/Elab/Mixfix.html","Lean.Elab.MatchAltView":"./Lean/Elab/MatchAltView.html","Lean.Elab.Match":"./Lean/Elab/Match.html","Lean.Elab.MacroRules":"./Lean/Elab/MacroRules.html","Lean.Elab.MacroArgUtil":"./Lean/Elab/MacroArgUtil.html","Lean.Elab.Macro":"./Lean/Elab/Macro.html","Lean.Elab.Level":"./Lean/Elab/Level.html","Lean.Elab.LetRec":"./Lean/Elab/LetRec.html","Lean.Elab.InfoTree.Types":"./Lean/Elab/InfoTree/Types.html","Lean.Elab.InfoTree.Main":"./Lean/Elab/InfoTree/Main.html","Lean.Elab.InfoTree":"./Lean/Elab/InfoTree.html","Lean.Elab.Inductive":"./Lean/Elab/Inductive.html","Lean.Elab.Import":"./Lean/Elab/Import.html","Lean.Elab.GenInjective":"./Lean/Elab/GenInjective.html","Lean.Elab.Frontend":"./Lean/Elab/Frontend.html","Lean.Elab.Extra":"./Lean/Elab/Extra.html","Lean.Elab.Exception":"./Lean/Elab/Exception.html","Lean.Elab.Eval":"./Lean/Elab/Eval.html","Lean.Elab.ElabRules":"./Lean/Elab/ElabRules.html","Lean.Elab.Do":"./Lean/Elab/Do.html","Lean.Elab.Deriving.Util":"./Lean/Elab/Deriving/Util.html","Lean.Elab.Deriving.SizeOf":"./Lean/Elab/Deriving/SizeOf.html","Lean.Elab.Deriving.Repr":"./Lean/Elab/Deriving/Repr.html","Lean.Elab.Deriving.Ord":"./Lean/Elab/Deriving/Ord.html","Lean.Elab.Deriving.Inhabited":"./Lean/Elab/Deriving/Inhabited.html","Lean.Elab.Deriving.Hashable":"./Lean/Elab/Deriving/Hashable.html","Lean.Elab.Deriving.FromToJson":"./Lean/Elab/Deriving/FromToJson.html","Lean.Elab.Deriving.DecEq":"./Lean/Elab/Deriving/DecEq.html","Lean.Elab.Deriving.Basic":"./Lean/Elab/Deriving/Basic.html","Lean.Elab.Deriving.BEq":"./Lean/Elab/Deriving/BEq.html","Lean.Elab.Deriving":"./Lean/Elab/Deriving.html","Lean.Elab.DefView":"./Lean/Elab/DefView.html","Lean.Elab.DeclarationRange":"./Lean/Elab/DeclarationRange.html","Lean.Elab.Declaration":"./Lean/Elab/Declaration.html","Lean.Elab.DeclUtil":"./Lean/Elab/DeclUtil.html","Lean.Elab.DeclModifiers":"./Lean/Elab/DeclModifiers.html","Lean.Elab.Config":"./Lean/Elab/Config.html","Lean.Elab.ComputedFields":"./Lean/Elab/ComputedFields.html","Lean.Elab.Command":"./Lean/Elab/Command.html","Lean.Elab.Calc":"./Lean/Elab/Calc.html","Lean.Elab.BuiltinTerm":"./Lean/Elab/BuiltinTerm.html","Lean.Elab.BuiltinNotation":"./Lean/Elab/BuiltinNotation.html","Lean.Elab.BuiltinCommand":"./Lean/Elab/BuiltinCommand.html","Lean.Elab.BindersUtil":"./Lean/Elab/BindersUtil.html","Lean.Elab.Binders":"./Lean/Elab/Binders.html","Lean.Elab.AuxDiscr":"./Lean/Elab/AuxDiscr.html","Lean.Elab.AuxDef":"./Lean/Elab/AuxDef.html","Lean.Elab.AutoBound":"./Lean/Elab/AutoBound.html","Lean.Elab.Attributes":"./Lean/Elab/Attributes.html","Lean.Elab.Arg":"./Lean/Elab/Arg.html","Lean.Elab.App":"./Lean/Elab/App.html","Lean.Elab":"./Lean/Elab.html","Lean.DocString":"./Lean/DocString.html","Lean.Deprecated":"./Lean/Deprecated.html","Lean.DeclarationRange":"./Lean/DeclarationRange.html","Lean.Declaration":"./Lean/Declaration.html","Lean.Data.Xml.Parser":"./Lean/Data/Xml/Parser.html","Lean.Data.Xml.Basic":"./Lean/Data/Xml/Basic.html","Lean.Data.Xml":"./Lean/Data/Xml.html","Lean.Data.Trie":"./Lean/Data/Trie.html","Lean.Data.SSet":"./Lean/Data/SSet.html","Lean.Data.SMap":"./Lean/Data/SMap.html","Lean.Data.Rat":"./Lean/Data/Rat.html","Lean.Data.PrefixTree":"./Lean/Data/PrefixTree.html","Lean.Data.Position":"./Lean/Data/Position.html","Lean.Data.Parsec":"./Lean/Data/Parsec.html","Lean.Data.Options":"./Lean/Data/Options.html","Lean.Data.OpenDecl":"./Lean/Data/OpenDecl.html","Lean.Data.Occurrences":"./Lean/Data/Occurrences.html","Lean.Data.NameTrie":"./Lean/Data/NameTrie.html","Lean.Data.Name":"./Lean/Data/Name.html","Lean.Data.Lsp.Workspace":"./Lean/Data/Lsp/Workspace.html","Lean.Data.Lsp.Utf16":"./Lean/Data/Lsp/Utf16.html","Lean.Data.Lsp.TextSync":"./Lean/Data/Lsp/TextSync.html","Lean.Data.Lsp.LanguageFeatures":"./Lean/Data/Lsp/LanguageFeatures.html","Lean.Data.Lsp.Ipc":"./Lean/Data/Lsp/Ipc.html","Lean.Data.Lsp.Internal":"./Lean/Data/Lsp/Internal.html","Lean.Data.Lsp.InitShutdown":"./Lean/Data/Lsp/InitShutdown.html","Lean.Data.Lsp.Extra":"./Lean/Data/Lsp/Extra.html","Lean.Data.Lsp.Diagnostics":"./Lean/Data/Lsp/Diagnostics.html","Lean.Data.Lsp.Communication":"./Lean/Data/Lsp/Communication.html","Lean.Data.Lsp.Client":"./Lean/Data/Lsp/Client.html","Lean.Data.Lsp.Capabilities":"./Lean/Data/Lsp/Capabilities.html","Lean.Data.Lsp.Basic":"./Lean/Data/Lsp/Basic.html","Lean.Data.Lsp":"./Lean/Data/Lsp.html","Lean.Data.LOption":"./Lean/Data/LOption.html","Lean.Data.LBool":"./Lean/Data/LBool.html","Lean.Data.KVMap":"./Lean/Data/KVMap.html","Lean.Data.JsonRpc":"./Lean/Data/JsonRpc.html","Lean.Data.Json.Stream":"./Lean/Data/Json/Stream.html","Lean.Data.Json.Printer":"./Lean/Data/Json/Printer.html","Lean.Data.Json.Parser":"./Lean/Data/Json/Parser.html","Lean.Data.Json.FromToJson":"./Lean/Data/Json/FromToJson.html","Lean.Data.Json.Basic":"./Lean/Data/Json/Basic.html","Lean.Data.Json":"./Lean/Data/Json.html","Lean.Data.FuzzyMatching":"./Lean/Data/FuzzyMatching.html","Lean.Data.Format":"./Lean/Data/Format.html","Lean.Data":"./Lean/Data.html","Lean.CoreM":"./Lean/CoreM.html","Lean.Compiler.Util":"./Lean/Compiler/Util.html","Lean.Compiler.TerminalCases":"./Lean/Compiler/TerminalCases.html","Lean.Compiler.Specialize":"./Lean/Compiler/Specialize.html","Lean.Compiler.Old":"./Lean/Compiler/Old.html","Lean.Compiler.NoncomputableAttr":"./Lean/Compiler/NoncomputableAttr.html","Lean.Compiler.NeverExtractAttr":"./Lean/Compiler/NeverExtractAttr.html","Lean.Compiler.NameMangling":"./Lean/Compiler/NameMangling.html","Lean.Compiler.Main":"./Lean/Compiler/Main.html","Lean.Compiler.LCNF":"./Lean/Compiler/LCNF.html","Lean.Compiler.InlineAttrs":"./Lean/Compiler/InlineAttrs.html","Lean.Compiler.InitAttr":"./Lean/Compiler/InitAttr.html","Lean.Compiler.ImplementedByAttr":"./Lean/Compiler/ImplementedByAttr.html","Lean.Compiler.IR.UnboxResult":"./Lean/Compiler/IR/UnboxResult.html","Lean.Compiler.IR.Sorry":"./Lean/Compiler/IR/Sorry.html","Lean.Compiler.IR.SimpCase":"./Lean/Compiler/IR/SimpCase.html","Lean.Compiler.IR.ResetReuse":"./Lean/Compiler/IR/ResetReuse.html","Lean.Compiler.IR.RC":"./Lean/Compiler/IR/RC.html","Lean.Compiler.IR.PushProj":"./Lean/Compiler/IR/PushProj.html","Lean.Compiler.IR.NormIds":"./Lean/Compiler/IR/NormIds.html","Lean.Compiler.IR.LiveVars":"./Lean/Compiler/IR/LiveVars.html","Lean.Compiler.IR.FreeVars":"./Lean/Compiler/IR/FreeVars.html","Lean.Compiler.IR.Format":"./Lean/Compiler/IR/Format.html","Lean.Compiler.IR.ExpandResetReuse":"./Lean/Compiler/IR/ExpandResetReuse.html","Lean.Compiler.IR.EmitUtil":"./Lean/Compiler/IR/EmitUtil.html","Lean.Compiler.IR.EmitC":"./Lean/Compiler/IR/EmitC.html","Lean.Compiler.IR.ElimDeadVars":"./Lean/Compiler/IR/ElimDeadVars.html","Lean.Compiler.IR.ElimDeadBranches":"./Lean/Compiler/IR/ElimDeadBranches.html","Lean.Compiler.IR.CtorLayout":"./Lean/Compiler/IR/CtorLayout.html","Lean.Compiler.IR.CompilerM":"./Lean/Compiler/IR/CompilerM.html","Lean.Compiler.IR.Checker":"./Lean/Compiler/IR/Checker.html","Lean.Compiler.IR.Boxing":"./Lean/Compiler/IR/Boxing.html","Lean.Compiler.IR.Borrow":"./Lean/Compiler/IR/Borrow.html","Lean.Compiler.IR.Basic":"./Lean/Compiler/IR/Basic.html","Lean.Compiler.IR":"./Lean/Compiler/IR.html","Lean.Compiler.FFI":"./Lean/Compiler/FFI.html","Lean.Compiler.ExternAttr":"./Lean/Compiler/ExternAttr.html","Lean.Compiler.ExportAttr":"./Lean/Compiler/ExportAttr.html","Lean.Compiler.Decl":"./Lean/Compiler/Decl.html","Lean.Compiler.ConstFolding":"./Lean/Compiler/ConstFolding.html","Lean.Compiler.CompilerM":"./Lean/Compiler/CompilerM.html","Lean.Compiler.ClosedTermCache":"./Lean/Compiler/ClosedTermCache.html","Lean.Compiler.CSimpAttr":"./Lean/Compiler/CSimpAttr.html","Lean.Compiler.BorrowedAnnotation":"./Lean/Compiler/BorrowedAnnotation.html","Lean.Compiler.AtMostOnce":"./Lean/Compiler/AtMostOnce.html","Lean.Compiler":"./Lean/Compiler.html","Lean.Class":"./Lean/Class.html","Lean.AuxRecursor":"./Lean/AuxRecursor.html","Lean.Attributes":"./Lean/Attributes.html","Lean":"./Lean.html","LSpec.SlimCheck.Sampleable":"./LSpec/SlimCheck/Sampleable.html","LSpec.SlimCheck.Gen":"./LSpec/SlimCheck/Gen.html","LSpec.SlimCheck.Control.Random":"./LSpec/SlimCheck/Control/Random.html","LSpec.SlimCheck.Control.DefaultRange":"./LSpec/SlimCheck/Control/DefaultRange.html","LSpec.SlimCheck.Checkable":"./LSpec/SlimCheck/Checkable.html","LSpec.LSpec":"./LSpec/LSpec.html","LSpec.Instances":"./LSpec/Instances.html","LSpec":"./LSpec.html","Init.WFTactics":"./Init/WFTactics.html","Init.WF":"./Init/WF.html","Init.Util":"./Init/Util.html","Init.Tactics":"./Init/Tactics.html","Init.System.ST":"./Init/System/ST.html","Init.System.Platform":"./Init/System/Platform.html","Init.System.IOError":"./Init/System/IOError.html","Init.System.IO":"./Init/System/IO.html","Init.System.FilePath":"./Init/System/FilePath.html","Init.System":"./Init/System.html","Init.SizeOfLemmas":"./Init/SizeOfLemmas.html","Init.SizeOf":"./Init/SizeOf.html","Init.SimpLemmas":"./Init/SimpLemmas.html","Init.Prelude":"./Init/Prelude.html","Init.NotationExtra":"./Init/NotationExtra.html","Init.Notation":"./Init/Notation.html","Init.Meta":"./Init/Meta.html","Init.Hints":"./Init/Hints.html","Init.Data.UInt":"./Init/Data/UInt.html","Init.Data.ToString.Macro":"./Init/Data/ToString/Macro.html","Init.Data.ToString.Basic":"./Init/Data/ToString/Basic.html","Init.Data.ToString":"./Init/Data/ToString.html","Init.Data.String.Extra":"./Init/Data/String/Extra.html","Init.Data.String.Basic":"./Init/Data/String/Basic.html","Init.Data.String":"./Init/Data/String.html","Init.Data.Stream":"./Init/Data/Stream.html","Init.Data.Repr":"./Init/Data/Repr.html","Init.Data.Range":"./Init/Data/Range.html","Init.Data.Random":"./Init/Data/Random.html","Init.Data.Prod":"./Init/Data/Prod.html","Init.Data.Ord":"./Init/Data/Ord.html","Init.Data.Option.Instances":"./Init/Data/Option/Instances.html","Init.Data.Option.BasicAux":"./Init/Data/Option/BasicAux.html","Init.Data.Option.Basic":"./Init/Data/Option/Basic.html","Init.Data.Option":"./Init/Data/Option.html","Init.Data.OfScientific":"./Init/Data/OfScientific.html","Init.Data.Nat.SOM":"./Init/Data/Nat/SOM.html","Init.Data.Nat.Log2":"./Init/Data/Nat/Log2.html","Init.Data.Nat.Linear":"./Init/Data/Nat/Linear.html","Init.Data.Nat.Gcd":"./Init/Data/Nat/Gcd.html","Init.Data.Nat.Div":"./Init/Data/Nat/Div.html","Init.Data.Nat.Control":"./Init/Data/Nat/Control.html","Init.Data.Nat.Bitwise":"./Init/Data/Nat/Bitwise.html","Init.Data.Nat.Basic":"./Init/Data/Nat/Basic.html","Init.Data.Nat":"./Init/Data/Nat.html","Init.Data.List.Control":"./Init/Data/List/Control.html","Init.Data.List.BasicAux":"./Init/Data/List/BasicAux.html","Init.Data.List.Basic":"./Init/Data/List/Basic.html","Init.Data.List":"./Init/Data/List.html","Init.Data.Int.Basic":"./Init/Data/Int/Basic.html","Init.Data.Int":"./Init/Data/Int.html","Init.Data.Hashable":"./Init/Data/Hashable.html","Init.Data.Format.Syntax":"./Init/Data/Format/Syntax.html","Init.Data.Format.Macro":"./Init/Data/Format/Macro.html","Init.Data.Format.Instances":"./Init/Data/Format/Instances.html","Init.Data.Format.Basic":"./Init/Data/Format/Basic.html","Init.Data.Format":"./Init/Data/Format.html","Init.Data.FloatArray.Basic":"./Init/Data/FloatArray/Basic.html","Init.Data.FloatArray":"./Init/Data/FloatArray.html","Init.Data.Float":"./Init/Data/Float.html","Init.Data.Fin.Basic":"./Init/Data/Fin/Basic.html","Init.Data.Fin":"./Init/Data/Fin.html","Init.Data.Char.Basic":"./Init/Data/Char/Basic.html","Init.Data.Char":"./Init/Data/Char.html","Init.Data.ByteArray.Basic":"./Init/Data/ByteArray/Basic.html","Init.Data.ByteArray":"./Init/Data/ByteArray.html","Init.Data.Basic":"./Init/Data/Basic.html","Init.Data.Array.Subarray":"./Init/Data/Array/Subarray.html","Init.Data.Array.QSort":"./Init/Data/Array/QSort.html","Init.Data.Array.Mem":"./Init/Data/Array/Mem.html","Init.Data.Array.InsertionSort":"./Init/Data/Array/InsertionSort.html","Init.Data.Array.DecidableEq":"./Init/Data/Array/DecidableEq.html","Init.Data.Array.BinSearch":"./Init/Data/Array/BinSearch.html","Init.Data.Array.BasicAux":"./Init/Data/Array/BasicAux.html","Init.Data.Array.Basic":"./Init/Data/Array/Basic.html","Init.Data.Array":"./Init/Data/Array.html","Init.Data.AC":"./Init/Data/AC.html","Init.Data":"./Init/Data.html","Init.Core":"./Init/Core.html","Init.Conv":"./Init/Conv.html","Init.Control.StateRef":"./Init/Control/StateRef.html","Init.Control.StateCps":"./Init/Control/StateCps.html","Init.Control.State":"./Init/Control/State.html","Init.Control.Reader":"./Init/Control/Reader.html","Init.Control.Option":"./Init/Control/Option.html","Init.Control.Lawful":"./Init/Control/Lawful.html","Init.Control.Id":"./Init/Control/Id.html","Init.Control.ExceptCps":"./Init/Control/ExceptCps.html","Init.Control.Except":"./Init/Control/Except.html","Init.Control.EState":"./Init/Control/EState.html","Init.Control.Basic":"./Init/Control/Basic.html","Init.Control":"./Init/Control.html","Init.Coe":"./Init/Coe.html","Init.Classical":"./Init/Classical.html","Init":"./Init.html"},"instancesFor":{"ltOfOrd":["instDecidableRelLtLtOfOrd"],"leOfOrd":["instDecidableRelLeLeOfOrd"],"ite":["instDecidableIteProp"],"instOfNatNat":["Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat","Fin.instInhabitedFinHAddNatInstHAddInstAddNatOfNat"],"instMonadEIO":["LSpec.instMonadEmitIOInstMonadEIOError","LSpec.instMonadTestIOInstMonadEIOErrorUInt32"],"instLTUSize":["instDecidableLtUSizeInstLTUSize"],"instLTUInt8":["instDecidableLtUInt8InstLTUInt8"],"instLTUInt64":["instDecidableLtUInt64InstLTUInt64"],"instLTUInt32":["instDecidableLtUInt32InstLTUInt32"],"instLTUInt16":["instDecidableLtUInt16InstLTUInt16"],"instLTProd":["prodHasDecidableLt"],"instLTPos":["instDecidableLtPosInstLTPos"],"instLTNat":["LSpec.Nat.Testable_forall_lt","Nat.decLt","instGetElemArrayNatLtInstLTNatSize","Nat.instTransNatLtInstLTNat","Nat.instTransNatLtInstLTNat","Nat.instTransNatLtInstLTNat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLeInstLENatLtInstLTNat","Nat.instTransNatLeInstLENatLtInstLTNat","Nat.instAntisymmNatNotLtInstLTNat","Subarray.instGetElemSubarrayNatLtInstLTNatSize","ByteArray.instGetElemByteArrayNatUInt8LtInstLTNatSize","ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","Std.PersistentArray.instGetElemPersistentArrayNatLtInstLTNatSize","List.instGetElemListNatLtInstLTNatLength","Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize","FloatArray.instGetElemFloatArrayNatFloatLtInstLTNatSize","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize"],"instLTFloat":["floatDecLt"],"instLTFin":["Fin.decLt"],"instLEUSize":["instDecidableLeUSizeInstLEUSize"],"instLEUInt8":["instDecidableLeUInt8InstLEUInt8"],"instLEUInt64":["instDecidableLeUInt64InstLEUInt64"],"instLEUInt32":["instDecidableLeUInt32InstLEUInt32"],"instLEUInt16":["instDecidableLeUInt16InstLEUInt16"],"instLEPos":["instDecidableLePosInstLEPos"],"instLENat":["Nat.decLe","Nat.instTransNatLeInstLENat","Nat.instTransNatLeInstLENat","Nat.instTransNatLeInstLENat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLeInstLENatLtInstLTNat","Nat.instAntisymmNatLeInstLENat"],"instLEFloat":["floatDecLe"],"instLEFin":["Fin.decLe"],"instHAdd":["Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat","Fin.instInhabitedFinHAddNatInstHAddInstAddNatOfNat"],"instDecidableEqString":["instLawfulBEqStringInstBEqInstDecidableEqString"],"instDecidableEqChar":["instLawfulBEqCharInstBEqInstDecidableEqChar"],"instDecidableEqBool":["instLawfulBEqBoolInstBEqInstDecidableEqBool"],"instBEqProd":["instLawfulBEqProdInstBEqProd"],"instBEqNat":["Nat.instLawfulBEqNatInstBEqNat"],"instBEq":["instLawfulBEqBoolInstBEqInstDecidableEqBool","instLawfulBEqInstBEq","instLawfulBEqCharInstBEqInstDecidableEqChar","instLawfulBEqStringInstBEqInstDecidableEqString","Int.instLawfulBEqIntInstBEqInstDecidableEqInt"],"instAddNat":["Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat","Fin.instInhabitedFinHAddNatInstHAddInstAddNatOfNat"],"inferInstance":["List.instForIn'ListInferInstanceMembershipInstMembershipList","Std.Range.instForIn'RangeNatInferInstanceMembershipInstMembershipNatRange"],"id":["instToStringIdType","instReprIdType"],"dite":["instDecidableDitePropNot"],"bne":["LSpec.instTestableEqBoolBneTrue"],"_private.Lean.Widget.TaggedText.0.Lean.Widget.TaggedText.TaggedState":["Lean.Widget.TaggedText.instInhabitedTaggedState","Lean.Widget.TaggedText.instMonadPrettyFormatStateMTaggedState"],"_private.Lean.Widget.InteractiveDiagnostic.0.Lean.Widget.EmbedFmt":["Lean.Widget.instInhabitedEmbedFmt"],"_private.Lean.Structure.0.Lean.StructureState":["Lean.instInhabitedStructureState"],"_private.Lean.Server.Rpc.RequestHandling.0.Lean.Server.RpcProcedure":["Lean.Server.instInhabitedRpcProcedure"],"_private.Lean.MetavarContext.0.Lean.DependsOn.M":["Lean.DependsOn.instMonadMCtxM"],"_private.Init.Prelude.0.Lean.Macro.MethodsRef":["Lean.Macro.instNonemptyMethodsRef","Lean.Macro.instInhabitedMethodsRef"],"_private.Init.Data.Format.Basic.0.Std.Format.State":["Std.Format.instMonadPrettyFormatStateMState"],"_private.Init.Data.Format.Basic.0.Std.Format.SpaceResult":["Std.Format.instInhabitedSpaceResult"],"Unit":["instToStringUnit","instReprUnit","instSizeOfForAllUnit","Lean.instEvalUnit","Lean.instForInLoopUnit","Lean.instToExprUnit","instMonadExceptOfUnitOption","OptionT.instMonadExceptOfUnitOptionT"],"USize.val":["ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize"],"USize.toNat":["Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize"],"USize.size":["ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize"],"USize":["instToStringUSize","instReprUSize","instReprAtomUSize","instHashableUSize","instDecidableEqUSize","instInhabitedUSize","ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","instOrdUSize","Lean.instFromJsonUSize","Lean.instToJsonUSize","instOfNatUSize","instAddUSize","instSubUSize","instMulUSize","instModUSize","instHModUSizeNat","instHModUSizeNat","instDivUSize","instLTUSize","instLEUSize","instComplementUSize","instAndOpUSize","instOrOpUSize","instXorUSize","instShiftLeftUSize","instShiftRightUSize","instDecidableLtUSizeInstLTUSize","instDecidableLeUSizeInstLEUSize","Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize","Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize"],"ULift":["instToStringULift","instReprULift"],"UInt8":["instToStringUInt8","instReprUInt8","instReprAtomUInt8","instHashableUInt8","instDecidableEqUInt8","instInhabitedUInt8","ByteArray.instGetElemByteArrayNatUInt8LtInstLTNatSize","ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","ByteArray.instForInByteArrayUInt8","instOrdUInt8","instOfNatUInt8","instAddUInt8","instSubUInt8","instMulUInt8","instModUInt8","instHModUInt8Nat","instHModUInt8Nat","instDivUInt8","instLTUInt8","instLEUInt8","instComplementUInt8","instAndOpUInt8","instOrOpUInt8","instXorUInt8","instShiftLeftUInt8","instShiftRightUInt8","instDecidableLtUInt8InstLTUInt8","instDecidableLeUInt8InstLEUInt8"],"UInt64":["instToStringUInt64","instReprUInt64","instReprAtomUInt64","instHashableUInt64","instDecidableEqUInt64","instInhabitedUInt64","instOrdUInt64","Lean.instFromJsonUInt64","Lean.instToJsonUInt64","instOfNatUInt64","instAddUInt64","instSubUInt64","instMulUInt64","instModUInt64","instHModUInt64Nat","instHModUInt64Nat","instDivUInt64","instLTUInt64","instLEUInt64","instComplementUInt64","instAndOpUInt64","instOrOpUInt64","instXorUInt64","instShiftLeftUInt64","instShiftRightUInt64","instDecidableLtUInt64InstLTUInt64","instDecidableLeUInt64InstLEUInt64"],"UInt32":["instToStringUInt32","instReprUInt32","instReprAtomUInt32","instHashableUInt32","instDecidableEqUInt32","instInhabitedUInt32","instLTUInt32","instLEUInt32","instDecidableLtUInt32InstLTUInt32","instDecidableLeUInt32InstLEUInt32","instOrdUInt32","LSpec.instMonadTestIOInstMonadEIOErrorUInt32","instOfNatUInt32","instAddUInt32","instSubUInt32","instMulUInt32","instModUInt32","instHModUInt32Nat","instHModUInt32Nat","instDivUInt32","instComplementUInt32","instAndOpUInt32","instOrOpUInt32","instXorUInt32","instShiftLeftUInt32","instShiftRightUInt32"],"UInt16":["instToStringUInt16","instReprUInt16","instReprAtomUInt16","instHashableUInt16","instDecidableEqUInt16","instInhabitedUInt16","instOrdUInt16","instOfNatUInt16","instAddUInt16","instSubUInt16","instMulUInt16","instModUInt16","instHModUInt16Nat","instHModUInt16Nat","instDivUInt16","instLTUInt16","instLEUInt16","instComplementUInt16","instAndOpUInt16","instOrOpUInt16","instXorUInt16","instShiftLeftUInt16","instShiftRightUInt16","instDecidableLtUInt16InstLTUInt16","instDecidableLeUInt16InstLEUInt16"],"True":["SlimCheck.True.printableProp","Lean.Syntax.instGetElemSyntaxNatTrue","instDecidableTrue","instInhabitedTrue","Std.HashMap.instGetElemHashMapOptionTrue","Std.PersistentHashMap.instGetElemPersistentHashMapOptionTrue"],"Task":["instInhabitedTask"],"System.FilePath":["System.instInhabitedFilePath","System.instDecidableEqFilePath","System.instHashableFilePath","System.instReprFilePath","System.instToStringFilePath","System.FilePath.instDivFilePath","System.FilePath.instHDivFilePathString","System.FilePath.instHDivFilePathString","System.instCoeStringFilePath","Lean.instFromJsonFilePath","Lean.instToJsonFilePath"],"Sum":["instToStringSum","instReprSum","Sum.inhabitedLeft","Sum.inhabitedRight","instDecidableEqSum"],"Subtype":["instToStringSubtype","instReprSubtype","Subtype.instInhabitedSubtype","Subtype.instDecidableEqSubtype","subtypeCoe"],"Substring":["instToStringSubstring","Lean.instQuoteSubstringStrAnonymous","instReprSubstring","instInhabitedSubstring","Substring.hasBeq","instToStreamStringSubstring","instStreamSubstringChar"],"Subarray.size":["Subarray.instGetElemSubarrayNatLtInstLTNatSize"],"Subarray":["Subarray.instGetElemSubarrayNatLtInstLTNatSize","Subarray.instGetElemSubarrayNatLtInstLTNatSize","Subarray.instForInSubarray","Array.instCoeSubarrayArray","instAppendSubarray","instReprSubarray","instToStringSubarray","instToStreamArraySubarray","instToStreamSubarray","instToStreamSubarray","instStreamSubarray","Lean.instToMessageDataSubarray"],"String.instLTString":["String.decLt"],"String.Range":["String.instInhabitedRange","String.instReprRange","String.instBEqRange","String.instHashableRange"],"String.Pos":["instToStringPos","instReprPos","instHashablePos","instInhabitedPos","instDecidableEqPos","instHAddPos","instHAddPos","instHAddPos","instHSubPos","instHSubPos","instHSubPos","instHAddPosChar","instHAddPosChar","instHAddPosString","instHAddPosString","instLEPos","instLTPos","instDecidableLePosInstLEPos","instDecidableLtPosInstLTPos","String.instOfNatPos","instToFormatPos"],"String.Iterator":["instToStringIterator","instReprIterator","String.instDecidableEqIterator","String.instSizeOfIterator"],"String":["Std.Format.instCoeStringFormat","Std.instToFormatString","instToStringString","Lean.instQuoteStringStrLitKind","Lean.Meta.instReduceEvalString","Lean.Json.instCoeStringJson","Lean.Json.instCoeRBNodeStringJsonStructured","instReprString","instReprAtomString","System.FilePath.instHDivFilePathString","System.instCoeStringFilePath","instDecidableEqString","instHAddPosString","instHashableString","String.instLTString","String.decLt","String.instInhabitedString","String.instAppendString","instLawfulBEqStringInstBEqInstDecidableEqString","instLawfulBEqStringInstBEqInstDecidableEqString","Lean.JsonRpc.instCoeStringRequestID","instOrdString","instCoeStringError","Lean.Parser.instCoeStringParser","Lean.instFromJsonString","Lean.instToJsonString","instToStreamStringSubstring","Lean.MessageData.instCoeStringMessageData","Lean.instToMessageDataString","Lean.instToExprString","Lean.instCoeStringDataValue","Lean.KVMap.instValueString","Lean.instCoeStringName"],"StdGen":["instInhabitedStdGen","instReprStdGen","instRandomGenStdGen","SlimCheck.inhabitedStdGen"],"Std.instMembershipNatRange":["Std.Range.instForIn'RangeNatInferInstanceMembershipInstMembershipNatRange"],"Std.ShareCommonT":["Std.ShareCommonT.monadShareCommon"],"Std.ShareCommon.State":["Std.ShareCommon.State.inhabited"],"Std.ShareCommon.PersistentState":["Std.ShareCommon.PersistentState.inhabited"],"Std.Range":["instToStreamRange","instToStreamRange","instStreamRangeNat","Std.instMembershipNatRange","Std.Range.instForInRangeNat","Std.Range.instForIn'RangeNatInferInstanceMembershipInstMembershipNatRange","Std.Range.instForIn'RangeNatInferInstanceMembershipInstMembershipNatRange","Std.Range.instForMRangeNat"],"Std.RBTree":["Std.instInhabitedRBTree","Std.instEmptyCollectionRBTree","Std.RBTree.instForInRBTree","Std.RBTree.instReprRBTree"],"Std.RBNode":["Lean.Json.instCoeRBNodeStringJsonStructured"],"Std.RBMap":["Std.instEmptyCollectionRBMap","Std.instInhabitedRBMap","Std.RBMap.instForInRBMapProd","Std.RBMap.instReprRBMap"],"Std.PersistentHashSet":["Std.PersistentHashSet.instInhabitedPersistentHashSet","Std.PersistentHashSet.instEmptyCollectionPersistentHashSet"],"Std.PersistentHashMap.Stats":["Std.PersistentHashMap.instToStringStats"],"Std.PersistentHashMap.Node":["Std.PersistentHashMap.instInhabitedNode"],"Std.PersistentHashMap.Entry":["Std.PersistentHashMap.instInhabitedEntry"],"Std.PersistentHashMap":["Std.PersistentHashMap.instInhabitedPersistentHashMap","Std.PersistentHashMap.instGetElemPersistentHashMapOptionTrue","Std.PersistentHashMap.instGetElemPersistentHashMapOptionTrue","Std.PersistentHashMap.instForInPersistentHashMapProd"],"Std.PersistentArrayNode":["Std.instInhabitedPersistentArrayNode"],"Std.PersistentArray.size":["Std.PersistentArray.instGetElemPersistentArrayNatLtInstLTNatSize"],"Std.PersistentArray.Stats":["Std.PersistentArray.instToStringStats"],"Std.PersistentArray":["Std.instInhabitedPersistentArray","Std.PersistentArray.instGetElemPersistentArrayNatLtInstLTNatSize","Std.PersistentArray.instGetElemPersistentArrayNatLtInstLTNatSize","Std.PersistentArray.instForInPersistentArray","Std.PersistentArray.instAppendPersistentArray"],"Std.PShareCommonT":["Std.PShareCommonT.monadShareCommon"],"Std.HashSet":["Std.HashSet.instInhabitedHashSet","Std.HashSet.instEmptyCollectionHashSet"],"Std.HashMap":["Std.HashMap.instInhabitedHashMap","Std.HashMap.instEmptyCollectionHashMap","Std.HashMap.instGetElemHashMapOptionTrue","Std.HashMap.instGetElemHashMapOptionTrue"],"Std.Format.FlattenBehavior":["Std.Format.instInhabitedFlattenBehavior","Std.Format.instBEqFlattenBehavior"],"Std.Format":["Std.instInhabitedFormat","Std.Format.instAppendFormat","Std.Format.instCoeStringFormat","Std.instToFormatFormat","instToStringFormat","Lean.MessageData.instCoeFormatMessageData","Lean.instToMessageDataFormat"],"Std.AssocList":["Std.instInhabitedAssocList","Std.AssocList.instEmptyCollectionAssocList","Std.AssocList.instForInAssocListProd"],"StateT.instMonadStateT":["StateT.instLawfulMonadStateTInstMonadStateT"],"StateT":["StateT.instLawfulMonadStateTInstMonadStateT","StateT.instMonadStateT","StateT.instAlternativeStateT","StateT.instMonadLiftStateT","StateT.instMonadFunctorStateT","StateT.instMonadExceptOfStateT","instMonadStateOfStateT","StateT.monadControl","StateT.tryFinally"],"StateRefT'.instMonadStateRefT'":["instLawfulMonadStateRefT'InstMonadStateRefT'"],"StateRefT'":["instLawfulMonadStateRefT'InstMonadStateRefT'","Lean.instMonadMCtxStateRefT'MetavarContextST","Lean.MetavarContext.instMonadMCtxStateRefT'MetavarContextST","StateRefT'.instMonadStateRefT'","StateRefT'.instMonadLiftStateRefT'","StateRefT'.instMonadFunctorStateRefT'","StateRefT'.instAlternativeStateRefT'","StateRefT'.instMonadStateOfStateRefT'","StateRefT'.instMonadExceptOfStateRefT'","instMonadControlStateRefT'","instMonadFinallyStateRefT'","Lean.instMonadRecDepthStateRefT'","Lean.Compiler.instVisitLetStateRefT'"],"StateM":["Std.Format.instMonadPrettyFormatStateMState","Lean.Widget.TaggedText.instMonadPrettyFormatStateMTaggedState","instSubsingletonStateM"],"StateCpsT.instMonadStateCpsT":["StateCpsT.instLawfulMonadStateCpsTInstMonadStateCpsT"],"StateCpsT":["StateCpsT.instMonadStateCpsT","StateCpsT.instLawfulMonadStateCpsTInstMonadStateCpsT","StateCpsT.instMonadStateOfStateCpsT","StateCpsT.instMonadLiftStateCpsT"],"Squash":["instSubsingletonSquash"],"SlimCheck.TestResult":["SlimCheck.instInhabitedTestResult","SlimCheck.TestResult.instToStringTestResult"],"SlimCheck.RandT":["SlimCheck.inhabitedRandT"],"SlimCheck.NoShrink":["SlimCheck.NoShrink.inhabited","SlimCheck.NoShrink.repr","SlimCheck.NoShrink.shrinkable","SlimCheck.NoShrink.sampleableExt"],"SlimCheck.NamedBinder":["SlimCheck.Checkable.decGuardCheckable","SlimCheck.Checkable.forallTypesCheckable","SlimCheck.Checkable.varCheckable","SlimCheck.Checkable.propVarCheckable","SlimCheck.Checkable.unusedVarCheckable"],"SlimCheck.Configuration":["SlimCheck.instInhabitedConfiguration"],"Sigma":["instToStringSigma","instReprSigma"],"ST.Ref":["ST.instNonemptyRef"],"ST":["Lean.instMonadMCtxStateRefT'MetavarContextST","Lean.MetavarContext.instMonadMCtxStateRefT'MetavarContextST","instMonadST","instMonadLiftSTEST","IO.instMonadLiftSTRealWorldBaseIO"],"ReaderT.instMonadReaderT":["ReaderT.instLawfulMonadReaderTInstMonadReaderT"],"ReaderT":["ReaderT.instLawfulMonadReaderTInstMonadReaderT","Lean.instMonadCacheReaderT","Lean.instMonadRecDepthReaderT","instInhabitedReaderT","ReaderT.instMonadLiftReaderT","ReaderT.instMonadExceptOfReaderT","ReaderT.instMonadReaderT","ReaderT.instMonadFunctorReaderT","instMonadReaderOfReaderT","instMonadWithReaderOfReaderT","Lean.Compiler.instVisitLetReaderT","ReaderT.instAlternativeReaderT","instMonadControlReaderT","ReaderT.tryFinally"],"Quotient":["instDecidableEqQuotient"],"Prod":["Lean.Meta.AC.instContextInformationProdPreContextArrayBool","instToStringProd","Lean.instQuoteProdStrAnonymous","Lean.Server.instRpcEncodingProd","Lean.Server.instRpcEncodingProd","Lean.instToFormatProdNameDataValue","Lean.instForInLMVarIdMapProdLMVarId","instLawfulBEqProdInstBEqProd","SlimCheck.Prod.shrinkable","SlimCheck.Prod.sampleableExt","instReprTupleProd","instReprProd","instHashableProd","Lean.instForInMVarIdMapProdMVarId","instInhabitedProd","instDecidableEqProd","instBEqProd","instLTProd","prodHasDecidableLt","Std.AssocList.instForInAssocListProd","Prod.instWellFoundedRelationProd","Lean.Parser.TokenMap.instForInTokenMapProdNameList","Lean.instFromJsonProd","Lean.instToJsonProd","instStreamProdProd","instStreamProdProd","Std.PersistentHashMap.instForInPersistentHashMapProd","Std.RBMap.instForInRBMapProd","Lean.instToExprProd","Lean.KVMap.instForInKVMapProdNameDataValue","instToFormatProd","Lean.NameMap.instForInNameMapProdName","Lean.instForInOptionsProdNameDataValue"],"PUnit":["instToStringPUnit","instReprPUnit","EStateM.nonBacktrackable","instSubsingletonPUnit","instInhabitedPUnit","instDecidableEqPUnit"],"PSigma":["PSigma.instWellFoundedRelationPSigma"],"PProd":["instInhabitedPProd"],"PNonScalar":["instInhabitedPNonScalar"],"Ordering":["instInhabitedOrdering","instBEqOrdering"],"Or":["SlimCheck.Checkable.orCheckable","SlimCheck.Or.printableProp","instDecidableOr"],"OptionT":["SlimCheck.Checkable.instInhabitedOptionT","OptionT.instMonadOptionT","OptionT.instAlternativeOptionT","OptionT.instMonadLiftOptionT","OptionT.instMonadFunctorOptionT","OptionT.instMonadExceptOfUnitOptionT","OptionT.instMonadExceptOfOptionT","instMonadControlOptionT"],"Option.lt":["Option.instDecidableRelOptionLt"],"Option":["instToStringOption","Lean.Option.hasQuote","Lean.Server.instRpcEncodingOption","Lean.Server.instRpcEncodingOption","Lean.Meta.instReduceEvalOption","instReprOption","instHashableOption","instInhabitedOption","Std.HashMap.instGetElemHashMapOptionTrue","Lean.instFromJsonOption","Lean.instToJsonOption","Std.PersistentHashMap.instGetElemPersistentHashMapOptionTrue","Lean.MessageData.instCoeOptionExprMessageData","Lean.instToMessageDataOption","Lean.instToMessageDataOptionExpr","Lean.instToExprOption","optionCoe","instToFormatOption","Option.instFunctorOption","Option.instOrElseOption","instDecidableEqOption","instBEqOption","instLTOption","instFunctorOption","instMonadOption","instAlternativeOption","instMonadExceptOfUnitOption","instToBoolOption"],"OfNat.ofNat":["Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat","Fin.instInhabitedFinHAddNatInstHAddInstAddNatOfNat"],"Not":["SlimCheck.Not.printableProp","instDecidableNot","Nat.instAntisymmNatNotLtInstLTNat","instDecidableDitePropNot"],"NonemptyType":["instInhabitedNonemptyType"],"NonScalar":["instInhabitedNonScalar"],"Ne":["LSpec.instTestableNe","SlimCheck.Ne.printableProp"],"Nat.succ":["SlimCheck.instBoundedFinSucc","SlimCheck.Fin.shrinkable","SlimCheck.Fin.sampleableExt","SlimCheck.Random.instRandomFinSucc"],"Nat.SOM.Expr":["Nat.SOM.instInhabitedExpr"],"Nat.Linear.instBEqPolyCnstr":["Nat.Linear.instLawfulBEqPolyCnstrInstBEqPolyCnstr"],"Nat.Linear.PolyCnstr":["Nat.Linear.instBEqPolyCnstr","Nat.Linear.instLawfulBEqPolyCnstrInstBEqPolyCnstr","Lean.Meta.Linear.Nat.instReprPolyCnstr"],"Nat.Linear.ExprCnstr":["Lean.Meta.Linear.Nat.instReprExprCnstr"],"Nat.Linear.Expr":["Nat.Linear.instInhabitedExpr","Lean.Meta.Linear.Nat.instReprExpr"],"Nat":["SlimCheck.instDefaultRangeNat","instToStringNat","Lean.instQuoteNatNumLitKind","Lean.Meta.instReduceEvalNat","LSpec.Nat.Testable_forall_lt","SlimCheck.Nat.shrinkable","SlimCheck.Nat.sampleableExt","Lean.JsonNumber.instCoeNatJsonNumber","Lean.Json.instCoeNatJson","Nat.instAndOpNat","Nat.instOrOpNat","Nat.instXorNat","Nat.instShiftLeftNat","Nat.instShiftRightNat","instReprNat","instReprAtomNat","instHashableNat","instInhabitedNat","instOfNatNat","instAddNat","instMulNat","instPowNat","instPowNat","instBEqNat","instDecidableEqNat","instLENat","instLTNat","Nat.decLe","Nat.decLt","instSubNat","instGetElemArrayNatLtInstLTNatSize","instGetElemArrayNatLtInstLTNatSize","Lean.Syntax.instGetElemSyntaxNatTrue","Lean.Syntax.instGetElemSyntaxNatTrue","Nat.instLawfulBEqNatInstBEqNat","Nat.instTransNatLtInstLTNat","Nat.instTransNatLtInstLTNat","Nat.instTransNatLtInstLTNat","Nat.instTransNatLtInstLTNat","Nat.instTransNatLtInstLTNat","Nat.instTransNatLtInstLTNat","Nat.instTransNatLeInstLENat","Nat.instTransNatLeInstLENat","Nat.instTransNatLeInstLENat","Nat.instTransNatLeInstLENat","Nat.instTransNatLeInstLENat","Nat.instTransNatLeInstLENat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLeInstLENatLtInstLTNat","Nat.instTransNatLeInstLENatLtInstLTNat","Nat.instTransNatLeInstLENatLtInstLTNat","Nat.instTransNatLeInstLENatLtInstLTNat","Nat.instTransNatLeInstLENatLtInstLTNat","Nat.instTransNatLeInstLENatLtInstLTNat","Nat.instAntisymmNatLeInstLENat","Nat.instAntisymmNatLeInstLENat","Nat.instAntisymmNatNotLtInstLTNat","Nat.instAntisymmNatNotLtInstLTNat","SlimCheck.Random.instRandomNat","Subarray.instGetElemSubarrayNatLtInstLTNatSize","Subarray.instGetElemSubarrayNatLtInstLTNatSize","ByteArray.instGetElemByteArrayNatUInt8LtInstLTNatSize","ByteArray.instGetElemByteArrayNatUInt8LtInstLTNatSize","ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","instCoeNatInt","Int.instHPowIntNat","instOrdNat","instSizeOfNat","Lean.instFromJsonNat","Lean.instToJsonNat","instStreamRangeNat","Lean.instToExprNat","Lean.instCoeNatDataValue","Lean.KVMap.instValueNat","Std.PersistentArray.instGetElemPersistentArrayNatLtInstLTNatSize","Std.PersistentArray.instGetElemPersistentArrayNatLtInstLTNatSize","Std.instMembershipNatRange","Std.Range.instForInRangeNat","Std.Range.instForIn'RangeNatInferInstanceMembershipInstMembershipNatRange","Std.Range.instForIn'RangeNatInferInstanceMembershipInstMembershipNatRange","Std.Range.instForMRangeNat","List.instGetElemListNatLtInstLTNatLength","List.instGetElemListNatLtInstLTNatLength","Fin.coeToNat","Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat","Fin.instInhabitedFinHAddNatInstHAddInstAddNatOfNat","instHModUInt8Nat","instHModUInt16Nat","instHModUInt32Nat","instHModUInt64Nat","instHModUSizeNat","Nat.instDivNat","Nat.instModNat","Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize","FloatArray.instGetElemFloatArrayNatFloatLtInstLTNatSize","FloatArray.instGetElemFloatArrayNatFloatLtInstLTNatSize","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize"],"Membership.mem":["List.instDecidableMemListInstMembershipList"],"Membership":["List.instForIn'ListInferInstanceMembershipInstMembershipList","Std.Range.instForIn'RangeNatInferInstanceMembershipInstMembershipNatRange"],"MProd":["instInhabitedMProd"],"List.nil":["Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent","Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.instCoeSyntaxTSyntaxConsSyntaxNodeKindStrAnonymousNil"],"List.length":["List.instGetElemListNatLtInstLTNatLength"],"List.instMembershipList":["List.instForIn'ListInferInstanceMembershipInstMembershipList","List.instDecidableMemListInstMembershipList"],"List.instLTList":["List.hasDecidableLt"],"List.instLEList":["List.instAntisymmListLeInstLEList","List.instForAllListDecidableLeInstLEList"],"List.instBEqList":["List.instLawfulBEqListInstBEqList"],"List.cons":["Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKind","Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent","Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.instCoeSyntaxTSyntaxConsSyntaxNodeKindStrAnonymousNil"],"List":["List.instAntisymmListLeInstLEList","List.instAntisymmListLeInstLEList","instToStringList","Lean.instQuoteListStrAnonymous","instReprList","instReprList_1","instHashableList","instInhabitedList","instDecidableEqList","List.instForInList","List.instForIn'ListInferInstanceMembershipInstMembershipList","List.instForIn'ListInferInstanceMembershipInstMembershipList","List.instForMList","List.instFunctorList","Lean.Parser.TokenMap.instForInTokenMapProdNameList","Lean.instFromJsonList","Lean.instToJsonList","instToStreamList","instToStreamList","instStreamList","IO.AsyncList.instCoeListAsyncList","Lean.MessageData.instCoeListMessageData","Lean.MessageData.instCoeListExprMessageData","Lean.instToMessageDataList","Lean.instToExprList","instToFormatList","List.instGetElemListNatLtInstLTNatLength","List.instGetElemListNatLtInstLTNatLength","List.instAppendList","List.instEmptyCollectionList","List.instMembershipList","List.instDecidableMemListInstMembershipList","List.instLTList","List.hasDecidableLt","List.instLEList","List.instForAllListDecidableLeInstLEList","List.instBEqList","List.instLawfulBEqListInstBEqList","Array.instHAppendArrayList"],"Lean.strLitKind":["Lean.instQuoteStringStrLitKind"],"Lean.numLitKind":["Lean.instQuoteNatNumLitKind"],"Lean.instLTLiteral":["Lean.instDecidableLtLiteralInstLTLiteral"],"Lean.Xml.Element":["Lean.Xml.instToStringElement"],"Lean.Xml.Content":["Lean.Xml.instInhabitedContent","Lean.Xml.instToStringContent"],"Lean.Xml.Attributes":["Lean.Xml.instToStringAttributes"],"Lean.Widget.WidgetSource":["Lean.Widget.instInhabitedWidgetSource","Lean.Widget.instToJsonWidgetSource","Lean.Widget.instFromJsonWidgetSource"],"Lean.Widget.UserWidgetInstance":["Lean.Widget.instToJsonUserWidgetInstance","Lean.Widget.instFromJsonUserWidgetInstance"],"Lean.Widget.UserWidgetDefinition":["Lean.Widget.instInhabitedUserWidgetDefinition","Lean.Widget.instToJsonUserWidgetDefinition","Lean.Widget.instFromJsonUserWidgetDefinition"],"Lean.Widget.UserWidget":["Lean.Widget.instInhabitedUserWidget","Lean.Widget.instToJsonUserWidget","Lean.Widget.instFromJsonUserWidget"],"Lean.Widget.TaggedText":["Lean.Widget.instInhabitedTaggedText","Lean.Widget.instBEqTaggedText","Lean.Widget.instReprTaggedText","Lean.Widget.instFromJsonTaggedText","Lean.Widget.instToJsonTaggedText","Lean.Widget.TaggedText.instRpcEncodingTaggedText","Lean.Widget.TaggedText.instRpcEncodingTaggedText"],"Lean.Widget.SubexprInfo":["Lean.Widget.instInhabitedSubexprInfo","Lean.Widget.instRpcEncodingSubexprInfo"],"Lean.Widget.RpcEncodingPacket._@.Lean.Widget.InteractiveGoal._hyg.605":["Lean.Widget.instToJsonRpcEncodingPacket_2","Lean.Widget.instFromJsonRpcEncodingPacket_2","Lean.Widget.instRpcEncodingInteractiveGoal"],"Lean.Widget.RpcEncodingPacket._@.Lean.Widget.InteractiveGoal._hyg.5":["Lean.Widget.instToJsonRpcEncodingPacket_1","Lean.Widget.instFromJsonRpcEncodingPacket_1","Lean.Widget.instRpcEncodingInteractiveHypothesisBundle"],"Lean.Widget.RpcEncodingPacket._@.Lean.Widget.InteractiveGoal._hyg.1845":["Lean.Widget.instToJsonRpcEncodingPacket_4","Lean.Widget.instRpcEncodingInteractiveGoals","Lean.Widget.instFromJsonRpcEncodingPacket_4"],"Lean.Widget.RpcEncodingPacket._@.Lean.Widget.InteractiveGoal._hyg.1472":["Lean.Widget.instRpcEncodingInteractiveTermGoal","Lean.Widget.instToJsonRpcEncodingPacket_3","Lean.Widget.instFromJsonRpcEncodingPacket_3"],"Lean.Widget.RpcEncodingPacket._@.Lean.Widget.InteractiveDiagnostic._hyg.805":["Lean.Lsp.instRpcEncodingDiagnosticWith","Lean.Widget.instFromJsonRpcEncodingPacket_6","Lean.Widget.instToJsonRpcEncodingPacket_6"],"Lean.Widget.RpcEncodingPacket._@.Lean.Widget.InteractiveDiagnostic._hyg.4":["Lean.Widget.instRpcEncodingMsgEmbed","Lean.Widget.instFromJsonRpcEncodingPacket_5","Lean.Widget.instToJsonRpcEncodingPacket_5"],"Lean.Widget.RpcEncodingPacket._@.Lean.Widget.InteractiveCode._hyg.5":["Lean.Widget.instToJsonRpcEncodingPacket","Lean.Widget.instRpcEncodingSubexprInfo","Lean.Widget.instFromJsonRpcEncodingPacket"],"Lean.Widget.RpcEncodingPacket._@.Lean.Server.FileWorker.WidgetRequests._hyg.5":["Lean.Widget.instRpcEncodingMsgToInteractive","Lean.Widget.instToJsonRpcEncodingPacket_7","Lean.Widget.instFromJsonRpcEncodingPacket_7"],"Lean.Widget.RpcEncodingPacket._@.Lean.Server.FileWorker.WidgetRequests._hyg.336":["Lean.Widget.instToJsonRpcEncodingPacket_8","Lean.Widget.instRpcEncodingInfoPopup","Lean.Widget.instFromJsonRpcEncodingPacket_8"],"Lean.Widget.RpcEncodingPacket._@.Lean.Server.FileWorker.WidgetRequests._hyg.1346":["Lean.Widget.instFromJsonRpcEncodingPacket_9","Lean.Widget.instToJsonRpcEncodingPacket_9","Lean.Widget.instRpcEncodingGetGoToLocationParams"],"Lean.Widget.MsgToInteractive":["Lean.Widget.instInhabitedMsgToInteractive","Lean.Widget.instRpcEncodingMsgToInteractive"],"Lean.Widget.MsgEmbed":["Lean.Widget.instInhabitedMsgEmbed","Lean.Widget.instRpcEncodingMsgEmbed"],"Lean.Widget.InteractiveTermGoal":["Lean.Widget.instInhabitedInteractiveTermGoal","Lean.Widget.instRpcEncodingInteractiveTermGoal"],"Lean.Widget.InteractiveHypothesisBundle":["Lean.Widget.instInhabitedInteractiveHypothesisBundle","Lean.Widget.instRpcEncodingInteractiveHypothesisBundle"],"Lean.Widget.InteractiveGoals":["Lean.Widget.instRpcEncodingInteractiveGoals"],"Lean.Widget.InteractiveGoal":["Lean.Widget.instInhabitedInteractiveGoal","Lean.Widget.instRpcEncodingInteractiveGoal"],"Lean.Widget.InfoWithCtx":["Lean.Widget.instInhabitedInfoWithCtx","Lean.Widget.instRpcEncodingWithRpcRefInfoWithCtxRpcRef"],"Lean.Widget.InfoPopup":["Lean.Widget.instInhabitedInfoPopup","Lean.Widget.instRpcEncodingInfoPopup"],"Lean.Widget.GetWidgetsResponse":["Lean.Widget.instToJsonGetWidgetsResponse","Lean.Widget.instFromJsonGetWidgetsResponse"],"Lean.Widget.GetWidgetSourceParams":["Lean.Widget.instToJsonGetWidgetSourceParams","Lean.Widget.instFromJsonGetWidgetSourceParams"],"Lean.Widget.GetInteractiveDiagnosticsParams":["Lean.Widget.instInhabitedGetInteractiveDiagnosticsParams","Lean.Widget.instFromJsonGetInteractiveDiagnosticsParams","Lean.Widget.instToJsonGetInteractiveDiagnosticsParams"],"Lean.Widget.GetGoToLocationParams":["Lean.Widget.instRpcEncodingGetGoToLocationParams"],"Lean.Unhygienic":["Lean.Unhygienic.instMonadQuotationUnhygienic"],"Lean.TraceState":["Lean.instInhabitedTraceState"],"Lean.TraceElem":["Lean.instInhabitedTraceElem"],"Lean.TheoremVal":["Lean.instInhabitedTheoremVal"],"Lean.TagDeclarationExtension":["Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension"],"Lean.TagAttribute":["Lean.instInhabitedTagAttribute"],"Lean.TSyntaxArray":["Lean.Syntax.instCoeTSyntaxArrayTSepArray","Lean.Syntax.instCoeTSepArrayTSyntaxArray","Lean.Syntax.instCoeTSyntaxArray","Lean.Syntax.instCoeTSyntaxArray","Lean.Syntax.instCoeTSyntaxArrayArraySyntax"],"Lean.TSyntax.mk":["Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent"],"Lean.TSyntax":["Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKind","Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKind","Lean.Syntax.instBEqTSyntax","Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.Syntax.instToFormatTSyntax","Lean.Syntax.instToStringTSyntax","Lean.instInhabitedTSyntax","Lean.instCoeHeadTSyntaxSyntax","Lean.instCoeSyntaxTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.instToMessageDataTSyntax"],"Lean.SyntaxNodeKinds":["Lean.instCoeSyntaxNodeKindSyntaxNodeKinds"],"Lean.SyntaxNodeKind":["Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKind","Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent","Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.instCoeSyntaxNodeKindSyntaxNodeKinds","Lean.instCoeSyntaxTSyntaxConsSyntaxNodeKindStrAnonymousNil"],"Lean.Syntax.ident":["Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent"],"Lean.Syntax.TopDown":["Lean.Syntax.instForInTopDownSyntax"],"Lean.Syntax.Term":["Lean.TSyntax.instCoeIdentTerm","Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent","Lean.TSyntax.instCoeStrLitTerm","Lean.TSyntax.instCoeNameLitTerm","Lean.TSyntax.instCoeScientificLitTerm","Lean.TSyntax.instCoeNumLitTerm","Lean.TSyntax.instCoeCharLitTerm","Lean.instQuoteTermStrAnonymous","Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindStrAnonymousNil"],"Lean.Syntax.TSepArray":["Lean.Syntax.instCoeTSyntaxArrayTSepArray","Lean.Syntax.instEmptyCollectionTSepArray","Lean.Syntax.instCoeTSepArrayTSyntaxArray"],"Lean.Syntax.StrLit":["Lean.TSyntax.instCoeStrLitTerm"],"Lean.Syntax.SepArray":["Lean.Syntax.instCoeArraySyntaxSepArray","Lean.Syntax.instEmptyCollectionSepArray","Lean.Syntax.instCoeTailSepArrayArraySyntax"],"Lean.Syntax.ScientificLit":["Lean.TSyntax.instCoeScientificLitTerm"],"Lean.Syntax.Prio":["Lean.TSyntax.instCoeNumLitPrio"],"Lean.Syntax.Prec":["Lean.TSyntax.instCoeNumLitPrec"],"Lean.Syntax.NumLit":["Lean.TSyntax.instCoeNumLitTerm","Lean.TSyntax.instCoeNumLitPrio","Lean.TSyntax.instCoeNumLitPrec"],"Lean.Syntax.NameLit":["Lean.TSyntax.instCoeNameLitTerm"],"Lean.Syntax.Level":["Lean.TSyntax.instCoeIdentLevel"],"Lean.Syntax.Ident":["Lean.TSyntax.instCoeIdentTerm","Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent","Lean.TSyntax.instCoeIdentLevel","Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindStrAnonymousNil"],"Lean.Syntax.CharLit":["Lean.TSyntax.instCoeCharLitTerm"],"Lean.Syntax":["Lean.Name.instReprSyntax","Lean.Syntax.instBEqSyntax","Lean.Syntax.instCoeArraySyntaxSepArray","Lean.Syntax.instCoeTailSepArrayArraySyntax","Lean.Syntax.instCoeTSyntaxArrayArraySyntax","Lean.Syntax.instToFormatSyntax","Lean.Syntax.instToStringSyntax","Lean.instInhabitedSyntax","Lean.Syntax.instGetElemSyntaxNatTrue","Lean.Syntax.instGetElemSyntaxNatTrue","Lean.Syntax.instGetElemSyntaxNatTrue","Lean.instCoeHeadTSyntaxSyntax","Lean.instCoeSyntaxTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Syntax.instForInTopDownSyntax","Lean.MessageData.instCoeSyntaxMessageData","Lean.instToMessageDataSyntax","Lean.instCoeSyntaxDataValue","Lean.KVMap.instValueSyntax"],"Lean.SubExpr.Pos":["Lean.SubExpr.Pos.instInhabitedPos","Lean.SubExpr.Pos.instOrdPos","Lean.SubExpr.Pos.instDecidableEqPos","Lean.SubExpr.Pos.instToStringPos","Lean.SubExpr.Pos.instToJsonPos","Lean.SubExpr.Pos.instFromJsonPos"],"Lean.SubExpr":["Lean.instInhabitedSubExpr","Lean.PrettyPrinter.Delaborator.instMonadReaderOfSubExprDelabM","Lean.PrettyPrinter.Delaborator.instMonadWithReaderOfSubExprDelabM","Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instMonadReaderOfSubExprAnalyzeM","Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instMonadWithReaderOfSubExprAnalyzeM"],"Lean.StructureInfo":["Lean.instInhabitedStructureInfo"],"Lean.StructureFieldInfo":["Lean.instInhabitedStructureFieldInfo","Lean.instReprStructureFieldInfo"],"Lean.StructureDescr":["Lean.instInhabitedStructureDescr"],"Lean.SourceInfo":["instReprSourceInfo","Lean.instInhabitedSourceInfo"],"Lean.SimplePersistentEnvExtension":["Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension"],"Lean.Server.WithRpcRef":["Lean.Server.instInhabitedWithRpcRef","Lean.Widget.instRpcEncodingWithRpcRefInfoWithCtxRpcRef","Lean.Widget.instRpcEncodingWithRpcRefMessageDataRpcRef"],"Lean.Server.Snapshots.Snapshot":["Lean.Server.Snapshots.instInhabitedSnapshot"],"Lean.Server.RpcEncoding":["Lean.Server.instNonemptyRpcEncoding"],"Lean.Server.RequestM":["Lean.Server.instMonadLiftIORequestM","Lean.Server.instMonadLiftEIOExceptionRequestM"],"Lean.Server.RequestError":["Lean.Server.instInhabitedRequestError"],"Lean.Server.Reference":["Lean.Server.instInhabitedReference"],"Lean.Server.RefInfo":["Lean.Server.RefInfo.instCoeRefInfoRefInfo"],"Lean.Server.ModuleRefs":["Lean.Server.ModuleRefs.instCoeModuleRefsModuleRefs"],"Lean.Server.Ilean":["Lean.Server.instFromJsonIlean","Lean.Server.instToJsonIlean"],"Lean.Server.GoToKind":["Lean.Server.instBEqGoToKind","Lean.Server.instToJsonGoToKind","Lean.Server.instFromJsonGoToKind"],"Lean.Server.FileWorker.ElabTaskError":["Lean.Server.FileWorker.instCoeErrorElabTaskError","Lean.Server.FileWorker.instMonadLiftIOEIOElabTaskError"],"Lean.Server.DocumentMeta":["Lean.Server.instInhabitedDocumentMeta"],"Lean.ScopedEnvExtension.StateStack":["Lean.ScopedEnvExtension.instInhabitedStateStack"],"Lean.ScopedEnvExtension.ScopedEntries":["Lean.ScopedEnvExtension.instInhabitedScopedEntries"],"Lean.ScopedEnvExtension.Descr":["Lean.ScopedEnvExtension.instInhabitedDescr"],"Lean.ScopedEnvExtension":["Lean.instInhabitedScopedEnvExtension"],"Lean.SSet":["Lean.SSet.instInhabitedSSet","instReprSSet"],"Lean.SMap":["Lean.SMap.instInhabitedSMap","Lean.instReprSMap"],"Lean.ReducibilityStatus":["Lean.instInhabitedReducibilityStatus","Lean.instReprReducibilityStatus"],"Lean.ReducibilityHints":["Lean.instInhabitedReducibilityHints"],"Lean.RecursorVal":["Lean.instInhabitedRecursorVal"],"Lean.RecursorRule":["Lean.instInhabitedRecursorRule"],"Lean.Rat.instLTRat":["Lean.Rat.instDecidableLtRatInstLTRat"],"Lean.Rat.instLERat":["Lean.Rat.instDecidableLeRatInstLERat"],"Lean.Rat":["Lean.instInhabitedRat","Lean.instBEqRat","Lean.instDecidableEqRat","Lean.instToStringRat","Lean.instReprRat","Lean.Rat.instLTRat","Lean.Rat.instDecidableLtRatInstLTRat","Lean.Rat.instLERat","Lean.Rat.instDecidableLeRatInstLERat","Lean.Rat.instAddRat","Lean.Rat.instSubRat","Lean.Rat.instNegRat","Lean.Rat.instMulRat","Lean.Rat.instDivRat","Lean.Rat.instOfNatRat","Lean.Rat.instCoeIntRat"],"Lean.QuotVal":["Lean.instInhabitedQuotVal"],"Lean.QuotKind":["Lean.instInhabitedQuotKind"],"Lean.ProjectionFunctionInfo":["Lean.instInhabitedProjectionFunctionInfo"],"Lean.PrettyPrinter.UnexpandM":["Lean.PrettyPrinter.instMonadQuotationUnexpandM"],"Lean.PrettyPrinter.ParenthesizerM":["Lean.PrettyPrinter.instOrElseParenthesizerM","Lean.PrettyPrinter.Parenthesizer.instMonadTraverserParenthesizerM","Lean.PrettyPrinter.Parenthesizer.instMonadQuotationParenthesizerM"],"Lean.PrettyPrinter.Parenthesizer.ParenthesizerAliasValue":["Lean.PrettyPrinter.Parenthesizer.instCoeParenthesizerParenthesizerAliasValue","Lean.PrettyPrinter.Parenthesizer.instCoeForAllParenthesizerParenthesizerAliasValue","Lean.PrettyPrinter.Parenthesizer.instCoeForAllParenthesizerParenthesizerAliasValue_1"],"Lean.PrettyPrinter.Parenthesizer":["Lean.PrettyPrinter.Parenthesizer.instCoeParenthesizerParenthesizerAliasValue","Lean.PrettyPrinter.Parenthesizer.instCoeForAllParenthesizerParenthesizerAliasValue","Lean.PrettyPrinter.Parenthesizer.instCoeForAllParenthesizerParenthesizerAliasValue_1"],"Lean.PrettyPrinter.FormatterM":["Lean.PrettyPrinter.instOrElseFormatterM","Lean.PrettyPrinter.Formatter.instMonadTraverserFormatterM"],"Lean.PrettyPrinter.Formatter.FormatterAliasValue":["Lean.PrettyPrinter.Formatter.instCoeFormatterFormatterAliasValue","Lean.PrettyPrinter.Formatter.instCoeForAllFormatterFormatterAliasValue","Lean.PrettyPrinter.Formatter.instCoeForAllFormatterFormatterAliasValue_1"],"Lean.PrettyPrinter.Formatter":["Lean.PrettyPrinter.Formatter.instCoeFormatterFormatterAliasValue","Lean.PrettyPrinter.Formatter.instCoeForAllFormatterFormatterAliasValue","Lean.PrettyPrinter.Formatter.instCoeForAllFormatterFormatterAliasValue_1"],"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.Context":["Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instInhabitedContext"],"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.AnalyzeM":["Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instMonadReaderOfSubExprAnalyzeM","Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instMonadWithReaderOfSubExprAnalyzeM"],"Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator":["Lean.PrettyPrinter.Delaborator.instMonadStateOfHoleIteratorDelabM","Lean.PrettyPrinter.Delaborator.SubExpr.instInhabitedHoleIterator"],"Lean.PrettyPrinter.Delaborator.DelabM":["Lean.PrettyPrinter.Delaborator.instInhabitedDelabM","Lean.PrettyPrinter.Delaborator.instAlternativeDelabM","Lean.PrettyPrinter.Delaborator.instOrElseDelabM","Lean.PrettyPrinter.Delaborator.instMonadReaderOfSubExprDelabM","Lean.PrettyPrinter.Delaborator.instMonadWithReaderOfSubExprDelabM","Lean.PrettyPrinter.Delaborator.instMonadStateOfHoleIteratorDelabM","Lean.PrettyPrinter.Delaborator.instMonadQuotationDelabM"],"Lean.PrefixTreeNode":["Lean.instInhabitedPrefixTreeNode"],"Lean.PrefixTree":["Lean.instInhabitedPrefixTree","Lean.instEmptyCollectionPrefixTree"],"Lean.Position":["Lean.instInhabitedPosition","Lean.instDecidableEqPosition","Lean.instReprPosition","Lean.Position.instToFormatPosition","Lean.Position.instToStringPosition","Lean.Position.instToExprPosition"],"Lean.PersistentEnvExtensionState":["Lean.instInhabitedPersistentEnvExtensionState"],"Lean.PersistentEnvExtension":["Lean.instInhabitedPersistentEnvExtension"],"Lean.ParserDescr":["Lean.instInhabitedParserDescr"],"Lean.ParserCompiler.CombinatorAttribute":["Lean.ParserCompiler.instInhabitedCombinatorAttribute"],"Lean.Parser.Trie":["Lean.Parser.Trie.instEmptyCollectionTrie","Lean.Parser.Trie.instInhabitedTrie","Lean.Parser.Trie.instToStringTrie"],"Lean.Parser.TokenMap":["Lean.Parser.TokenMap.instInhabitedTokenMap","Lean.Parser.TokenMap.instEmptyCollectionTokenMap","Lean.Parser.TokenMap.instForInTokenMapProdNameList"],"Lean.Parser.PrattParsingTables":["Lean.Parser.instInhabitedPrattParsingTables"],"Lean.Parser.ParserInfo":["Lean.Parser.instInhabitedParserInfo"],"Lean.Parser.ParserFn":["Lean.Parser.instInhabitedParserFn"],"Lean.Parser.ParserExtension.State":["Lean.Parser.ParserExtension.instInhabitedState"],"Lean.Parser.ParserExtension.OLeanEntry":["Lean.Parser.ParserExtension.instInhabitedOLeanEntry"],"Lean.Parser.ParserExtension.Entry":["Lean.Parser.ParserExtension.instInhabitedEntry"],"Lean.Parser.ParserCategory":["Lean.Parser.instInhabitedParserCategory"],"Lean.Parser.ParserAliasValue":["Lean.Parser.instCoeParserParserAliasValue","Lean.Parser.instCoeForAllParserParserAliasValue","Lean.Parser.instCoeForAllParserParserAliasValue_1"],"Lean.Parser.Parser":["Lean.Parser.instCoeParserParserAliasValue","Lean.Parser.instCoeForAllParserParserAliasValue","Lean.Parser.instCoeForAllParserParserAliasValue_1","Lean.Parser.instInhabitedParser","Lean.Parser.instAndThenParser","Lean.Parser.instOrElseParser","Lean.Parser.instCoeStringParser"],"Lean.Parser.OrElseOnAntiquotBehavior":["Lean.Parser.instBEqOrElseOnAntiquotBehavior"],"Lean.Parser.ModuleParserState":["Lean.Parser.instInhabitedModuleParserState"],"Lean.Parser.LeadingIdentBehavior":["Lean.Parser.instInhabitedLeadingIdentBehavior","Lean.Parser.instBEqLeadingIdentBehavior","Lean.Parser.instReprLeadingIdentBehavior"],"Lean.Parser.InputContext":["Lean.Parser.instInhabitedInputContext"],"Lean.Parser.FirstTokens":["Lean.Parser.instInhabitedFirstTokens","Lean.Parser.FirstTokens.instToStringFirstTokens"],"Lean.Parser.Error":["Lean.Parser.instInhabitedError","Lean.Parser.instBEqError","Lean.Parser.Error.instToStringError"],"Lean.Parsec.ParseResult":["Lean.Parsec.instReprParseResult"],"Lean.Parsec":["Lean.Parsec.instInhabitedParsec","Lean.Parsec.instMonadParsec","Lean.Parsec.instAlternativeParsec"],"Lean.ParametricAttribute":["Lean.instInhabitedParametricAttribute"],"Lean.PPFns":["Lean.instInhabitedPPFns"],"Lean.Options":["Lean.instInhabitedOptions","Lean.instToStringOptions","Lean.instForInOptionsProdNameDataValue"],"Lean.OptionDecls":["Lean.instInhabitedOptionDecls"],"Lean.OptionDecl":["Lean.instInhabitedOptionDecl"],"Lean.Option":["Lean.instInhabitedOption"],"Lean.OpenDecl":["Lean.OpenDecl.instInhabitedOpenDecl","Lean.OpenDecl.instToStringOpenDecl"],"Lean.OpaqueVal":["Lean.instInhabitedOpaqueVal"],"Lean.Occurrences":["Lean.instInhabitedOccurrences","Lean.instBEqOccurrences"],"Lean.NameTrie":["Lean.instInhabitedNameTrie","Lean.instEmptyCollectionNameTrie"],"Lean.NameSet":["Lean.NameSet.instEmptyCollectionNameSet","Lean.NameSet.instInhabitedNameSet","Lean.NameSet.instForInNameSetName"],"Lean.NameSSet":["Lean.NameSSet.instEmptyCollectionNameSSet","Lean.NameSSet.instInhabitedNameSSet"],"Lean.NamePart":["Lean.instToStringNamePart"],"Lean.NameMap":["Lean.NameMap.instEmptyCollectionNameMap","Lean.NameMap.instInhabitedNameMap","Lean.NameMap.instForInNameMapProdName"],"Lean.NameHashSet":["Lean.NameHashSet.instEmptyCollectionNameHashSet","Lean.NameHashSet.instInhabitedNameHashSet"],"Lean.NameGenerator":["Lean.instInhabitedNameGenerator"],"Lean.Name.str":["Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent","Lean.instQuoteTermStrAnonymous","Lean.instQuoteBoolStrAnonymous","Lean.instQuoteSubstringStrAnonymous","Lean.instQuoteNameStrAnonymous","Lean.instQuoteProdStrAnonymous","Lean.instQuoteListStrAnonymous","Lean.instQuoteArrayStrAnonymous","Lean.Option.hasQuote","Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.Level.instQuoteLevelStrAnonymous","Lean.instCoeSyntaxTSyntaxConsSyntaxNodeKindStrAnonymousNil"],"Lean.Name.instBEqName":["Lean.Name.instLawfulBEqNameInstBEqName"],"Lean.Name.hasLtQuick":["Lean.Name.instDecidableRelNameLtHasLtQuick"],"Lean.Name.anonymous":["Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent","Lean.instQuoteTermStrAnonymous","Lean.instQuoteBoolStrAnonymous","Lean.instQuoteSubstringStrAnonymous","Lean.instQuoteNameStrAnonymous","Lean.instQuoteProdStrAnonymous","Lean.instQuoteListStrAnonymous","Lean.instQuoteArrayStrAnonymous","Lean.Option.hasQuote","Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.Level.instQuoteLevelStrAnonymous","Lean.instCoeSyntaxTSyntaxConsSyntaxNodeKindStrAnonymousNil"],"Lean.Name":["Lean.Name.instToStringName","Lean.Name.instReprName","Lean.Name.instLawfulBEqNameInstBEqName","Lean.Name.instDecidableEqName","Lean.instQuoteNameStrAnonymous","Lean.instToFormatName","Lean.instToFormatProdNameDataValue","Lean.Meta.instReduceEvalName","Lean.instInhabitedName","Lean.instHashableName","Lean.Name.instBEqName","Lean.Name.instAppendName","Lean.instSizeOfName","Lean.Parser.TokenMap.instForInTokenMapProdNameList","Lean.instFromJsonName","Lean.instToJsonName","Lean.MessageData.instCoeNameMessageData","Lean.instToMessageDataName","Lean.instToExprName","Lean.instCoeNameDataValue","Lean.KVMap.instForInKVMapProdNameDataValue","Lean.KVMap.instValueName","Lean.instCoeStringName","Lean.Name.instDecidableRelNameLtHasLtQuick","Lean.NameMap.instForInNameMapProdName","Lean.NameSet.instForInNameSetName","Lean.instForInOptionsProdNameDataValue"],"Lean.MonadStateCacheT":["Lean.MonadStateCacheT.instMonadHashMapCacheAdapterMonadStateCacheT","Lean.MonadStateCacheT.instMonadMonadStateCacheT","Lean.MonadStateCacheT.instMonadLiftMonadStateCacheT","Lean.MonadStateCacheT.instMonadExceptOfMonadStateCacheT","Lean.MonadStateCacheT.instMonadControlMonadStateCacheT","Lean.MonadStateCacheT.instMonadFinallyMonadStateCacheT","Lean.MonadStateCacheT.instMonadRefMonadStateCacheT"],"Lean.MonadCacheT":["Lean.MonadCacheT.instMonadHashMapCacheAdapterMonadCacheT","Lean.MonadCacheT.instMonadMonadCacheT","Lean.MonadCacheT.instMonadLiftMonadCacheT","Lean.MonadCacheT.instMonadExceptOfMonadCacheT","Lean.MonadCacheT.instMonadControlMonadCacheT","Lean.MonadCacheT.instMonadFinallyMonadCacheT","Lean.MonadCacheT.instMonadRefMonadCacheT","Lean.MonadCacheT.instAlternativeMonadCacheT","Lean.instMonadRecDepthMonadCacheT"],"Lean.ModuleIdx":["Lean.instInhabitedModuleIdx"],"Lean.ModuleData":["Lean.instInhabitedModuleData"],"Lean.MetavarKind":["Lean.instInhabitedMetavarKind","Lean.instReprMetavarKind"],"Lean.MetavarDecl":["Lean.instInhabitedMetavarDecl"],"Lean.MetavarContext.MkBinding.M":["Lean.MetavarContext.MkBinding.instMonadMCtxM","Lean.MetavarContext.MkBinding.instMonadHashMapCacheAdapterExprStructEqExprMInstBEqExprStructEqInstHashableExprStructEq"],"Lean.MetavarContext.MkBinding.Exception":["Lean.MetavarContext.MkBinding.instToStringException"],"Lean.MetavarContext.LevelMVarToParam.M":["Lean.MetavarContext.LevelMVarToParam.instMonadMCtxM","Lean.MetavarContext.LevelMVarToParam.instMonadCacheExprStructEqExprM"],"Lean.MetavarContext":["Lean.instMonadMCtxStateRefT'MetavarContextST","Lean.MetavarContext.instInhabitedMetavarContext","Lean.MetavarContext.instMonadMCtxStateRefT'MetavarContextST"],"Lean.Meta.UnificationHints":["Lean.Meta.instInhabitedUnificationHints","Lean.Meta.instToFormatUnificationHints"],"Lean.Meta.UnificationHintEntry":["Lean.Meta.instInhabitedUnificationHintEntry"],"Lean.Meta.TransparencyMode":["Lean.Meta.instInhabitedTransparencyMode","Lean.Meta.instBEqTransparencyMode","Lean.Meta.instReprTransparencyMode","Lean.Meta.TransparencyMode.instHashableTransparencyMode"],"Lean.Meta.SynthInstance.SynthM":["Lean.Meta.SynthInstance.instInhabitedSynthM"],"Lean.Meta.SynthInstance.MkTableKey.M":["Lean.Meta.SynthInstance.MkTableKey.instMonadMCtxM"],"Lean.Meta.SynthInstance.GeneratorNode":["Lean.Meta.SynthInstance.instInhabitedGeneratorNode"],"Lean.Meta.SynthInstance.ConsumerNode":["Lean.Meta.SynthInstance.instInhabitedConsumerNode"],"Lean.Meta.SynthInstance.Answer":["Lean.Meta.SynthInstance.instInhabitedAnswer"],"Lean.Meta.State":["Lean.Meta.instInhabitedState"],"Lean.Meta.SimpTheorems":["Lean.Meta.instInhabitedSimpTheorems"],"Lean.Meta.SimpTheorem":["Lean.Meta.instInhabitedSimpTheorem","Lean.Meta.instToFormatSimpTheorem","Lean.Meta.instToMessageDataSimpTheorem","Lean.Meta.instBEqSimpTheorem"],"Lean.Meta.SimpEntry":["Lean.Meta.instInhabitedSimpEntry"],"Lean.Meta.SimpCongrTheorems":["Lean.Meta.instInhabitedSimpCongrTheorems","Lean.Meta.instReprSimpCongrTheorems"],"Lean.Meta.SimpCongrTheorem":["Lean.Meta.instInhabitedSimpCongrTheorem","Lean.Meta.instReprSimpCongrTheorem"],"Lean.Meta.SimpAll.Entry":["Lean.Meta.SimpAll.instInhabitedEntry"],"Lean.Meta.Simp.Step":["Lean.Meta.Simp.instInhabitedStep"],"Lean.Meta.Simp.SimpM":["Lean.Meta.Simp.instMonadBacktrackSavedStateSimpM"],"Lean.Meta.Simp.Result":["Lean.Meta.Simp.instInhabitedResult"],"Lean.Meta.Simp.Methods":["Lean.Meta.Simp.instInhabitedMethods"],"Lean.Meta.Simp.M":["Lean.Meta.Simp.instInhabitedM"],"Lean.Meta.Simp.Context":["Lean.Meta.Simp.instInhabitedContext"],"Lean.Meta.Simp.Config":["Lean.Meta.Simp.instInhabitedConfig","Lean.Meta.Simp.instBEqConfig","Lean.Meta.Simp.instReprConfig"],"Lean.Meta.SavedState":["Lean.Meta.Simp.instMonadBacktrackSavedStateSimpM","Lean.Meta.ElimEmptyInductive.instMonadBacktrackSavedStateM","Lean.Meta.instInhabitedSavedState","Lean.Meta.instMonadBacktrackSavedStateMetaM"],"Lean.Meta.RecursorUnivLevelPos":["Lean.Meta.instToStringRecursorUnivLevelPos"],"Lean.Meta.RecursorInfo":["Lean.Meta.RecursorInfo.instToStringRecursorInfo"],"Lean.Meta.PostponedEntry":["Lean.Meta.instInhabitedPostponedEntry"],"Lean.Meta.ParamInfo":["Lean.Meta.instInhabitedParamInfo"],"Lean.Meta.MetaM":["Lean.Meta.instMonadMetaM","Lean.Meta.instInhabitedMetaM","Lean.Meta.instMonadLCtxMetaM","Lean.Meta.instMonadMCtxMetaM","Lean.Meta.instMonadEnvMetaM","Lean.Meta.instAddMessageContextMetaM","Lean.Meta.instMonadBacktrackSavedStateMetaM","Lean.Meta.instMetaEvalMetaM","Lean.Meta.instOrElseMetaM","Lean.Meta.instAlternativeMetaM"],"Lean.Meta.Match.Problem":["Lean.Meta.Match.instInhabitedProblem"],"Lean.Meta.Match.Pattern":["Lean.Meta.Match.instInhabitedPattern"],"Lean.Meta.Match.MatchEqnsExtState":["Lean.Meta.Match.instInhabitedMatchEqnsExtState"],"Lean.Meta.Match.MatchEqns":["Lean.Meta.Match.instInhabitedMatchEqns","Lean.Meta.Match.instReprMatchEqns"],"Lean.Meta.Match.Extension.State":["Lean.Meta.Match.Extension.instInhabitedState"],"Lean.Meta.Match.DiscrInfo":["Lean.Meta.Match.instInhabitedDiscrInfo"],"Lean.Meta.Match.Alt":["Lean.Meta.Match.instInhabitedAlt"],"Lean.Meta.Linear.instLTVar":["Lean.Meta.Linear.instDecidableLtVarInstLTVar"],"Lean.Meta.Linear.Var":["Lean.Meta.Linear.instInhabitedVar","Lean.Meta.Linear.instOrdVar","Lean.Meta.Linear.instDecidableEqVar","Lean.Meta.Linear.instReprVar","Lean.Meta.Linear.instLTVar","Lean.Meta.Linear.instDecidableLtVarInstLTVar"],"Lean.Meta.Linear.State":["Lean.Meta.Linear.instInhabitedState"],"Lean.Meta.Linear.Poly":["Lean.Meta.Linear.instInhabitedPoly","Lean.Meta.Linear.instReprPoly","Lean.Meta.Linear.instDecidableEqPoly"],"Lean.Meta.Linear.Nat.LinearExpr":["Lean.Meta.Linear.Nat.instToExprLinearExpr"],"Lean.Meta.Linear.Nat.LinearCnstr":["Lean.Meta.Linear.Nat.instToExprLinearCnstr"],"Lean.Meta.Linear.Justification":["Lean.Meta.Linear.instInhabitedJustification","Lean.Meta.Linear.instDecidableEqJustification","Lean.Meta.Linear.instBEqJustification","Lean.Meta.Linear.instReprJustification"],"Lean.Meta.Linear.CnstrKind":["Lean.Meta.Linear.instInhabitedCnstrKind","Lean.Meta.Linear.instDecidableEqCnstrKind","Lean.Meta.Linear.instBEqCnstrKind","Lean.Meta.Linear.instReprCnstrKind"],"Lean.Meta.Linear.Cnstr":["Lean.Meta.Linear.instInhabitedCnstr","Lean.Meta.Linear.instDecidableEqCnstr","Lean.Meta.Linear.instBEqCnstr","Lean.Meta.Linear.instReprCnstr"],"Lean.Meta.Linear.AssumptionId":["Lean.Meta.Linear.instInhabitedAssumptionId","Lean.Meta.Linear.instDecidableEqAssumptionId","Lean.Meta.Linear.instReprAssumptionId"],"Lean.Meta.Linear.Assignment":["Lean.Meta.Linear.instInhabitedAssignment"],"Lean.Meta.KExprMap":["Lean.Meta.instInhabitedKExprMap"],"Lean.Meta.Instances":["Lean.Meta.instInhabitedInstances"],"Lean.Meta.InstanceEntry":["Lean.Meta.instInhabitedInstanceEntry","Lean.Meta.instBEqInstanceEntry","Lean.Meta.instToFormatInstanceEntry"],"Lean.Meta.InfoCacheKey":["Lean.Meta.instInhabitedInfoCacheKey","Lean.Meta.instBEqInfoCacheKey","Lean.Meta.InfoCacheKey.instHashableInfoCacheKey"],"Lean.Meta.InductionSubgoal":["Lean.Meta.instInhabitedInductionSubgoal"],"Lean.Meta.IndPredBelow.Variables":["Lean.Meta.IndPredBelow.instInhabitedVariables"],"Lean.Meta.GeneralizeArg":["Lean.Meta.instInhabitedGeneralizeArg"],"Lean.Meta.FVarSubst":["Lean.Meta.instInhabitedFVarSubst"],"Lean.Meta.EtaStructMode":["Lean.Meta.instInhabitedEtaStructMode","Lean.Meta.instBEqEtaStructMode","Lean.Meta.instReprEtaStructMode"],"Lean.Meta.EqnsExtState":["Lean.Meta.instInhabitedEqnsExtState"],"Lean.Meta.ElimInfo":["Lean.Meta.instReprElimInfo","Lean.Meta.instInhabitedElimInfo"],"Lean.Meta.ElimEmptyInductive.M":["Lean.Meta.ElimEmptyInductive.instMonadBacktrackSavedStateM"],"Lean.Meta.ElimAltInfo":["Lean.Meta.instReprElimAltInfo","Lean.Meta.instInhabitedElimAltInfo"],"Lean.Meta.DiscrTree.instLTKey":["Lean.Meta.DiscrTree.instDecidableLtKeyInstLTKey"],"Lean.Meta.DiscrTree.Trie":["Lean.Meta.DiscrTree.instInhabitedTrie","Lean.Meta.DiscrTree.instToFormatTrie"],"Lean.Meta.DiscrTree.Key":["Lean.Meta.DiscrTree.instInhabitedKey","Lean.Meta.DiscrTree.instBEqKey","Lean.Meta.DiscrTree.instReprKey","Lean.Meta.DiscrTree.instHashableKey","Lean.Meta.DiscrTree.instLTKey","Lean.Meta.DiscrTree.instDecidableLtKeyInstLTKey","Lean.Meta.DiscrTree.instToFormatKey"],"Lean.Meta.DiscrTree":["Lean.Meta.DiscrTree.instToFormatDiscrTree","Lean.Meta.DiscrTree.instInhabitedDiscrTree"],"Lean.Meta.DefaultInstances":["Lean.Meta.instInhabitedDefaultInstances"],"Lean.Meta.DSimp.Config":["Lean.Meta.DSimp.instInhabitedConfig","Lean.Meta.DSimp.instBEqConfig","Lean.Meta.DSimp.instReprConfig"],"Lean.Meta.CustomEliminators":["Lean.Meta.instInhabitedCustomEliminators","Lean.Meta.instReprCustomEliminators"],"Lean.Meta.CustomEliminator":["Lean.Meta.instInhabitedCustomEliminator","Lean.Meta.instReprCustomEliminator"],"Lean.Meta.CongrArgKind":["Lean.Meta.instInhabitedCongrArgKind"],"Lean.Meta.Closure.ToProcessElement":["Lean.Meta.Closure.instInhabitedToProcessElement"],"Lean.Meta.CheckAssignment.CheckAssignmentM":["Lean.Meta.CheckAssignment.instMonadCacheExprCheckAssignmentM"],"Lean.Meta.CaseValuesSubgoal":["Lean.Meta.instInhabitedCaseValuesSubgoal"],"Lean.Meta.CaseValueSubgoal":["Lean.Meta.instInhabitedCaseValueSubgoal"],"Lean.Meta.CaseArraySizesSubgoal":["Lean.Meta.instInhabitedCaseArraySizesSubgoal"],"Lean.Meta.Cache":["Lean.Meta.instInhabitedCache"],"Lean.Meta.AuxLemmas":["Lean.Meta.instInhabitedAuxLemmas"],"Lean.Meta.AltVarNames":["Lean.Meta.instInhabitedAltVarNames"],"Lean.Meta.AbstractMVarsResult":["Lean.Meta.instInhabitedAbstractMVarsResult","Lean.Meta.instBEqAbstractMVarsResult"],"Lean.Meta.AbstractMVars.M":["Lean.Meta.AbstractMVars.instMonadMCtxM"],"Lean.Meta.AC.PreContext":["Lean.Meta.AC.instInhabitedPreContext","Lean.Meta.AC.instContextInformationProdPreContextArrayBool","Lean.Meta.AC.instEvalInformationPreContextACExpr"],"Lean.Meta.AC.ACExpr":["Lean.Meta.AC.instEvalInformationPreContextACExpr"],"Lean.MessageSeverity":["Lean.instInhabitedMessageSeverity","Lean.instBEqMessageSeverity"],"Lean.MessageLog":["Lean.instInhabitedMessageLog","Lean.MessageLog.instAppendMessageLog"],"Lean.MessageData":["Lean.instInhabitedMessageData","Lean.MessageData.instAppendMessageData","Lean.MessageData.instCoeStringMessageData","Lean.MessageData.instCoeFormatMessageData","Lean.MessageData.instCoeLevelMessageData","Lean.MessageData.instCoeExprMessageData","Lean.MessageData.instCoeNameMessageData","Lean.MessageData.instCoeSyntaxMessageData","Lean.MessageData.instCoeMVarIdMessageData","Lean.MessageData.instCoeOptionExprMessageData","Lean.MessageData.instCoeArrayExprMessageData","Lean.MessageData.instCoeListMessageData","Lean.MessageData.instCoeListMessageData","Lean.MessageData.instCoeListExprMessageData","Lean.instToMessageDataMessageData","Lean.Widget.instRpcEncodingWithRpcRefMessageDataRpcRef"],"Lean.Message":["Lean.instInhabitedMessage"],"Lean.MapDeclarationExtension":["Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension"],"Lean.MacroScopesView":["Lean.instInhabitedMacroScopesView"],"Lean.MacroM":["Lean.Macro.instMonadRefMacroM","Lean.Macro.instMonadQuotationMacroM"],"Lean.Macro.State":["Lean.Macro.instInhabitedState"],"Lean.Macro.Methods":["Lean.Macro.instInhabitedMethods"],"Lean.MVarIdSet":["Lean.instForInMVarIdSetMVarId"],"Lean.MVarIdMap":["Lean.instEmptyCollectionMVarIdMap","Lean.instForInMVarIdMapProdMVarId","Lean.instInhabitedMVarIdMap"],"Lean.MVarId":["Lean.instInhabitedMVarId","Lean.instBEqMVarId","Lean.instHashableMVarId","Lean.instReprMVarId","Lean.instReprMVarId_1","Lean.instForInMVarIdSetMVarId","Lean.instForInMVarIdMapProdMVarId","Lean.MessageData.instCoeMVarIdMessageData","Lean.instToMessageDataMVarId","Lean.Widget.instToJsonMVarId","Lean.Widget.instFromJsonMVarId"],"Lean.Lsp.WorkspaceSymbolParams":["Lean.Lsp.instFromJsonWorkspaceSymbolParams","Lean.Lsp.instToJsonWorkspaceSymbolParams"],"Lean.Lsp.WorkspaceFolder":["Lean.Lsp.instToJsonWorkspaceFolder","Lean.Lsp.instFromJsonWorkspaceFolder"],"Lean.Lsp.WorkDoneProgressReport":["Lean.Lsp.instToJsonWorkDoneProgressReport"],"Lean.Lsp.WorkDoneProgressEnd":["Lean.Lsp.instToJsonWorkDoneProgressEnd"],"Lean.Lsp.WorkDoneProgressBegin":["Lean.Lsp.instToJsonWorkDoneProgressBegin"],"Lean.Lsp.WindowClientCapabilities":["Lean.Lsp.instToJsonWindowClientCapabilities","Lean.Lsp.instFromJsonWindowClientCapabilities"],"Lean.Lsp.WaitForDiagnosticsParams":["Lean.Lsp.instFileSourceWaitForDiagnosticsParams","Lean.Lsp.instFromJsonWaitForDiagnosticsParams","Lean.Lsp.instToJsonWaitForDiagnosticsParams"],"Lean.Lsp.WaitForDiagnostics":["Lean.Lsp.instFromJsonWaitForDiagnostics","Lean.Lsp.instToJsonWaitForDiagnostics"],"Lean.Lsp.VersionedTextDocumentIdentifier":["Lean.Lsp.instFileSourceVersionedTextDocumentIdentifier","Lean.Lsp.instToJsonVersionedTextDocumentIdentifier","Lean.Lsp.instFromJsonVersionedTextDocumentIdentifier"],"Lean.Lsp.TypeDefinitionParams":["Lean.Lsp.instFileSourceTypeDefinitionParams","Lean.Lsp.instFromJsonTypeDefinitionParams","Lean.Lsp.instToJsonTypeDefinitionParams"],"Lean.Lsp.Trace":["Lean.Lsp.instFromJsonTrace","Lean.Lsp.Trace.hasToJson"],"Lean.Lsp.TextEditBatch":["Lean.Lsp.instFromJsonTextEditBatch","Lean.Lsp.instToJsonTextEditBatch"],"Lean.Lsp.TextEdit":["Lean.Lsp.instToJsonTextEdit","Lean.Lsp.instFromJsonTextEdit"],"Lean.Lsp.TextDocumentSyncOptions":["Lean.Lsp.instToJsonTextDocumentSyncOptions","Lean.Lsp.instFromJsonTextDocumentSyncOptions"],"Lean.Lsp.TextDocumentSyncKind":["Lean.Lsp.instFromJsonTextDocumentSyncKind","Lean.Lsp.instToJsonTextDocumentSyncKind"],"Lean.Lsp.TextDocumentRegistrationOptions":["Lean.Lsp.instToJsonTextDocumentRegistrationOptions","Lean.Lsp.instFromJsonTextDocumentRegistrationOptions"],"Lean.Lsp.TextDocumentPositionParams":["Lean.Lsp.instFileSourceTextDocumentPositionParams","Lean.Lsp.instToJsonTextDocumentPositionParams","Lean.Lsp.instFromJsonTextDocumentPositionParams","Lean.Lsp.instToStringTextDocumentPositionParams"],"Lean.Lsp.TextDocumentItem":["Lean.Lsp.instFileSourceTextDocumentItem","Lean.Lsp.instToJsonTextDocumentItem","Lean.Lsp.instFromJsonTextDocumentItem"],"Lean.Lsp.TextDocumentIdentifier":["Lean.Lsp.instFileSourceTextDocumentIdentifier","Lean.Lsp.instToJsonTextDocumentIdentifier","Lean.Lsp.instFromJsonTextDocumentIdentifier"],"Lean.Lsp.TextDocumentEdit":["Lean.Lsp.instFileSourceTextDocumentEdit","Lean.Lsp.instToJsonTextDocumentEdit","Lean.Lsp.instFromJsonTextDocumentEdit"],"Lean.Lsp.TextDocumentContentChangeEvent":["Lean.Lsp.instFromJsonTextDocumentContentChangeEvent","Lean.Lsp.TextDocumentContentChangeEvent.hasToJson"],"Lean.Lsp.TextDocumentClientCapabilities":["Lean.Lsp.instToJsonTextDocumentClientCapabilities","Lean.Lsp.instFromJsonTextDocumentClientCapabilities"],"Lean.Lsp.TextDocumentChangeRegistrationOptions":["Lean.Lsp.instFromJsonTextDocumentChangeRegistrationOptions"],"Lean.Lsp.SymbolTag":["Lean.Lsp.instToJsonSymbolTag"],"Lean.Lsp.SymbolKind":["Lean.Lsp.instToJsonSymbolKind"],"Lean.Lsp.SymbolInformation":["Lean.Lsp.instToJsonSymbolInformation"],"Lean.Lsp.StaticRegistrationOptions":["Lean.Lsp.instToJsonStaticRegistrationOptions","Lean.Lsp.instFromJsonStaticRegistrationOptions"],"Lean.Lsp.ShowDocumentClientCapabilities":["Lean.Lsp.instToJsonShowDocumentClientCapabilities","Lean.Lsp.instFromJsonShowDocumentClientCapabilities"],"Lean.Lsp.ServerInfo":["Lean.Lsp.instToJsonServerInfo","Lean.Lsp.instFromJsonServerInfo"],"Lean.Lsp.ServerCapabilities":["Lean.Lsp.instToJsonServerCapabilities","Lean.Lsp.instFromJsonServerCapabilities"],"Lean.Lsp.SemanticTokensRangeParams":["Lean.Lsp.instFileSourceSemanticTokensRangeParams","Lean.Lsp.instFromJsonSemanticTokensRangeParams","Lean.Lsp.instToJsonSemanticTokensRangeParams"],"Lean.Lsp.SemanticTokensParams":["Lean.Lsp.instFileSourceSemanticTokensParams","Lean.Lsp.instFromJsonSemanticTokensParams","Lean.Lsp.instToJsonSemanticTokensParams"],"Lean.Lsp.SemanticTokensOptions":["Lean.Lsp.instFromJsonSemanticTokensOptions","Lean.Lsp.instToJsonSemanticTokensOptions"],"Lean.Lsp.SemanticTokensLegend":["Lean.Lsp.instFromJsonSemanticTokensLegend","Lean.Lsp.instToJsonSemanticTokensLegend"],"Lean.Lsp.SemanticTokens":["Lean.Lsp.instFromJsonSemanticTokens","Lean.Lsp.instToJsonSemanticTokens"],"Lean.Lsp.SemanticTokenType":["Lean.Lsp.instToJsonSemanticTokenType","Lean.Lsp.instFromJsonSemanticTokenType"],"Lean.Lsp.SemanticTokenModifier":["Lean.Lsp.instToJsonSemanticTokenModifier","Lean.Lsp.instFromJsonSemanticTokenModifier"],"Lean.Lsp.SaveOptions":["Lean.Lsp.instToJsonSaveOptions","Lean.Lsp.instFromJsonSaveOptions"],"Lean.Lsp.RpcReleaseParams":["Lean.Lsp.instFileSourceRpcReleaseParams","Lean.Lsp.instFromJsonRpcReleaseParams","Lean.Lsp.instToJsonRpcReleaseParams"],"Lean.Lsp.RpcRef":["Lean.Lsp.instBEqRpcRef","Lean.Lsp.instHashableRpcRef","Lean.Lsp.instFromJsonRpcRef","Lean.Lsp.instToJsonRpcRef","Lean.Lsp.instToStringRpcRef","Lean.Widget.instRpcEncodingWithRpcRefInfoWithCtxRpcRef","Lean.Widget.instRpcEncodingWithRpcRefMessageDataRpcRef"],"Lean.Lsp.RpcKeepAliveParams":["Lean.Lsp.instFileSourceRpcKeepAliveParams","Lean.Lsp.instFromJsonRpcKeepAliveParams","Lean.Lsp.instToJsonRpcKeepAliveParams"],"Lean.Lsp.RpcConnected":["Lean.Lsp.instFromJsonRpcConnected","Lean.Lsp.instToJsonRpcConnected"],"Lean.Lsp.RpcConnectParams":["Lean.Lsp.instFileSourceRpcConnectParams","Lean.Lsp.instFromJsonRpcConnectParams","Lean.Lsp.instToJsonRpcConnectParams"],"Lean.Lsp.RpcCallParams":["Lean.Lsp.instFileSourceRpcCallParams","Lean.Lsp.instFromJsonRpcCallParams","Lean.Lsp.instToJsonRpcCallParams"],"Lean.Lsp.RegistrationParams":["Lean.Lsp.instToJsonRegistrationParams","Lean.Lsp.instFromJsonRegistrationParams"],"Lean.Lsp.Registration":["Lean.Lsp.instToJsonRegistration","Lean.Lsp.instFromJsonRegistration"],"Lean.Lsp.ReferenceParams":["Lean.Lsp.instFileSourceReferenceParams","Lean.Lsp.instFromJsonReferenceParams","Lean.Lsp.instToJsonReferenceParams"],"Lean.Lsp.ReferenceContext":["Lean.Lsp.instFromJsonReferenceContext","Lean.Lsp.instToJsonReferenceContext"],"Lean.Lsp.RefInfo":["Lean.Server.RefInfo.instCoeRefInfoRefInfo","Lean.Lsp.instToJsonRefInfo","Lean.Lsp.instFromJsonRefInfo"],"Lean.Lsp.RefIdent":["Lean.Lsp.instBEqRefIdent","Lean.Lsp.instHashableRefIdent","Lean.Lsp.instInhabitedRefIdent"],"Lean.Lsp.Range":["Lean.Lsp.instInhabitedRange","Lean.Lsp.instBEqRange","Lean.Lsp.instHashableRange","Lean.Lsp.instToJsonRange","Lean.Lsp.instFromJsonRange","Lean.Lsp.instOrdRange","Lean.Lsp.instLTRange","Lean.Lsp.instLERange"],"Lean.Lsp.PublishDiagnosticsParams":["Lean.Lsp.instInhabitedPublishDiagnosticsParams","Lean.Lsp.instBEqPublishDiagnosticsParams","Lean.Lsp.instToJsonPublishDiagnosticsParams","Lean.Lsp.instFromJsonPublishDiagnosticsParams"],"Lean.Lsp.ProgressParams":["Lean.Lsp.instToJsonProgressParams"],"Lean.Lsp.Position":["Lean.Lsp.instInhabitedPosition","Lean.Lsp.instBEqPosition","Lean.Lsp.instOrdPosition","Lean.Lsp.instHashablePosition","Lean.Lsp.instToJsonPosition","Lean.Lsp.instFromJsonPosition","Lean.Lsp.instToStringPosition","Lean.Lsp.instLTPosition","Lean.Lsp.instLEPosition"],"Lean.Lsp.PlainTermGoalParams":["Lean.Lsp.instFileSourcePlainTermGoalParams","Lean.Lsp.instFromJsonPlainTermGoalParams","Lean.Lsp.instToJsonPlainTermGoalParams"],"Lean.Lsp.PlainTermGoal":["Lean.Lsp.instFromJsonPlainTermGoal","Lean.Lsp.instToJsonPlainTermGoal"],"Lean.Lsp.PlainGoalParams":["Lean.Lsp.instFileSourcePlainGoalParams","Lean.Lsp.instFromJsonPlainGoalParams","Lean.Lsp.instToJsonPlainGoalParams"],"Lean.Lsp.PlainGoal":["Lean.Lsp.instFromJsonPlainGoal","Lean.Lsp.instToJsonPlainGoal"],"Lean.Lsp.ModuleRefs":["Lean.Server.ModuleRefs.instCoeModuleRefsModuleRefs","Lean.Lsp.instToJsonModuleRefs","Lean.Lsp.instFromJsonModuleRefs"],"Lean.Lsp.MarkupKind":["Lean.Lsp.instFromJsonMarkupKind","Lean.Lsp.instToJsonMarkupKind"],"Lean.Lsp.MarkupContent":["Lean.Lsp.instToJsonMarkupContent","Lean.Lsp.instFromJsonMarkupContent"],"Lean.Lsp.LocationLink":["Lean.Lsp.instToJsonLocationLink","Lean.Lsp.instFromJsonLocationLink"],"Lean.Lsp.Location":["Lean.Lsp.instFileSourceLocation","Lean.Lsp.instInhabitedLocation","Lean.Lsp.instBEqLocation","Lean.Lsp.instToJsonLocation","Lean.Lsp.instFromJsonLocation"],"Lean.Lsp.LineRange":["Lean.Lsp.instInhabitedLineRange","Lean.Lsp.instReprLineRange","Lean.Lsp.instFromJsonLineRange","Lean.Lsp.instToJsonLineRange"],"Lean.Lsp.LeanIleanInfoParams":["Lean.Lsp.instFromJsonLeanIleanInfoParams","Lean.Lsp.instToJsonLeanIleanInfoParams"],"Lean.Lsp.LeanFileProgressProcessingInfo":["Lean.Lsp.instFromJsonLeanFileProgressProcessingInfo","Lean.Lsp.instToJsonLeanFileProgressProcessingInfo"],"Lean.Lsp.LeanFileProgressParams":["Lean.Lsp.instFromJsonLeanFileProgressParams","Lean.Lsp.instToJsonLeanFileProgressParams"],"Lean.Lsp.LeanFileProgressKind":["Lean.Lsp.instInhabitedLeanFileProgressKind","Lean.Lsp.instBEqLeanFileProgressKind","Lean.Lsp.instFromJsonLeanFileProgressKind","Lean.Lsp.instToJsonLeanFileProgressKind"],"Lean.Lsp.InsertReplaceEdit":["Lean.Lsp.instFromJsonInsertReplaceEdit","Lean.Lsp.instToJsonInsertReplaceEdit"],"Lean.Lsp.InitializedParams":["Lean.Lsp.instFromJsonInitializedParams","Lean.Lsp.instToJsonInitializedParams"],"Lean.Lsp.InitializeResult":["Lean.Lsp.instToJsonInitializeResult","Lean.Lsp.instFromJsonInitializeResult"],"Lean.Lsp.InitializeParams":["Lean.Lsp.instToJsonInitializeParams","Lean.Lsp.instFromJsonInitializeParams"],"Lean.Lsp.InitializationOptions":["Lean.Lsp.instToJsonInitializationOptions","Lean.Lsp.instFromJsonInitializationOptions"],"Lean.Lsp.HoverParams":["Lean.Lsp.instFileSourceHoverParams","Lean.Lsp.instFromJsonHoverParams","Lean.Lsp.instToJsonHoverParams"],"Lean.Lsp.Hover":["Lean.Lsp.instToJsonHover","Lean.Lsp.instFromJsonHover"],"Lean.Lsp.FoldingRangeParams":["Lean.Lsp.instFileSourceFoldingRangeParams","Lean.Lsp.instFromJsonFoldingRangeParams","Lean.Lsp.instToJsonFoldingRangeParams"],"Lean.Lsp.FoldingRangeKind":["Lean.Lsp.instToJsonFoldingRangeKind"],"Lean.Lsp.FoldingRange":["Lean.Lsp.instToJsonFoldingRange"],"Lean.Lsp.FileSystemWatcher":["Lean.Lsp.instFromJsonFileSystemWatcher","Lean.Lsp.instToJsonFileSystemWatcher"],"Lean.Lsp.FileEvent":["Lean.Lsp.instFromJsonFileEvent","Lean.Lsp.instToJsonFileEvent"],"Lean.Lsp.FileChangeType":["Lean.Lsp.instFromJsonFileChangeType","Lean.Lsp.instToJsonFileChangeType"],"Lean.Lsp.DocumentSymbolResult":["Lean.Lsp.instToJsonDocumentSymbolResult"],"Lean.Lsp.DocumentSymbolParams":["Lean.Lsp.instFileSourceDocumentSymbolParams","Lean.Lsp.instFromJsonDocumentSymbolParams","Lean.Lsp.instToJsonDocumentSymbolParams"],"Lean.Lsp.DocumentSymbolAux":["Lean.Lsp.instToJsonDocumentSymbolAux"],"Lean.Lsp.DocumentSymbol":["Lean.Lsp.instToJsonDocumentSymbol"],"Lean.Lsp.DocumentSelector":["Lean.Lsp.instFromJsonDocumentSelector","Lean.Lsp.instToJsonDocumentSelector"],"Lean.Lsp.DocumentHighlightParams":["Lean.Lsp.instFileSourceDocumentHighlightParams","Lean.Lsp.instFromJsonDocumentHighlightParams","Lean.Lsp.instToJsonDocumentHighlightParams"],"Lean.Lsp.DocumentHighlightKind":["Lean.Lsp.instToJsonDocumentHighlightKind"],"Lean.Lsp.DocumentHighlight":["Lean.Lsp.instToJsonDocumentHighlight"],"Lean.Lsp.DocumentFilter":["Lean.Lsp.instToJsonDocumentFilter","Lean.Lsp.instFromJsonDocumentFilter"],"Lean.Lsp.DidOpenTextDocumentParams":["Lean.Lsp.instFileSourceDidOpenTextDocumentParams","Lean.Lsp.instToJsonDidOpenTextDocumentParams","Lean.Lsp.instFromJsonDidOpenTextDocumentParams"],"Lean.Lsp.DidCloseTextDocumentParams":["Lean.Lsp.instFileSourceDidCloseTextDocumentParams","Lean.Lsp.instToJsonDidCloseTextDocumentParams","Lean.Lsp.instFromJsonDidCloseTextDocumentParams"],"Lean.Lsp.DidChangeWatchedFilesRegistrationOptions":["Lean.Lsp.instFromJsonDidChangeWatchedFilesRegistrationOptions","Lean.Lsp.instToJsonDidChangeWatchedFilesRegistrationOptions"],"Lean.Lsp.DidChangeWatchedFilesParams":["Lean.Lsp.instFromJsonDidChangeWatchedFilesParams","Lean.Lsp.instToJsonDidChangeWatchedFilesParams"],"Lean.Lsp.DidChangeTextDocumentParams":["Lean.Lsp.instFileSourceDidChangeTextDocumentParams","Lean.Lsp.instToJsonDidChangeTextDocumentParams","Lean.Lsp.instFromJsonDidChangeTextDocumentParams"],"Lean.Lsp.DiagnosticWith":["Lean.Lsp.instRpcEncodingDiagnosticWith","Lean.Lsp.instInhabitedDiagnosticWith","Lean.Lsp.instBEqDiagnosticWith","Lean.Lsp.instToJsonDiagnosticWith","Lean.Lsp.instFromJsonDiagnosticWith"],"Lean.Lsp.DiagnosticTag":["Lean.Lsp.instInhabitedDiagnosticTag","Lean.Lsp.instBEqDiagnosticTag","Lean.Lsp.instFromJsonDiagnosticTag","Lean.Lsp.instToJsonDiagnosticTag"],"Lean.Lsp.DiagnosticSeverity":["Lean.Lsp.instInhabitedDiagnosticSeverity","Lean.Lsp.instBEqDiagnosticSeverity","Lean.Lsp.instFromJsonDiagnosticSeverity","Lean.Lsp.instToJsonDiagnosticSeverity"],"Lean.Lsp.DiagnosticRelatedInformation":["Lean.Lsp.instInhabitedDiagnosticRelatedInformation","Lean.Lsp.instBEqDiagnosticRelatedInformation","Lean.Lsp.instToJsonDiagnosticRelatedInformation","Lean.Lsp.instFromJsonDiagnosticRelatedInformation"],"Lean.Lsp.DiagnosticCode":["Lean.Lsp.instInhabitedDiagnosticCode","Lean.Lsp.instBEqDiagnosticCode","Lean.Lsp.instFromJsonDiagnosticCode","Lean.Lsp.instToJsonDiagnosticCode"],"Lean.Lsp.DefinitionParams":["Lean.Lsp.instFileSourceDefinitionParams","Lean.Lsp.instFromJsonDefinitionParams","Lean.Lsp.instToJsonDefinitionParams"],"Lean.Lsp.DeclarationParams":["Lean.Lsp.instFileSourceDeclarationParams","Lean.Lsp.instFromJsonDeclarationParams","Lean.Lsp.instToJsonDeclarationParams"],"Lean.Lsp.CompletionParams":["Lean.Lsp.instFileSourceCompletionParams","Lean.Lsp.instFromJsonCompletionParams","Lean.Lsp.instToJsonCompletionParams"],"Lean.Lsp.CompletionOptions":["Lean.Lsp.instFromJsonCompletionOptions","Lean.Lsp.instToJsonCompletionOptions"],"Lean.Lsp.CompletionList":["Lean.Lsp.instFromJsonCompletionList","Lean.Lsp.instToJsonCompletionList"],"Lean.Lsp.CompletionItemKind":["Lean.Lsp.instInhabitedCompletionItemKind","Lean.Lsp.instDecidableEqCompletionItemKind","Lean.Lsp.instReprCompletionItemKind","Lean.Lsp.instToJsonCompletionItemKind","Lean.Lsp.instFromJsonCompletionItemKind"],"Lean.Lsp.CompletionItemCapabilities":["Lean.Lsp.instToJsonCompletionItemCapabilities","Lean.Lsp.instFromJsonCompletionItemCapabilities"],"Lean.Lsp.CompletionItem":["Lean.Lsp.instFromJsonCompletionItem","Lean.Lsp.instToJsonCompletionItem","Lean.Lsp.instInhabitedCompletionItem"],"Lean.Lsp.CompletionClientCapabilities":["Lean.Lsp.instToJsonCompletionClientCapabilities","Lean.Lsp.instFromJsonCompletionClientCapabilities"],"Lean.Lsp.Command":["Lean.Lsp.instToJsonCommand","Lean.Lsp.instFromJsonCommand"],"Lean.Lsp.ClientInfo":["Lean.Lsp.instToJsonClientInfo","Lean.Lsp.instFromJsonClientInfo"],"Lean.Lsp.ClientCapabilities":["Lean.Lsp.instToJsonClientCapabilities","Lean.Lsp.instFromJsonClientCapabilities"],"Lean.Lsp.CancelParams":["Lean.Lsp.instInhabitedCancelParams","Lean.Lsp.instBEqCancelParams","Lean.Lsp.instToJsonCancelParams","Lean.Lsp.instFromJsonCancelParams"],"Lean.Loop":["Lean.instForInLoopUnit"],"Lean.LocalInstance":["Lean.instInhabitedLocalInstance","Lean.instBEqLocalInstance"],"Lean.LocalDecl":["Lean.instInhabitedLocalDecl","Lean.LocalContext.instForInLocalContextLocalDecl"],"Lean.LocalContext":["Lean.instInhabitedLocalContext","Lean.LocalContext.instForInLocalContextLocalDecl"],"Lean.Literal":["Lean.instInhabitedLiteral","Lean.instBEqLiteral","Lean.instReprLiteral","Lean.instHashableLiteral","Lean.instLTLiteral","Lean.instDecidableLtLiteralInstLTLiteral"],"Lean.LevelMVarId":["Lean.instInhabitedLevelMVarId","Lean.instBEqLevelMVarId","Lean.instHashableLevelMVarId","Lean.instReprLevelMVarId"],"Lean.Level.Data":["Lean.instInhabitedData","Lean.instBEqData","Lean.instReprData"],"Lean.Level":["Lean.instInhabitedLevel","Lean.instReprLevel","Lean.Level.instHashableLevel","Lean.Level.instBEqLevel","Lean.Level.instToFormatLevel","Lean.Level.instToStringLevel","Lean.Level.instQuoteLevelStrAnonymous","Lean.MessageData.instCoeLevelMessageData","Lean.instToMessageDataLevel"],"Lean.LeanPaths":["Lean.instToJsonLeanPaths","Lean.instFromJsonLeanPaths"],"Lean.LazyInitExtension":["Lean.instInhabitedLazyInitExtension"],"Lean.LOption":["Lean.instInhabitedLOption","Lean.instBEqLOption","Lean.instToStringLOption"],"Lean.LMVarIdSet":["Lean.instForInLMVarIdSetLMVarId"],"Lean.LMVarIdMap":["Lean.instEmptyCollectionLMVarIdMap","Lean.instForInLMVarIdMapProdLMVarId","Lean.instInhabitedLMVarIdMap"],"Lean.LMVarId":["Lean.instReprLMVarId","Lean.instForInLMVarIdSetLMVarId","Lean.instForInLMVarIdMapProdLMVarId"],"Lean.LBool":["Lean.instInhabitedLBool","Lean.instBEqLBool","Lean.LBool.instToStringLBool"],"Lean.KeyedDeclsAttribute.OLeanEntry":["Lean.KeyedDeclsAttribute.instInhabitedOLeanEntry"],"Lean.KeyedDeclsAttribute.ExtensionState":["Lean.KeyedDeclsAttribute.instInhabitedExtensionState"],"Lean.KeyedDeclsAttribute.Def":["Lean.KeyedDeclsAttribute.instInhabitedDef"],"Lean.KeyedDeclsAttribute":["Lean.instNonemptyKeyedDeclsAttribute"],"Lean.KVMap":["Lean.instToFormatKVMap","Lean.instInhabitedKVMap","Lean.instReprKVMap","Lean.KVMap.instToStringKVMap","Lean.KVMap.instForInKVMapProdNameDataValue","Lean.KVMap.instBEqKVMap"],"Lean.JsonRpc.instLTRequestID":["Lean.JsonRpc.instDecidableLtRequestIDInstLTRequestID"],"Lean.JsonRpc.ResponseError":["Lean.JsonRpc.instInhabitedResponseError","Lean.JsonRpc.instBEqResponseError","Lean.JsonRpc.instCoeResponseErrorMessage"],"Lean.JsonRpc.Response":["Lean.JsonRpc.instInhabitedResponse","Lean.JsonRpc.instBEqResponse","Lean.JsonRpc.instCoeResponseMessage"],"Lean.JsonRpc.RequestID":["Lean.JsonRpc.instInhabitedRequestID","Lean.JsonRpc.instBEqRequestID","Lean.JsonRpc.instOrdRequestID","Lean.JsonRpc.instOfNatRequestID","Lean.JsonRpc.instToStringRequestID","Lean.JsonRpc.instCoeStringRequestID","Lean.JsonRpc.instCoeJsonNumberRequestID","Lean.JsonRpc.instLTRequestID","Lean.JsonRpc.instDecidableLtRequestIDInstLTRequestID","Lean.JsonRpc.instFromJsonRequestID","Lean.JsonRpc.instToJsonRequestID"],"Lean.JsonRpc.Request":["Lean.JsonRpc.instInhabitedRequest","Lean.JsonRpc.instBEqRequest","Lean.JsonRpc.instCoeRequestMessage"],"Lean.JsonRpc.Notification":["Lean.JsonRpc.instInhabitedNotification","Lean.JsonRpc.instBEqNotification","Lean.JsonRpc.instCoeNotificationMessage","Lean.JsonRpc.instFromJsonNotification"],"Lean.JsonRpc.Message":["Lean.JsonRpc.instCoeRequestMessage","Lean.JsonRpc.instCoeNotificationMessage","Lean.JsonRpc.instCoeResponseMessage","Lean.JsonRpc.instCoeResponseErrorMessage","Lean.JsonRpc.instToJsonMessage","Lean.JsonRpc.instFromJsonMessage"],"Lean.JsonRpc.ErrorCode":["Lean.JsonRpc.instInhabitedErrorCode","Lean.JsonRpc.instBEqErrorCode","Lean.JsonRpc.instFromJsonErrorCode","Lean.JsonRpc.instToJsonErrorCode"],"Lean.JsonNumber.instLTJsonNumber":["Lean.JsonNumber.instDecidableLtJsonNumberInstLTJsonNumber"],"Lean.JsonNumber":["Lean.instDecidableEqJsonNumber","Lean.JsonNumber.instCoeNatJsonNumber","Lean.JsonNumber.instCoeIntJsonNumber","Lean.JsonNumber.instOfNatJsonNumber","Lean.JsonNumber.instLTJsonNumber","Lean.JsonNumber.instDecidableLtJsonNumberInstLTJsonNumber","Lean.JsonNumber.instOrdJsonNumber","Lean.JsonNumber.instToStringJsonNumber","Lean.JsonNumber.instReprJsonNumber","Lean.JsonRpc.instCoeJsonNumberRequestID","Lean.instFromJsonJsonNumber","Lean.instToJsonJsonNumber"],"Lean.Json.Structured":["Lean.Json.instCoeArrayJsonStructured","Lean.Json.instCoeRBNodeStringJsonStructured","Lean.Json.instFromJsonStructured","Lean.Json.instToJsonStructured"],"Lean.Json":["Lean.instInhabitedJson","Lean.Json.instBEqJson","Lean.Json.instCoeNatJson","Lean.Json.instCoeIntJson","Lean.Json.instCoeStringJson","Lean.Json.instCoeBoolJson","Lean.Json.instOfNatJson","Lean.Json.instCoeArrayJsonStructured","Lean.Json.instCoeRBNodeStringJsonStructured","Lean.Json.instToFormatJson","Lean.Json.instToStringJson","Lean.instFromJsonJson","Lean.instToJsonJson"],"Lean.InternalExceptionId":["Lean.instInhabitedInternalExceptionId","Lean.instBEqInternalExceptionId"],"Lean.InductiveVal":["Lean.instInhabitedInductiveVal"],"Lean.InductiveType":["Lean.instInhabitedInductiveType"],"Lean.ImportM":["Lean.instMonadLiftImportMAttrM"],"Lean.Import":["Lean.instToStringImport","Lean.Elab.instToJsonImport"],"Lean.IR.VarIdSet":["Lean.IR.instInhabitedVarIdSet"],"Lean.IR.VarId":["Lean.IR.instInhabitedVarId","Lean.IR.instBEqVarId","Lean.IR.instToStringVarId","Lean.IR.instToFormatVarId","Lean.IR.instHashableVarId","Lean.IR.instAlphaEqvVarId"],"Lean.IR.UnreachableBranches.Value":["Lean.IR.UnreachableBranches.instInhabitedValue","Lean.IR.UnreachableBranches.instReprValue","Lean.IR.UnreachableBranches.instToFormatValue","Lean.IR.UnreachableBranches.instToStringValue","Lean.IR.UnreachableBranches.Value.instBEqValue","Lean.IR.UnreachableBranches.Value.instToFormatValue","Lean.IR.UnreachableBranches.Value.instToStringValue"],"Lean.IR.Param":["Lean.IR.instToFormatParam","Lean.IR.instInhabitedParam"],"Lean.IR.NormalizeIds.N":["Lean.IR.NormalizeIds.instMonadLiftMN"],"Lean.IR.NormalizeIds.M":["Lean.IR.NormalizeIds.instMonadLiftMN"],"Lean.IR.MaxIndex.Collector":["Lean.IR.MaxIndex.instAndThenCollector"],"Lean.IR.LogEntry":["Lean.IR.LogEntry.instToFormatLogEntry"],"Lean.IR.LiveVarSet":["Lean.IR.instInhabitedLiveVarSet"],"Lean.IR.LitVal":["Lean.IR.instToFormatLitVal","Lean.IR.instBEqLitVal"],"Lean.IR.JoinPointId":["Lean.IR.instInhabitedJoinPointId","Lean.IR.instBEqJoinPointId","Lean.IR.instToStringJoinPointId","Lean.IR.instToFormatJoinPointId","Lean.IR.instHashableJoinPointId"],"Lean.IR.IndexSet":["Lean.IR.instInhabitedIndexSet"],"Lean.IR.IRType":["Lean.IR.instToFormatIRType","Lean.IR.instToStringIRType","Lean.IR.instInhabitedIRType","Lean.IR.IRType.instBEqIRType"],"Lean.IR.FreeIndices.Collector":["Lean.IR.FreeIndices.instAndThenCollector"],"Lean.IR.FnBody":["Lean.IR.instToFormatFnBody","Lean.IR.instToStringFnBody","Lean.IR.instInhabitedFnBody","Lean.IR.instBEqFnBody"],"Lean.IR.Expr":["Lean.IR.instToFormatExpr","Lean.IR.instToStringExpr","Lean.IR.instAlphaEqvExpr"],"Lean.IR.ExplicitRC.VarInfo":["Lean.IR.ExplicitRC.instInhabitedVarInfo"],"Lean.IR.Decl":["Lean.IR.instToFormatDecl","Lean.IR.instToStringDecl","Lean.IR.instInhabitedDecl"],"Lean.IR.CtorInfo":["Lean.IR.instToFormatCtorInfo","Lean.IR.instReprCtorInfo","Lean.IR.instBEqCtorInfo"],"Lean.IR.CtorFieldInfo":["Lean.IR.CtorFieldInfo.instToFormatCtorFieldInfo"],"Lean.IR.Borrow.ParamMap.Key":["Lean.IR.Borrow.ParamMap.instBEqKey","Lean.IR.Borrow.ParamMap.instHashableKey"],"Lean.IR.Borrow.ParamMap":["Lean.IR.Borrow.instToFormatParamMap","Lean.IR.Borrow.instToStringParamMap"],"Lean.IR.Borrow.OwnedSet.Key":["Lean.IR.Borrow.OwnedSet.instBEqKey","Lean.IR.Borrow.OwnedSet.instHashableKey"],"Lean.IR.Arg":["Lean.IR.instToFormatArg","Lean.IR.instInhabitedArg","Lean.IR.instBEqArg","Lean.IR.instAlphaEqvArg","Lean.IR.instAlphaEqvArrayArg"],"Lean.IR.Alt":["Lean.IR.instInhabitedAlt"],"Lean.HeadIndex":["Lean.instInhabitedHeadIndex","Lean.instBEqHeadIndex","Lean.instReprHeadIndex","Lean.HeadIndex.instHashableHeadIndex"],"Lean.FuzzyMatching.CharRole":["Lean.FuzzyMatching.instInhabitedCharRole"],"Lean.FileMap":["Lean.instInhabitedFileMap"],"Lean.FVarIdSet":["Lean.instForInFVarIdSetFVarId"],"Lean.FVarIdMap":["Lean.instEmptyCollectionFVarIdMap","Lean.instInhabitedFVarIdMap"],"Lean.FVarId":["Lean.instInhabitedFVarId","Lean.instBEqFVarId","Lean.instHashableFVarId","Lean.instReprFVarId","Lean.instForInFVarIdSetFVarId","Lean.Widget.instToJsonFVarId","Lean.Widget.instFromJsonFVarId"],"Lean.ExternAttrData":["Lean.instInhabitedExternAttrData"],"Lean.ExprStructEq.instHashableExprStructEq":["Lean.MetavarContext.MkBinding.instMonadHashMapCacheAdapterExprStructEqExprMInstBEqExprStructEqInstHashableExprStructEq"],"Lean.ExprStructEq.instBEqExprStructEq":["Lean.MetavarContext.MkBinding.instMonadHashMapCacheAdapterExprStructEqExprMInstBEqExprStructEqInstHashableExprStructEq"],"Lean.ExprStructEq":["Lean.MetavarContext.MkBinding.instMonadHashMapCacheAdapterExprStructEqExprMInstBEqExprStructEqInstHashableExprStructEq","Lean.MetavarContext.LevelMVarToParam.instMonadCacheExprStructEqExprM","Lean.instInhabitedExprStructEq","Lean.instCoeExprExprStructEq","Lean.ExprStructEq.instBEqExprStructEq","Lean.ExprStructEq.instHashableExprStructEq","Lean.ExprStructEq.instToStringExprStructEq"],"Lean.Expr.Data":["Lean.instInhabitedData_1","Lean.instBEqData_1","Lean.instReprData_1"],"Lean.Expr":["Lean.MetavarContext.MkBinding.instMonadHashMapCacheAdapterExprStructEqExprMInstBEqExprStructEqInstHashableExprStructEq","Lean.MetavarContext.LevelMVarToParam.instMonadCacheExprStructEqExprM","Lean.instInhabitedExpr","Lean.instReprExpr","Lean.Expr.instHashableExpr","Lean.Expr.instBEqExpr","Lean.Expr.instToStringExpr","Lean.instCoeExprExprStructEq","Lean.MessageData.instCoeExprMessageData","Lean.MessageData.instCoeOptionExprMessageData","Lean.MessageData.instCoeArrayExprMessageData","Lean.MessageData.instCoeListExprMessageData","Lean.instToMessageDataExpr","Lean.instToMessageDataOptionExpr","Lean.Meta.CheckAssignment.instMonadCacheExprCheckAssignmentM","Lean.Meta.CheckAssignment.instMonadCacheExprCheckAssignmentM"],"Lean.Exception":["Lean.instInhabitedException","Lean.Elab.Tactic.instMonadExceptExceptionTacticM","Lean.Server.instMonadLiftEIOExceptionRequestM"],"Lean.EnvironmentHeader":["Lean.instInhabitedEnvironmentHeader"],"Lean.Environment":["Lean.instInhabitedEnvironment"],"Lean.EnvExtensionState":["Lean.instInhabitedEnvExtensionState"],"Lean.EnvExtensionInterfaceUnsafe.Ext":["Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt"],"Lean.EnvExtensionInterface":["Lean.instInhabitedEnvExtensionInterface"],"Lean.EnvExtensionEntry":["Lean.instNonemptyEnvExtensionEntry"],"Lean.EnvExtension":["Lean.EnvExtension.instInhabitedEnvExtension"],"Lean.EnumAttributes":["Lean.instInhabitedEnumAttributes"],"Lean.Elab.WF.TerminationHintValue":["Lean.Elab.WF.instInhabitedTerminationHintValue"],"Lean.Elab.WF.TerminationHint":["Lean.Elab.WF.instInhabitedTerminationHint"],"Lean.Elab.WF.TerminationByElement":["Lean.Elab.WF.instInhabitedTerminationByElement"],"Lean.Elab.WF.TerminationBy":["Lean.Elab.WF.instInhabitedTerminationBy"],"Lean.Elab.WF.EqnInfo":["Lean.Elab.WF.instInhabitedEqnInfo"],"Lean.Elab.Visibility":["Lean.Elab.instInhabitedVisibility","Lean.Elab.instToStringVisibility"],"Lean.Elab.UserWidgetInfo":["Lean.Elab.instInhabitedUserWidgetInfo"],"Lean.Elab.TerminationHints":["Lean.Elab.instInhabitedTerminationHints"],"Lean.Elab.TermInfo":["Lean.Elab.instInhabitedTermInfo"],"Lean.Elab.Term.TermElabResult":["Lean.Elab.Term.instInhabitedTermElabResult"],"Lean.Elab.Term.TermElabM":["Lean.Elab.Term.instMonadTermElabM","Lean.Elab.Term.instInhabitedTermElabM","Lean.Elab.Term.instMonadBacktrackSavedStateTermElabM","Lean.Elab.Term.instAddErrorMessageContextTermElabM","Lean.Elab.Term.instMonadMacroAdapterTermElabM","Lean.Elab.Term.instMetaEvalTermElabM"],"Lean.Elab.Term.SyntheticMVarKind":["Lean.Elab.Term.instInhabitedSyntheticMVarKind","Lean.Elab.Term.instToStringSyntheticMVarKind"],"Lean.Elab.Term.SyntheticMVarDecl":["Lean.Elab.Term.instInhabitedSyntheticMVarDecl"],"Lean.Elab.Term.StructInst.Struct":["Lean.Elab.Term.StructInst.instInhabitedStruct","Lean.Elab.Term.StructInst.instToFormatStruct","Lean.Elab.Term.StructInst.instToStringStruct","Lean.Elab.Term.StructInst.instToFormatFieldStruct","Lean.Elab.Term.StructInst.instToStringFieldStruct"],"Lean.Elab.Term.StructInst.Source":["Lean.Elab.Term.StructInst.instInhabitedSource"],"Lean.Elab.Term.StructInst.FieldVal":["Lean.Elab.Term.StructInst.instInhabitedFieldVal"],"Lean.Elab.Term.StructInst.FieldLHS":["Lean.Elab.Term.StructInst.instInhabitedFieldLHS","Lean.Elab.Term.StructInst.instToFormatFieldLHS"],"Lean.Elab.Term.StructInst.Field":["Lean.Elab.Term.StructInst.instInhabitedField","Lean.Elab.Term.StructInst.instToFormatFieldStruct","Lean.Elab.Term.StructInst.instToStringFieldStruct"],"Lean.Elab.Term.StructInst.ExplicitSourceInfo":["Lean.Elab.Term.StructInst.instInhabitedExplicitSourceInfo"],"Lean.Elab.Term.State":["Lean.Elab.Term.instInhabitedState"],"Lean.Elab.Term.SavedState":["Lean.Elab.Term.instInhabitedSavedState","Lean.Elab.Term.instMonadBacktrackSavedStateTermElabM"],"Lean.Elab.Term.NamedArg":["Lean.Elab.Term.instToStringNamedArg","Lean.Elab.Term.instInhabitedNamedArg"],"Lean.Elab.Term.MatchAltView":["Lean.Elab.Term.instInhabitedMatchAltView"],"Lean.Elab.Term.MVarErrorKind":["Lean.Elab.Term.instInhabitedMVarErrorKind","Lean.Elab.Term.instToStringMVarErrorKind"],"Lean.Elab.Term.MVarErrorInfo":["Lean.Elab.Term.instInhabitedMVarErrorInfo"],"Lean.Elab.Term.LetRecToLift":["Lean.Elab.Term.instInhabitedLetRecToLift"],"Lean.Elab.Term.LVal":["Lean.Elab.Term.instToStringLVal"],"Lean.Elab.Term.Do.ToTerm.Kind":["Lean.Elab.Term.Do.ToTerm.instInhabitedKind"],"Lean.Elab.Term.Do.Code":["Lean.Elab.Term.Do.instInhabitedCode"],"Lean.Elab.Term.Do.Alt":["Lean.Elab.Term.Do.instInhabitedAlt"],"Lean.Elab.Term.Discr":["Lean.Elab.Term.instInhabitedDiscr"],"Lean.Elab.Term.CollectPatternVars.State":["Lean.Elab.Term.CollectPatternVars.instInhabitedState"],"Lean.Elab.Term.CollectPatternVars.Context":["Lean.Elab.Term.CollectPatternVars.instInhabitedContext"],"Lean.Elab.Term.Arg":["Lean.Elab.Term.instToStringArg","Lean.Elab.Term.instInhabitedArg"],"Lean.Elab.TacticInfo":["Lean.Elab.instInhabitedTacticInfo"],"Lean.Elab.Tactic.TacticM":["Lean.Elab.Tactic.instMonadTacticM","Lean.Elab.Tactic.instMonadBacktrackSavedStateTacticM","Lean.Elab.Tactic.instMonadExceptExceptionTacticM","Lean.Elab.Tactic.instOrElseTacticM","Lean.Elab.Tactic.instAlternativeTacticM"],"Lean.Elab.Tactic.State":["Lean.Elab.Tactic.instInhabitedState"],"Lean.Elab.Tactic.Snapshot":["Lean.Elab.Tactic.instInhabitedSnapshot"],"Lean.Elab.Tactic.SimpKind":["Lean.Elab.Tactic.instInhabitedSimpKind","Lean.Elab.Tactic.instBEqSimpKind"],"Lean.Elab.Tactic.SavedState":["Lean.Elab.Tactic.instMonadBacktrackSavedStateTacticM"],"Lean.Elab.Tactic.CacheKey":["Lean.Elab.Tactic.instBEqCacheKey","Lean.Elab.Tactic.instHashableCacheKey","Lean.Elab.Tactic.instInhabitedCacheKey"],"Lean.Elab.Tactic.Cache":["Lean.Elab.Tactic.instInhabitedCache"],"Lean.Elab.Structural.M":["Lean.Elab.Structural.instInhabitedM"],"Lean.Elab.Structural.EqnInfo":["Lean.Elab.Structural.instInhabitedEqnInfo"],"Lean.Elab.RecKind":["Lean.Elab.instInhabitedRecKind"],"Lean.Elab.PrintImportsResult":["Lean.Elab.instToJsonPrintImportsResult"],"Lean.Elab.PrintImportResult":["Lean.Elab.instToJsonPrintImportResult"],"Lean.Elab.PreDefinition":["Lean.Elab.instInhabitedPreDefinition"],"Lean.Elab.OpenDecl.M":["Lean.Elab.OpenDecl.instMonadResolveNameM"],"Lean.Elab.Modifiers":["Lean.Elab.instInhabitedModifiers","Lean.Elab.instToFormatModifiers","Lean.Elab.instToStringModifiers"],"Lean.Elab.MacroExpansionInfo":["Lean.Elab.instInhabitedMacroExpansionInfo"],"Lean.Elab.Level.LevelElabM":["Lean.Elab.Level.instMonadOptionsLevelElabM","Lean.Elab.Level.instMonadRefLevelElabM","Lean.Elab.Level.instAddMessageContextLevelElabM","Lean.Elab.Level.instMonadNameGeneratorLevelElabM"],"Lean.Elab.InfoTree":["Lean.Elab.instInhabitedInfoTree"],"Lean.Elab.InfoState":["Lean.Elab.instInhabitedInfoState"],"Lean.Elab.Info":["Lean.Elab.instInhabitedInfo"],"Lean.Elab.FieldInfo":["Lean.Elab.instInhabitedFieldInfo"],"Lean.Elab.Eqns.UnfoldEqnExtState":["Lean.Elab.Eqns.instInhabitedUnfoldEqnExtState"],"Lean.Elab.Eqns.EqnInfoCore":["Lean.Elab.Eqns.instInhabitedEqnInfoCore"],"Lean.Elab.ElabInfo":["Lean.Elab.instInhabitedElabInfo"],"Lean.Elab.DefViewElabHeader":["Lean.Elab.instInhabitedDefViewElabHeader"],"Lean.Elab.DefView":["Lean.Elab.instInhabitedDefView"],"Lean.Elab.DefKind":["Lean.Elab.instInhabitedDefKind","Lean.Elab.instBEqDefKind"],"Lean.Elab.CustomInfo":["Lean.Elab.instToFormatCustomInfo","Lean.Elab.instInhabitedCustomInfo"],"Lean.Elab.ContextInfo":["Lean.Elab.instInhabitedContextInfo"],"Lean.Elab.CommandInfo":["Lean.Elab.instInhabitedCommandInfo"],"Lean.Elab.Command.StructFieldKind":["Lean.Elab.Command.instInhabitedStructFieldKind","Lean.Elab.Command.instDecidableEqStructFieldKind","Lean.Elab.Command.instReprStructFieldKind"],"Lean.Elab.Command.StructFieldInfo":["Lean.Elab.Command.instInhabitedStructFieldInfo","Lean.Elab.Command.instReprStructFieldInfo"],"Lean.Elab.Command.State":["Lean.Elab.Command.instInhabitedState"],"Lean.Elab.Command.Scope":["Lean.Elab.Command.instInhabitedScope"],"Lean.Elab.Command.InductiveView":["Lean.Elab.Command.instInhabitedInductiveView"],"Lean.Elab.Command.ElabHeaderResult":["Lean.Elab.Command.instInhabitedElabHeaderResult"],"Lean.Elab.Command.CtorView":["Lean.Elab.Command.instInhabitedCtorView"],"Lean.Elab.Command.CommandElabM":["Lean.Elab.Command.instMonadCommandElabM","Lean.Elab.Command.instMonadInfoTreeCommandElabM","Lean.Elab.Command.instMonadEnvCommandElabM","Lean.Elab.Command.instMonadOptionsCommandElabM","Lean.Elab.Command.instAddMessageContextCommandElabM","Lean.Elab.Command.instMonadRefCommandElabM","Lean.Elab.Command.instMonadTraceCommandElabM","Lean.Elab.Command.instAddErrorMessageContextCommandElabM","Lean.Elab.Command.instMonadLiftTIOCommandElabM","Lean.Elab.Command.instMonadResolveNameCommandElabM","Lean.Elab.Command.instMonadLogCommandElabM","Lean.Elab.Command.instMonadQuotationCommandElabM","Lean.Elab.Command.instMonadMacroAdapterCommandElabM","Lean.Elab.Command.instMonadRecDepthCommandElabM","Lean.Elab.Command.instInhabitedCommandElabM"],"Lean.Elab.Attribute":["Lean.Elab.instInhabitedAttribute","Lean.Elab.instToFormatAttribute"],"Lean.DefinitionVal":["Lean.instInhabitedDefinitionVal"],"Lean.DefinitionSafety":["Lean.instInhabitedDefinitionSafety","Lean.instBEqDefinitionSafety","Lean.instReprDefinitionSafety"],"Lean.DeclarationRanges":["Lean.instInhabitedDeclarationRanges","Lean.instReprDeclarationRanges","Lean.instToExprDeclarationRanges"],"Lean.DeclarationRange":["Lean.instInhabitedDeclarationRange","Lean.instDecidableEqDeclarationRange","Lean.instReprDeclarationRange","Lean.instToExprDeclarationRange"],"Lean.Declaration":["Lean.instInhabitedDeclaration"],"Lean.DataValue":["Lean.instToFormatDataValue","Lean.instToFormatProdNameDataValue","Lean.instInhabitedDataValue","Lean.instBEqDataValue","Lean.instReprDataValue","Lean.instToStringDataValue","Lean.instCoeStringDataValue","Lean.instCoeBoolDataValue","Lean.instCoeNameDataValue","Lean.instCoeNatDataValue","Lean.instCoeIntDataValue","Lean.instCoeSyntaxDataValue","Lean.KVMap.instForInKVMapProdNameDataValue","Lean.KVMap.instValueDataValue","Lean.instForInOptionsProdNameDataValue"],"Lean.Data.AC.Expr":["Lean.Data.AC.instInhabitedExpr","Lean.Data.AC.instReprExpr","Lean.Data.AC.instBEqExpr"],"Lean.Data.AC.Context":["Lean.Data.AC.instContextInformationContext","Lean.Data.AC.instEvalInformationContext"],"Lean.Core.State":["Lean.Core.instInhabitedState"],"Lean.Core.CoreM":["Lean.Core.instMonadCoreM","Lean.Core.instInhabitedCoreM","Lean.Core.instMonadRefCoreM","Lean.Core.instMonadEnvCoreM","Lean.Core.instMonadOptionsCoreM","Lean.Core.instMonadWithOptionsCoreM","Lean.Core.instAddMessageContextCoreM","Lean.Core.instMonadNameGeneratorCoreM","Lean.Core.instMonadRecDepthCoreM","Lean.Core.instMonadResolveNameCoreM","Lean.Core.instMonadQuotationCoreM","Lean.Core.instMonadInfoTreeCoreM","Lean.Core.instMonadLiftIOCoreM","Lean.Core.instMonadTraceCoreM","Lean.Core.instMetaEvalCoreM","Lean.Core.instMonadLogCoreM"],"Lean.Core.Cache":["Lean.Core.instInhabitedCache"],"Lean.ConstructorVal":["Lean.instInhabitedConstructorVal"],"Lean.Constructor":["Lean.instInhabitedConstructor"],"Lean.ConstantVal":["Lean.instInhabitedConstantVal"],"Lean.ConstantInfo":["Lean.instInhabitedConstantInfo"],"Lean.Compiler.atMostOnce.Visitor":["Lean.Compiler.atMostOnce.instAndThenVisitor"],"Lean.Compiler.SpecializeAttributeKind":["Lean.Compiler.instInhabitedSpecializeAttributeKind","Lean.Compiler.instBEqSpecializeAttributeKind"],"Lean.Compiler.SpecState":["Lean.Compiler.instInhabitedSpecState"],"Lean.Compiler.SpecInfo":["Lean.Compiler.instInhabitedSpecInfo"],"Lean.Compiler.SpecEntry":["Lean.Compiler.instInhabitedSpecEntry"],"Lean.Compiler.SpecArgKind":["Lean.Compiler.instInhabitedSpecArgKind"],"Lean.Compiler.InlineAttributeKind":["Lean.Compiler.instInhabitedInlineAttributeKind","Lean.Compiler.instBEqInlineAttributeKind"],"Lean.Compiler.CompilerM":["Lean.Compiler.instAddMessageContextCompilerM","Lean.Compiler.instVisitLetCompilerM"],"Lean.Compiler.CSimp.State":["Lean.Compiler.CSimp.instInhabitedState"],"Lean.Compiler.CSimp.Entry":["Lean.Compiler.CSimp.instInhabitedEntry"],"Lean.CollectMVars.State":["Lean.CollectMVars.instInhabitedState"],"Lean.CollectLevelParams.State":["Lean.CollectLevelParams.instInhabitedState"],"Lean.CollectFVars.State":["Lean.CollectFVars.instInhabitedState"],"Lean.ClosedTermCache":["Lean.instInhabitedClosedTermCache"],"Lean.ClassState":["Lean.instInhabitedClassState"],"Lean.BinderInfo":["Lean.instInhabitedBinderInfo","Lean.instBEqBinderInfo","Lean.instReprBinderInfo","Lean.instHashableBinderInfo"],"Lean.AxiomVal":["Lean.instInhabitedAxiomVal"],"Lean.AttributeKind":["Lean.instBEqAttributeKind","Lean.instInhabitedAttributeKind","Lean.instToStringAttributeKind"],"Lean.AttributeImplCore":["Lean.instInhabitedAttributeImplCore"],"Lean.AttributeImpl":["Lean.instInhabitedAttributeImpl"],"Lean.AttributeExtensionState":["Lean.instInhabitedAttributeExtensionState"],"Lean.AttributeApplicationTime":["Lean.instInhabitedAttributeApplicationTime","Lean.instBEqAttributeApplicationTime"],"Lean.AttrM":["Lean.instMonadLiftImportMAttrM"],"LT.lt":["LSpec.Nat.Testable_forall_lt","Lean.JsonNumber.instDecidableLtJsonNumberInstLTJsonNumber","SlimCheck.LT.printableProp","Lean.Meta.Linear.instDecidableLtVarInstLTVar","Nat.decLt","Fin.decLt","instDecidableLtUInt32InstLTUInt32","instDecidableLtPosInstLTPos","instGetElemArrayNatLtInstLTNatSize","Lean.instDecidableLtLiteralInstLTLiteral","Nat.instTransNatLtInstLTNat","Nat.instTransNatLtInstLTNat","Nat.instTransNatLtInstLTNat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLeInstLENatLtInstLTNat","Nat.instTransNatLeInstLENatLtInstLTNat","Nat.instAntisymmNatNotLtInstLTNat","String.decLt","Subarray.instGetElemSubarrayNatLtInstLTNatSize","prodHasDecidableLt","ByteArray.instGetElemByteArrayNatUInt8LtInstLTNatSize","ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","Lean.JsonRpc.instDecidableLtRequestIDInstLTRequestID","Int.decLt","instDecidableRelLtLtOfOrd","Char.instDecidableLtCharInstLTChar","floatDecLt","Std.PersistentArray.instGetElemPersistentArrayNatLtInstLTNatSize","Lean.Rat.instDecidableLtRatInstLTRat","List.instGetElemListNatLtInstLTNatLength","List.hasDecidableLt","Lean.Name.instDecidableRelNameLtHasLtQuick","instDecidableLtUInt8InstLTUInt8","instDecidableLtUInt16InstLTUInt16","instDecidableLtUInt64InstLTUInt64","instDecidableLtUSizeInstLTUSize","Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize","Lean.Meta.DiscrTree.instDecidableLtKeyInstLTKey","FloatArray.instGetElemFloatArrayNatFloatLtInstLTNatSize","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize"],"LSpec.TestSeq":["LSpec.instAppendTestSeq"],"LSpec.ExpectationFailure":["LSpec.instTestableExpectationFailure"],"LE.le":["List.instAntisymmListLeInstLEList","SlimCheck.LE.printableProp","Nat.decLe","Fin.decLe","instDecidableLeUInt32InstLEUInt32","instDecidableLePosInstLEPos","Nat.instTransNatLeInstLENat","Nat.instTransNatLeInstLENat","Nat.instTransNatLeInstLENat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLeInstLENatLtInstLTNat","Nat.instAntisymmNatLeInstLENat","Int.decLe","instDecidableRelLeLeOfOrd","Char.instDecidableLeCharInstLEChar","floatDecLe","Lean.Rat.instDecidableLeRatInstLERat","List.instForAllListDecidableLeInstLEList","instDecidableLeUInt8InstLEUInt8","instDecidableLeUInt16InstLEUInt16","instDecidableLeUInt64InstLEUInt64","instDecidableLeUSizeInstLEUSize"],"Int.instLTInt":["Int.decLt"],"Int.instLEInt":["Int.decLe"],"Int.instDecidableEqInt":["Int.instLawfulBEqIntInstBEqInstDecidableEqInt"],"Int":["SlimCheck.instDefaultRangeInt","instToStringInt","SlimCheck.Int.shrinkable","SlimCheck.Int.sampleableExt","Lean.JsonNumber.instCoeIntJsonNumber","Lean.Json.instCoeIntJson","instReprInt","instReprAtomInt","instHashableInt","SlimCheck.Random.instRandomInt","instCoeNatInt","instOfNatInt","Int.instInhabitedInt","Int.instNegInt","Int.instAddInt","Int.instMulInt","Int.instSubInt","Int.instLEInt","Int.instLTInt","Int.instDecidableEqInt","Int.decLe","Int.decLt","Int.instOfNatInt","Int.instDivInt","Int.instModInt","Int.instHPowIntNat","Int.instHPowIntNat","Int.instLawfulBEqIntInstBEqInstDecidableEqInt","Int.instLawfulBEqIntInstBEqInstDecidableEqInt","instOrdInt","Lean.instFromJsonInt","Lean.instToJsonInt","Lean.instCoeIntDataValue","Lean.KVMap.instValueInt","Lean.Rat.instCoeIntRat"],"Iff":["SlimCheck.Checkable.iffCheckable","SlimCheck.Iff.printableProp","instDecidableIff"],"Id.instMonadId":["Id.instLawfulMonadIdInstMonadId"],"Id":["Id.instLawfulMonadIdInstMonadId","instToStringId","instReprId","Id.finally","Id.instMonadId","Id.instOfNatId"],"IO.RealWorld":["IO.instMonadLiftSTRealWorldBaseIO"],"IO.FS.SystemTime":["IO.FS.instReprSystemTime","IO.FS.instBEqSystemTime","IO.FS.instOrdSystemTime","IO.FS.instInhabitedSystemTime","IO.FS.instLTSystemTime","IO.FS.instLESystemTime"],"IO.FS.Stream":["IO.FS.instInhabitedStream"],"IO.FS.Metadata":["IO.FS.instReprMetadata"],"IO.FS.FileType":["IO.FS.instReprFileType","IO.FS.instBEqFileType"],"IO.FS.DirEntry":["IO.FS.instReprDirEntry"],"IO.Error":["Lean.Server.FileWorker.instCoeErrorElabTaskError","IO.instInhabitedError","instCoeStringError","IO.Error.instToStringError","LSpec.instMonadEmitIOInstMonadEIOError","LSpec.instMonadTestIOInstMonadEIOErrorUInt32"],"IO.AsyncList":["IO.AsyncList.instInhabitedAsyncList","IO.AsyncList.instAppendAsyncList","IO.AsyncList.instCoeListAsyncList"],"IO":["Lean.Elab.Command.instMonadLiftTIOCommandElabM","Lean.Server.FileWorker.instMonadLiftIOEIOElabTaskError","Lean.Core.instMonadLiftIOCoreM","Lean.Server.instMonadLiftIORequestM","Lean.instEvalIO","LSpec.instMonadEmitIOInstMonadEIOError","LSpec.instMonadTestIOInstMonadEIOErrorUInt32"],"HAdd.hAdd":["Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat","Fin.instInhabitedFinHAddNatInstHAddInstAddNatOfNat"],"ForInStep":["instInhabitedForInStep","instInhabitedForInStep_1"],"FloatArray.size":["FloatArray.instGetElemFloatArrayNatFloatLtInstLTNatSize","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize"],"FloatArray":["FloatArray.instInhabitedFloatArray","FloatArray.instEmptyCollectionFloatArray","FloatArray.instGetElemFloatArrayNatFloatLtInstLTNatSize","FloatArray.instGetElemFloatArrayNatFloatLtInstLTNatSize","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize","FloatArray.instForInFloatArrayFloat","instToStringFloatArray"],"Float":["instInhabitedFloat","instAddFloat","instSubFloat","instMulFloat","instDivFloat","instNegFloat","instLTFloat","instLEFloat","instBEqFloat","floatDecLt","floatDecLe","instToStringFloat","instReprFloat","instReprAtomFloat","instPowFloat","instPowFloat","instOfScientificFloat","instOfNatFloat","FloatArray.instGetElemFloatArrayNatFloatLtInstLTNatSize","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize","FloatArray.instForInFloatArrayFloat"],"Fin.val":["ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","instGetElemFinVal","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize"],"Fin":["SlimCheck.instBoundedFinSucc","instToStringFin","SlimCheck.Fin.shrinkable","SlimCheck.Fin.sampleableExt","instReprFin","instHashableFin","instDecidableEqFin","instLTFin","instLEFin","Fin.decLt","Fin.decLe","SlimCheck.Random.instRandomFinSucc","instOrdFin","Fin.coeToNat","Fin.instAddFin","Fin.instSubFin","Fin.instMulFin","Fin.instModFin","Fin.instDivFin","Fin.instAndOpFin","Fin.instOrOpFin","Fin.instXorFin","Fin.instShiftLeftFin","Fin.instShiftRightFin","Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat","Fin.instInhabitedFinHAddNatInstHAddInstAddNatOfNat","instGetElemFinVal","instGetElemFinVal"],"False":["SlimCheck.False.printableProp","instDecidableFalse"],"ExceptT.instMonadExceptT":["ExceptT.instLawfulMonadExceptTInstMonadExceptT"],"ExceptT":["ExceptT.instLawfulMonadExceptTInstMonadExceptT","Lean.instMonadBacktrackExceptT","Lean.instMonadCacheExceptT","ExceptT.instMonadLiftExceptExceptT","ExceptT.instMonadLiftExceptT","ExceptT.instMonadFunctorExceptT","ExceptT.instMonadExceptT","instMonadExceptOfExceptT","instMonadExceptOfExceptT_1","instInhabitedExceptT","instMonadControlExceptT","ExceptT.finally"],"ExceptCpsT.instMonadExceptCpsT":["ExceptCpsT.instLawfulMonadExceptCpsTInstMonadExceptCpsT"],"ExceptCpsT":["ExceptCpsT.instMonadExceptCpsT","ExceptCpsT.instLawfulMonadExceptCpsTInstMonadExceptCpsT","ExceptCpsT.instMonadExceptOfExceptCpsT","ExceptCpsT.instMonadLiftExceptCpsT","ExceptCpsT.instInhabitedExceptCpsT"],"Except":["instToStringExcept","instReprExcept","instInhabitedExcept","Except.instMonadExcept","ExceptT.instMonadLiftExceptExceptT","instMonadExceptOfExcept"],"Eq":["Lean.instDecidableEqDeclarationRange","Lean.Name.instDecidableEqName","Array.instDecidableEqArray","LSpec.instTestableEq","LSpec.instTestableEqBoolBeqTrue","LSpec.instTestableEqBoolBneTrue","Lean.SubExpr.Pos.instDecidableEqPos","Lean.instDecidableEqJsonNumber","SlimCheck.Eq.printableProp","SlimCheck.Bool.printableProp","Lean.Elab.Command.instDecidableEqStructFieldKind","System.instDecidableEqFilePath","Lean.Lsp.instDecidableEqCompletionItemKind","Lean.Meta.Linear.instDecidableEqVar","Lean.Meta.Linear.instDecidableEqPoly","Lean.Meta.Linear.instDecidableEqAssumptionId","Lean.Meta.Linear.instDecidableEqJustification","Lean.Meta.Linear.instDecidableEqCnstrKind","Lean.Meta.Linear.instDecidableEqCnstr","instDecidableEqBool","instTransEq","instTransEq_1","instDecidableEqNat","instDecidableEqFin","instDecidableEqUInt8","instDecidableEqUInt16","instDecidableEqUInt32","instDecidableEqUInt64","instDecidableEqUSize","instDecidableEqChar","instDecidableEqList","instDecidableEqString","instDecidableEqPos","String.instDecidableEqIterator","Subtype.instDecidableEqSubtype","instDecidableEqSum","instDecidableEqProd","instDecidableEqPUnit","instDecidableEqProp","instDecidableEqQuotient","Int.instDecidableEqInt","Lean.instDecidableEqPosition","Lean.instDecidableEqRat","instDecidableEqOption"],"EStateM.Result":["EStateM.instInhabitedResult","EStateM.instToStringResult","EStateM.instReprResult"],"EStateM":["EStateM.instInhabitedEStateM","EStateM.instMonadEStateM","EStateM.instOrElseEStateM","EStateM.instMonadStateOfEStateM","EStateM.instMonadExceptOfEStateM","EStateM.instMonadFinallyEStateM"],"EST":["instMonadEST","instMonadExceptOfEST","instInhabitedEST","instSTWorldEST","instMonadLiftSTEST"],"EIO":["Lean.Server.FileWorker.instMonadLiftIOEIOElabTaskError","Lean.Server.instMonadLiftEIOExceptionRequestM","instMonadEIO","instMonadFinallyEIO","instMonadExceptOfEIO","instOrElseEIO","instInhabitedEIO","instMonadLiftBaseIOEIO"],"Decidable":["instToStringDecidable","instReprDecidable","instSubsingletonDecidable"],"Char.instLTChar":["Char.instDecidableLtCharInstLTChar"],"Char.instLEChar":["Char.instDecidableLeCharInstLEChar"],"Char":["instToStringChar","SlimCheck.Char.shrinkable","SlimCheck.Char.sampleableDefault","instReprChar","instReprAtomChar","instDecidableEqChar","instHAddPosChar","instLawfulBEqCharInstBEqInstDecidableEqChar","instLawfulBEqCharInstBEqInstDecidableEqChar","instOrdChar","instStreamSubstringChar","Char.instLTChar","Char.instLEChar","Char.instDecidableLtCharInstLTChar","Char.instDecidableLeCharInstLEChar","Char.instInhabitedChar","Lean.instToExprChar"],"ByteArray.size":["ByteArray.instGetElemByteArrayNatUInt8LtInstLTNatSize","ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize"],"ByteArray":["ByteArray.instInhabitedByteArray","ByteArray.instEmptyCollectionByteArray","ByteArray.instGetElemByteArrayNatUInt8LtInstLTNatSize","ByteArray.instGetElemByteArrayNatUInt8LtInstLTNatSize","ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","ByteArray.instAppendByteArray","ByteArray.instForInByteArrayUInt8","instToStringByteArray"],"Bool.true":["LSpec.instTestableEqBoolBeqTrue","LSpec.instTestableEqBoolBneTrue","SlimCheck.Bool.printableProp"],"Bool":["Lean.Meta.AC.instContextInformationProdPreContextArrayBool","SlimCheck.instBoundedBool","instToStringBool","Lean.instQuoteBoolStrAnonymous","LSpec.instTestableEqBoolBeqTrue","LSpec.instTestableEqBoolBneTrue","SlimCheck.Bool.shrinkable","SlimCheck.Bool.sampleableExt","Lean.Json.instCoeBoolJson","SlimCheck.Bool.printableProp","instReprBool","instReprAtomBool","instHashableBool","instToBoolBool","instInhabitedBool","instDecidableEqBool","SlimCheck.Random.instRandomBool","instLawfulBEqBoolInstBEqInstDecidableEqBool","instLawfulBEqBoolInstBEqInstDecidableEqBool","instOrdBool","Lean.instFromJsonBool","Lean.instToJsonBool","Lean.instToExprBool","boolToProp","boolToSort","decPropToBool","Lean.instCoeBoolDataValue","Lean.KVMap.instValueBool"],"BaseIO":["instMonadBaseIO","instMonadFinallyBaseIO","instMonadLiftBaseIOEIO","IO.instMonadLiftSTRealWorldBaseIO"],"BEq.beq":["LSpec.instTestableEqBoolBeqTrue"],"Array.size":["instGetElemArrayNatLtInstLTNatSize","Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize"],"Array":["Lean.Meta.AC.instContextInformationProdPreContextArrayBool","Lean.Syntax.instCoeArraySyntaxSepArray","Lean.instQuoteArrayStrAnonymous","Lean.Syntax.instCoeTailSepArrayArraySyntax","Lean.Syntax.instCoeTSyntaxArrayArraySyntax","Lean.Server.instRpcEncodingArray","Lean.Server.instRpcEncodingArray","Array.instDecidableEqArray","Lean.Json.instCoeArrayJsonStructured","instHashableArray","instGetElemArrayNatLtInstLTNatSize","instGetElemArrayNatLtInstLTNatSize","Array.instCoeSubarrayArray","Lean.instFromJsonArray","Lean.instToJsonArray","instToStreamArraySubarray","Lean.MessageData.instCoeArrayExprMessageData","Lean.instToMessageDataArray","Lean.instToExprArray","Array.instMembershipArray","instToFormatArray","Lean.IR.instAlphaEqvArrayArg","Array.instEmptyCollectionArray","Array.instInhabitedArray","Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize","Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize","Array.instForInArray","Array.instReprArray","Array.instToStringArray","Array.instAppendArray","Array.instHAppendArrayList","Array.instHAppendArrayList","Array.instBEqArray"],"And":["SlimCheck.Checkable.andCheckable","SlimCheck.And.printableProp","instDecidableAnd"]},"instances":{"Xor":["Nat.instXorNat","Fin.instXorFin","instXorUInt8","instXorUInt16","instXorUInt32","instXorUInt64","instXorUSize"],"WellFoundedRelation":["instWellFoundedRelation","Prod.instWellFoundedRelationProd","PSigma.instWellFoundedRelationPSigma"],"Trans":["instTransEq","instTransEq_1","Nat.instTransNatLtInstLTNat","Nat.instTransNatLeInstLENat","Nat.instTransNatLtInstLTNatLeInstLENat","Nat.instTransNatLeInstLENatLtInstLTNat"],"ToString":["Lean.Elab.instToStringVisibility","Lean.Elab.instToStringModifiers","instToStringIdType","instToStringId","instToStringString","instToStringSubstring","instToStringIterator","instToStringBool","instToStringDecidable","instToStringList","instToStringPUnit","instToStringULift","instToStringUnit","instToStringNat","instToStringPos","instToStringInt","instToStringChar","instToStringFin","instToStringUInt8","instToStringUInt16","instToStringUInt32","instToStringUInt64","instToStringUSize","instToStringFormat","instToStringOption","instToStringSum","instToStringProd","instToStringSigma","instToStringSubtype","instToStringExcept","Lean.Name.instToStringName","Lean.Lsp.instToStringRpcRef","Lean.Syntax.instToStringSyntax","Lean.Syntax.instToStringTSyntax","Lean.SubExpr.Pos.instToStringPos","Lean.IR.Borrow.instToStringParamMap","Lean.Level.instToStringLevel","Lean.JsonNumber.instToStringJsonNumber","SlimCheck.TestResult.instToStringTestResult","Lean.instToStringNamePart","Lean.MetavarContext.MkBinding.instToStringException","Lean.Elab.Term.instToStringSyntheticMVarKind","Lean.Elab.Term.instToStringMVarErrorKind","Lean.Elab.Term.instToStringLVal","Lean.Elab.Term.instToStringArg","Lean.Elab.Term.instToStringNamedArg","Lean.instToStringImport","System.instToStringFilePath","Lean.Expr.instToStringExpr","Lean.ExprStructEq.instToStringExprStructEq","instToStringSubarray","Lean.IR.instToStringExpr","Lean.IR.instToStringIRType","Lean.IR.instToStringFnBody","Lean.IR.instToStringDecl","instToStringByteArray","EStateM.instToStringResult","Lean.Elab.Term.StructInst.instToStringStruct","Lean.Elab.Term.StructInst.instToStringFieldStruct","Lean.JsonRpc.instToStringRequestID","Lean.IR.UnreachableBranches.instToStringValue","Lean.IR.UnreachableBranches.Value.instToStringValue","Lean.OpenDecl.instToStringOpenDecl","Lean.Json.instToStringJson","IO.Error.instToStringError","Lean.LBool.instToStringLBool","Lean.Parser.Error.instToStringError","Lean.Parser.FirstTokens.instToStringFirstTokens","Lean.instToStringAttributeKind","Lean.instToStringLOption","Std.PersistentHashMap.instToStringStats","Lean.Parser.Trie.instToStringTrie","Lean.Position.instToStringPosition","Lean.instToStringDataValue","Lean.KVMap.instToStringKVMap","instToStringFloat","Std.PersistentArray.instToStringStats","Lean.instToStringRat","Lean.instToStringOptions","Lean.Meta.instToStringRecursorUnivLevelPos","Lean.Meta.RecursorInfo.instToStringRecursorInfo","Lean.Lsp.instToStringPosition","Lean.Lsp.instToStringTextDocumentPositionParams","Lean.Xml.instToStringAttributes","Lean.Xml.instToStringElement","Lean.Xml.instToStringContent","Lean.IR.instToStringVarId","Lean.IR.instToStringJoinPointId","Array.instToStringArray","instToStringFloatArray"],"ToStream":["instToStreamList","instToStreamArraySubarray","instToStreamSubarray","instToStreamStringSubstring","instToStreamRange"],"ToBool":["instToBoolBool","instToBoolOption"],"Subsingleton":["instSubsingleton","instSubsingletonDecidable","instSubsingletonPUnit","instSubsingletonForAll","instSubsingletonSquash","instSubsingletonStateM"],"Sub":["instSubNat","Int.instSubInt","instSubFloat","Lean.Rat.instSubRat","Fin.instSubFin","instSubUInt8","instSubUInt16","instSubUInt32","instSubUInt64","instSubUSize"],"Stream":["instStreamProdProd","instStreamList","instStreamSubarray","instStreamRangeNat","instStreamSubstringChar"],"Std.ToFormat":["Std.instToFormatFormat","Std.instToFormatString","Lean.Elab.instToFormatModifiers","Lean.IR.LogEntry.instToFormatLogEntry","Lean.instToFormatName","Lean.instToFormatDataValue","Lean.instToFormatProdNameDataValue","Lean.instToFormatKVMap","Lean.Meta.instToFormatSimpTheorem","Lean.Syntax.instToFormatSyntax","Lean.Syntax.instToFormatTSyntax","Lean.IR.Borrow.instToFormatParamMap","Lean.Level.instToFormatLevel","Lean.Meta.instToFormatUnificationHints","Lean.IR.CtorFieldInfo.instToFormatCtorFieldInfo","Lean.IR.instToFormatArg","Lean.IR.instToFormatLitVal","Lean.IR.instToFormatCtorInfo","Lean.IR.instToFormatExpr","Lean.IR.instToFormatIRType","Lean.IR.instToFormatParam","Lean.IR.instToFormatFnBody","Lean.IR.instToFormatDecl","Lean.Elab.Term.StructInst.instToFormatFieldLHS","Lean.Elab.Term.StructInst.instToFormatStruct","Lean.Elab.Term.StructInst.instToFormatFieldStruct","Lean.IR.UnreachableBranches.instToFormatValue","Lean.IR.UnreachableBranches.Value.instToFormatValue","Lean.Json.instToFormatJson","Lean.Elab.instToFormatAttribute","Lean.Position.instToFormatPosition","instToFormat","instToFormatList","instToFormatArray","instToFormatOption","instToFormatProd","instToFormatPos","Lean.Elab.instToFormatCustomInfo","Lean.Meta.instToFormatInstanceEntry","Lean.IR.instToFormatVarId","Lean.IR.instToFormatJoinPointId","Lean.Meta.DiscrTree.instToFormatKey","Lean.Meta.DiscrTree.instToFormatTrie","Lean.Meta.DiscrTree.instToFormatDiscrTree"],"Std.MonadShareCommon":["Std.ShareCommonT.monadShareCommon","Std.PShareCommonT.monadShareCommon"],"Std.Format.MonadPrettyFormat":["Std.Format.instMonadPrettyFormatStateMState","Lean.Widget.TaggedText.instMonadPrettyFormatStateMTaggedState"],"SlimCheck.Shrinkable":["SlimCheck.Nat.shrinkable","SlimCheck.Fin.shrinkable","SlimCheck.Int.shrinkable","SlimCheck.Bool.shrinkable","SlimCheck.Char.shrinkable","SlimCheck.Prod.shrinkable","SlimCheck.NoShrink.shrinkable"],"SlimCheck.SampleableExt":["SlimCheck.Nat.sampleableExt","SlimCheck.Fin.sampleableExt","SlimCheck.Int.sampleableExt","SlimCheck.Bool.sampleableExt","SlimCheck.Char.sampleableDefault","SlimCheck.Prod.sampleableExt","SlimCheck.Prop.sampleableExt","SlimCheck.NoShrink.sampleableExt"],"SlimCheck.Random":["SlimCheck.Random.instRandomBool","SlimCheck.Random.instRandomNat","SlimCheck.Random.instRandomFinSucc","SlimCheck.Random.instRandomInt"],"SlimCheck.PrintableProp":["SlimCheck.instPrintableProp","SlimCheck.Eq.printableProp","SlimCheck.Ne.printableProp","SlimCheck.LE.printableProp","SlimCheck.LT.printableProp","SlimCheck.And.printableProp","SlimCheck.Or.printableProp","SlimCheck.Iff.printableProp","SlimCheck.Imp.printableProp","SlimCheck.Not.printableProp","SlimCheck.True.printableProp","SlimCheck.False.printableProp","SlimCheck.Bool.printableProp"],"SlimCheck.DefaultRange":["SlimCheck.instDefaultRange","SlimCheck.instDefaultRangeNat","SlimCheck.instDefaultRangeInt"],"SlimCheck.Checkable":["SlimCheck.Checkable.andCheckable","SlimCheck.Checkable.orCheckable","SlimCheck.Checkable.iffCheckable","SlimCheck.Checkable.decGuardCheckable","SlimCheck.Checkable.forallTypesCheckable","SlimCheck.Checkable.varCheckable","SlimCheck.Checkable.propVarCheckable","SlimCheck.Checkable.unusedVarCheckable","SlimCheck.Checkable.decidableCheckable"],"SlimCheck.Bounded":["SlimCheck.instBoundedBool","SlimCheck.instBoundedFinSucc"],"SizeOf":["String.instSizeOfIterator","instSizeOf","instSizeOfNat","instSizeOfForAllUnit","Lean.instSizeOfName"],"ShiftRight":["Nat.instShiftRightNat","Fin.instShiftRightFin","instShiftRightUInt8","instShiftRightUInt16","instShiftRightUInt32","instShiftRightUInt64","instShiftRightUSize"],"ShiftLeft":["Nat.instShiftLeftNat","Fin.instShiftLeftFin","instShiftLeftUInt8","instShiftLeftUInt16","instShiftLeftUInt32","instShiftLeftUInt64","instShiftLeftUSize"],"STWorld":["instSTWorld","instSTWorldEST"],"ReprTuple":["instReprTuple","instReprTupleProd"],"ReprAtom":["instReprAtomBool","instReprAtomNat","instReprAtomInt","instReprAtomChar","instReprAtomString","instReprAtomUInt8","instReprAtomUInt16","instReprAtomUInt32","instReprAtomUInt64","instReprAtomUSize","instReprAtomFloat"],"Repr":["Lean.instReprDeclarationRange","Lean.instReprDeclarationRanges","instReprExcept","Lean.Name.instReprName","Lean.Name.instReprSyntax","Lean.Meta.instReprTransparencyMode","Lean.Meta.instReprEtaStructMode","Lean.Meta.DSimp.instReprConfig","Lean.Meta.Simp.instReprConfig","instReprStdGen","Lean.Lsp.instReprLineRange","Lean.instReprData","Lean.instReprLevelMVarId","Lean.instReprLMVarId","Lean.instReprLevel","SlimCheck.NoShrink.repr","Lean.JsonNumber.instReprJsonNumber","Lean.instReprMetavarKind","Lean.Meta.Match.instReprMatchEqns","Lean.Meta.instReprElimAltInfo","Lean.Meta.instReprElimInfo","Lean.Meta.instReprCustomEliminator","Lean.Meta.instReprCustomEliminators","instReprIdType","instReprId","instReprBool","instReprDecidable","instReprPUnit","instReprULift","instReprUnit","instReprOption","instReprSum","instReprProd","instReprSigma","instReprSubtype","instReprNat","instReprInt","instReprChar","instReprString","instReprPos","instReprSubstring","instReprIterator","instReprFin","instReprUInt8","instReprUInt16","instReprUInt32","instReprUInt64","instReprUSize","instReprList","instReprList_1","instReprSourceInfo","Lean.instReprHeadIndex","Lean.Meta.Linear.Nat.instReprExpr","Lean.Meta.Linear.Nat.instReprExprCnstr","Lean.Meta.Linear.Nat.instReprPolyCnstr","Lean.Elab.Command.instReprStructFieldKind","Lean.Elab.Command.instReprStructFieldInfo","System.instReprFilePath","Lean.Lsp.instReprCompletionItemKind","Lean.Meta.Linear.instReprVar","Lean.Meta.Linear.instReprPoly","Lean.Meta.Linear.instReprAssumptionId","Lean.Meta.Linear.instReprJustification","Lean.Meta.Linear.instReprCnstrKind","Lean.Meta.Linear.instReprCnstr","Lean.instReprLiteral","Lean.instReprBinderInfo","Lean.instReprData_1","Lean.instReprFVarId","Lean.instReprMVarId","Lean.instReprMVarId_1","Lean.instReprExpr","Std.RBTree.instReprRBTree","Lean.instReprDefinitionSafety","instReprSubarray","Lean.Data.AC.instReprExpr","EStateM.instReprResult","Lean.Widget.instReprTaggedText","Lean.IR.UnreachableBranches.instReprValue","Lean.Parser.instReprLeadingIdentBehavior","Lean.instReprSMap","Lean.Parsec.instReprParseResult","Lean.Meta.instReprSimpCongrTheorem","Lean.Meta.instReprSimpCongrTheorems","IO.FS.instReprDirEntry","IO.FS.instReprFileType","IO.FS.instReprSystemTime","IO.FS.instReprMetadata","Lean.Meta.DiscrTree.instReprKey","Std.RBMap.instReprRBMap","instReprSSet","Lean.instReprStructureFieldInfo","Lean.instReprPosition","Lean.instReprDataValue","Lean.instReprKVMap","instReprFloat","Lean.instReprRat","Lean.IR.instReprCtorInfo","String.instReprRange","Lean.instReprReducibilityStatus","Array.instReprArray"],"RandomGen":["instRandomGenStdGen"],"Pow":["instPowNat","instPowFloat"],"Ord":["Lean.SubExpr.Pos.instOrdPos","Lean.JsonNumber.instOrdJsonNumber","Lean.Meta.Linear.instOrdVar","Lean.JsonRpc.instOrdRequestID","instOrdNat","instOrdInt","instOrdBool","instOrdString","instOrdFin","instOrdUInt8","instOrdUInt16","instOrdUInt32","instOrdUInt64","instOrdUSize","instOrdChar","IO.FS.instOrdSystemTime","Lean.Lsp.instOrdPosition","Lean.Lsp.instOrdRange"],"OrOp":["Nat.instOrOpNat","Fin.instOrOpFin","instOrOpUInt8","instOrOpUInt16","instOrOpUInt32","instOrOpUInt64","instOrOpUSize"],"OrElse":["Lean.PrettyPrinter.instOrElseParenthesizerM","Lean.PrettyPrinter.instOrElseFormatterM","Lean.PrettyPrinter.Delaborator.instOrElseDelabM","instOrElse","MonadExcept.instOrElse","EStateM.instOrElseEStateM","Lean.Elab.Tactic.instOrElseTacticM","Lean.Parser.instOrElseParser","instOrElseEIO","Lean.Meta.instOrElseMetaM","Option.instOrElseOption"],"OfScientific":["instOfScientificFloat"],"OfNat":["Lean.JsonNumber.instOfNatJsonNumber","Lean.Json.instOfNatJson","instOfNatNat","String.instOfNatPos","Lean.JsonRpc.instOfNatRequestID","instOfNatInt","Int.instOfNatInt","Id.instOfNatId","Lean.Rat.instOfNatRat","instOfNatFloat","Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat","instOfNatUInt8","instOfNatUInt16","instOfNatUInt32","instOfNatUInt64","instOfNatUSize"],"Nonempty":["Lean.Server.instNonemptyRpcEncoding","ST.instNonemptyRef","Lean.instNonemptyKeyedDeclsAttribute","Lean.instNonemptyEnvExtensionEntry","instNonempty","instNonemptyForAll","instNonemptyForAll_1","Lean.Macro.instNonemptyMethodsRef"],"Neg":["Int.instNegInt","instNegFloat","Lean.Rat.instNegRat"],"Mul":["instMulNat","Int.instMulInt","instMulFloat","Lean.Rat.instMulRat","Fin.instMulFin","instMulUInt8","instMulUInt16","instMulUInt32","instMulUInt64","instMulUSize"],"MonadWithReaderOf":["Lean.PrettyPrinter.Delaborator.instMonadWithReaderOfSubExprDelabM","instMonadWithReaderOf","instMonadWithReaderOfReaderT","Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instMonadWithReaderOfSubExprAnalyzeM"],"MonadWithReader":["instMonadWithReader"],"MonadStateOf":["Lean.PrettyPrinter.Delaborator.instMonadStateOfHoleIteratorDelabM","StateRefT'.instMonadStateOfStateRefT'","instMonadStateOf","EStateM.instMonadStateOfEStateM","StateCpsT.instMonadStateOfStateCpsT","instMonadStateOfStateT"],"MonadState":["instMonadState"],"MonadReaderOf":["Lean.PrettyPrinter.Delaborator.instMonadReaderOfSubExprDelabM","instMonadReaderOf","instMonadReaderOfReaderT","Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instMonadReaderOfSubExprAnalyzeM"],"MonadReader":["instMonadReader"],"MonadLiftT":["Lean.Elab.Command.instMonadLiftTIOCommandElabM","instMonadLiftT","instMonadLiftT_1"],"MonadLift":["instMonadLiftSTEST","Lean.Server.FileWorker.instMonadLiftIOEIOElabTaskError","Lean.MonadCacheT.instMonadLiftMonadCacheT","Lean.MonadStateCacheT.instMonadLiftMonadStateCacheT","Lean.Core.instMonadLiftIOCoreM","StateRefT'.instMonadLiftStateRefT'","ReaderT.instMonadLiftReaderT","ExceptT.instMonadLiftExceptExceptT","ExceptT.instMonadLiftExceptT","StateCpsT.instMonadLiftStateCpsT","StateT.instMonadLiftStateT","Lean.Server.instMonadLiftIORequestM","Lean.Server.instMonadLiftEIOExceptionRequestM","instMonadLiftBaseIOEIO","IO.instMonadLiftSTRealWorldBaseIO","Lean.instMonadLiftImportMAttrM","Lean.IR.NormalizeIds.instMonadLiftMN","OptionT.instMonadLiftOptionT","ExceptCpsT.instMonadLiftExceptCpsT"],"MonadFunctorT":["instMonadFunctorT","monadFunctorRefl"],"MonadFunctor":["StateRefT'.instMonadFunctorStateRefT'","ReaderT.instMonadFunctorReaderT","ExceptT.instMonadFunctorExceptT","StateT.instMonadFunctorStateT","OptionT.instMonadFunctorOptionT"],"MonadFinally":["Lean.MonadCacheT.instMonadFinallyMonadCacheT","Lean.MonadStateCacheT.instMonadFinallyMonadStateCacheT","instMonadFinallyStateRefT'","EStateM.instMonadFinallyEStateM","Id.finally","ExceptT.finally","StateT.tryFinally","instMonadFinallyEIO","instMonadFinallyBaseIO","ReaderT.tryFinally"],"MonadExceptOf":["instMonadExceptOfEST","Lean.MonadCacheT.instMonadExceptOfMonadCacheT","Lean.MonadStateCacheT.instMonadExceptOfMonadStateCacheT","StateRefT'.instMonadExceptOfStateRefT'","ReaderT.instMonadExceptOfReaderT","EStateM.instMonadExceptOfEStateM","instMonadExceptOfExceptT","instMonadExceptOfExceptT_1","instMonadExceptOfExcept","StateT.instMonadExceptOfStateT","instMonadExceptOfEIO","instMonadExceptOfUnitOption","OptionT.instMonadExceptOfUnitOptionT","OptionT.instMonadExceptOfOptionT","ExceptCpsT.instMonadExceptOfExceptCpsT"],"MonadExcept":["instMonadExcept","Lean.Elab.Tactic.instMonadExceptExceptionTacticM"],"MonadControlT":["instMonadControlT","instMonadControlT_1"],"MonadControl":["Lean.MonadCacheT.instMonadControlMonadCacheT","Lean.MonadStateCacheT.instMonadControlMonadStateCacheT","instMonadControlStateRefT'","instMonadControlExceptT","StateT.monadControl","instMonadControlReaderT","instMonadControlOptionT"],"Monad":["Lean.Elab.Command.instMonadCommandElabM","Lean.Elab.Term.instMonadTermElabM","instMonadEST","instMonadST","Lean.MonadCacheT.instMonadMonadCacheT","Lean.MonadStateCacheT.instMonadMonadStateCacheT","Lean.Core.instMonadCoreM","StateRefT'.instMonadStateRefT'","ReaderT.instMonadReaderT","EStateM.instMonadEStateM","Lean.Elab.Tactic.instMonadTacticM","Except.instMonadExcept","ExceptT.instMonadExceptT","StateCpsT.instMonadStateCpsT","StateT.instMonadStateT","Lean.Parsec.instMonadParsec","instMonadEIO","instMonadBaseIO","Id.instMonadId","Lean.Meta.instMonadMetaM","instMonadOption","OptionT.instMonadOptionT","ExceptCpsT.instMonadExceptCpsT"],"Mod":["Int.instModInt","Fin.instModFin","instModUInt8","instModUInt16","instModUInt32","instModUInt64","instModUSize","Nat.instModNat"],"Membership":["Array.instMembershipArray","Std.instMembershipNatRange","List.instMembershipList"],"Lean.ToMessageData":["Lean.Meta.instToMessageDataSimpTheorem","Lean.instToMessageData","Lean.instToMessageDataExpr","Lean.instToMessageDataLevel","Lean.instToMessageDataName","Lean.instToMessageDataString","Lean.instToMessageDataSyntax","Lean.instToMessageDataTSyntax","Lean.instToMessageDataFormat","Lean.instToMessageDataMVarId","Lean.instToMessageDataMessageData","Lean.instToMessageDataList","Lean.instToMessageDataArray","Lean.instToMessageDataSubarray","Lean.instToMessageDataOption","Lean.instToMessageDataOptionExpr"],"Lean.ToJson":["Lean.Widget.instToJsonRpcEncodingPacket_1","Lean.Widget.instToJsonRpcEncodingPacket_2","Lean.Widget.instToJsonRpcEncodingPacket_3","Lean.Widget.instToJsonRpcEncodingPacket_4","Lean.Lsp.instToJsonTextDocumentSyncKind","Lean.Lsp.instToJsonDidOpenTextDocumentParams","Lean.Lsp.TextDocumentContentChangeEvent.hasToJson","Lean.Lsp.instToJsonDidChangeTextDocumentParams","Lean.Lsp.instToJsonSaveOptions","Lean.Lsp.instToJsonDidCloseTextDocumentParams","Lean.Lsp.instToJsonTextDocumentSyncOptions","Lean.Lsp.instToJsonWaitForDiagnosticsParams","Lean.Lsp.instToJsonWaitForDiagnostics","Lean.Lsp.instToJsonLeanFileProgressKind","Lean.Lsp.instToJsonLeanFileProgressProcessingInfo","Lean.Lsp.instToJsonLeanFileProgressParams","Lean.Lsp.instToJsonPlainGoalParams","Lean.Lsp.instToJsonPlainGoal","Lean.Lsp.instToJsonPlainTermGoalParams","Lean.Lsp.instToJsonPlainTermGoal","Lean.Lsp.instToJsonRpcRef","Lean.Lsp.instToJsonRpcConnectParams","Lean.Lsp.instToJsonRpcConnected","Lean.Lsp.instToJsonRpcCallParams","Lean.Lsp.instToJsonRpcReleaseParams","Lean.Lsp.instToJsonRpcKeepAliveParams","Lean.Lsp.instToJsonLineRange","Lean.Widget.instToJsonRpcEncodingPacket_5","Lean.Widget.instToJsonRpcEncodingPacket_6","Lean.SubExpr.Pos.instToJsonPos","Lean.Server.instToJsonGoToKind","Lean.Server.instToJsonIlean","Lean.Widget.instToJsonRpcEncodingPacket_7","Lean.Widget.instToJsonRpcEncodingPacket_8","Lean.Widget.instToJsonGetInteractiveDiagnosticsParams","Lean.Widget.instToJsonRpcEncodingPacket_9","Lean.instToJsonLeanPaths","Lean.Widget.instToJsonRpcEncodingPacket","Lean.Lsp.instToJsonWorkspaceFolder","Lean.Lsp.instToJsonFileSystemWatcher","Lean.Lsp.instToJsonDidChangeWatchedFilesRegistrationOptions","Lean.Lsp.instToJsonFileChangeType","Lean.Lsp.instToJsonFileEvent","Lean.Lsp.instToJsonDidChangeWatchedFilesParams","Lean.Lsp.instToJsonCompletionOptions","Lean.Lsp.instToJsonCompletionItemKind","Lean.Lsp.instToJsonInsertReplaceEdit","Lean.Lsp.instToJsonCompletionItem","Lean.Lsp.instToJsonCompletionList","Lean.Lsp.instToJsonCompletionParams","Lean.Lsp.instToJsonHover","Lean.Lsp.instToJsonHoverParams","Lean.Lsp.instToJsonDeclarationParams","Lean.Lsp.instToJsonDefinitionParams","Lean.Lsp.instToJsonTypeDefinitionParams","Lean.Lsp.instToJsonReferenceContext","Lean.Lsp.instToJsonReferenceParams","Lean.Lsp.instToJsonWorkspaceSymbolParams","Lean.Lsp.instToJsonDocumentHighlightParams","Lean.Lsp.instToJsonDocumentHighlightKind","Lean.Lsp.instToJsonDocumentHighlight","Lean.Lsp.instToJsonDocumentSymbolParams","Lean.Lsp.instToJsonSymbolKind","Lean.Lsp.instToJsonDocumentSymbolAux","Lean.Lsp.instToJsonDocumentSymbol","Lean.Lsp.instToJsonDocumentSymbolResult","Lean.Lsp.instToJsonSymbolTag","Lean.Lsp.instToJsonSymbolInformation","Lean.Lsp.instToJsonSemanticTokenType","Lean.Lsp.instToJsonSemanticTokenModifier","Lean.Lsp.instToJsonSemanticTokensLegend","Lean.Lsp.instToJsonSemanticTokensOptions","Lean.Lsp.instToJsonSemanticTokensParams","Lean.Lsp.instToJsonSemanticTokensRangeParams","Lean.Lsp.instToJsonSemanticTokens","Lean.Lsp.instToJsonFoldingRangeParams","Lean.Lsp.instToJsonFoldingRangeKind","Lean.Lsp.instToJsonFoldingRange","Lean.Lsp.instToJsonRegistration","Lean.Lsp.instToJsonRegistrationParams","Lean.Lsp.instToJsonClientInfo","Lean.Lsp.Trace.hasToJson","Lean.Lsp.instToJsonInitializationOptions","Lean.Lsp.instToJsonInitializeParams","Lean.Lsp.instToJsonInitializedParams","Lean.Lsp.instToJsonServerInfo","Lean.Lsp.instToJsonInitializeResult","Lean.Elab.instToJsonImport","Lean.Elab.instToJsonPrintImportResult","Lean.Elab.instToJsonPrintImportsResult","Lean.Widget.instToJsonTaggedText","Lean.Lsp.instToJsonRefInfo","Lean.Lsp.instToJsonModuleRefs","Lean.Lsp.instToJsonLeanIleanInfoParams","Lean.JsonRpc.instToJsonErrorCode","Lean.JsonRpc.instToJsonRequestID","Lean.JsonRpc.instToJsonMessage","Lean.instToJsonJson","Lean.instToJsonJsonNumber","Lean.instToJsonBool","Lean.instToJsonNat","Lean.instToJsonInt","Lean.instToJsonString","Lean.instToJsonFilePath","Lean.instToJsonArray","Lean.instToJsonList","Lean.instToJsonOption","Lean.instToJsonProd","Lean.instToJsonName","Lean.instToJsonUSize","Lean.instToJsonUInt64","Lean.Json.instToJsonStructured","Lean.Lsp.instToJsonCompletionItemCapabilities","Lean.Lsp.instToJsonCompletionClientCapabilities","Lean.Lsp.instToJsonTextDocumentClientCapabilities","Lean.Lsp.instToJsonShowDocumentClientCapabilities","Lean.Lsp.instToJsonWindowClientCapabilities","Lean.Lsp.instToJsonClientCapabilities","Lean.Lsp.instToJsonServerCapabilities","Lean.Widget.instToJsonWidgetSource","Lean.Widget.instToJsonUserWidgetDefinition","Lean.Widget.instToJsonUserWidget","Lean.Widget.instToJsonGetWidgetSourceParams","Lean.Widget.instToJsonUserWidgetInstance","Lean.Widget.instToJsonGetWidgetsResponse","Lean.Lsp.instToJsonDiagnosticSeverity","Lean.Lsp.instToJsonDiagnosticCode","Lean.Lsp.instToJsonDiagnosticTag","Lean.Lsp.instToJsonDiagnosticRelatedInformation","Lean.Lsp.instToJsonDiagnosticWith","Lean.Lsp.instToJsonPublishDiagnosticsParams","Lean.Widget.instToJsonFVarId","Lean.Widget.instToJsonMVarId","Lean.Lsp.instToJsonCancelParams","Lean.Lsp.instToJsonPosition","Lean.Lsp.instToJsonRange","Lean.Lsp.instToJsonLocation","Lean.Lsp.instToJsonLocationLink","Lean.Lsp.instToJsonCommand","Lean.Lsp.instToJsonTextEdit","Lean.Lsp.instToJsonTextEditBatch","Lean.Lsp.instToJsonTextDocumentIdentifier","Lean.Lsp.instToJsonVersionedTextDocumentIdentifier","Lean.Lsp.instToJsonTextDocumentEdit","Lean.Lsp.instToJsonTextDocumentItem","Lean.Lsp.instToJsonTextDocumentPositionParams","Lean.Lsp.instToJsonDocumentFilter","Lean.Lsp.instToJsonDocumentSelector","Lean.Lsp.instToJsonStaticRegistrationOptions","Lean.Lsp.instToJsonTextDocumentRegistrationOptions","Lean.Lsp.instToJsonMarkupKind","Lean.Lsp.instToJsonMarkupContent","Lean.Lsp.instToJsonProgressParams","Lean.Lsp.instToJsonWorkDoneProgressReport","Lean.Lsp.instToJsonWorkDoneProgressBegin","Lean.Lsp.instToJsonWorkDoneProgressEnd"],"Lean.ToExpr":["Lean.instToExprDeclarationRange","Lean.instToExprDeclarationRanges","Lean.Meta.Linear.Nat.instToExprLinearExpr","Lean.Meta.Linear.Nat.instToExprLinearCnstr","Lean.instToExprNat","Lean.instToExprBool","Lean.instToExprChar","Lean.instToExprString","Lean.instToExprUnit","Lean.instToExprName","Lean.instToExprOption","Lean.instToExprList","Lean.instToExprArray","Lean.instToExprProd","Lean.Position.instToExprPosition"],"Lean.Syntax.MonadTraverser":["Lean.PrettyPrinter.Parenthesizer.instMonadTraverserParenthesizerM","Lean.PrettyPrinter.Formatter.instMonadTraverserFormatterM"],"Lean.Server.RpcEncoding":["Lean.Widget.instRpcEncodingInteractiveHypothesisBundle","Lean.Widget.instRpcEncodingInteractiveGoal","Lean.Widget.instRpcEncodingInteractiveTermGoal","Lean.Widget.instRpcEncodingInteractiveGoals","Lean.Server.instRpcEncoding","Lean.Server.instRpcEncodingOption","Lean.Server.instRpcEncodingArray","Lean.Server.instRpcEncodingProd","Lean.Widget.instRpcEncodingMsgEmbed","Lean.Lsp.instRpcEncodingDiagnosticWith","Lean.Widget.instRpcEncodingMsgToInteractive","Lean.Widget.instRpcEncodingInfoPopup","Lean.Widget.instRpcEncodingGetGoToLocationParams","Lean.Widget.instRpcEncodingSubexprInfo","Lean.Widget.TaggedText.instRpcEncodingTaggedText","Lean.Widget.instRpcEncodingWithRpcRefInfoWithCtxRpcRef","Lean.Widget.instRpcEncodingWithRpcRefMessageDataRpcRef"],"Lean.Server.MonadRpcSession":["Lean.Server.instMonadRpcSession","Lean.Server.FileWorker.instMonadRpcSession"],"Lean.Quote":["Lean.instQuote","Lean.instQuoteTermStrAnonymous","Lean.instQuoteBoolStrAnonymous","Lean.instQuoteStringStrLitKind","Lean.instQuoteNatNumLitKind","Lean.instQuoteSubstringStrAnonymous","Lean.instQuoteNameStrAnonymous","Lean.instQuoteProdStrAnonymous","Lean.instQuoteListStrAnonymous","Lean.instQuoteArrayStrAnonymous","Lean.Option.hasQuote","Lean.Level.instQuoteLevelStrAnonymous"],"Lean.MonadWithOptions":["Lean.Core.instMonadWithOptionsCoreM","Lean.instMonadWithOptions"],"Lean.MonadTrace":["Lean.Elab.Command.instMonadTraceCommandElabM","Lean.Core.instMonadTraceCoreM","Lean.instMonadTrace"],"Lean.MonadResolveName":["Lean.Elab.Command.instMonadResolveNameCommandElabM","Lean.Elab.OpenDecl.instMonadResolveNameM","Lean.instMonadResolveName","Lean.Core.instMonadResolveNameCoreM"],"Lean.MonadRef":["Lean.Elab.Command.instMonadRefCommandElabM","Lean.MonadCacheT.instMonadRefMonadCacheT","Lean.MonadStateCacheT.instMonadRefMonadStateCacheT","Lean.Core.instMonadRefCoreM","Lean.Elab.Level.instMonadRefLevelElabM","Lean.instMonadRef","Lean.Macro.instMonadRefMacroM"],"Lean.MonadRecDepth":["Lean.Elab.Command.instMonadRecDepthCommandElabM","Lean.Core.instMonadRecDepthCoreM","Lean.instMonadRecDepthReaderT","Lean.instMonadRecDepthStateRefT'","Lean.instMonadRecDepthMonadCacheT"],"Lean.MonadQuotation":["Lean.PrettyPrinter.Parenthesizer.instMonadQuotationParenthesizerM","Lean.Elab.Command.instMonadQuotationCommandElabM","Lean.PrettyPrinter.Delaborator.instMonadQuotationDelabM","Lean.Core.instMonadQuotationCoreM","Lean.instMonadQuotation","Lean.Macro.instMonadQuotationMacroM","Lean.PrettyPrinter.instMonadQuotationUnexpandM","Lean.Unhygienic.instMonadQuotationUnhygienic"],"Lean.MonadOptions":["Lean.Elab.Command.instMonadOptionsCommandElabM","Lean.Core.instMonadOptionsCoreM","Lean.Elab.Level.instMonadOptionsLevelElabM","Lean.instMonadOptions"],"Lean.MonadNameGenerator":["Lean.monadNameGeneratorLift","Lean.Core.instMonadNameGeneratorCoreM","Lean.Elab.Level.instMonadNameGeneratorLevelElabM"],"Lean.MonadMCtx":["Lean.instMonadMCtx","Lean.instMonadMCtxStateRefT'MetavarContextST","Lean.DependsOn.instMonadMCtxM","Lean.MetavarContext.instMonadMCtxStateRefT'MetavarContextST","Lean.MetavarContext.MkBinding.instMonadMCtxM","Lean.MetavarContext.LevelMVarToParam.instMonadMCtxM","Lean.Meta.SynthInstance.MkTableKey.instMonadMCtxM","Lean.Meta.AbstractMVars.instMonadMCtxM","Lean.Meta.instMonadMCtxMetaM"],"Lean.MonadLog":["Lean.instMonadLog","Lean.Elab.Command.instMonadLogCommandElabM","Lean.Core.instMonadLogCoreM"],"Lean.MonadLCtx":["Lean.Meta.instMonadLCtxMetaM","Lean.instMonadLCtx"],"Lean.MonadHashMapCacheAdapter":["Lean.MetavarContext.MkBinding.instMonadHashMapCacheAdapterExprStructEqExprMInstBEqExprStructEqInstHashableExprStructEq","Lean.MonadCacheT.instMonadHashMapCacheAdapterMonadCacheT","Lean.MonadStateCacheT.instMonadHashMapCacheAdapterMonadStateCacheT"],"Lean.MonadEnv":["Lean.Elab.Command.instMonadEnvCommandElabM","Lean.instMonadEnv","Lean.Core.instMonadEnvCoreM","Lean.Meta.instMonadEnvMetaM"],"Lean.MonadCache":["Lean.MetavarContext.LevelMVarToParam.instMonadCacheExprStructEqExprM","Lean.instMonadCacheReaderT","Lean.instMonadCacheExceptT","Lean.MonadHashMapCacheAdapter.instMonadCache","Lean.Meta.CheckAssignment.instMonadCacheExprCheckAssignmentM"],"Lean.MonadBacktrack":["Lean.Meta.Simp.instMonadBacktrackSavedStateSimpM","Lean.Elab.Term.instMonadBacktrackSavedStateTermElabM","Lean.instMonadBacktrackExceptT","Lean.Elab.Tactic.instMonadBacktrackSavedStateTacticM","Lean.Meta.ElimEmptyInductive.instMonadBacktrackSavedStateM","Lean.Meta.instMonadBacktrackSavedStateMetaM"],"Lean.MetaEval":["Lean.Elab.Term.instMetaEvalTermElabM","Lean.Core.instMetaEvalCoreM","Lean.Meta.instMetaEvalMetaM","Lean.instMetaEval"],"Lean.Meta.ReduceEval":["Lean.Meta.instReduceEvalNat","Lean.Meta.instReduceEvalOption","Lean.Meta.instReduceEvalString","Lean.Meta.instReduceEvalName"],"Lean.Lsp.FileSource":["Lean.Lsp.instFileSourceLocation","Lean.Lsp.instFileSourceTextDocumentIdentifier","Lean.Lsp.instFileSourceVersionedTextDocumentIdentifier","Lean.Lsp.instFileSourceTextDocumentEdit","Lean.Lsp.instFileSourceTextDocumentItem","Lean.Lsp.instFileSourceTextDocumentPositionParams","Lean.Lsp.instFileSourceDidOpenTextDocumentParams","Lean.Lsp.instFileSourceDidChangeTextDocumentParams","Lean.Lsp.instFileSourceDidCloseTextDocumentParams","Lean.Lsp.instFileSourceCompletionParams","Lean.Lsp.instFileSourceHoverParams","Lean.Lsp.instFileSourceDeclarationParams","Lean.Lsp.instFileSourceDefinitionParams","Lean.Lsp.instFileSourceTypeDefinitionParams","Lean.Lsp.instFileSourceReferenceParams","Lean.Lsp.instFileSourceWaitForDiagnosticsParams","Lean.Lsp.instFileSourceDocumentHighlightParams","Lean.Lsp.instFileSourceDocumentSymbolParams","Lean.Lsp.instFileSourceSemanticTokensParams","Lean.Lsp.instFileSourceSemanticTokensRangeParams","Lean.Lsp.instFileSourceFoldingRangeParams","Lean.Lsp.instFileSourcePlainGoalParams","Lean.Lsp.instFileSourcePlainTermGoalParams","Lean.Lsp.instFileSourceRpcConnectParams","Lean.Lsp.instFileSourceRpcCallParams","Lean.Lsp.instFileSourceRpcReleaseParams","Lean.Lsp.instFileSourceRpcKeepAliveParams"],"Lean.KVMap.Value":["Lean.KVMap.instValueDataValue","Lean.KVMap.instValueBool","Lean.KVMap.instValueNat","Lean.KVMap.instValueInt","Lean.KVMap.instValueName","Lean.KVMap.instValueString","Lean.KVMap.instValueSyntax"],"Lean.IR.AlphaEqv":["Lean.IR.instAlphaEqvVarId","Lean.IR.instAlphaEqvArg","Lean.IR.instAlphaEqvArrayArg","Lean.IR.instAlphaEqvExpr"],"Lean.FromJson":["Lean.Widget.instFromJsonRpcEncodingPacket_1","Lean.Widget.instFromJsonRpcEncodingPacket_2","Lean.Widget.instFromJsonRpcEncodingPacket_3","Lean.Widget.instFromJsonRpcEncodingPacket_4","Lean.Lsp.instFromJsonTextDocumentSyncKind","Lean.Lsp.instFromJsonDidOpenTextDocumentParams","Lean.Lsp.instFromJsonTextDocumentChangeRegistrationOptions","Lean.Lsp.instFromJsonTextDocumentContentChangeEvent","Lean.Lsp.instFromJsonDidChangeTextDocumentParams","Lean.Lsp.instFromJsonSaveOptions","Lean.Lsp.instFromJsonDidCloseTextDocumentParams","Lean.Lsp.instFromJsonTextDocumentSyncOptions","Lean.Lsp.instFromJsonWaitForDiagnosticsParams","Lean.Lsp.instFromJsonWaitForDiagnostics","Lean.Lsp.instFromJsonLeanFileProgressKind","Lean.Lsp.instFromJsonLeanFileProgressProcessingInfo","Lean.Lsp.instFromJsonLeanFileProgressParams","Lean.Lsp.instFromJsonPlainGoalParams","Lean.Lsp.instFromJsonPlainGoal","Lean.Lsp.instFromJsonPlainTermGoalParams","Lean.Lsp.instFromJsonPlainTermGoal","Lean.Lsp.instFromJsonRpcRef","Lean.Lsp.instFromJsonRpcConnectParams","Lean.Lsp.instFromJsonRpcConnected","Lean.Lsp.instFromJsonRpcCallParams","Lean.Lsp.instFromJsonRpcReleaseParams","Lean.Lsp.instFromJsonRpcKeepAliveParams","Lean.Lsp.instFromJsonLineRange","Lean.Widget.instFromJsonRpcEncodingPacket_5","Lean.Widget.instFromJsonRpcEncodingPacket_6","Lean.SubExpr.Pos.instFromJsonPos","Lean.Server.instFromJsonGoToKind","Lean.Server.instFromJsonIlean","Lean.Widget.instFromJsonRpcEncodingPacket_7","Lean.Widget.instFromJsonRpcEncodingPacket_8","Lean.Widget.instFromJsonGetInteractiveDiagnosticsParams","Lean.Widget.instFromJsonRpcEncodingPacket_9","Lean.instFromJsonLeanPaths","Lean.Widget.instFromJsonRpcEncodingPacket","Lean.Lsp.instFromJsonWorkspaceFolder","Lean.Lsp.instFromJsonFileSystemWatcher","Lean.Lsp.instFromJsonDidChangeWatchedFilesRegistrationOptions","Lean.Lsp.instFromJsonFileChangeType","Lean.Lsp.instFromJsonFileEvent","Lean.Lsp.instFromJsonDidChangeWatchedFilesParams","Lean.Lsp.instFromJsonCompletionOptions","Lean.Lsp.instFromJsonCompletionItemKind","Lean.Lsp.instFromJsonInsertReplaceEdit","Lean.Lsp.instFromJsonCompletionItem","Lean.Lsp.instFromJsonCompletionList","Lean.Lsp.instFromJsonCompletionParams","Lean.Lsp.instFromJsonHover","Lean.Lsp.instFromJsonHoverParams","Lean.Lsp.instFromJsonDeclarationParams","Lean.Lsp.instFromJsonDefinitionParams","Lean.Lsp.instFromJsonTypeDefinitionParams","Lean.Lsp.instFromJsonReferenceContext","Lean.Lsp.instFromJsonReferenceParams","Lean.Lsp.instFromJsonWorkspaceSymbolParams","Lean.Lsp.instFromJsonDocumentHighlightParams","Lean.Lsp.instFromJsonDocumentSymbolParams","Lean.Lsp.instFromJsonSemanticTokenType","Lean.Lsp.instFromJsonSemanticTokenModifier","Lean.Lsp.instFromJsonSemanticTokensLegend","Lean.Lsp.instFromJsonSemanticTokensOptions","Lean.Lsp.instFromJsonSemanticTokensParams","Lean.Lsp.instFromJsonSemanticTokensRangeParams","Lean.Lsp.instFromJsonSemanticTokens","Lean.Lsp.instFromJsonFoldingRangeParams","Lean.Lsp.instFromJsonRegistration","Lean.Lsp.instFromJsonRegistrationParams","Lean.Lsp.instFromJsonClientInfo","Lean.Lsp.instFromJsonTrace","Lean.Lsp.instFromJsonInitializationOptions","Lean.Lsp.instFromJsonInitializeParams","Lean.Lsp.instFromJsonInitializedParams","Lean.Lsp.instFromJsonServerInfo","Lean.Lsp.instFromJsonInitializeResult","Lean.Widget.instFromJsonTaggedText","Lean.Lsp.instFromJsonRefInfo","Lean.Lsp.instFromJsonModuleRefs","Lean.Lsp.instFromJsonLeanIleanInfoParams","Lean.JsonRpc.instFromJsonErrorCode","Lean.JsonRpc.instFromJsonRequestID","Lean.JsonRpc.instFromJsonMessage","Lean.JsonRpc.instFromJsonNotification","Lean.instFromJsonJson","Lean.instFromJsonJsonNumber","Lean.instFromJsonBool","Lean.instFromJsonNat","Lean.instFromJsonInt","Lean.instFromJsonString","Lean.instFromJsonFilePath","Lean.instFromJsonArray","Lean.instFromJsonList","Lean.instFromJsonOption","Lean.instFromJsonProd","Lean.instFromJsonName","Lean.instFromJsonUSize","Lean.instFromJsonUInt64","Lean.Json.instFromJsonStructured","Lean.Lsp.instFromJsonCompletionItemCapabilities","Lean.Lsp.instFromJsonCompletionClientCapabilities","Lean.Lsp.instFromJsonTextDocumentClientCapabilities","Lean.Lsp.instFromJsonShowDocumentClientCapabilities","Lean.Lsp.instFromJsonWindowClientCapabilities","Lean.Lsp.instFromJsonClientCapabilities","Lean.Lsp.instFromJsonServerCapabilities","Lean.Widget.instFromJsonWidgetSource","Lean.Widget.instFromJsonUserWidgetDefinition","Lean.Widget.instFromJsonUserWidget","Lean.Widget.instFromJsonGetWidgetSourceParams","Lean.Widget.instFromJsonUserWidgetInstance","Lean.Widget.instFromJsonGetWidgetsResponse","Lean.Lsp.instFromJsonDiagnosticSeverity","Lean.Lsp.instFromJsonDiagnosticCode","Lean.Lsp.instFromJsonDiagnosticTag","Lean.Lsp.instFromJsonDiagnosticRelatedInformation","Lean.Lsp.instFromJsonDiagnosticWith","Lean.Lsp.instFromJsonPublishDiagnosticsParams","Lean.Widget.instFromJsonFVarId","Lean.Widget.instFromJsonMVarId","Lean.Lsp.instFromJsonCancelParams","Lean.Lsp.instFromJsonPosition","Lean.Lsp.instFromJsonRange","Lean.Lsp.instFromJsonLocation","Lean.Lsp.instFromJsonLocationLink","Lean.Lsp.instFromJsonCommand","Lean.Lsp.instFromJsonTextEdit","Lean.Lsp.instFromJsonTextEditBatch","Lean.Lsp.instFromJsonTextDocumentIdentifier","Lean.Lsp.instFromJsonVersionedTextDocumentIdentifier","Lean.Lsp.instFromJsonTextDocumentEdit","Lean.Lsp.instFromJsonTextDocumentItem","Lean.Lsp.instFromJsonTextDocumentPositionParams","Lean.Lsp.instFromJsonDocumentFilter","Lean.Lsp.instFromJsonDocumentSelector","Lean.Lsp.instFromJsonStaticRegistrationOptions","Lean.Lsp.instFromJsonTextDocumentRegistrationOptions","Lean.Lsp.instFromJsonMarkupKind","Lean.Lsp.instFromJsonMarkupContent"],"Lean.Eval":["Lean.instEval","Lean.instEval_1","Lean.instEvalUnit","Lean.instEvalIO"],"Lean.Elab.MonadMacroAdapter":["Lean.Elab.Command.instMonadMacroAdapterCommandElabM","Lean.Elab.Term.instMonadMacroAdapterTermElabM","Lean.Elab.instMonadMacroAdapter"],"Lean.Elab.MonadInfoTree":["Lean.Elab.Command.instMonadInfoTreeCommandElabM","Lean.Core.instMonadInfoTreeCoreM","Lean.Elab.instMonadInfoTree"],"Lean.Data.AC.EvalInformation":["Lean.Meta.AC.instEvalInformationPreContextACExpr","Lean.Data.AC.instEvalInformationContext"],"Lean.Data.AC.ContextInformation":["Lean.Meta.AC.instContextInformationProdPreContextArrayBool","Lean.Data.AC.instContextInformationContext"],"Lean.Compiler.VisitLet":["Lean.Compiler.instVisitLetCompilerM","Lean.Compiler.instVisitLetReaderT","Lean.Compiler.instVisitLetStateRefT'"],"Lean.AddMessageContext":["Lean.Elab.Command.instAddMessageContextCommandElabM","Lean.Core.instAddMessageContextCoreM","Lean.Elab.Level.instAddMessageContextLevelElabM","Lean.Compiler.instAddMessageContextCompilerM","Lean.instAddMessageContext","Lean.Meta.instAddMessageContextMetaM"],"Lean.AddErrorMessageContext":["Lean.Elab.Command.instAddErrorMessageContextCommandElabM","Lean.Elab.Term.instAddErrorMessageContextTermElabM","Lean.instAddErrorMessageContext"],"LawfulMonad":["Id.instLawfulMonadIdInstMonadId","ExceptT.instLawfulMonadExceptTInstMonadExceptT","ReaderT.instLawfulMonadReaderTInstMonadReaderT","instLawfulMonadStateRefT'InstMonadStateRefT'","StateT.instLawfulMonadStateTInstMonadStateT","StateCpsT.instLawfulMonadStateCpsTInstMonadStateCpsT","ExceptCpsT.instLawfulMonadExceptCpsTInstMonadExceptCpsT"],"LawfulBEq":["Lean.Name.instLawfulBEqNameInstBEqName","Nat.Linear.instLawfulBEqPolyCnstrInstBEqPolyCnstr","instLawfulBEqProdInstBEqProd","Nat.instLawfulBEqNatInstBEqNat","instLawfulBEqBoolInstBEqInstDecidableEqBool","instLawfulBEqInstBEq","instLawfulBEqCharInstBEqInstDecidableEqChar","instLawfulBEqStringInstBEqInstDecidableEqString","Int.instLawfulBEqIntInstBEqInstDecidableEqInt","List.instLawfulBEqListInstBEqList"],"LT":["Lean.JsonNumber.instLTJsonNumber","Lean.Meta.Linear.instLTVar","instLTNat","instLTFin","instLTUInt32","instLTPos","Lean.instLTLiteral","String.instLTString","instLTProd","Lean.JsonRpc.instLTRequestID","Int.instLTInt","IO.FS.instLTSystemTime","Char.instLTChar","instLTFloat","Lean.Rat.instLTRat","List.instLTList","instLTOption","Lean.Lsp.instLTPosition","Lean.Lsp.instLTRange","instLTUInt8","instLTUInt16","instLTUInt64","instLTUSize","Lean.Meta.DiscrTree.instLTKey"],"LSpec.Testable":["LSpec.instTestableEq","LSpec.instTestableEqBoolBeqTrue","LSpec.instTestableNe","LSpec.instTestableEqBoolBneTrue","LSpec.Nat.Testable_forall_lt","LSpec.instTestable","LSpec.instTestable_1","LSpec.instTestableExpectationFailure"],"LSpec.MonadTest":["LSpec.instMonadTestIOInstMonadEIOErrorUInt32"],"LSpec.MonadEmit":["LSpec.instMonadEmitIOInstMonadEIOError"],"LE":["instLENat","instLEFin","instLEUInt32","instLEPos","Int.instLEInt","IO.FS.instLESystemTime","Char.instLEChar","instLEFloat","Lean.Rat.instLERat","List.instLEList","Lean.Lsp.instLEPosition","Lean.Lsp.instLERange","instLEUInt8","instLEUInt16","instLEUInt64","instLEUSize"],"Inhabited":["Lean.ParserCompiler.instInhabitedCombinatorAttribute","Std.Format.instInhabitedFlattenBehavior","Std.instInhabitedFormat","Std.Format.instInhabitedSpaceResult","Lean.Meta.AC.instInhabitedPreContext","Lean.Server.instInhabitedRpcProcedure","Lean.Parser.instInhabitedModuleParserState","Lean.Elab.instInhabitedVisibility","Lean.Elab.instInhabitedRecKind","Lean.Elab.instInhabitedModifiers","Lean.IR.ExplicitRC.instInhabitedVarInfo","Lean.Meta.instInhabitedCaseValueSubgoal","Lean.Meta.instInhabitedCaseValuesSubgoal","Lean.Widget.instInhabitedInteractiveHypothesisBundle","Lean.Widget.instInhabitedInteractiveGoal","Lean.Widget.instInhabitedInteractiveTermGoal","Lean.Elab.Term.Do.instInhabitedAlt","Lean.Elab.Term.Do.instInhabitedCode","Lean.Elab.Term.Do.ToTerm.instInhabitedKind","Lean.Elab.Command.instInhabitedScope","Lean.Elab.Command.instInhabitedState","Lean.Elab.Command.instInhabitedCommandElabM","Lean.instInhabitedDeclarationRange","Lean.instInhabitedDeclarationRanges","Lean.Elab.Structural.instInhabitedEqnInfo","Lean.instInhabitedNameGenerator","Lean.Meta.instInhabitedTransparencyMode","Lean.Meta.instInhabitedEtaStructMode","Lean.Meta.DSimp.instInhabitedConfig","Lean.Meta.Simp.instInhabitedConfig","Lean.Server.instInhabitedWithRpcRef","instInhabitedStdGen","Lean.Meta.SimpAll.instInhabitedEntry","Lean.Elab.Term.CollectPatternVars.instInhabitedState","Lean.Elab.Term.CollectPatternVars.instInhabitedContext","Lean.Meta.Simp.instInhabitedResult","Lean.Meta.Simp.instInhabitedContext","Lean.Meta.Simp.instInhabitedStep","Lean.Meta.Simp.instInhabitedMethods","Lean.Meta.instInhabitedSimpTheorem","Lean.Meta.instInhabitedSimpTheorems","Lean.Meta.instInhabitedSimpEntry","Lean.Lsp.instInhabitedLeanFileProgressKind","Lean.Lsp.instInhabitedLineRange","Lean.instInhabitedClosedTermCache","Lean.Widget.instInhabitedMsgEmbed","Lean.Widget.instInhabitedEmbedFmt","Lean.Meta.IndPredBelow.instInhabitedVariables","Nat.Linear.instInhabitedExpr","Lean.SubExpr.Pos.instInhabitedPos","Lean.instInhabitedSubExpr","Lean.instInhabitedData","Lean.instInhabitedLevelMVarId","Lean.instInhabitedLMVarIdMap","Lean.instInhabitedLevel","Lean.Elab.Term.instInhabitedDiscr","SlimCheck.NoShrink.inhabited","Lean.instInhabitedJson","Lean.instInhabitedClassState","SlimCheck.instInhabitedTestResult","SlimCheck.instInhabitedConfiguration","SlimCheck.Checkable.instInhabitedOptionT","Lean.instInhabitedNameTrie","Lean.instInhabitedLocalInstance","Lean.instInhabitedMetavarKind","Lean.instInhabitedMetavarDecl","Lean.MetavarContext.instInhabitedMetavarContext","Lean.Meta.Match.instInhabitedMatchEqns","Lean.Meta.Match.instInhabitedMatchEqnsExtState","Lean.Elab.Term.instInhabitedSyntheticMVarKind","Lean.Elab.Term.instInhabitedSyntheticMVarDecl","Lean.Elab.Term.instInhabitedMVarErrorKind","Lean.Elab.Term.instInhabitedMVarErrorInfo","Lean.Elab.Term.instInhabitedLetRecToLift","Lean.Elab.Term.instInhabitedState","Lean.Elab.Tactic.instInhabitedState","Lean.Elab.Tactic.instInhabitedSnapshot","Lean.Elab.Tactic.instInhabitedCacheKey","Lean.Elab.Tactic.instInhabitedCache","Lean.Elab.Term.instInhabitedTermElabM","Lean.Elab.Term.instInhabitedSavedState","Lean.Elab.Term.instInhabitedTermElabResult","Lean.PrettyPrinter.Delaborator.instInhabitedDelabM","Lean.Meta.instInhabitedElimAltInfo","Lean.Meta.instInhabitedElimInfo","Lean.Meta.instInhabitedCustomEliminator","Lean.Meta.instInhabitedCustomEliminators","instInhabitedEST","Lean.KeyedDeclsAttribute.instInhabitedDef","Lean.KeyedDeclsAttribute.instInhabitedOLeanEntry","Lean.KeyedDeclsAttribute.instInhabitedExtensionState","Lean.Server.instInhabitedReference","Lean.instInhabitedHeadIndex","Lean.Widget.instInhabitedMsgToInteractive","Lean.Widget.instInhabitedInfoPopup","Lean.Widget.instInhabitedGetInteractiveDiagnosticsParams","Lean.Meta.instInhabitedEqnsExtState","Lean.IR.instInhabitedLiveVarSet","Lean.Meta.instInhabitedUnificationHintEntry","Lean.Meta.instInhabitedUnificationHints","Lean.Meta.Simp.instInhabitedM","Std.ShareCommon.State.inhabited","Std.ShareCommon.PersistentState.inhabited","Lean.Widget.instInhabitedSubexprInfo","Lean.instInhabitedEnvExtensionState","Lean.instInhabitedModuleIdx","Lean.instInhabitedModuleData","Lean.instInhabitedEnvironmentHeader","Lean.instInhabitedEnvironment","Lean.instInhabitedEnvExtensionInterface","Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","Lean.EnvExtension.instInhabitedEnvExtension","Lean.instInhabitedPersistentEnvExtensionState","Lean.instInhabitedPersistentEnvExtension","Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","Lean.Elab.Command.instInhabitedStructFieldKind","Lean.Elab.Command.instInhabitedStructFieldInfo","Lean.ScopedEnvExtension.instInhabitedScopedEntries","Lean.ScopedEnvExtension.instInhabitedStateStack","Lean.ScopedEnvExtension.instInhabitedDescr","Lean.instInhabitedScopedEnvExtension","Lean.Meta.instInhabitedInductionSubgoal","Lean.Meta.instInhabitedAltVarNames","System.instInhabitedFilePath","Lean.Elab.Eqns.instInhabitedEqnInfoCore","Lean.Elab.Eqns.instInhabitedUnfoldEqnExtState","Lean.Meta.instInhabitedCaseArraySizesSubgoal","Lean.Core.instInhabitedCache","Lean.Core.instInhabitedState","Lean.Core.instInhabitedCoreM","Lean.Lsp.instInhabitedCompletionItemKind","Lean.Lsp.instInhabitedCompletionItem","Lean.CollectMVars.instInhabitedState","Lean.Meta.instInhabitedGeneralizeArg","Nat.SOM.instInhabitedExpr","Lean.Meta.Closure.instInhabitedToProcessElement","Lean.Meta.Match.instInhabitedDiscrInfo","Lean.Meta.Match.Extension.instInhabitedState","Lean.Elab.instInhabitedTerminationHints","Std.HashSet.instInhabitedHashSet","Lean.Meta.Linear.instInhabitedVar","Lean.Meta.Linear.instInhabitedAssignment","Lean.Meta.Linear.instInhabitedPoly","Lean.Meta.Linear.instInhabitedAssumptionId","Lean.Meta.Linear.instInhabitedJustification","Lean.Meta.Linear.instInhabitedCnstrKind","Lean.Meta.Linear.instInhabitedCnstr","Lean.Meta.Linear.instInhabitedState","Lean.instInhabitedException","Lean.Elab.Structural.instInhabitedM","instInhabitedSort","instInhabitedForAll","instInhabitedForAll_1","instInhabitedBool","instInhabitedNonemptyType","instInhabitedNat","instInhabitedUInt8","instInhabitedUInt16","instInhabitedUInt32","instInhabitedUInt64","instInhabitedUSize","instInhabitedOption","instInhabitedList","instInhabitedPos","instInhabitedSubstring","instInhabitedForAll_2","instInhabited","instInhabitedExcept","instInhabitedReaderT","EStateM.instInhabitedResult","EStateM.instInhabitedEStateM","Lean.instInhabitedName","Lean.instInhabitedSourceInfo","Lean.instInhabitedSyntax","Lean.instInhabitedTSyntax","Lean.instInhabitedParserDescr","Lean.instInhabitedMacroScopesView","Lean.Macro.instInhabitedState","Lean.Macro.instInhabitedMethods","Lean.Macro.instInhabitedMethodsRef","Lean.instInhabitedLiteral","Lean.instInhabitedBinderInfo","Lean.instInhabitedData_1","Lean.instInhabitedFVarId","Lean.instInhabitedFVarIdMap","Lean.instInhabitedMVarId","Lean.instInhabitedMVarIdMap","Lean.instInhabitedExpr","Lean.instInhabitedExprStructEq","String.instInhabitedString","SlimCheck.inhabitedRandT","SlimCheck.inhabitedStdGen","Lean.Parser.ParserExtension.instInhabitedOLeanEntry","Lean.Parser.ParserExtension.instInhabitedEntry","Lean.Parser.ParserExtension.instInhabitedState","Lean.Elab.Tactic.instInhabitedSimpKind","Lean.PrettyPrinter.Delaborator.SubExpr.instInhabitedHoleIterator","Std.instInhabitedRBTree","Std.PersistentHashSet.instInhabitedPersistentHashSet","Lean.instInhabitedReducibilityHints","Lean.instInhabitedConstantVal","Lean.instInhabitedAxiomVal","Lean.instInhabitedDefinitionSafety","Lean.instInhabitedDefinitionVal","Lean.instInhabitedTheoremVal","Lean.instInhabitedOpaqueVal","Lean.instInhabitedConstructor","Lean.instInhabitedInductiveType","Lean.instInhabitedDeclaration","Lean.instInhabitedInductiveVal","Lean.instInhabitedConstructorVal","Lean.instInhabitedRecursorRule","Lean.instInhabitedRecursorVal","Lean.instInhabitedQuotKind","Lean.instInhabitedQuotVal","Lean.instInhabitedConstantInfo","Lean.CollectLevelParams.instInhabitedState","Lean.instInhabitedInternalExceptionId","Lean.Meta.instInhabitedCongrArgKind","instInhabitedForInStep","instInhabitedTask","instInhabitedProp","instInhabitedTrue","instInhabitedNonScalar","instInhabitedForInStep_1","instInhabitedPNonScalar","Subtype.instInhabitedSubtype","Sum.inhabitedLeft","Sum.inhabitedRight","instInhabitedProd","instInhabitedMProd","instInhabitedPProd","instInhabitedPUnit","ByteArray.instInhabitedByteArray","Lean.instInhabitedProjectionFunctionInfo","Lean.Compiler.instInhabitedSpecializeAttributeKind","Lean.Compiler.instInhabitedSpecArgKind","Lean.Compiler.instInhabitedSpecInfo","Lean.Compiler.instInhabitedSpecState","Lean.Compiler.instInhabitedSpecEntry","Lean.Data.AC.instInhabitedExpr","Lean.instInhabitedLazyInitExtension","Lean.Widget.instInhabitedTaggedText","Lean.Widget.TaggedText.instInhabitedTaggedState","Lean.Elab.Term.StructInst.instInhabitedExplicitSourceInfo","Lean.Elab.Term.StructInst.instInhabitedSource","Lean.Elab.Term.StructInst.instInhabitedFieldLHS","Lean.Elab.Term.StructInst.instInhabitedFieldVal","Lean.Elab.Term.StructInst.instInhabitedField","Lean.Elab.Term.StructInst.instInhabitedStruct","Lean.Elab.Command.instInhabitedCtorView","Lean.Elab.Command.instInhabitedInductiveView","Lean.Elab.Command.instInhabitedElabHeaderResult","Lean.Compiler.CSimp.instInhabitedEntry","Lean.Compiler.CSimp.instInhabitedState","Lean.Lsp.instInhabitedRefIdent","instInhabitedExceptT","Lean.JsonRpc.instInhabitedRequestID","Lean.JsonRpc.instInhabitedErrorCode","Lean.JsonRpc.instInhabitedRequest","Lean.JsonRpc.instInhabitedNotification","Lean.JsonRpc.instInhabitedResponse","Lean.JsonRpc.instInhabitedResponseError","Int.instInhabitedInt","Lean.Elab.instInhabitedPreDefinition","instInhabitedOrdering","Std.instInhabitedAssocList","Lean.IR.UnreachableBranches.instInhabitedValue","Lean.OpenDecl.instInhabitedOpenDecl","Lean.Server.instInhabitedRequestError","Lean.Server.Snapshots.instInhabitedSnapshot","Lean.Elab.instInhabitedDefViewElabHeader","Lean.Meta.instInhabitedFVarSubst","IO.instInhabitedError","Lean.Meta.Match.instInhabitedPattern","Lean.Meta.Match.instInhabitedAlt","Lean.Meta.Match.instInhabitedProblem","Lean.Meta.SynthInstance.instInhabitedGeneratorNode","Lean.Meta.SynthInstance.instInhabitedConsumerNode","Lean.Meta.SynthInstance.instInhabitedAnswer","Lean.Meta.SynthInstance.instInhabitedSynthM","Std.HashMap.instInhabitedHashMap","Lean.CollectFVars.instInhabitedState","Lean.Elab.WF.instInhabitedTerminationHintValue","Lean.Elab.WF.instInhabitedTerminationHint","Lean.Elab.WF.instInhabitedTerminationByElement","Lean.Elab.WF.instInhabitedTerminationBy","Lean.instInhabitedLBool","Lean.Parser.instInhabitedInputContext","Lean.Parser.instInhabitedError","Lean.Parser.instInhabitedParserFn","Lean.Parser.instInhabitedFirstTokens","Lean.Parser.instInhabitedParserInfo","Lean.Parser.instInhabitedParser","Lean.Parser.TokenMap.instInhabitedTokenMap","Lean.Parser.instInhabitedPrattParsingTables","Lean.Parser.instInhabitedLeadingIdentBehavior","Lean.Parser.instInhabitedParserCategory","Lean.SMap.instInhabitedSMap","Lean.Parsec.instInhabitedParsec","Lean.Meta.instInhabitedSimpCongrTheorem","Lean.Meta.instInhabitedSimpCongrTheorems","instInhabitedEIO","IO.FS.instInhabitedStream","IO.FS.instInhabitedSystemTime","Lean.FuzzyMatching.instInhabitedCharRole","Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instInhabitedContext","Lean.instInhabitedAttributeApplicationTime","Lean.instInhabitedAttributeImplCore","Lean.instInhabitedAttributeKind","Lean.instInhabitedAttributeImpl","Lean.instInhabitedTagAttribute","Lean.instInhabitedParametricAttribute","Lean.instInhabitedEnumAttributes","Lean.instInhabitedAttributeExtensionState","IO.AsyncList.instInhabitedAsyncList","Lean.Compiler.instInhabitedInlineAttributeKind","Lean.instInhabitedLOption","Std.PersistentHashMap.instInhabitedEntry","Std.PersistentHashMap.instInhabitedNode","Std.PersistentHashMap.instInhabitedPersistentHashMap","Lean.Elab.instInhabitedDefKind","Lean.Elab.instInhabitedDefView","Lean.instInhabitedMessageSeverity","Lean.instInhabitedMessageData","Lean.instInhabitedMessage","Lean.instInhabitedMessageLog","Lean.Meta.instInhabitedAbstractMVarsResult","Char.instInhabitedChar","Lean.Meta.instInhabitedParamInfo","Lean.Meta.instInhabitedInfoCacheKey","Lean.Meta.instInhabitedCache","Lean.Meta.instInhabitedPostponedEntry","Lean.Meta.instInhabitedState","Lean.Meta.instInhabitedSavedState","Lean.Meta.instInhabitedMetaM","Lean.Elab.instInhabitedAttribute","Lean.Meta.DiscrTree.instInhabitedKey","Lean.Meta.instInhabitedAuxLemmas","Std.instInhabitedRBMap","Lean.Parser.Trie.instInhabitedTrie","Lean.SSet.instInhabitedSSet","Lean.instInhabitedStructureFieldInfo","Lean.instInhabitedStructureInfo","Lean.instInhabitedStructureState","Lean.instInhabitedStructureDescr","Lean.instInhabitedExternAttrData","Lean.instInhabitedPosition","Lean.instInhabitedFileMap","Lean.instInhabitedDataValue","Lean.instInhabitedKVMap","Lean.Elab.Term.instInhabitedMatchAltView","instInhabitedFloat","Std.instInhabitedPersistentArrayNode","Std.instInhabitedPersistentArray","Lean.instInhabitedRat","Lean.Elab.WF.instInhabitedEqnInfo","Lean.instInhabitedOccurrences","Lean.instInhabitedPrefixTreeNode","Lean.instInhabitedPrefixTree","Lean.Widget.instInhabitedWidgetSource","Lean.Widget.instInhabitedUserWidgetDefinition","Lean.Widget.instInhabitedUserWidget","Lean.instInhabitedTraceElem","Lean.instInhabitedTraceState","Lean.NameMap.instInhabitedNameMap","Lean.NameSet.instInhabitedNameSet","Lean.NameSSet.instInhabitedNameSSet","Lean.NameHashSet.instInhabitedNameHashSet","Lean.instInhabitedOptions","Lean.instInhabitedOptionDecl","Lean.instInhabitedOptionDecls","Lean.instInhabitedOption","Lean.instInhabitedLocalDecl","Lean.instInhabitedLocalContext","Lean.Meta.instInhabitedKExprMap","Lean.Elab.Term.instInhabitedArg","Lean.Elab.Term.instInhabitedNamedArg","Lean.instInhabitedPPFns","Lean.Lsp.instInhabitedDiagnosticSeverity","Lean.Lsp.instInhabitedDiagnosticCode","Lean.Lsp.instInhabitedDiagnosticTag","Lean.Lsp.instInhabitedDiagnosticRelatedInformation","Lean.Lsp.instInhabitedDiagnosticWith","Lean.Lsp.instInhabitedPublishDiagnosticsParams","Lean.Widget.instInhabitedInfoWithCtx","Lean.Lsp.instInhabitedCancelParams","Lean.Lsp.instInhabitedPosition","Lean.Lsp.instInhabitedRange","Lean.Lsp.instInhabitedLocation","Lean.Xml.instInhabitedContent","Lean.Elab.instInhabitedContextInfo","Lean.Elab.instInhabitedElabInfo","Lean.Elab.instInhabitedTermInfo","Lean.Elab.instInhabitedCommandInfo","Lean.Elab.instInhabitedFieldInfo","Lean.Elab.instInhabitedTacticInfo","Lean.Elab.instInhabitedMacroExpansionInfo","Lean.Elab.instInhabitedCustomInfo","Lean.Elab.instInhabitedUserWidgetInfo","Lean.Elab.instInhabitedInfo","Lean.Elab.instInhabitedInfoTree","Lean.Elab.instInhabitedInfoState","Lean.Meta.instInhabitedInstanceEntry","Lean.Meta.instInhabitedInstances","Lean.Meta.instInhabitedDefaultInstances","Lean.IR.instInhabitedVarId","Lean.IR.instInhabitedJoinPointId","Lean.IR.instInhabitedIRType","Lean.IR.instInhabitedArg","Lean.IR.instInhabitedParam","Lean.IR.instInhabitedFnBody","Lean.IR.instInhabitedAlt","Lean.IR.instInhabitedDecl","Lean.IR.instInhabitedIndexSet","Lean.IR.instInhabitedVarIdSet","Fin.instInhabitedFinHAddNatInstHAddInstAddNatOfNat","String.instInhabitedRange","Lean.instInhabitedReducibilityStatus","ExceptCpsT.instInhabitedExceptCpsT","Array.instInhabitedArray","Lean.Meta.DiscrTree.instInhabitedTrie","Lean.Meta.DiscrTree.instInhabitedDiscrTree","Lean.Server.instInhabitedDocumentMeta","FloatArray.instInhabitedFloatArray"],"Hashable":["Lean.Lsp.instHashableRpcRef","Lean.IR.Borrow.OwnedSet.instHashableKey","Lean.IR.Borrow.ParamMap.instHashableKey","Lean.instHashableLevelMVarId","Lean.Level.instHashableLevel","Lean.Elab.Tactic.instHashableCacheKey","instHashableNat","instHashablePos","instHashableProd","instHashableBool","instHashableOption","instHashableList","instHashableArray","instHashableUInt8","instHashableUInt16","instHashableUInt32","instHashableUInt64","instHashableUSize","instHashableFin","instHashableInt","instHashable","Lean.HeadIndex.instHashableHeadIndex","System.instHashableFilePath","instHashableString","Lean.instHashableName","Lean.instHashableLiteral","Lean.instHashableBinderInfo","Lean.instHashableFVarId","Lean.instHashableMVarId","Lean.Expr.instHashableExpr","Lean.ExprStructEq.instHashableExprStructEq","Lean.Lsp.instHashableRefIdent","Lean.Meta.InfoCacheKey.instHashableInfoCacheKey","Lean.Meta.DiscrTree.instHashableKey","Lean.Meta.TransparencyMode.instHashableTransparencyMode","Lean.Lsp.instHashablePosition","Lean.Lsp.instHashableRange","Lean.IR.instHashableVarId","Lean.IR.instHashableJoinPointId","String.instHashableRange"],"HasEquiv":["instHasEquiv"],"HXor":["instHXor"],"HSub":["instHSub","instHSubPos"],"HShiftRight":["instHShiftRight"],"HShiftLeft":["instHShiftLeft"],"HPow":["instHPow","Int.instHPowIntNat"],"HOrElse":["instHOrElse"],"HOr":["instHOr"],"HMul":["instHMul"],"HMod":["instHMod","instHModUInt8Nat","instHModUInt16Nat","instHModUInt32Nat","instHModUInt64Nat","instHModUSizeNat"],"HDiv":["System.FilePath.instHDivFilePathString","instHDiv"],"HAppend":["instHAppend","Array.instHAppendArrayList"],"HAndThen":["instHAndThen"],"HAnd":["instHAnd"],"HAdd":["instHAdd","instHAddPos","instHAddPosChar","instHAddPosString"],"GetElem":["instGetElemArrayNatLtInstLTNatSize","Lean.Syntax.instGetElemSyntaxNatTrue","Subarray.instGetElemSubarrayNatLtInstLTNatSize","ByteArray.instGetElemByteArrayNatUInt8LtInstLTNatSize","ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","Std.HashMap.instGetElemHashMapOptionTrue","Std.PersistentHashMap.instGetElemPersistentHashMapOptionTrue","Std.PersistentArray.instGetElemPersistentArrayNatLtInstLTNatSize","List.instGetElemListNatLtInstLTNatLength","instGetElemFinVal","Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize","FloatArray.instGetElemFloatArrayNatFloatLtInstLTNatSize","FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize"],"Functor":["List.instFunctorList","Option.instFunctorOption","instFunctorOption"],"ForM":["List.instForMList","Std.Range.instForMRangeNat"],"ForIn'":["List.instForIn'ListInferInstanceMembershipInstMembershipList","Std.Range.instForIn'RangeNatInferInstanceMembershipInstMembershipNatRange"],"ForIn":["Lean.instForInLMVarIdSetLMVarId","Lean.instForInLMVarIdMapProdLMVarId","Lean.instForInFVarIdSetFVarId","Lean.instForInMVarIdSetMVarId","Lean.instForInMVarIdMapProdMVarId","Std.RBTree.instForInRBTree","Subarray.instForInSubarray","ByteArray.instForInByteArrayUInt8","List.instForInList","Std.AssocList.instForInAssocListProd","Lean.Parser.TokenMap.instForInTokenMapProdNameList","Lean.Syntax.instForInTopDownSyntax","instForIn","Std.PersistentHashMap.instForInPersistentHashMapProd","Lean.instForInLoopUnit","Std.RBMap.instForInRBMapProd","Lean.KVMap.instForInKVMapProdNameDataValue","Std.PersistentArray.instForInPersistentArray","Std.Range.instForInRangeNat","Lean.NameMap.instForInNameMapProdName","Lean.NameSet.instForInNameSetName","Lean.instForInOptionsProdNameDataValue","Lean.LocalContext.instForInLocalContextLocalDecl","Array.instForInArray","FloatArray.instForInFloatArrayFloat"],"EmptyCollection":["Lean.Syntax.instEmptyCollectionSepArray","Lean.Syntax.instEmptyCollectionTSepArray","Lean.instEmptyCollectionLMVarIdMap","Lean.instEmptyCollectionNameTrie","Std.HashSet.instEmptyCollectionHashSet","Lean.instEmptyCollectionFVarIdMap","Lean.instEmptyCollectionMVarIdMap","Std.instEmptyCollectionRBTree","Std.PersistentHashSet.instEmptyCollectionPersistentHashSet","ByteArray.instEmptyCollectionByteArray","Std.AssocList.instEmptyCollectionAssocList","Std.HashMap.instEmptyCollectionHashMap","Lean.Parser.TokenMap.instEmptyCollectionTokenMap","Std.instEmptyCollectionRBMap","Lean.Parser.Trie.instEmptyCollectionTrie","Lean.instEmptyCollectionPrefixTree","List.instEmptyCollectionList","Lean.NameMap.instEmptyCollectionNameMap","Lean.NameSet.instEmptyCollectionNameSet","Lean.NameSSet.instEmptyCollectionNameSSet","Lean.NameHashSet.instEmptyCollectionNameHashSet","Array.instEmptyCollectionArray","FloatArray.instEmptyCollectionFloatArray"],"EStateM.Backtrackable":["EStateM.nonBacktrackable"],"Div":["System.FilePath.instDivFilePath","Int.instDivInt","instDivFloat","Lean.Rat.instDivRat","Fin.instDivFin","instDivUInt8","instDivUInt16","instDivUInt32","instDivUInt64","instDivUSize","Nat.instDivNat"],"Decidable":["Lean.instDecidableEqDeclarationRange","Lean.Name.instDecidableEqName","Array.instDecidableEqArray","Lean.SubExpr.Pos.instDecidableEqPos","Lean.instDecidableEqJsonNumber","Lean.JsonNumber.instDecidableLtJsonNumberInstLTJsonNumber","Lean.Elab.Command.instDecidableEqStructFieldKind","System.instDecidableEqFilePath","Lean.Lsp.instDecidableEqCompletionItemKind","Lean.Meta.Linear.instDecidableEqVar","Lean.Meta.Linear.instDecidableLtVarInstLTVar","Lean.Meta.Linear.instDecidableEqPoly","Lean.Meta.Linear.instDecidableEqAssumptionId","Lean.Meta.Linear.instDecidableEqJustification","Lean.Meta.Linear.instDecidableEqCnstrKind","Lean.Meta.Linear.instDecidableEqCnstr","instDecidableEqBool","instDecidableAnd","instDecidableOr","instDecidableNot","instDecidableEqNat","Nat.decLe","Nat.decLt","instDecidableEqFin","Fin.decLt","Fin.decLe","instDecidableEqUInt8","instDecidableEqUInt16","instDecidableEqUInt32","instDecidableLtUInt32InstLTUInt32","instDecidableLeUInt32InstLEUInt32","instDecidableEqUInt64","instDecidableEqUSize","instDecidableEqChar","instDecidableEqList","instDecidableEqString","instDecidableEqPos","instDecidableLePosInstLEPos","instDecidableLtPosInstLTPos","Lean.instDecidableLtLiteralInstLTLiteral","String.decLt","String.instDecidableEqIterator","instDecidableTrue","instDecidableFalse","instDecidableForAll","instDecidableIff","instDecidableIteProp","instDecidableDitePropNot","Subtype.instDecidableEqSubtype","instDecidableEqSum","instDecidableEqProd","prodHasDecidableLt","instDecidableEqPUnit","instDecidableEqProp","instDecidableEqQuotient","Lean.JsonRpc.instDecidableLtRequestIDInstLTRequestID","Int.instDecidableEqInt","Int.decLe","Int.decLt","instDecidableRelLtLtOfOrd","instDecidableRelLeLeOfOrd","Char.instDecidableLtCharInstLTChar","Char.instDecidableLeCharInstLEChar","Lean.instDecidableEqPosition","floatDecLt","floatDecLe","Lean.instDecidableEqRat","Lean.Rat.instDecidableLtRatInstLTRat","Lean.Rat.instDecidableLeRatInstLERat","List.instDecidableMemListInstMembershipList","List.hasDecidableLt","List.instForAllListDecidableLeInstLEList","Lean.Name.instDecidableRelNameLtHasLtQuick","Option.instDecidableRelOptionLt","instDecidableEqOption","instDecidableLtUInt8InstLTUInt8","instDecidableLeUInt8InstLEUInt8","instDecidableLtUInt16InstLTUInt16","instDecidableLeUInt16InstLEUInt16","instDecidableLtUInt64InstLTUInt64","instDecidableLeUInt64InstLEUInt64","instDecidableLtUSizeInstLTUSize","instDecidableLeUSizeInstLEUSize","Lean.Meta.DiscrTree.instDecidableLtKeyInstLTKey"],"Complement":["instComplementUInt8","instComplementUInt16","instComplementUInt32","instComplementUInt64","instComplementUSize"],"CoeTail":["Lean.Syntax.instCoeTailSepArrayArraySyntax","coeSortToCoeTail","optionCoe","instCoeTail","instCoeTail_1"],"CoeTC":["coeTrans","coeBase"],"CoeT":["coeOfHTCT","coeOfDep","coeId"],"CoeSort":["boolToSort"],"CoeHead":["Lean.instCoeHeadTSyntaxSyntax","subtypeCoe"],"CoeHTCT":["coeOfHeafOfTCOfTail","coeOfHeadOfTC","coeOfTCOfTail","coeOfHeadOfTail","coeOfHead","coeOfTail","coeOfTC"],"CoeDep":["Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent","decPropToBool","instCoeDep"],"Coe":["Lean.PrettyPrinter.Parenthesizer.instCoeParenthesizerParenthesizerAliasValue","Lean.PrettyPrinter.Parenthesizer.instCoeForAllParenthesizerParenthesizerAliasValue","Lean.PrettyPrinter.Parenthesizer.instCoeForAllParenthesizerParenthesizerAliasValue_1","Std.Format.instCoeStringFormat","Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKind","Lean.TSyntax.instCoeIdentTerm","Lean.TSyntax.instCoeStrLitTerm","Lean.TSyntax.instCoeNameLitTerm","Lean.TSyntax.instCoeScientificLitTerm","Lean.TSyntax.instCoeNumLitTerm","Lean.TSyntax.instCoeCharLitTerm","Lean.TSyntax.instCoeIdentLevel","Lean.TSyntax.instCoeNumLitPrio","Lean.TSyntax.instCoeNumLitPrec","Lean.Syntax.instCoeArraySyntaxSepArray","Lean.Syntax.instCoeTSyntaxArrayTSepArray","Lean.Syntax.instCoeTSepArrayTSyntaxArray","Lean.Syntax.instCoeTSyntaxArray","Lean.Syntax.instCoeTSyntaxArrayArraySyntax","Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","Lean.PrettyPrinter.Formatter.instCoeFormatterFormatterAliasValue","Lean.PrettyPrinter.Formatter.instCoeForAllFormatterFormatterAliasValue","Lean.PrettyPrinter.Formatter.instCoeForAllFormatterFormatterAliasValue_1","Lean.JsonNumber.instCoeNatJsonNumber","Lean.JsonNumber.instCoeIntJsonNumber","Lean.Json.instCoeNatJson","Lean.Json.instCoeIntJson","Lean.Json.instCoeStringJson","Lean.Json.instCoeBoolJson","Lean.Json.instCoeArrayJsonStructured","Lean.Json.instCoeRBNodeStringJsonStructured","Lean.Server.RefInfo.instCoeRefInfoRefInfo","Lean.Server.ModuleRefs.instCoeModuleRefsModuleRefs","Lean.Server.FileWorker.instCoeErrorElabTaskError","System.instCoeStringFilePath","Lean.instCoeExprExprStructEq","Lean.Parser.instCoeParserParserAliasValue","Lean.Parser.instCoeForAllParserParserAliasValue","Lean.Parser.instCoeForAllParserParserAliasValue_1","Lean.instCoeSyntaxNodeKindSyntaxNodeKinds","Lean.instCoeSyntaxTSyntaxConsSyntaxNodeKindStrAnonymousNil","Array.instCoeSubarrayArray","Lean.JsonRpc.instCoeRequestMessage","Lean.JsonRpc.instCoeNotificationMessage","Lean.JsonRpc.instCoeResponseMessage","Lean.JsonRpc.instCoeResponseErrorMessage","Lean.JsonRpc.instCoeStringRequestID","Lean.JsonRpc.instCoeJsonNumberRequestID","instCoeNatInt","instCoeStringError","Lean.Parser.instCoeStringParser","IO.AsyncList.instCoeListAsyncList","Lean.MessageData.instCoeStringMessageData","Lean.MessageData.instCoeFormatMessageData","Lean.MessageData.instCoeLevelMessageData","Lean.MessageData.instCoeExprMessageData","Lean.MessageData.instCoeNameMessageData","Lean.MessageData.instCoeSyntaxMessageData","Lean.MessageData.instCoeMVarIdMessageData","Lean.MessageData.instCoeOptionExprMessageData","Lean.MessageData.instCoeArrayExprMessageData","Lean.MessageData.instCoeListMessageData","Lean.MessageData.instCoeListExprMessageData","boolToProp","Lean.instCoeStringDataValue","Lean.instCoeBoolDataValue","Lean.instCoeNameDataValue","Lean.instCoeNatDataValue","Lean.instCoeIntDataValue","Lean.instCoeSyntaxDataValue","Lean.Rat.instCoeIntRat","Lean.instCoeStringName","Fin.coeToNat"],"BEq":["Std.Format.instBEqFlattenBehavior","Lean.Syntax.instBEqSyntax","Lean.Syntax.instBEqTSyntax","Lean.Meta.instBEqTransparencyMode","Lean.Meta.instBEqEtaStructMode","Lean.Meta.DSimp.instBEqConfig","Lean.Meta.Simp.instBEqConfig","Lean.Meta.instBEqSimpTheorem","Lean.Lsp.instBEqLeanFileProgressKind","Lean.Lsp.instBEqRpcRef","Nat.Linear.instBEqPolyCnstr","Lean.IR.Borrow.OwnedSet.instBEqKey","Lean.IR.Borrow.ParamMap.instBEqKey","Lean.instBEqData","Lean.instBEqLevelMVarId","Lean.Level.instBEqLevel","Lean.Json.instBEqJson","Lean.instBEqLocalInstance","Lean.Server.instBEqGoToKind","Lean.Elab.Tactic.instBEqCacheKey","Lean.instBEqHeadIndex","Lean.Meta.Linear.instBEqJustification","Lean.Meta.Linear.instBEqCnstrKind","Lean.Meta.Linear.instBEqCnstr","instBEq","instBEqNat","Lean.Name.instBEqName","Lean.instBEqLiteral","Lean.instBEqBinderInfo","Lean.instBEqData_1","Lean.instBEqFVarId","Lean.instBEqMVarId","Lean.Expr.instBEqExpr","Lean.ExprStructEq.instBEqExprStructEq","Substring.hasBeq","Lean.Elab.Tactic.instBEqSimpKind","Lean.instBEqDefinitionSafety","Lean.instBEqInternalExceptionId","instBEqProd","Lean.Compiler.instBEqSpecializeAttributeKind","Lean.Data.AC.instBEqExpr","Lean.Widget.instBEqTaggedText","Lean.Lsp.instBEqRefIdent","Lean.JsonRpc.instBEqRequestID","Lean.JsonRpc.instBEqErrorCode","Lean.JsonRpc.instBEqRequest","Lean.JsonRpc.instBEqNotification","Lean.JsonRpc.instBEqResponse","Lean.JsonRpc.instBEqResponseError","instBEqOrdering","Lean.IR.UnreachableBranches.Value.instBEqValue","Lean.instBEqLBool","Lean.Parser.instBEqError","Lean.Parser.instBEqOrElseOnAntiquotBehavior","Lean.Parser.instBEqLeadingIdentBehavior","IO.FS.instBEqFileType","IO.FS.instBEqSystemTime","Lean.instBEqAttributeApplicationTime","Lean.instBEqAttributeKind","Lean.Compiler.instBEqInlineAttributeKind","Lean.instBEqLOption","Lean.Elab.instBEqDefKind","Lean.instBEqMessageSeverity","Lean.Meta.instBEqAbstractMVarsResult","Lean.Meta.instBEqInfoCacheKey","Lean.Meta.DiscrTree.instBEqKey","Lean.instBEqDataValue","Lean.KVMap.instBEqKVMap","instBEqFloat","Lean.instBEqRat","Lean.instBEqOccurrences","List.instBEqList","instBEqOption","Lean.Lsp.instBEqDiagnosticSeverity","Lean.Lsp.instBEqDiagnosticCode","Lean.Lsp.instBEqDiagnosticTag","Lean.Lsp.instBEqDiagnosticRelatedInformation","Lean.Lsp.instBEqDiagnosticWith","Lean.Lsp.instBEqPublishDiagnosticsParams","Lean.Lsp.instBEqCancelParams","Lean.Lsp.instBEqPosition","Lean.Lsp.instBEqRange","Lean.Lsp.instBEqLocation","Lean.Meta.instBEqInstanceEntry","Lean.IR.instBEqVarId","Lean.IR.instBEqJoinPointId","Lean.IR.IRType.instBEqIRType","Lean.IR.instBEqArg","Lean.IR.instBEqLitVal","Lean.IR.instBEqCtorInfo","Lean.IR.instBEqFnBody","String.instBEqRange","Array.instBEqArray"],"Append":["Std.Format.instAppendFormat","Lean.Name.instAppendName","String.instAppendString","instAppendSubarray","ByteArray.instAppendByteArray","IO.AsyncList.instAppendAsyncList","Lean.MessageData.instAppendMessageData","Lean.MessageLog.instAppendMessageLog","Std.PersistentArray.instAppendPersistentArray","List.instAppendList","LSpec.instAppendTestSeq","Array.instAppendArray"],"Antisymm":["List.instAntisymmListLeInstLEList","Nat.instAntisymmNatLeInstLENat","Nat.instAntisymmNatNotLtInstLTNat"],"AndThen":["Lean.IR.MaxIndex.instAndThenCollector","Lean.IR.FreeIndices.instAndThenCollector","Lean.Parser.instAndThenParser","Lean.Compiler.atMostOnce.instAndThenVisitor"],"AndOp":["Nat.instAndOpNat","Fin.instAndOpFin","instAndOpUInt8","instAndOpUInt16","instAndOpUInt32","instAndOpUInt64","instAndOpUSize"],"Alternative":["Lean.PrettyPrinter.Delaborator.instAlternativeDelabM","Lean.MonadCacheT.instAlternativeMonadCacheT","StateRefT'.instAlternativeStateRefT'","Lean.Elab.Tactic.instAlternativeTacticM","StateT.instAlternativeStateT","Lean.Parsec.instAlternativeParsec","Lean.Meta.instAlternativeMetaM","ReaderT.instAlternativeReaderT","instAlternativeOption","OptionT.instAlternativeOptionT"],"Add":["instAddNat","Int.instAddInt","instAddFloat","Lean.Rat.instAddRat","Fin.instAddFin","instAddUInt8","instAddUInt16","instAddUInt32","instAddUInt64","instAddUSize"]},"importedBy":{"Std.ShareCommon":["Lean.Meta.Closure","Lean.Elab.DefView"],"Std.Data.RBTree":["Lean.Data.Json.Basic","Lean.Data.JsonRpc","Lean.Data.Name"],"Std.Data.RBMap":["Lean.Server.Watchdog","Lean.SubExpr","Lean.PrettyPrinter.Delaborator.SubExpr","Std.Data.RBTree","Lean.Server.FileWorker","Lean.PrettyPrinter.Delaborator.TopDownAnalyze","Lean.Data.PrefixTree","Lean.Data.Name","Lean.Data.Xml.Basic"],"Std.Data.PersistentHashSet":["Lean.Level","Std.ShareCommon"],"Std.Data.PersistentHashMap":["Lean.Level","Std.ShareCommon","Std.Data.PersistentHashSet","Lean.Data.SMap"],"Std.Data.PersistentArray":["Lean.LocalContext"],"Std.Data.HashSet":["Lean.Level","Std.ShareCommon","Lean.Data.Name"],"Std.Data.HashMap":["Lean.Level","Std.ShareCommon","Lean.Util.SCC","Lean.Environment","Lean.Util.MonadCache","Lean.Linter.UnusedVariables","Lean.Data.SMap"],"Std.Data.AssocList":["Lean.Meta.Tactic.FVarSubst","Std.Data.HashMap"],"Lean.Widget.UserWidget":["Lean.Widget"],"Lean.Widget.TaggedText":["Lean.Widget.InteractiveCode","Lean.Widget"],"Lean.Widget.InteractiveGoal":["Lean.Widget.InteractiveDiagnostic","Lean.Server.FileWorker.WidgetRequests","Lean.Widget","Lean.Server.FileWorker.RequestHandling"],"Lean.Widget.InteractiveDiagnostic":["Lean.Server.FileWorker.WidgetRequests","Lean.Widget","Lean.Server.FileWorker","Lean.Server.Snapshots"],"Lean.Widget.InteractiveCode":["Lean.Widget.InteractiveGoal","Lean.Server.FileWorker.WidgetRequests","Lean.Widget"],"Lean.Widget.Basic":["Lean.Server.FileWorker.WidgetRequests","Lean.Widget.InteractiveCode","Lean.Widget.UserWidget"],"Lean.Widget":["Lean"],"Lean.Util.Trace":["Lean.Util","Lean.CoreM","Lean.Elab.Util","Lean.Meta.Basic"],"Lean.Util.Sorry":["Lean.Log","Lean.Util","Lean.Elab.Term"],"Lean.Util.SCC":["Lean.Util","Lean.Elab.PreDefinition.Basic"],"Lean.Util.ReplaceLevel":["Lean.Util","Lean.Elab.Inductive","Lean.PrettyPrinter.Delaborator.TopDownAnalyze"],"Lean.Util.ReplaceExpr":["Lean.Util","Lean.Elab.Term","Lean.Meta.Match.MVarRenaming","Lean.Elab.Inductive","Lean.Compiler.CSimpAttr","Lean.Meta.Tactic.FVarSubst","Lean.Meta.Basic","Lean.ParserCompiler"],"Lean.Util.Recognizers":["Lean.Meta.AppBuilder","Lean.Meta.MatchUtil","Lean.Meta.Tactic.Simp.SimpTheorems","Lean.Meta.UnificationHint","Lean.Compiler.LCNF","Lean.Compiler.CSimpAttr","Lean.Meta.Tactic.Simp.SimpCongrTheorems","Lean.Meta.WHNF","Lean.Meta.Match.Match"],"Lean.Util.RecDepth":["Lean.Util","Lean.Elab.Term","Lean.CoreM","Lean.Meta.Basic"],"Lean.Util.Profile":["Lean.Util","Lean.Environment","Lean.Meta.SynthInstance","Lean.Elab.Frontend"],"Lean.Util.Paths":["Lean.Util","Lean.Server.Watchdog","Lean.Server.FileWorker"],"Lean.Util.Path":["Lean.Util","Lean.Server.GoTo","Lean.Util.Paths","Lean.Environment"],"Lean.Util.PPExt":["Lean.Util","Lean.Message","Lean.Meta.Basic"],"Lean.Util.OccursCheck":["Lean.Util","Lean.Meta.Basic"],"Lean.Util.MonadCache":["Lean.Util","Lean.Util.ForEachExpr","Lean.Meta.ForEachExpr","Lean.Meta.Reduce","Lean.MetavarContext","Lean.Exception"],"Lean.Util.MonadBacktrack":["Lean.Meta.Basic"],"Lean.Util.HasConstCache":["Lean.Util","Lean.Elab.PreDefinition.Structural.BRecOn","Lean.Elab.PreDefinition.WF.Fix"],"Lean.Util.ForEachExpr":["Lean.Util","Lean.Elab.SyntheticMVars","Lean.Meta.Tactic.Util","Lean.Compiler.CompilerM","Lean.Meta.Tactic.Replace"],"Lean.Util.FoldConsts":["Lean.Util","Lean.Meta.Closure","Lean.Elab.Print","Lean.Elab.DefView"],"Lean.Util.FindMVar":["Lean.Util","Lean.Elab.App","Lean.Meta.Tactic.Apply","Lean.PrettyPrinter.Delaborator.TopDownAnalyze"],"Lean.Util.FindLevelMVar":["Lean.Util","Lean.PrettyPrinter.Delaborator.TopDownAnalyze"],"Lean.Util.FindExpr":["Lean.Util","Lean.Util.Sorry","Lean.Environment","Lean.Elab.StructInst","Lean.MonadEnv","Lean.Meta.RecursorInfo"],"Lean.Util.CollectMVars":["Lean.Util","Lean.Meta.LevelDefEq","Lean.Elab.Tactic.Basic","Lean.Meta.Tactic.Simp.SimpCongrTheorems","Lean.Meta.CollectMVars"],"Lean.Util.CollectLevelParams":["Lean.Util","Lean.Elab.Declaration","Lean.Elab.BuiltinCommand","Lean.Elab.Inductive","Lean.PrettyPrinter.Delaborator.TopDownAnalyze","Lean.Elab.DefView","Lean.Meta.Match.Match"],"Lean.Util.CollectFVars":["Lean.Meta.CollectFVars","Lean.Util","Lean.Elab.Tactic.Induction","Lean.Elab.Match","Lean.Elab.PreDefinition.Eqns","Lean.Meta.Match.Match","Lean.Meta.GeneralizeVars"],"Lean.Util":["Lean"],"Lean.ToExpr":["Lean.ParserCompiler.Attribute","Lean.DeclarationRange","Lean.KeyedDeclsAttribute","Lean.Compiler.LCNF","Lean.Data.Position","Lean.Meta.WHNF"],"Lean.Syntax":["Lean.Elab.Quotation","Lean.PrettyPrinter.Delaborator.Basic","Lean.Parser.Basic","Lean.Attributes","Lean.Message","Lean.Util.PPExt"],"Lean.SubExpr":["Lean","Lean.Meta.ExprTraverse","Lean.PrettyPrinter.Delaborator.SubExpr","Lean.Meta.ExprLens"],"Lean.Structure":["Lean.Meta.AppBuilder","Lean.Elab.DeclModifiers","Lean.Elab.Term","Lean","Lean.Meta.Structure","Lean.Meta.WHNF","Lean.Meta.ExprDefEq"],"Lean.Server.Watchdog":["Lean.Server"],"Lean.Server.Utils":["Lean.Server.Watchdog","Lean.Widget.InteractiveDiagnostic","Lean.Server.GoTo","Lean.Server.References","Lean.Server.FileWorker.Utils","Lean.Server.FileWorker"],"Lean.Server.Snapshots":["Lean.Server.FileWorker.Utils","Lean.Server.FileWorker"],"Lean.Server.Rpc.RequestHandling":["Lean.Server.FileWorker.WidgetRequests","Lean.Server.Rpc"],"Lean.Server.Rpc.Deriving":["Lean.Server.Rpc"],"Lean.Server.Rpc.Basic":["Lean.Server.Rpc.RequestHandling","Lean.Server.Rpc.Deriving","Lean.Server.FileWorker.Utils","Lean.Widget.InteractiveCode","Lean.Widget.TaggedText","Lean.Server.FileWorker","Lean.Server.Requests","Lean.Server.Rpc","Lean.Widget.Basic"],"Lean.Server.Rpc":["Lean.Server"],"Lean.Server.Requests":["Lean.Server.Rpc.RequestHandling","Lean.Server.Watchdog","Lean.Server.FileWorker.RequestHandling"],"Lean.Server.References":["Lean.Server.Watchdog","Lean.Linter.UnusedVariables","Lean.Server.FileWorker","Lean.Server.FileWorker.RequestHandling","Lean.Elab.Frontend"],"Lean.Server.InfoUtils":["Lean.Linter.UnusedVariables","Lean.Server.Completion","Lean.Linter.Util","Lean.Server.Utils"],"Lean.Server.GoTo":["Lean.Server.FileWorker.RequestHandling"],"Lean.Server.FileWorker.WidgetRequests":["Lean.Server.FileWorker"],"Lean.Server.FileWorker.Utils":["Lean.Server.FileWorker","Lean.Server.Requests","Lean.Server.FileWorker.RequestHandling"],"Lean.Server.FileWorker.RequestHandling":["Lean.Server.FileWorker.WidgetRequests","Lean.Server.FileWorker"],"Lean.Server.FileWorker":["Lean.Server"],"Lean.Server.FileSource":["Lean.Server.Requests"],"Lean.Server.Completion":["Lean.Server.FileWorker.RequestHandling"],"Lean.Server.AsyncList":["Lean.Server.FileWorker.Utils","Lean.Server.FileWorker"],"Lean.Server":["Lean","Lean.Widget.UserWidget"],"Lean.ScopedEnvExtension":["Lean.Meta.Tactic.Simp.SimpTheorems","Lean.Meta.GlobalInstances","Lean.Meta.Tactic.ElimInfo","Lean","Lean.KeyedDeclsAttribute","Lean.Meta.UnificationHint","Lean.Parser.Extension","Lean.Compiler.CSimpAttr","Lean.Meta.Tactic.Simp.SimpCongrTheorems","Lean.Meta.Instances"],"Lean.Runtime":["Lean.Compiler.IR.RC","Lean","Lean.Compiler.IR.Boxing","Lean.Compiler.IR.EmitC"],"Lean.ResolveName":["Lean.Elab.Command","Lean.Elab.Quotation","Lean.Elab.Term","Lean","Lean.CoreM","Lean.Parser.Extension","Lean.Attributes"],"Lean.ReducibilityAttrs":["Lean","Lean.Meta.Basic"],"Lean.ProjFns":["Lean.PrettyPrinter.Delaborator.Basic","Lean","Lean.Compiler.LCNF","Lean.Structure","Lean.Compiler.ExternAttr","Lean.Meta.WHNF","Lean.Meta.ExprDefEq"],"Lean.PrettyPrinter.Parenthesizer":["Lean.Parser.Extra","Lean.PrettyPrinter"],"Lean.PrettyPrinter.Formatter":["Lean.Parser.Extra","Lean.PrettyPrinter"],"Lean.PrettyPrinter.Delaborator.TopDownAnalyze":["Lean.PrettyPrinter.Delaborator.Builtins","Lean.PrettyPrinter.Delaborator.Basic","Lean.PrettyPrinter.Delaborator"],"Lean.PrettyPrinter.Delaborator.SubExpr":["Lean.PrettyPrinter.Delaborator.Builtins","Lean.PrettyPrinter.Delaborator.Basic","Lean.PrettyPrinter.Delaborator","Lean.PrettyPrinter.Delaborator.TopDownAnalyze"],"Lean.PrettyPrinter.Delaborator.Options":["Lean.PrettyPrinter.Delaborator.Basic","Lean.PrettyPrinter.Delaborator","Lean.Elab.MutualDef","Lean.PrettyPrinter.Delaborator.TopDownAnalyze"],"Lean.PrettyPrinter.Delaborator.Builtins":["Lean.PrettyPrinter.Delaborator"],"Lean.PrettyPrinter.Delaborator.Basic":["Lean.PrettyPrinter.Delaborator.Builtins","Lean.PrettyPrinter.Delaborator"],"Lean.PrettyPrinter.Delaborator":["Lean.PrettyPrinter"],"Lean.PrettyPrinter.Basic":["Lean.PrettyPrinter.Parenthesizer","Lean.PrettyPrinter.Formatter"],"Lean.PrettyPrinter":["Lean.Server.Rpc.Deriving","Lean","Lean.Widget.InteractiveCode","Lean.Server.InfoUtils"],"Lean.ParserCompiler.Attribute":["Lean.PrettyPrinter.Parenthesizer","Lean.PrettyPrinter.Formatter","Lean.ParserCompiler"],"Lean.ParserCompiler":["Lean.PrettyPrinter"],"Lean.Parser.Term":["Lean.Elab.BindersUtil","Lean.Parser.Tactic","Lean.Elab.Tactic.Induction","Lean.Parser.Do","Lean.Elab.Quotation","Lean.Elab.Match","Lean.Elab.App","Lean.Server.Completion","Lean.Elab.Binders","Lean.Elab.Tactic.Match","Lean.Elab.StructInst","Lean.Elab.MutualDef","Lean.Elab.Deriving.Util","Lean.Parser","Lean.Parser.Command"],"Lean.Parser.Tactic":["Lean.Parser.Syntax","Lean.Parser"],"Lean.Parser.Syntax":["Lean.Elab.Syntax","Lean.Elab.Util","Lean.Parser"],"Lean.Parser.StrInterpolation":["Lean.Parser.Extension"],"Lean.Parser.Module":["Lean.PrettyPrinter","Lean.Elab.Import","Lean.Parser"],"Lean.Parser.Level":["Lean.Parser.Term","Lean.Elab.Level","Lean.Parser"],"Lean.Parser.Extra":["Lean.Parser.Level","Lean.Parser.Attr"],"Lean.Parser.Extension":["Lean.PrettyPrinter.Parenthesizer","Lean.PrettyPrinter.Formatter","Lean.Parser.Extra","Lean.Server.Completion","Lean.Elab.Util","Lean.ParserCompiler"],"Lean.Parser.Do":["Lean.Elab.Do","Lean.Parser","Lean.Parser.Command"],"Lean.Parser.Command":["Lean.Parser.Module","Lean.Elab.Command","Lean.Elab.Quotation.Precheck","Lean.Elab.Structure","Lean.Elab.Tactic.Basic","Lean.Parser.Syntax","Lean.Elab.PreDefinition.WF.TerminationHint","Lean.Elab.DeclarationRange","Lean.Elab.DefView","Lean.Parser"],"Lean.Parser.Basic":["Lean.Parser.StrInterpolation","Lean.Parser.Extension","Lean.Parser","Lean.Parser.Attr","Lean.Server.Utils"],"Lean.Parser.Attr":["Lean.Parser.Term","Lean.Elab.Attributes"],"Lean.Parser":["Lean.PrettyPrinter.Delaborator.Builtins","Lean"],"Lean.MonadEnv":["Lean.DeclarationRange","Lean.CoreM","Lean.Compiler.ImplementedByAttr","Lean.LazyInitExtension","Lean.DocString","Lean.Elab.Attributes","Lean.Util.Trace"],"Lean.Modifiers":["Lean.Elab.DeclModifiers","Lean.ResolveName","Lean"],"Lean.MetavarContext":["Lean","Lean.Meta.Closure","Lean.Util.OccursCheck","Lean.Message","Lean.Util.PPExt"],"Lean.Meta.WHNF":["Lean.Meta.Coe","Lean.Meta","Lean.Meta.SynthInstance","Lean.ParserCompiler","Lean.Meta.ExprDefEq","Lean.Meta.DiscrTree"],"Lean.Meta.UnificationHint":["Lean.Meta","Lean.Meta.ExprDefEq"],"Lean.Meta.TransparencyMode":["Lean.Meta.Basic"],"Lean.Meta.Transform":["Lean.Compiler.Decl","Lean.Meta.Coe","Lean.Meta.IndPredBelow","Lean.Meta.Tactic.Delta","Lean.PrettyPrinter.Delaborator.Basic","Lean.Elab.Deriving.DecEq","Lean.Elab.Deriving.Repr","Lean.Meta.Tactic.Simp.Main","Lean.Elab.BuiltinNotation","Lean.Compiler.LCNF","Lean.Elab.PreDefinition.Structural.Preprocess","Lean.Elab.PreDefinition.Basic","Lean.Meta","Lean.Elab.MutualDef","Lean.Elab.Deriving.Ord","Lean.Elab.PreDefinition.WF.Ite","Lean.Meta.Injective","Lean.Elab.Deriving.FromToJson","Lean.Elab.Deriving.BEq"],"Lean.Meta.Tactic.Util":["Lean.Meta.Tactic.Assert","Lean.Meta.Tactic.Assumption","Lean.Meta.Tactic.Constructor","Lean.Meta.Tactic.Simp.SimpAll","Lean.Meta.Tactic.Refl","Lean.Meta.Tactic.Intro","Lean.Meta.Tactic.Clear","Lean.Meta.Tactic.Simp.Main","Lean.Meta.Tactic.Induction","Lean.Meta.Tactic.Generalize","Lean.Meta.Tactic.Apply","Lean.Meta.Tactic.Rename","Lean.Meta.Tactic.Subst","Lean.Meta.Tactic.Replace"],"Lean.Meta.Tactic.UnifyEq":["Lean.Meta.Tactic.Simp.Main","Lean.Meta.Tactic.Cases"],"Lean.Meta.Tactic.Unfold":["Lean.Elab.Tactic.Unfold","Lean.Meta.Tactic"],"Lean.Meta.Tactic.Subst":["Lean.Meta.Match.CaseValues","Lean.Elab.Tactic.Basic","Lean.Meta.Tactic.Injection","Lean.Meta.Tactic.Cases","Lean.Meta.Injective"],"Lean.Meta.Tactic.SplitIf":["Lean.Meta.Tactic","Lean.Meta.Match.MatchEqs"],"Lean.Meta.Tactic.Split":["Lean.Elab.PreDefinition.Structural.Eqns","Lean.Elab.Tactic.Split","Lean.Elab.PreDefinition.Eqns","Lean.Meta.Tactic","Lean.Elab.PreDefinition.WF.Eqns"],"Lean.Meta.Tactic.Simp.Types":["Lean.Meta.Tactic.Simp.Rewrite","Lean.Meta.Tactic.Simp.Main","Lean.Meta.Injective","Lean.Meta.Tactic.Simp"],"Lean.Meta.Tactic.Simp.SimpTheorems":["Lean.Meta.Tactic.Simp.Types","Lean.Meta.Tactic.Simp"],"Lean.Meta.Tactic.Simp.SimpCongrTheorems":["Lean.Meta.Tactic.Simp.Types","Lean.Meta.Tactic.Simp"],"Lean.Meta.Tactic.Simp.SimpAll":["Lean.Meta.Tactic.Simp"],"Lean.Meta.Tactic.Simp.Rewrite":["Lean.Meta.Tactic.Simp.Main","Lean.Meta.Tactic.Simp"],"Lean.Meta.Tactic.Simp.Main":["Lean.Elab.PreDefinition.Structural.Eqns","Lean.Meta.Tactic.Simp.SimpAll","Lean.Meta.Tactic.Unfold","Lean.Meta.Tactic.Acyclic","Lean.Elab.Tactic.Conv.Congr","Lean.Meta.Tactic.SplitIf","Lean.Elab.PreDefinition.WF.Fix","Lean.Meta.Tactic.Simp"],"Lean.Meta.Tactic.Simp":["Lean.Elab.Tactic.Simp","Lean.Meta.Tactic"],"Lean.Meta.Tactic.Rewrite":["Lean.Elab.Tactic.Conv.Rewrite","Lean.Elab.Tactic.Rewrite","Lean.Meta.Tactic","Lean.Elab.PreDefinition.WF.Eqns"],"Lean.Meta.Tactic.Revert":["Lean.Meta.Tactic.Assert","Lean.Meta.Tactic.Induction","Lean.Elab.Tactic.Basic","Lean.Meta.Tactic.Subst","Lean.Meta.Tactic","Lean.Meta.Tactic.Replace"],"Lean.Meta.Tactic.Replace":["Lean.Elab.Tactic.Rewrite","Lean.Meta.Tactic.Delta","Lean.Meta.Tactic.Simp.Main","Lean.Elab.Tactic.Simp","Lean.Elab.Tactic.Conv.Basic","Lean.Meta.Tactic"],"Lean.Meta.Tactic.Rename":["Lean.Elab.PreDefinition.WF.Rel","Lean.Meta.Tactic","Lean.Elab.Tactic.ElabTerm"],"Lean.Meta.Tactic.Refl":["Lean.Meta.Tactic.AC.Main","Lean.Elab.PreDefinition.Eqns","Lean.Meta.Tactic.Congr","Lean.Meta.Tactic","Lean.Elab.Tactic.BuiltinTactic","Lean.Meta.Injective","Lean.Meta.Match.MatchEqs"],"Lean.Meta.Tactic.LinearArith.Solver":["Lean.Meta.Tactic.LinearArith.Nat.Solver","Lean.Meta.Tactic.LinearArith"],"Lean.Meta.Tactic.LinearArith.Simp":["Lean.Meta.Tactic.Simp.Rewrite","Lean.Meta.Tactic.LinearArith"],"Lean.Meta.Tactic.LinearArith.Nat.Solver":["Lean.Meta.Tactic.LinearArith.Nat"],"Lean.Meta.Tactic.LinearArith.Nat.Simp":["Lean.Meta.Tactic.LinearArith.Nat","Lean.Meta.Tactic.LinearArith.Simp"],"Lean.Meta.Tactic.LinearArith.Nat.Basic":["Lean.Meta.Tactic.LinearArith.Nat.Solver","Lean.Meta.Tactic.LinearArith.Nat","Lean.Meta.Tactic.LinearArith.Nat.Simp"],"Lean.Meta.Tactic.LinearArith.Nat":["Lean.Meta.Tactic.LinearArith","Lean.Meta.Tactic.LinearArith.Main"],"Lean.Meta.Tactic.LinearArith.Main":["Lean.Meta.Tactic.LinearArith"],"Lean.Meta.Tactic.LinearArith.Basic":["Lean.Meta.Tactic.LinearArith.Simp"],"Lean.Meta.Tactic.LinearArith":["Lean.Meta.Tactic"],"Lean.Meta.Tactic.Intro":["Lean.Meta.Tactic.Assert","Lean.Elab.Tactic.Generalize","Lean.Elab.PreDefinition.WF.Rel","Lean.Meta.Tactic.Induction","Lean.Meta.Tactic.Generalize","Lean.Elab.Tactic.Basic","Lean.Meta.Tactic.Subst","Lean.Meta.Tactic.Injection","Lean.Meta.Tactic","Lean.Meta.Tactic.Replace"],"Lean.Meta.Tactic.Injection":["Lean.Meta.Tactic.Cases","Lean.Meta.Tactic.UnifyEq","Lean.Meta.Injective","Lean.Elab.Tactic.Injection","Lean.Meta.Match.MatchEqs"],"Lean.Meta.Tactic.Induction":["Lean.Elab.Tactic.Induction","Lean.Meta.Tactic.Cases","Lean.Meta.Tactic"],"Lean.Meta.Tactic.Generalize":["Lean.Elab.Tactic.Generalize","Lean.Meta.Tactic.Split","Lean.Meta.Tactic"],"Lean.Meta.Tactic.FVarSubst":["Lean.Meta.Tactic.Assert","Lean.Meta.Tactic.Induction","Lean.Meta.Tactic.Subst"],"Lean.Meta.Tactic.ElimInfo":["Lean.Elab.Tactic.Induction","Lean.Elab.App","Lean.Meta.Tactic"],"Lean.Meta.Tactic.Delta":["Lean.Meta.Tactic.Unfold","Lean.Meta.Tactic","Lean.Elab.Tactic.Delta","Lean.Meta.Match.MatchEqs"],"Lean.Meta.Tactic.Contradiction":["Lean.Elab.Tactic.Basic","Lean.Meta.Tactic","Lean.Meta.Match.Match","Lean.Meta.Match.MatchEqs"],"Lean.Meta.Tactic.Constructor":["Lean.Meta.Tactic","Lean.Elab.Tactic.ElabTerm"],"Lean.Meta.Tactic.Congr":["Lean.Elab.Tactic.Conv.Congr","Lean.Meta.Tactic","Lean.Elab.Tactic.Congr"],"Lean.Meta.Tactic.Clear":["Lean.Meta.Match.CaseValues","Lean.Meta.Tactic.Simp.SimpAll","Lean.Meta.Tactic.Cleanup","Lean.Meta.Tactic.Simp.Main","Lean.Meta.Tactic.Induction","Lean.Elab.Tactic.Basic","Lean.Meta.Tactic.Subst","Lean.Meta.Tactic.Revert","Lean.Meta.Tactic.Injection","Lean.Meta.Tactic","Lean.Meta.Tactic.Replace"],"Lean.Meta.Tactic.Cleanup":["Lean.Meta.Tactic","Lean.Elab.PreDefinition.WF.Fix"],"Lean.Meta.Tactic.Cases":["Lean.Elab.Tactic.Induction","Lean.Meta.Tactic.SplitIf","Lean.Meta.Tactic.Contradiction","Lean.Meta.Tactic","Lean.Meta.Match.Match","Lean.Meta.Injective"],"Lean.Meta.Tactic.AuxLemma":["Lean.Meta.Tactic.Simp.SimpTheorems","Lean.Meta.Tactic"],"Lean.Meta.Tactic.Assumption":["Lean.Elab.Tactic.Basic","Lean.Meta.Tactic.Contradiction","Lean.Meta.Tactic.Congr","Lean.Meta.Tactic","Lean.Meta.Injective"],"Lean.Meta.Tactic.Assert":["Lean.Meta.Match.CaseArraySizes","Lean.Meta.Tactic.Subst","Lean.Meta.Tactic.Injection","Lean.Meta.Tactic.Congr","Lean.Meta.Tactic.Cases","Lean.Meta.Tactic","Lean.Elab.Tactic.ElabTerm","Lean.Meta.Tactic.Replace"],"Lean.Meta.Tactic.Apply":["Lean.Elab.PreDefinition.Structural.Eqns","Lean.Meta.Tactic.Constructor","Lean.Meta.Tactic.Rewrite","Lean.Meta.Tactic.Refl","Lean.Elab.PreDefinition.WF.Rel","Lean.Elab.PreDefinition.Eqns","Lean.Server.Completion","Lean.Meta.Tactic.Contradiction","Lean.Elab.Tactic.Conv.Basic","Lean.Meta.Tactic.Congr","Lean.Meta.Tactic","Lean.Elab.Tactic.ElabTerm","Lean.Meta.Injective","Lean.Meta.Match.MatchEqs"],"Lean.Meta.Tactic.Acyclic":["Lean.Meta.Tactic.Cases"],"Lean.Meta.Tactic.AC.Main":["Lean.Meta.Tactic.AC"],"Lean.Meta.Tactic.AC":["Lean.Meta.Tactic"],"Lean.Meta.Tactic":["Lean.Meta.IndPredBelow","Lean.Meta"],"Lean.Meta.SynthInstance":["Lean.Meta.AppBuilder","Lean.Meta.Tactic.Simp.Rewrite","Lean.Meta.UnificationHint","Lean.Meta.Tactic.Induction","Lean.Meta.Tactic.Apply","Lean.Meta","Lean.PrettyPrinter.Delaborator.TopDownAnalyze"],"Lean.Meta.Structure":["Lean.Elab.Structure","Lean.Elab.StructInst","Lean.Meta"],"Lean.Meta.SizeOf":["Lean.Elab.Structure","Lean.Elab.Deriving.SizeOf","Lean.Elab.Inductive","Lean.Meta"],"Lean.Meta.ReduceEval":["Lean.Meta","Lean.ParserCompiler"],"Lean.Meta.Reduce":["Lean.Elab.Command","Lean.Meta.Tactic.Refl","Lean.Meta.IndPredBelow","Lean.Meta","Lean.Elab.Tactic.Conv.Basic"],"Lean.Meta.RecursorInfo":["Lean.Elab.Tactic.Induction","Lean.Meta.Tactic.Induction","Lean.Meta"],"Lean.Meta.PPGoal":["Lean.Widget.InteractiveGoal","Lean.Elab.Tactic.Basic","Lean.Meta.Tactic.Util","Lean.Meta","Lean.Elab.InfoTree.Main"],"Lean.Meta.Offset":["Lean.Meta.ReduceEval","Lean.Meta.Tactic.LinearArith.Nat.Basic","Lean.Meta.ExprDefEq"],"Lean.Meta.MatchUtil":["Lean.Meta.Tactic.Rewrite","Lean.Meta.Tactic.Acyclic","Lean.Meta.Tactic.Subst","Lean.Meta.Tactic.Contradiction","Lean.Meta.Tactic.Injection","Lean.Meta.PPGoal","Lean.Meta.Tactic.Replace"],"Lean.Meta.Match.Value":["Lean.Meta.Match.CaseValues"],"Lean.Meta.Match.MatcherInfo":["Lean.Server.Completion","Lean.Compiler.LCNF","Lean.Meta.Match.Basic","Lean.Compiler.Util","Lean.Meta.WHNF","Lean.Meta.DiscrTree"],"Lean.Meta.Match.MatchPatternAttr":["Lean.Meta.Match","Lean.Elab.PatternVar","Lean.Elab.Match","Lean.Meta.WHNF"],"Lean.Meta.Match.MatchEqsExt":["Lean.Meta.Tactic.Simp.Rewrite","Lean.Meta.Match.MatchEqs"],"Lean.Meta.Match.MatchEqs":["Lean.Meta.Match","Lean.Meta.Tactic.Split"],"Lean.Meta.Match.Match":["Lean.Meta.Match","Lean.Meta.IndPredBelow","Lean.Elab.Match","Lean.PrettyPrinter.Delaborator.Basic","Lean.Elab.PreDefinition.Structural.BRecOn","Lean.Elab.PreDefinition.WF.Fix","Lean.Meta.Match.MatchEqs"],"Lean.Meta.Match.MVarRenaming":["Lean.Meta.Match.Match"],"Lean.Meta.Match.CaseValues":["Lean.Meta.Match","Lean.Meta.Match.CaseArraySizes","Lean.Meta.Match.Match"],"Lean.Meta.Match.CaseArraySizes":["Lean.Meta.Match","Lean.Meta.Match.Basic"],"Lean.Meta.Match.Basic":["Lean.Meta.Match.Match"],"Lean.Meta.Match":["Lean.Meta"],"Lean.Meta.LevelDefEq":["Lean.Meta"],"Lean.Meta.KExprMap":["Lean.Meta.Tactic.LinearArith.Nat.Basic"],"Lean.Meta.KAbstract":["Lean.Meta.Tactic.Rewrite","Lean.Meta.CasesOn","Lean.Elab.App","Lean.Meta.Tactic.Generalize","Lean.Elab.BuiltinNotation","Lean.Meta","Lean.Meta.GeneralizeTelescope"],"Lean.Meta.Instances":["Lean.Meta.SizeOf","Lean.Meta","Lean.Meta.SynthInstance"],"Lean.Meta.Injective":["Lean.Elab.Structure","Lean.Elab.GenInjective","Lean.Elab.Inductive","Lean.Meta"],"Lean.Meta.InferType":["Lean.Meta.Offset","Lean.Meta.FunInfo","Lean.Meta.LevelDefEq","Lean.Meta.Check","Lean.Compiler.CompilerM","Lean.Meta","Lean.Meta.ExprDefEq","Lean.Meta.DecLevel","Lean.Meta.PPGoal","Lean.Meta.DiscrTree"],"Lean.Meta.Inductive":["Lean.Elab.Deriving.DecEq","Lean.Elab.Deriving.Repr","Lean.Elab.Deriving.Hashable","Lean.Meta"],"Lean.Meta.IndPredBelow":["Lean.Elab.Inductive","Lean.Meta","Lean.Elab.PreDefinition.Structural.IndPred"],"Lean.Meta.GlobalInstances":["Lean.Meta.GetConst","Lean.Meta.Instances"],"Lean.Meta.GetConst":["Lean.Meta.WHNF"],"Lean.Meta.GeneralizeVars":["Lean.Elab.Tactic.Induction","Lean.Elab.Match","Lean.Meta"],"Lean.Meta.GeneralizeTelescope":["Lean.Meta","Lean.Meta.Match.Match"],"Lean.Meta.FunInfo":["Lean.Meta.ACLt","Lean.Meta.Reduce","Lean.Meta","Lean.Meta.WHNF","Lean.Meta.ExprDefEq","Lean.Meta.DiscrTree"],"Lean.Meta.ForEachExpr":["Lean.Elab.Match","Lean.Elab.PreDefinition.Structural.Basic","Lean.Meta","Lean.Elab.DefView","Lean.Meta.ExprDefEq"],"Lean.Meta.ExprTraverse":["Lean.Meta"],"Lean.Meta.ExprLens":["Lean.Meta"],"Lean.Meta.ExprDefEq":["Lean.Meta"],"Lean.Meta.Eval":["Lean.Elab.Eval","Lean.Elab.Tactic.Config","Lean.Meta"],"Lean.Meta.Eqns":["Lean.Elab.PreDefinition.Structural.Eqns","Lean.Meta.Tactic.Unfold","Lean.Meta.Tactic.Simp.SimpTheorems","Lean.Elab.PreDefinition.Eqns","Lean.Meta"],"Lean.Meta.DiscrTreeTypes":["Lean.Meta.Basic"],"Lean.Meta.DiscrTree":["Lean.Meta.Tactic.Simp.SimpTheorems","Lean.Meta.UnificationHint","Lean.Meta","Lean.Meta.Instances"],"Lean.Meta.DecLevel":["Lean.Meta.AppBuilder","Lean.Meta.LevelDefEq","Lean.Meta"],"Lean.Meta.Constructions":["Lean.Meta.IndPredBelow","Lean.Elab.ComputedFields","Lean.Elab.Inductive","Lean.Meta"],"Lean.Meta.CongrTheorems":["Lean.Meta.Tactic.Simp.Types","Lean.Meta.Tactic.Simp.Main","Lean.Meta","Lean.Meta.Tactic.Congr"],"Lean.Meta.CollectMVars":["Lean.Elab.Tactic.Induction","Lean.Elab.Term","Lean.Meta.Tactic.Apply","Lean.Elab.Tactic.ElabTerm"],"Lean.Meta.CollectFVars":["Lean.Meta.Tactic.Cleanup","Lean.Elab.Inductive","Lean.Meta","Lean.Meta.Match.Basic","Lean.Elab.DefView"],"Lean.Meta.Coe":["Lean.Elab.Term","Lean.Meta"],"Lean.Meta.Closure":["Lean.Elab.Structure","Lean.Meta.AbstractNestedProofs","Lean.Meta","Lean.Elab.MutualDef","Lean.Meta.Match.Match"],"Lean.Meta.Check":["Lean.Meta.AppBuilder","Lean.Compiler.Decl","Lean.Meta.Tactic.Constructor","Lean.Meta.Tactic.Rewrite","Lean.Meta.CasesOn","Lean.Compiler.TerminalCases","Lean.Meta.Tactic.ElimInfo","Lean.Elab.Tactic.Generalize","Lean.Meta.Tactic.LinearArith.Nat.Basic","Lean.Meta.Eval","Lean.Meta.Closure","Lean.Elab.MutualDef","Lean.Meta.Match.Basic","Lean.Meta.SynthInstance","Lean.Meta.GeneralizeTelescope","Lean.Elab.DeclUtil","Lean.Meta.Match.Match","Lean.Meta.ExprDefEq"],"Lean.Meta.CasesOn":["Lean.Elab.PreDefinition.Structural.BRecOn","Lean.Meta","Lean.Elab.PreDefinition.WF.Fix"],"Lean.Meta.Basic":["Lean.Meta.CollectFVars","Lean.Meta.MatchUtil","Lean.Meta.ACLt","Lean.Meta.ForEachExpr","Lean.Meta.GlobalInstances","Lean.SubExpr","Lean.Elab.Config","Lean.Meta.Reduce","Lean.Meta.Match.MatchEqsExt","Lean.Meta.Tactic.ElimInfo","Lean.Meta.Eqns","Lean.Meta.FunInfo","Lean.Meta.KAbstract","Lean.Meta.InferType","Lean.Meta.LevelDefEq","Lean.Meta.Closure","Lean.Meta.Match.MatcherInfo","Lean.Meta.ExprTraverse","Lean.Elab.PreDefinition.Structural.Basic","Lean.PrettyPrinter.Delaborator.SubExpr","Lean.Meta.Inductive","Lean.Meta.Tactic.Util","Lean.Meta","Lean.Meta.ExprLens","Lean.Meta.SynthInstance","Lean.Meta.Transform","Lean.Meta.Tactic.Simp.SimpCongrTheorems","Lean.Elab.Exception","Lean.Meta.AbstractMVars","Lean.Meta.Tactic.AuxLemma","Lean.ParserCompiler","Lean.Compiler.ExternAttr","Lean.Elab.DeclUtil","Lean.Meta.WHNF","Lean.Meta.GeneralizeVars","Lean.Meta.KExprMap","Lean.Meta.RecursorInfo","Lean.Meta.DecLevel","Lean.Elab.InfoTree.Main","Lean.Meta.CollectMVars","Lean.Meta.DiscrTree"],"Lean.Meta.AppBuilder":["Lean.Meta.Tactic.AC.Main","Lean.Meta.Tactic.Simp.Rewrite","Lean.Meta.SizeOf","Lean.Meta.Tactic.Rewrite","Lean.Meta.Tactic.Simp.Types","Lean.Meta.Constructions","Lean.Meta.Tactic.Simp.SimpTheorems","Lean.Elab.Term","Lean.Meta.Offset","Lean.Meta.Eqns","Lean.Elab.Structure","Lean.Meta.CongrTheorems","Lean.Meta.Tactic.Util","Lean.Meta.Tactic.Subst","Lean.Meta.Structure","Lean.Meta","Lean.Meta.Tactic.Injection","Lean.Elab.PreDefinition.MkInhabitant","Lean.Meta.Tactic.Cases","Lean.Meta.Tactic.Replace"],"Lean.Meta.AbstractNestedProofs":["Lean.Elab.PreDefinition.Basic","Lean.Meta"],"Lean.Meta.AbstractMVars":["Lean.Meta","Lean.Meta.SynthInstance"],"Lean.Meta.ACLt":["Lean.Meta.Tactic.Simp.Rewrite"],"Lean.Meta":["Lean"],"Lean.Message":["Lean.Parser.Module","Lean.Util.Sorry","Lean.Exception","Lean.Parser.Basic","Lean.Util.Trace","Lean.Elab.InfoTree.Main","Lean.Data.Lsp.Diagnostics","Lean.Widget.Basic","Lean.Elab.InfoTree.Types"],"Lean.Log":["Lean.Elab.Command","Lean.Elab.Open","Lean.Elab.Term","Lean","Lean.Elab.SetOption","Lean.CoreM","Lean.Elab.Level","Lean.Deprecated","Lean.Elab.Util","Lean.Elab.DeclarationRange","Lean.MonadEnv"],"Lean.LocalContext":["Lean.MetavarContext","Lean","Lean.Environment","Lean.Meta.Tactic.FVarSubst","Lean.Util.CollectFVars"],"Lean.LoadDynlib":["Lean","Lean.Server.FileWorker"],"Lean.Linter.Util":["Lean.Linter.UnusedVariables","Lean.Linter","Lean.Linter.Builtin","Lean.Linter.MissingDocs"],"Lean.Linter.UnusedVariables":["Lean.Widget.InteractiveDiagnostic","Lean.Linter"],"Lean.Linter.MissingDocs":["Lean.Elab.Tactic.Config","Lean.Linter"],"Lean.Linter.Builtin":["Lean.Linter"],"Lean.Linter":["Lean"],"Lean.Level":["Lean.Expr"],"Lean.LazyInitExtension":["Lean","Lean.Meta.Tactic.SplitIf"],"Lean.KeyedDeclsAttribute":["Lean.PrettyPrinter.Parenthesizer","Lean.Elab.Quotation.Precheck","Lean.PrettyPrinter.Formatter","Lean.PrettyPrinter.Delaborator.Basic","Lean.Parser.Extension","Lean.PrettyPrinter.Basic","Lean.Elab.Util"],"Lean.InternalExceptionId":["Lean","Lean.CoreM","Lean.Exception","Lean.PrettyPrinter.Basic","Lean.Elab.Exception"],"Lean.ImportingFlag":["Lean.Environment","Lean.Data.Options"],"Lean.Hygiene":["Lean.Level","Lean.ResolveName","Lean.Elab.Term","Lean.LocalContext"],"Lean.HeadIndex":["Lean.Meta.KAbstract","Lean.Elab.Tactic.Conv.Pattern","Lean.Meta.KExprMap"],"Lean.Expr":["Lean.Util.ReplaceExpr","Lean.Util.ForEachExpr","Lean.Compiler.BorrowedAnnotation","Lean.Elab.RecAppSyntax","Lean.Util.ReplaceLevel","Lean.Meta.ForEachExpr","Lean.Util.FoldConsts","Lean.HeadIndex","Lean.Util.FindMVar","Lean.Meta.Match.Value","Lean.Util.CollectMVars","Lean.Meta.Tactic.LinearArith.Basic","Lean.Compiler.ConstFolding","Lean.Declaration","Lean.Util.CollectLevelParams","Lean.Util.FindExpr","Lean.Data.Lsp.Internal","Lean.Meta.Tactic.FVarSubst","Lean.Util.CollectFVars","Lean.Meta.DiscrTreeTypes","Lean.ToExpr","Lean.Util.FindLevelMVar","Lean.Compiler.ExternAttr","Lean.Util.HasConstCache","Lean.LocalContext"],"Lean.Exception":["Lean.ResolveName","Lean.Util.Sorry","Lean.CoreM","Lean.MonadEnv"],"Lean.Eval":["Lean","Lean.CoreM","Lean.Meta.Basic"],"Lean.Environment":["Lean.Compiler.Old","Lean.Compiler.IR.CompilerM","Lean.Compiler.NoncomputableAttr","Lean.Compiler.ClosedTermCache","Lean.Util.FoldConsts","Lean","Lean.Compiler.IR.CtorLayout","Lean.ScopedEnvExtension","Lean.CoreM","Lean.AuxRecursor","Lean.Server.Completion","Lean.Modifiers","Lean.Meta.Closure","Lean.ProjFns","Lean.Server.FileWorker","Lean.Compiler.NeverExtractAttr","Lean.Util.Recognizers","Lean.Parser.Basic","Lean.Compiler.InitAttr","Lean.Message","Lean.Meta.Basic","Lean.Structure","Lean.Compiler.ExternAttr","Lean.MonadEnv","Lean.Compiler.AtMostOnce","Lean.Widget.UserWidget","Lean.Util.PPExt","Lean.Eval"],"Lean.Elab.Util":["Lean.Elab.Open","Lean.Elab.Syntax","Lean.Elab.Tactic.Basic","Lean.Elab.Attributes"],"Lean.Elab.Term":["Lean.Server.Rpc.Deriving","Lean.Elab.Do","Lean.Elab.Command","Lean.Elab","Lean.Elab.Quotation.Precheck","Lean.Elab.Quotation","Lean.Elab.BuiltinTerm","Lean.PrettyPrinter.Delaborator.Basic","Lean.Elab.App","Lean.Elab.Binders","Lean.Elab.Tactic","Lean.Elab.SyntheticMVars","Lean.Elab.Tactic.Basic","Lean.Elab.PreDefinition.Basic","Lean.Elab.Deriving.Util","Lean.Elab.Quotation.Util","Lean.Elab.MatchAltView","Lean.Elab.Arg"],"Lean.Elab.Tactic.Unfold":["Lean.Elab.Tactic","Lean.Elab.Tactic.Conv.Unfold"],"Lean.Elab.Tactic.Split":["Lean.Elab.Tactic.Conv.Simp","Lean.Elab.Tactic"],"Lean.Elab.Tactic.Simp":["Lean.Elab.Tactic.Conv.Simp","Lean.Elab.Tactic.Conv.Pattern","Lean.Elab.Tactic"],"Lean.Elab.Tactic.Rewrite":["Lean.Meta.Tactic.AC.Main","Lean.Elab.Tactic.Conv.Rewrite","Lean.Elab.Tactic"],"Lean.Elab.Tactic.Meta":["Lean.Elab.Tactic"],"Lean.Elab.Tactic.Match":["Lean.Elab.Tactic"],"Lean.Elab.Tactic.Location":["Lean.Elab.Tactic.Rewrite","Lean.Elab.Tactic.Split","Lean.Elab.Tactic.Simp","Lean.Elab.Tactic","Lean.Elab.Tactic.Unfold","Lean.Elab.Tactic.Delta"],"Lean.Elab.Tactic.Injection":["Lean.Elab.Tactic"],"Lean.Elab.Tactic.Induction":["Lean.Elab.Tactic.Match","Lean.Elab.Tactic"],"Lean.Elab.Tactic.Generalize":["Lean.Elab.Tactic.Induction","Lean.Elab.Tactic"],"Lean.Elab.Tactic.ElabTerm":["Lean.Elab.Tactic.Conv.Change","Lean.Elab.Tactic.Rewrite","Lean.Elab.Tactic.Induction","Lean.Elab.Tactic.Generalize","Lean.Elab.Tactic.Simp","Lean.Elab.Tactic","Lean.Elab.Tactic.BuiltinTactic","Lean.Elab.Tactic.Calc","Lean.Elab.Tactic.Injection","Lean.Elab.Tactic.Location"],"Lean.Elab.Tactic.Delta":["Lean.Elab.Tactic.Conv.Delta","Lean.Elab.Tactic"],"Lean.Elab.Tactic.Conv.Unfold":["Lean.Elab.Tactic.Conv"],"Lean.Elab.Tactic.Conv.Simp":["Lean.Elab.Tactic.Conv.Unfold","Lean.Elab.Tactic.Conv"],"Lean.Elab.Tactic.Conv.Rewrite":["Lean.Elab.Tactic.Conv"],"Lean.Elab.Tactic.Conv.Pattern":["Lean.Elab.Tactic.Conv"],"Lean.Elab.Tactic.Conv.Delta":["Lean.Elab.Tactic.Conv"],"Lean.Elab.Tactic.Conv.Congr":["Lean.Elab.Tactic.Conv"],"Lean.Elab.Tactic.Conv.Change":["Lean.Elab.Tactic.Conv"],"Lean.Elab.Tactic.Conv.Basic":["Lean.Elab.Tactic.Conv.Change","Lean.Elab.Tactic.Conv.Rewrite","Lean.Elab.Tactic.Conv.Simp","Lean.Elab.Tactic.Conv.Delta","Lean.Elab.Tactic.Conv.Pattern","Lean.Elab.Tactic.Conv.Congr","Lean.Elab.Tactic.Conv"],"Lean.Elab.Tactic.Conv":["Lean.Elab.Tactic"],"Lean.Elab.Tactic.Congr":["Lean.Elab.Tactic"],"Lean.Elab.Tactic.Config":["Lean.Elab.Tactic.Rewrite","Lean.Elab.Tactic.Simp"],"Lean.Elab.Tactic.Calc":["Lean.Elab.Tactic"],"Lean.Elab.Tactic.Cache":["Lean.Elab.Command","Lean.Elab.Tactic"],"Lean.Elab.Tactic.BuiltinTactic":["Lean.Elab.Tactic","Lean.Elab.Tactic.Conv.Basic"],"Lean.Elab.Tactic.Basic":["Lean.Meta.Tactic.AC.Main","Lean.Elab.Tactic.Rewrite","Lean.Elab.Tactic.Split","Lean.Elab.Tactic.Config","Lean.Elab.Tactic.Simp","Lean.Elab.Tactic.Match","Lean.Elab.Tactic","Lean.Elab.SyntheticMVars","Lean.Elab.Tactic.Conv.Basic","Lean.Elab.Tactic.Unfold","Lean.Elab.Tactic.ElabTerm","Lean.Elab.PreDefinition.WF.Fix","Lean.Elab.Tactic.BuiltinTactic","Lean.Elab.Tactic.Congr","Lean.Elab.Tactic.Delta","Lean.Elab.Tactic.Location","Lean.Elab.Tactic.Cache","Lean.Elab.Tactic.Meta"],"Lean.Elab.Tactic":["Lean.Elab"],"Lean.Elab.SyntheticMVars":["Lean.Elab.Command","Lean.Elab.Eval","Lean.Elab.Match","Lean.Elab.App","Lean.Elab.Tactic.Config","Lean.Elab.PreDefinition.WF.Rel","Lean.Elab.BuiltinNotation","Lean.Elab.LetRec","Lean.Elab.DefView","Lean.Elab.Tactic.ElabTerm","Lean.Elab.Tactic.Meta"],"Lean.Elab.Syntax":["Lean.Elab.MacroArgUtil","Lean.Elab","Lean.Elab.Notation","Lean.Elab.MacroRules"],"Lean.Elab.Structure":["Lean.Elab","Lean.Elab.Declaration"],"Lean.Elab.StructInst":["Lean.Elab"],"Lean.Elab.SetOption":["Lean.Elab.Command","Lean.Elab.Term"],"Lean.Elab.RecAppSyntax":["Lean.Elab","Lean.Elab.App","Lean.Elab.PreDefinition.Structural.BRecOn","Lean.Elab.PreDefinition.Basic","Lean.Elab.PreDefinition.WF.Fix"],"Lean.Elab.Quotation.Util":["Lean.Elab.Do","Lean.Elab.Quotation.Precheck","Lean.Elab.Quotation"],"Lean.Elab.Quotation.Precheck":["Lean.Elab.Quotation","Lean.Elab.Binders"],"Lean.Elab.Quotation":["Lean.Elab"],"Lean.Elab.Print":["Lean.Elab"],"Lean.Elab.PreDefinition.WF.TerminationHint":["Lean.Elab.PreDefinition.WF.Main","Lean.Elab.PreDefinition.WF.Rel"],"Lean.Elab.PreDefinition.WF.Rel":["Lean.Elab.PreDefinition.WF.Main"],"Lean.Elab.PreDefinition.WF.PackMutual":["Lean.Elab.PreDefinition.WF.Main"],"Lean.Elab.PreDefinition.WF.PackDomain":["Lean.Elab.PreDefinition.WF.Main"],"Lean.Elab.PreDefinition.WF.Main":["Lean.Elab.PreDefinition.WF"],"Lean.Elab.PreDefinition.WF.Ite":["Lean.Elab.PreDefinition.WF.Main"],"Lean.Elab.PreDefinition.WF.Fix":["Lean.Elab.PreDefinition.WF.Main"],"Lean.Elab.PreDefinition.WF.Eqns":["Lean.Elab.PreDefinition.WF.Main","Lean.Elab.ComputedFields"],"Lean.Elab.PreDefinition.WF":["Lean.Elab.PreDefinition.Main","Lean.Elab.PreDefinition"],"Lean.Elab.PreDefinition.Structural.SmartUnfolding":["Lean.Elab.PreDefinition.Structural.Main"],"Lean.Elab.PreDefinition.Structural.Preprocess":["Lean.Elab.PreDefinition.Structural.Main"],"Lean.Elab.PreDefinition.Structural.Main":["Lean.Elab.PreDefinition.Structural"],"Lean.Elab.PreDefinition.Structural.IndPred":["Lean.Elab.PreDefinition.Structural.Main"],"Lean.Elab.PreDefinition.Structural.FindRecArg":["Lean.Elab.PreDefinition.Structural.Main"],"Lean.Elab.PreDefinition.Structural.Eqns":["Lean.Elab.PreDefinition.Structural.Main"],"Lean.Elab.PreDefinition.Structural.Basic":["Lean.Elab.PreDefinition.Structural.Eqns","Lean.Elab.PreDefinition.Structural.BRecOn","Lean.Elab.PreDefinition.Structural.SmartUnfolding","Lean.Elab.PreDefinition.Structural.IndPred","Lean.Elab.PreDefinition.Structural.Main","Lean.Elab.PreDefinition.Structural.FindRecArg","Lean.Elab.PreDefinition.WF.Fix"],"Lean.Elab.PreDefinition.Structural.BRecOn":["Lean.Elab.PreDefinition.Structural.Main","Lean.Elab.PreDefinition.WF.Fix"],"Lean.Elab.PreDefinition.Structural":["Lean.Elab.PreDefinition.Main","Lean.Elab.PreDefinition"],"Lean.Elab.PreDefinition.MkInhabitant":["Lean.Elab.PreDefinition.Main","Lean.Elab.PreDefinition"],"Lean.Elab.PreDefinition.Main":["Lean.Elab.PreDefinition"],"Lean.Elab.PreDefinition.Eqns":["Lean.Elab.PreDefinition.Structural.Eqns","Lean.Elab.PreDefinition","Lean.Elab.PreDefinition.WF.Eqns"],"Lean.Elab.PreDefinition.Basic":["Lean.Elab.PreDefinition.Structural.Eqns","Lean.Elab.PreDefinition.WF.PackDomain","Lean.Elab.PreDefinition.WF.Main","Lean.Elab.PreDefinition.WF.PackMutual","Lean.Elab.PreDefinition.WF.Rel","Lean.Elab.PreDefinition.Main","Lean.Elab.PreDefinition.Structural.BRecOn","Lean.Elab.PreDefinition.Structural.SmartUnfolding","Lean.Elab.PreDefinition","Lean.Elab.PreDefinition.Structural.IndPred","Lean.Elab.PreDefinition.WF.Eqns","Lean.Elab.PreDefinition.WF.Fix"],"Lean.Elab.PreDefinition":["Lean.Elab","Lean.Elab.MutualDef"],"Lean.Elab.PatternVar":["Lean.Elab.Do","Lean.Elab","Lean.Elab.Match"],"Lean.Elab.Open":["Lean.Elab.Term","Lean.Elab.BuiltinCommand"],"Lean.Elab.Notation":["Lean.Elab"],"Lean.Elab.MutualDef":["Lean.Elab","Lean.Elab.Declaration","Lean.Elab.Deriving.Basic"],"Lean.Elab.Mixfix":["Lean.Elab"],"Lean.Elab.MatchAltView":["Lean.Elab.PatternVar"],"Lean.Elab.Match":["Lean.Elab","Lean.Elab.Tactic.Match","Lean.Elab.MutualDef"],"Lean.Elab.MacroRules":["Lean.Elab"],"Lean.Elab.MacroArgUtil":["Lean.Elab.ElabRules","Lean.Elab.Macro"],"Lean.Elab.Macro":["Lean.Elab"],"Lean.Elab.Level":["Lean.Elab.Term"],"Lean.Elab.LetRec":["Lean.Elab"],"Lean.Elab.InfoTree.Types":["Lean.Elab.InfoTree","Lean.CoreM","Lean.Elab.InfoTree.Main"],"Lean.Elab.InfoTree.Main":["Lean.Elab.InfoTree"],"Lean.Elab.InfoTree":["Lean.Elab.Command","Lean.Elab.Term","Lean.Elab.SetOption","Lean.Linter.UnusedVariables","Lean.Compiler.ImplementedByAttr","Lean.Elab.Util","Lean.Widget.Basic"],"Lean.Elab.Inductive":["Lean.Elab","Lean.Elab.Declaration","Lean.Elab.Structure"],"Lean.Elab.Import":["Lean.Server.Watchdog","Lean.Elab","Lean.Server.Snapshots","Lean.Elab.Frontend"],"Lean.Elab.GenInjective":["Lean.Elab"],"Lean.Elab.Frontend":["Lean.Elab"],"Lean.Elab.Extra":["Lean.Elab"],"Lean.Elab.Exception":["Lean.Elab.DeclModifiers","Lean.Elab","Lean.Elab.Level","Lean.Elab.Util"],"Lean.Elab.Eval":["Lean.Elab","Lean.Elab.BuiltinTerm","Lean.Elab.BuiltinCommand","Lean.Widget.UserWidget"],"Lean.Elab.ElabRules":["Lean.Elab"],"Lean.Elab.Do":["Lean.Elab"],"Lean.Elab.Deriving.Util":["Lean.Server.Rpc.Deriving","Lean.Elab.Deriving","Lean.Elab.Deriving.DecEq","Lean.Elab.Deriving.Repr","Lean.Elab.Deriving.Hashable","Lean.Elab.Deriving.Ord","Lean.Elab.Deriving.FromToJson","Lean.Elab.Deriving.BEq"],"Lean.Elab.Deriving.SizeOf":["Lean.Elab.Deriving"],"Lean.Elab.Deriving.Repr":["Lean.Elab.Deriving"],"Lean.Elab.Deriving.Ord":["Lean.Elab.Deriving"],"Lean.Elab.Deriving.Inhabited":["Lean.Elab.Deriving"],"Lean.Elab.Deriving.Hashable":["Lean.Elab.Deriving"],"Lean.Elab.Deriving.FromToJson":["Lean.Elab.Deriving"],"Lean.Elab.Deriving.DecEq":["Lean.Elab.Deriving"],"Lean.Elab.Deriving.Basic":["Lean.Server.Rpc.Deriving","Lean.Elab.Deriving","Lean.Elab.Deriving.DecEq","Lean.Elab.Deriving.Repr","Lean.Elab.Deriving.Hashable","Lean.Elab.Deriving.SizeOf","Lean.Elab.Inductive","Lean.Elab.Deriving.Inhabited","Lean.Elab.Deriving.Ord","Lean.Elab.Deriving.FromToJson","Lean.Elab.Deriving.BEq"],"Lean.Elab.Deriving.BEq":["Lean.Elab.Deriving"],"Lean.Elab.Deriving":["Lean.Elab"],"Lean.Elab.DefView":["Lean.Elab.Declaration","Lean.Elab.Inductive","Lean.Elab.PreDefinition.Basic","Lean.Elab.MutualDef"],"Lean.Elab.DeclarationRange":["Lean.Elab","Lean.Elab.Declaration","Lean.Elab.Structure","Lean.Elab.BuiltinCommand","Lean.Elab.MutualDef","Lean.Elab.LetRec"],"Lean.Elab.Declaration":["Lean.Elab"],"Lean.Elab.DeclUtil":["Lean.Elab.DeclModifiers","Lean.Elab.Declaration","Lean.Elab.Structure","Lean.Elab.Inductive","Lean.Elab.DefView"],"Lean.Elab.DeclModifiers":["Lean.Elab.Command","Lean.Elab.Term","Lean.Elab.Structure","Lean.Elab.LetRec"],"Lean.Elab.Config":["Lean.Elab","Lean.Elab.Term","Lean.PrettyPrinter.Delaborator.TopDownAnalyze"],"Lean.Elab.ComputedFields":["Lean.Elab.Inductive"],"Lean.Elab.Command":["Lean.Server.Rpc.Deriving","Lean.Elab","Lean.Elab.Syntax","Lean.Elab.Structure","Lean.Linter.UnusedVariables","Lean.Elab.Print","Lean.Elab.BuiltinCommand","Lean.Elab.GenInjective","Lean.Elab.Inductive","Lean.Server.Requests","Lean.Server.Snapshots","Lean.Elab.MutualDef","Lean.Elab.AuxDef","Lean.Elab.DefView","Lean.Elab.Deriving.Basic","Lean.Linter.Util","Lean.Elab.Frontend"],"Lean.Elab.Calc":["Lean.Elab","Lean.Elab.Tactic.Calc"],"Lean.Elab.BuiltinTerm":["Lean.Elab"],"Lean.Elab.BuiltinNotation":["Lean.Elab","Lean.Elab.Notation","Lean.Elab.Tactic.Simp"],"Lean.Elab.BuiltinCommand":["Lean.Elab"],"Lean.Elab.BindersUtil":["Lean.Elab.Do","Lean.Elab.Match","Lean.Elab.Binders"],"Lean.Elab.Binders":["Lean.Elab.Command","Lean.Elab","Lean.Elab.App","Lean.Elab.Structure","Lean.Elab.Tactic.Basic","Lean.Elab.StructInst","Lean.Elab.LetRec","Lean.Elab.DefView"],"Lean.Elab.AuxDiscr":["Lean.Elab.Match","Lean.PrettyPrinter.Delaborator.Basic","Lean.Elab.Binders"],"Lean.Elab.AuxDef":["Lean.Elab","Lean.Elab.ElabRules","Lean.Elab.Notation","Lean.Elab.MacroRules"],"Lean.Elab.AutoBound":["Lean.Elab.Term","Lean.Elab.Level"],"Lean.Elab.Attributes":["Lean.Elab.DeclModifiers","Lean.Elab.Term","Lean.Elab.Mixfix","Lean.Elab.LetRec"],"Lean.Elab.Arg":["Lean.Elab.PatternVar","Lean.Elab","Lean.Elab.Match","Lean.Elab.App"],"Lean.Elab.App":["Lean.Elab","Lean.Elab.Tactic.Induction","Lean.Elab.Extra","Lean.Elab.BuiltinNotation","Lean.Elab.StructInst","Lean.Elab.Calc"],"Lean.Elab":["Lean"],"Lean.DocString":["Lean.Elab.DeclModifiers","Lean","Lean.Elab.BuiltinCommand","Lean.Parser.Extension","Lean.Elab.Util"],"Lean.Deprecated":["Lean.Elab.Term","Lean"],"Lean.DeclarationRange":["Lean","Lean.Parser.Extension","Lean.Elab.Util","Lean.DocString","Lean.Server.Requests","Lean.Elab.DeclarationRange","Lean.Server.FileWorker.RequestHandling"],"Lean.Declaration":["Lean.Environment","Lean.Compiler.ImplementedByAttr","Lean.MonadEnv"],"Lean.Data.Xml.Parser":["Lean.Data.Xml"],"Lean.Data.Xml.Basic":["Lean.Data.Xml.Parser","Lean.Data.Xml"],"Lean.Data.Xml":["Lean.Data"],"Lean.Data.Trie":["Lean.Parser.Basic","Lean.Data"],"Lean.Data.SSet":["Lean.Data.Name"],"Lean.Data.SMap":["Lean.Environment","Lean.Data","Lean.Data.SSet"],"Lean.Data.Rat":["Lean.Meta.Tactic.LinearArith.Solver","Lean.Data"],"Lean.Data.PrefixTree":["Lean.Data.NameTrie","Lean.Data"],"Lean.Data.Position":["Lean.Util.Profile","Lean.Data.Lsp.Utf16","Lean.Parser.Basic","Lean.Data","Lean.Message","Lean.Elab.InfoTree.Main","Lean.Server.Utils"],"Lean.Data.Parsec":["Lean.Data.Json.Parser","Lean.Data.Xml.Parser","Lean.Data"],"Lean.Data.Options":["Lean.Data.Format","Lean.CoreM","Lean.Exception","Lean.Util.RecDepth","Lean.PrettyPrinter.Delaborator.Options","Lean.Data","Lean.Elab.AutoBound","Lean.Hygiene","Lean.Linter.Util"],"Lean.Data.OpenDecl":["Lean.ResolveName","Lean.Data","Lean.Message","Lean.Util.PPExt"],"Lean.Data.Occurrences":["Lean.Meta.KAbstract","Lean.Data"],"Lean.Data.NameTrie":["Lean.ScopedEnvExtension","Lean.Data"],"Lean.Data.Name":["Lean.Level","Lean.Util.Path","Lean.Data.OpenDecl","Lean.Syntax","Lean.Data","Lean.Compiler.NameMangling","Lean.Data.KVMap","Lean.Hygiene","Lean.Compiler.IR.Basic"],"Lean.Data.Lsp.Workspace":["Lean.Data.Lsp","Lean.Data.Lsp.InitShutdown"],"Lean.Data.Lsp.Utf16":["Lean.Data.Lsp","Lean.Server.Completion","Lean.Elab.DeclarationRange","Lean.Data.Lsp.Diagnostics"],"Lean.Data.Lsp.TextSync":["Lean.Data.Lsp","Lean.Data.Lsp.Capabilities"],"Lean.Data.Lsp.LanguageFeatures":["Lean.Data.Lsp","Lean.Server.Completion","Lean.Data.Lsp.Capabilities"],"Lean.Data.Lsp.Ipc":["Lean.Data.Lsp"],"Lean.Data.Lsp.Internal":["Lean.Data.Lsp"],"Lean.Data.Lsp.InitShutdown":["Lean.Data.Lsp"],"Lean.Data.Lsp.Extra":["Lean.Server.Rpc.RequestHandling","Lean.Server.Rpc.Basic","Lean.Data.Lsp","Lean.Data.Lsp.Ipc"],"Lean.Data.Lsp.Diagnostics":["Lean.Data.Lsp","Lean.Data.Lsp.Ipc"],"Lean.Data.Lsp.Communication":["Lean.Data.Lsp","Lean.Data.Lsp.Ipc"],"Lean.Data.Lsp.Client":["Lean.Data.Lsp"],"Lean.Data.Lsp.Capabilities":["Lean.Data.Lsp","Lean.Server.Completion","Lean.Data.Lsp.InitShutdown"],"Lean.Data.Lsp.Basic":["Lean.Data.Lsp","Lean.Data.Lsp.TextSync","Lean.Data.Lsp.Extra","Lean.Data.Lsp.Workspace","Lean.Data.Lsp.LanguageFeatures","Lean.Data.Lsp.Utf16","Lean.Data.Lsp.Client","Lean.Data.Lsp.Internal","Lean.Data.Lsp.Diagnostics"],"Lean.Data.Lsp":["Lean.Server.Watchdog","Lean.Server.FileSource","Lean.Server.FileWorker","Lean.Server.Requests","Lean.Server.FileWorker.RequestHandling","Lean.Data","Lean.Server.Utils"],"Lean.Data.LOption":["Lean.Data","Lean.Meta.Basic"],"Lean.Data.LBool":["Lean.Meta.Offset","Lean.Meta.InferType","Lean.Data"],"Lean.Data.KVMap":["Lean.Expr","Lean.Data","Lean.Data.Options","Lean.Compiler.IR.Basic"],"Lean.Data.JsonRpc":["Lean.Data.Lsp.Communication","Lean.Data","Lean.Data.Lsp.Capabilities","Lean.Data.Lsp.Basic"],"Lean.Data.Json.Stream":["Lean.Data.Json"],"Lean.Data.Json.Printer":["Lean.Data.Json.Stream","Lean.Data.Json","Lean.Data.Json.FromToJson"],"Lean.Data.Json.Parser":["Lean.Data.Json.Stream","Lean.Data.Json"],"Lean.Data.Json.FromToJson":["Lean.Data.Json.Stream","Lean.Data.Json","Lean.Server.GoTo","Lean.Widget.TaggedText","Lean.Server.FileWorker","Lean.Elab.Deriving.FromToJson"],"Lean.Data.Json.Basic":["Lean.Data.Json.Parser","Lean.Data.Json.Printer","Lean.Data.Json.FromToJson"],"Lean.Data.Json":["Lean.Server.Watchdog","Lean.Data.Lsp.TextSync","Lean.SubExpr","Lean.Util.Paths","Lean.Data.Lsp.Workspace","Lean.Data.Lsp.LanguageFeatures","Lean.Data.Lsp.Client","Lean.Data.Lsp.InitShutdown","Lean.Data.Lsp.Ipc","Lean.Elab.Import","Lean.Data.JsonRpc","Lean.Server.Requests","Lean.Server.FileWorker.RequestHandling","Lean.Data","Lean.Widget.UserWidget","Lean.Elab.InfoTree.Main","Lean.Data.Lsp.Diagnostics","Lean.Data.Lsp.Basic","Lean.Elab.InfoTree.Types"],"Lean.Data.FuzzyMatching":["Lean.Server.Watchdog","Lean.Server.Completion"],"Lean.Data.Format":["Lean.Level","Lean.Data.Json.Printer","Lean.Compiler.IR.UnboxResult","Lean.Syntax","Lean.Data","Lean.Data.Trie","Lean.Data.Position","Lean.Hygiene","Lean.Compiler.IR.Basic"],"Lean.Data":["Lean"],"Lean.CoreM":["Lean.PrettyPrinter.Parenthesizer","Lean.PrettyPrinter.Formatter","Lean","Lean.Attributes","Lean.Meta.Basic"],"Lean.Compiler.Util":["Lean.Compiler.TerminalCases","Lean.Compiler.ConstFolding","Lean.Compiler.LCNF"],"Lean.Compiler.TerminalCases":["Lean.Compiler.Main"],"Lean.Compiler.Specialize":["Lean.Compiler"],"Lean.Compiler.Old":["Lean.Compiler","Lean.MonadEnv"],"Lean.Compiler.NoncomputableAttr":["Lean.Elab.PreDefinition.Basic","Lean.Compiler"],"Lean.Compiler.NeverExtractAttr":["Lean.Compiler"],"Lean.Compiler.NameMangling":["Lean.Compiler.IR.EmitC"],"Lean.Compiler.Main":["Lean.Compiler"],"Lean.Compiler.LCNF":["Lean.Compiler.Decl","Lean.Compiler"],"Lean.Compiler.InlineAttrs":["Lean.Compiler.LCNF","Lean.Compiler","Lean.Meta.Basic"],"Lean.Compiler.InitAttr":["Lean.ParserCompiler.Attribute","Lean.KeyedDeclsAttribute","Lean.Elab.Util","Lean.Compiler.IR.EmitUtil","Lean.Compiler.IR.EmitC"],"Lean.Compiler.ImplementedByAttr":["Lean.Elab.ComputedFields","Lean.Compiler"],"Lean.Compiler.IR.UnboxResult":["Lean.Compiler.IR"],"Lean.Compiler.IR.Sorry":["Lean.Compiler.IR"],"Lean.Compiler.IR.SimpCase":["Lean.Compiler.IR","Lean.Compiler.IR.EmitC"],"Lean.Compiler.IR.ResetReuse":["Lean.Compiler.IR"],"Lean.Compiler.IR.RC":["Lean.Compiler.IR"],"Lean.Compiler.IR.PushProj":["Lean.Compiler.IR"],"Lean.Compiler.IR.NormIds":["Lean.Compiler.IR.ExpandResetReuse","Lean.Compiler.IR.Borrow","Lean.Compiler.IR","Lean.Compiler.IR.EmitC","Lean.Compiler.IR.PushProj"],"Lean.Compiler.IR.LiveVars":["Lean.Compiler.IR.RC","Lean.Compiler.IR.ResetReuse"],"Lean.Compiler.IR.FreeVars":["Lean.Compiler.IR.ExpandResetReuse","Lean.Compiler.IR.ElimDeadVars","Lean.Compiler.IR.LiveVars","Lean.Compiler.IR.Boxing","Lean.Compiler.IR.PushProj"],"Lean.Compiler.IR.Format":["Lean.Compiler.IR.CompilerM","Lean.Compiler.IR.SimpCase","Lean.Compiler.IR.CtorLayout","Lean.Compiler.IR.ElimDeadBranches","Lean.Compiler.IR.ResetReuse","Lean.Compiler.IR","Lean.Compiler.IR.Checker"],"Lean.Compiler.IR.ExpandResetReuse":["Lean.Compiler.IR"],"Lean.Compiler.IR.EmitUtil":["Lean.Compiler.IR.EmitC"],"Lean.Compiler.IR.EmitC":["Lean.Compiler.IR"],"Lean.Compiler.IR.ElimDeadVars":["Lean.Compiler.IR.Boxing","Lean.Compiler.IR"],"Lean.Compiler.IR.ElimDeadBranches":["Lean.Compiler.IR"],"Lean.Compiler.IR.CtorLayout":["Lean.Compiler.IR"],"Lean.Compiler.IR.CompilerM":["Lean.Compiler.IR.RC","Lean.Compiler.IR.ExpandResetReuse","Lean.Compiler.IR.Borrow","Lean.KeyedDeclsAttribute","Lean.Compiler.IR.Boxing","Lean.Compiler.IR.Sorry","Lean.Compiler.IR.ElimDeadBranches","Lean.Compiler.IR","Lean.Compiler.IR.Checker","Lean.Compiler.IR.EmitUtil","Lean.Compiler.IR.EmitC"],"Lean.Compiler.IR.Checker":["Lean.Compiler.IR"],"Lean.Compiler.IR.Boxing":["Lean.Compiler.IR","Lean.Compiler.IR.EmitC"],"Lean.Compiler.IR.Borrow":["Lean.Compiler.IR"],"Lean.Compiler.IR.Basic":["Lean.Compiler.IR.CompilerM","Lean.Compiler.IR.SimpCase","Lean.Compiler.IR.ElimDeadVars","Lean.Compiler.IR.LiveVars","Lean.Compiler.IR.Boxing","Lean.Compiler.IR.FreeVars","Lean.Compiler.IR.Format","Lean.Compiler.IR.ElimDeadBranches","Lean.Compiler.IR.UnboxResult","Lean.Compiler.IR.ResetReuse","Lean.Compiler.IR","Lean.Compiler.IR.NormIds","Lean.Compiler.IR.PushProj"],"Lean.Compiler.IR":["Lean.Compiler"],"Lean.Compiler.FFI":["Lean.Compiler"],"Lean.Compiler.ExternAttr":["Lean.Compiler.IR.Boxing","Lean.Compiler","Lean.Meta.Match.Match","Lean.Compiler.IR.Basic"],"Lean.Compiler.ExportAttr":["Lean.Compiler.IR.Borrow","Lean.Compiler.IR.EmitC"],"Lean.Compiler.Decl":["Lean.Compiler.TerminalCases","Lean.Compiler.Main","Lean.Compiler"],"Lean.Compiler.ConstFolding":["Lean.Compiler"],"Lean.Compiler.CompilerM":["Lean.Compiler.LCNF","Lean.Compiler","Lean.Compiler.Util"],"Lean.Compiler.ClosedTermCache":["Lean.Compiler.IR.Boxing","Lean.Compiler"],"Lean.Compiler.CSimpAttr":["Lean.Compiler"],"Lean.Compiler.BorrowedAnnotation":["Lean.Elab.BuiltinNotation"],"Lean.Compiler.AtMostOnce":["Lean.Compiler"],"Lean.Compiler":["Lean"],"Lean.Class":["Lean","Lean.Meta.Basic"],"Lean.AuxRecursor":["Lean.DeclarationRange","Lean.Meta.Constructions","Lean","Lean.MonadEnv","Lean.Meta.WHNF","Lean.Meta.RecursorInfo"],"Lean.Attributes":["Lean.ParserCompiler.Attribute","Lean.Class","Lean","Lean.KeyedDeclsAttribute","Lean.ScopedEnvExtension","Lean.Compiler.ImplementedByAttr","Lean.Compiler.Specialize","Lean.Deprecated","Lean.Compiler.ExportAttr","Lean.Compiler.NeverExtractAttr","Lean.Compiler.InitAttr","Lean.Compiler.InlineAttrs","Lean.Elab.Attributes","Lean.Compiler.ExternAttr","Lean.Meta.Match.MatchPatternAttr","Lean.ReducibilityAttrs"],"Lean":["LSpec.SlimCheck.Checkable","LSpec.LSpec"],"LSpec.SlimCheck.Sampleable":["LSpec.SlimCheck.Checkable"],"LSpec.SlimCheck.Gen":["LSpec.SlimCheck.Sampleable"],"LSpec.SlimCheck.Control.Random":["LSpec.SlimCheck.Gen"],"LSpec.SlimCheck.Control.DefaultRange":["LSpec.SlimCheck.Control.Random"],"LSpec.SlimCheck.Checkable":["LSpec","LSpec.LSpec"],"LSpec.LSpec":["LSpec.Instances","LSpec"],"LSpec.Instances":["LSpec"],"Init.WFTactics":["Init","Init.Data.String.Extra","Init.Data.Nat.Div","Init.Data.Array.Basic"],"Init.WF":["Init.WFTactics","Init","Init.Data.Nat.Div"],"Init.Util":["Init.Data.List.BasicAux","Init","Init.Data.Option.BasicAux","Init.Data.String.Extra","Init.Data.Array.Basic"],"Init.Tactics":["Init","Init.SizeOf"],"Init.System.ST":["Init.System.IO"],"Init.System.Platform":["Init.System.FilePath","Init.System","Init.Data.UInt"],"Init.System.IOError":["Init.System.IO"],"Init.System.IO":["Lean.Data.Json.Stream","Lean.Server.Watchdog","Init.Data.Random","Lean.Data.Lsp.Communication","Init.Control.StateRef","Lean.Data.Lsp.Ipc","Lean.Data.JsonRpc","Init.System","Lean.Server.FileWorker","Lean.Server.Snapshots","Lean.Server.AsyncList"],"Init.System.FilePath":["Init.System.IO","Lean.Server.Utils"],"Init.System":["Init"],"Init.SizeOfLemmas":["Init"],"Init.SizeOf":["Init.WFTactics","Init.Core","Init.SizeOfLemmas","Init.WF"],"Init.SimpLemmas":["Init.Control.Lawful","Init.Data.Nat.Linear","Init.Data.Prod","Init","Init.Data.Nat.Basic","Init.Data.String.Extra","Init.Data.List.Basic"],"Init.Prelude":["Init","Init.Notation","Init.Core","Init.Coe"],"Init.NotationExtra":["Init.Data.Array.BasicAux","Init","Init.Conv","Init.Hints","Init.Classical","Init.Data.Nat.Log2"],"Init.Notation":["Init","Init.Tactics"],"Init.Meta":["Init.Data.Format.Syntax","Init","Init.SizeOfLemmas","Init.NotationExtra","Init.Data.Range","Init.Data.OfScientific","Init.Data.ToString.Macro"],"Init.Hints":["Init"],"Init.Data.UInt":["Init.Data.ToString.Basic","Init.Data.Basic","Init.Data.Repr","Init.Data.Hashable","Init.Data.ByteArray.Basic","Init.System.IOError","Init.Data","Init.Data.Char.Basic","Init.Data.Array.Basic"],"Init.Data.ToString.Macro":["Init.Data.Format.Macro","Init.Data.ToString","Init.System.IO"],"Init.Data.ToString.Basic":["Init.Util","Init.Data.Basic","Init.System.FilePath","Init.Data.ToString","Init.Control.EState","Init.System.IOError","Init.Data.Format.Instances","Init.Data.Float","Init.Data.ToString.Macro","Init.Data.Array.Basic"],"Init.Data.ToString":["Lean.Elab.BuiltinNotation","Init.Data","Init.NotationExtra"],"Init.Data.String.Extra":["Init.Data.Basic","Init.Data.String"],"Init.Data.String.Basic":["Init.Data.Format.Basic","Init.Data.ToString.Basic","Init.Util","Init.Data.Basic","Init.System.FilePath","Init.System.IOError","Init.Data.String"],"Init.Data.String":["Init.Data.Hashable","Lean.Data.Lsp.Utf16","Init.Data.Ord","Init.Data","Init.System.IO"],"Init.Data.Stream":["Init.Data"],"Init.Data.Repr":["Init.Data.ToString.Basic","Init.Data.Basic","Init.System.FilePath","Init.Data.Array.Basic"],"Init.Data.Range":["Init.Data","Init.Data.Stream"],"Init.Data.Random":["Init.Data"],"Init.Data.Prod":["Init.Data.Nat.Linear","Init.Data"],"Init.Data.Ord":["Init.Data","Init.System.IO"],"Init.Data.Option.Instances":["Init.Data.Option"],"Init.Data.Option.BasicAux":["Init.Meta","Init.Data.Option"],"Init.Data.Option.Basic":["Init.Data.Basic","Init.Data.Option.BasicAux","Init.Data.String.Basic","Init.Data.ByteArray.Basic","Init.Data.Option","Init.Data.Option.Instances","Init.Control.Option","Init.Data.FloatArray.Basic"],"Init.Data.Option":["Init.Data"],"Init.Data.OfScientific":["Init.Data"],"Init.Data.Nat.SOM":["Init.Data.Nat"],"Init.Data.Nat.Log2":["Init.Data.Nat"],"Init.Data.Nat.Linear":["Init.Data.List.BasicAux","Init.Data.Array.BasicAux","Init.Data.Nat","Init.Data.Nat.SOM","Init.Data.String.Extra","Init.SizeOfLemmas","Init.Data.Array.Mem","Init.Data.Nat.Log2"],"Init.Data.Nat.Gcd":["Init.Data.Nat"],"Init.Data.Nat.Div":["Init.Data.ToString.Basic","Init.Data.Nat.Bitwise","Init.Data.Nat","Init.Data.Repr","Init.Data.Nat.Gcd","Init.Data.Int.Basic","Init.Data.Fin.Basic"],"Init.Data.Nat.Control":["Init.Data.Nat"],"Init.Data.Nat.Bitwise":["Init.Data.Nat","Init.Data.Fin.Basic"],"Init.Data.Nat.Basic":["Init.Data.Nat.Linear","Init.Data.Basic","Init.Data.Nat.Bitwise","Init.Data.Nat","Init.WF","Init.System.Platform","Init.Data.List.Basic","Init.Data.Nat.Control","Init.Data.Nat.Div","Init.Data.Array.Basic"],"Init.Data.Nat":["Init.Data","Init.Data.OfScientific"],"Init.Data.List.Control":["Init.Data.List"],"Init.Data.List.BasicAux":["Init.Data.Nat.SOM","Init.Data.List","Init.Data.Array.Mem"],"Init.Data.List.Basic":["Init.Data.List.BasicAux","Init.Data.Nat.Linear","Init.Data.Basic","Init.Data.String.Basic","Init.Data.Int.Basic","Init.Data.List.Control","Init.Data.List"],"Init.Data.List":["Init.Data.AC","Init.Data"],"Init.Data.Int.Basic":["Init.Data.Format.Basic","Init.Data.ToString.Basic","Init.Data.Int","Init.Data.Repr","Init.Data.Float"],"Init.Data.Int":["Init.Data.Random","Init.Data.Ord","Init.Data"],"Init.Data.Hashable":["Init.Data"],"Init.Data.Format.Syntax":["Init.Data.Format"],"Init.Data.Format.Macro":["Init.Data.Format.Syntax","Init.Data.Format"],"Init.Data.Format.Instances":["Init.Data.Format.Syntax","Init.Data.Format"],"Init.Data.Format.Basic":["Init.Data.ToString.Basic","Init.Data.Repr","Init.Data.Format.Macro","Init.Data.Format","Init.Data.Format.Instances"],"Init.Data.Format":["Init.Data"],"Init.Data.FloatArray.Basic":["Init.Data.FloatArray"],"Init.Data.FloatArray":["Init.Data"],"Init.Data.Float":["Init.Data","Init.Data.OfScientific","Init.Data.FloatArray.Basic"],"Init.Data.Fin.Basic":["Init.Data.Basic","Init.Data.Fin","Init.Data.UInt","Init.Data.Array.Basic"],"Init.Data.Fin":["Init.Data"],"Init.Data.Char.Basic":["Init.Data.Basic","Init.Data.String.Basic","Init.Data.Char"],"Init.Data.Char":["Init.Data"],"Init.Data.ByteArray.Basic":["Init.Data.ByteArray"],"Init.Data.ByteArray":["Lean.Server.Watchdog","Init.Data.String.Extra","Init.Data","Init.System.IO"],"Init.Data.Basic":["Init","Init.Data"],"Init.Data.Array.Subarray":["Init.Data.ByteArray.Basic","Init.Data.Stream","Init.NotationExtra"],"Init.Data.Array.QSort":["Init.Data.Array"],"Init.Data.Array.Mem":["Init.Data.Array"],"Init.Data.Array.InsertionSort":["Init.Data.Array"],"Init.Data.Array.DecidableEq":["Init.Data.Array"],"Init.Data.Array.BinSearch":["Init.Data.Array"],"Init.Data.Array.BasicAux":["Init.Data.Array"],"Init.Data.Array.Basic":["Init.Data.Array.InsertionSort","Init.Meta","Init.Data.Array.DecidableEq","Init.Data.Array.BasicAux","Init.Data.Array.QSort","Init.Data.Array.Subarray","Init.Data.ByteArray.Basic","Init.Data.Array.BinSearch","Init.Data.Array.Mem","Init.Data.Format.Instances","Init.Data.Array","Init.Data.FloatArray.Basic"],"Init.Data.Array":["Lean.Data.Lsp.Utf16","Init.Data"],"Init.Data.AC":["Lean.Meta.Tactic.AC.Main","Init.Data"],"Init.Data":["Init"],"Init.Core":["Init","Init.Control.Basic","Init.SimpLemmas","Init.System.IOError","Init.Control.Id","Init.Data.Float","Init.Data.Option.Basic","Init.Classical"],"Init.Conv":["Init"],"Init.Control.StateRef":["Init.Control.Lawful","Init.Control"],"Init.Control.StateCps":["Init.Control"],"Init.Control.State":["Init.Data.Format.Basic","Init.Control.StateRef","Init.Control.EState","Init.Control"],"Init.Control.Reader":["Init.System.ST","Init.System.IO","Init.Control"],"Init.Control.Option":["Init.Data.ToString.Basic","Init.Control"],"Init.Control.Lawful":["Init.Control.StateCps","Init.Control","Init.Control.ExceptCps"],"Init.Control.Id":["Init.Data.ToString.Basic","Init.Data.Repr","Init.Control.Except","Init.Control.State","Init.Control","Init.Control.Reader"],"Init.Control.ExceptCps":["Init.Control"],"Init.Control.Except":["Init.Control.Lawful","Init.Data.String.Extra","Init.Control.EState","Init.Control.State","Init.Control","Init.Control.Reader","Init.Control.Option"],"Init.Control.EState":["Init.System.ST","Init.System.IO"],"Init.Control.Basic":["Init.Control.Except","Init.Data.List.Control","Init.Control.State","Init.Control","Init.Control.Reader","Init.Data.Option.Basic","Init.Control.Option","Init.Data.Nat.Control"],"Init.Control":["Init","Lean.Data.JsonRpc"],"Init.Coe":["Init.Data.Nat.Linear","Init.Data.Nat.Bitwise","Init.Notation","Init.Control.Except","Init.Data.Int.Basic","Init.Data.Option.Basic","Init.Data.Fin.Basic"],"Init.Classical":["Init.Data.Array.DecidableEq","Init.Data.Nat.Linear","Init.System.ST","Init.Data.AC"],"Init":["Lean.PrettyPrinter.Parenthesizer","Lean.Elab.Tactic.Conv.Change","Lean.ParserCompiler.Attribute","Lean.Meta.Tactic.Assert","Lean.Meta.AppBuilder","Lean.Meta.CollectFVars","Lean.Compiler.Old","Lean.Meta.Tactic.AC.Main","Lean.Server.Rpc.RequestHandling","Lean.Elab.MacroArgUtil","Lean.Server.Rpc.Deriving","LSpec.SlimCheck.Control.DefaultRange","Lean.Log","Lean.Parser.Module","Lean.Meta.Tactic.Assumption","Lean.Meta.MatchUtil","Lean.Elab.DeclModifiers","Lean.Elab.BindersUtil","Lean.Util.Profile","Lean.Compiler.IR.CompilerM","Lean.Elab.Tactic.Conv.Rewrite","Lean.Compiler.IR.RC","Lean.Data.Json.Stream","Lean.Meta.Match","Lean.Meta.Match.CaseValues","Lean.Widget.InteractiveGoal","Lean.Data.Json.Parser","Lean.Util","Lean.Elab.Do","Lean.Meta.ACLt","Lean.Compiler.Decl","Lean.Elab.Command","Lean.Meta.Tactic.Simp.Rewrite","Lean.DeclarationRange","Lean.Elab.PreDefinition.Structural.Eqns","Lean.Server.Watchdog","Lean.Data.Json","Lean.Server.Rpc.Basic","Lean.Data.Lsp","Lean.Elab.InfoTree","Lean.Util.ReplaceExpr","Lean.Meta.SizeOf","Lean.Parser.Term","Lean.Meta.Tactic.LinearArith.Nat.Solver","Lean.Meta.Tactic.Constructor","Lean.Elab.Tactic.Conv.Simp","Lean.Parser.Level","Lean.Meta.Tactic.Simp.SimpAll","Lean.Elab.PatternVar","Lean.Meta.Tactic.Rewrite","Lean.Elab","Lean.Meta.Tactic.Simp.Types","Lean.Util.ForEachExpr","Lean.Meta.Constructions","Lean.Meta.Tactic.Refl","Lean.Meta.Tactic.Unfold","Lean.Meta.Tactic.Cleanup","Lean.Elab.PreDefinition.WF.PackDomain","Lean.Elab.Tactic.Rewrite","Lean.Data.Format","Lean.Parser.Tactic","Lean.Meta.CasesOn","Lean.Elab.Quotation.Precheck","Lean.Meta.Tactic.Simp.SimpTheorems","Lean.Meta.Coe","Lean.Compiler.NoncomputableAttr","Lean.Server.FileSource","Lean.Data.Lsp.TextSync","Lean.Elab.Eval","Lean.Compiler.BorrowedAnnotation","Lean.Data.Lsp.Extra","Lean.Elab.Tactic.Conv.Delta","Lean.Compiler.ClosedTermCache","Lean.Meta.Tactic.Intro","Lean.Compiler.IR.ExpandResetReuse","Lean.Elab.RecAppSyntax","Lean.Widget.InteractiveDiagnostic","Lean.Meta.IndPredBelow","Lean.PrettyPrinter.Formatter","Lean.Util.ReplaceLevel","Lean.Elab.ElabRules","Lean.Meta.ForEachExpr","Lean.PrettyPrinter.Delaborator.Builtins","Lean.Meta.Tactic.Acyclic","Lean.Elab.Tactic.Split","Lean.Meta.GlobalInstances","Lean.Meta.ReduceEval","Lean.Elab.Tactic.Induction","Lean.Elab.Deriving","Lean.Parser.Do","Lean.Compiler.TerminalCases","Lean.Elab.Open","LSpec.Instances","Lean.SubExpr","Lean.Compiler.IR.Borrow","Lean.Level","Lean.Compiler.IR.SimpCase","Lean.Util.FoldConsts","Lean.Elab.Config","Lean.Meta.Tactic.Delta","Lean.Elab.Quotation","Lean.Elab.Match","LSpec.SlimCheck.Sampleable","Lean.Elab.Extra","Lean.Elab.BuiltinTerm","Lean.Meta.Reduce","Lean.Data.Json.Basic","Lean.Elab.Declaration","Lean.Class","Lean.ResolveName","LSpec.SlimCheck.Checkable","Lean.Data.NameTrie","Lean.MetavarContext","Lean.Meta.Match.MatchEqsExt","Lean.Server.GoTo","Lean.Elab.Term","Lean.Meta.Tactic.Clear","Lean.PrettyPrinter.Delaborator.Basic","Lean.Meta.Tactic.ElimInfo","Lean.Meta.GetConst","Lean.Meta.Offset","Lean","Lean.Elab.PreDefinition.WF.Main","Lean.KeyedDeclsAttribute","Lean.Server.References","Lean.Elab.Deriving.DecEq","Lean.HeadIndex","Lean.Server.FileWorker.WidgetRequests","Lean.Compiler.IR.ElimDeadVars","Lean.Elab.Deriving.Repr","Lean.Meta.Eqns","Lean.Elab.Deriving.Hashable","Lean.Server.FileWorker.Utils","Lean.Util.Sorry","Lean.Util.MonadBacktrack","Lean.Elab.Tactic.Generalize","Lean.Compiler.IR.LiveVars","Lean.Elab.SetOption","Lean.Parser.StrInterpolation","Lean.Meta.FunInfo","Lean.Elab.App","Lean.Meta.UnificationHint","Lean.Meta.KAbstract","Lean.Elab.Tactic.Conv.Pattern","Lean.Compiler.IR.CtorLayout","Lean.Meta.Tactic.Simp.Main","Lean.Meta.Tactic.LinearArith.Nat.Basic","Lean.Elab.PreDefinition.WF.PackMutual","Lean.Meta.Eval","Lean.Util.FindMVar","Lean.Server","Lean.Parser.Extra","Std.ShareCommon","Lean.Elab.Notation","Lean.Util.Paths","Lean.Widget.InteractiveCode","Lean.Meta.Match.Value","Lean.Widget","Lean.Data.Lsp.Workspace","Lean.Util.Path","Lean.Util.SCC","Lean.Elab.Tactic.Config","Lean.Elab.PreDefinition.WF.Rel","Lean.Data.Xml.Parser","Lean.Environment","Lean.Elab.Syntax","Lean.Elab.Structure","Lean.ScopedEnvExtension","Lean.Data.Lsp.Communication","Lean.Util.MonadCache","Lean.Meta.Tactic.Induction","Lean.Meta.Match.MVarRenaming","Lean.Linter.UnusedVariables","Lean.Elab.PreDefinition.Eqns","Lean.Elab.Mixfix","Lean.Meta.InferType","Lean.Meta.Match.CaseArraySizes","Lean.CoreM","Lean.Compiler.FFI","Lean.AuxRecursor","Lean.Data.Lsp.LanguageFeatures","Lean.Meta.LevelDefEq","Lean.Util.CollectMVars","Lean.Server.Completion","Lean.Modifiers","Lean.Elab.Level","Lean.Meta.Tactic.Generalize","Lean.PrettyPrinter","Lean.Meta.Closure","Lean.Runtime","Lean.Meta.Match.MatcherInfo","Lean.Elab.PreDefinition.Main","Lean.Elab.Binders","Lean.Meta.Tactic.Apply","Std.Data.HashSet","Lean.Meta.Tactic.LinearArith.Basic","Lean.Meta.ExprTraverse","Lean.Meta.Tactic.LinearArith.Solver","Lean.Exception","Lean.Elab.Deriving.SizeOf","Lean.Elab.PreDefinition.Structural.Basic","Lean.Expr","Lean.Elab.Print","Lean.Elab.BuiltinNotation","Lean.Elab.MacroRules","Lean.Compiler.IR.Boxing","Lean.Elab.BuiltinCommand","Lean.Util.OccursCheck","Lean.Compiler.ConstFolding","Lean.Elab.PreDefinition.WF","Lean.Meta.Tactic.Split","Lean.Linter","LSpec.SlimCheck.Control.Random","Lean.Parser.Extension","Lean.Elab.Tactic.Conv.Congr","Lean.Elab.Tactic.Simp","Lean.Meta.Check","Lean.Compiler.LCNF","Lean.Elab.Tactic.Match","Lean.Util.RecDepth","Lean.PrettyPrinter.Delaborator.SubExpr","Std.Data.RBTree","Lean.Data.Lsp.Utf16","Lean.Meta.Inductive","Lean.Elab.PreDefinition.Structural.BRecOn","Lean.Elab.PreDefinition.Structural.SmartUnfolding","Lean.Data.Lsp.Client","LSpec","Std.Data.PersistentHashSet","Lean.Elab.ComputedFields","Lean.Declaration","Lean.Compiler.ImplementedByAttr","Lean.Util.CollectLevelParams","Lean.Util.FindExpr","Lean.InternalExceptionId","Lean.Elab.GenInjective","Lean.Compiler.IR.FreeVars","Lean.Meta.Tactic.SplitIf","Lean.Meta.CongrTheorems","Lean.Data.Lsp.InitShutdown","Lean.Compiler.IR.Format","Lean.Data.Lsp.Ipc","Lean.Elab.Tactic","Lean.ProjFns","Lean.Meta.Tactic.Rename","Lean.Compiler.Specialize","Lean.Elab.SyntheticMVars","Lean.Compiler.Main","Lean.Elab.Tactic.Basic","Lean.LazyInitExtension","Lean.Meta.Tactic.Util","Lean.Meta.Tactic.LinearArith","Lean.Meta.Tactic.Subst","Lean.Compiler.IR.Sorry","Lean.PrettyPrinter.Delaborator","Lean.Meta.AbstractNestedProofs","Lean.Elab.Import","Lean.Widget.TaggedText","Lean.Elab.StructInst","Lean.Elab.Inductive","Lean.ImportingFlag","Lean.PrettyPrinter.Basic","Lean.Elab.PreDefinition.Structural.Preprocess","Lean.Compiler.CSimpAttr","Lean.Meta.Tactic.Contradiction","Lean.Compiler.CompilerM","Lean.Data.Lsp.Internal","Lean.Meta.Tactic.Revert","Lean.Data.JsonRpc","Lean.Deprecated","Lean.Elab.PreDefinition.Basic","Lean.Elab.Util","Std.Data.AssocList","Lean.Elab.PreDefinition.Structural","Lean.Meta.Structure","Lean.Parser.Syntax","Lean.PrettyPrinter.Delaborator.Options","Lean.DocString","Lean.Meta","Lean.Elab.Tactic.Conv.Basic","Lean.Server.FileWorker","Lean.Compiler.IR.ElimDeadBranches","Lean.Data.OpenDecl","Lean.Server.Requests","Lean.Data.Json.Printer","Lean.Server.Snapshots","Lean.Elab.MutualDef","Lean.Meta.Tactic.FVarSubst","Lean.Meta.Match.Basic","Lean.Meta.ExprLens","Lean.Meta.Tactic.Injection","Lean.Elab.Calc","Lean.Meta.SynthInstance","Lean.Compiler","Lean.Meta.Transform","Std.Data.HashMap","Lean.Elab.Deriving.Inhabited","Lean.Util.CollectFVars","Lean.Compiler.ExportAttr","Lean.Elab.LetRec","Lean.Compiler.NeverExtractAttr","Lean.Util.Recognizers","Lean.Elab.AuxDef","Lean.Elab.PreDefinition.WF.TerminationHint","Lean.Data.Xml","Lean.Data.LBool","Lean.Meta.Tactic.Congr","Lean.Parser.Basic","Lean.Compiler.IR.UnboxResult","Lean.Data.Json.FromToJson","Lean.Data.SMap","Lean.Data.Parsec","Lean.Meta.Tactic.Simp.SimpCongrTheorems","Lean.Elab.Deriving.Util","Lean.Data.FuzzyMatching","Lean.Elab.DeclarationRange","Lean.PrettyPrinter.Delaborator.TopDownAnalyze","Lean.Elab.Deriving.Ord","Lean.Attributes","Lean.Server.FileWorker.RequestHandling","Lean.Elab.PreDefinition.MkInhabitant","Lean.Syntax","Lean.Elab.AuxDiscr","Lean.Elab.PreDefinition","Lean.Server.AsyncList","Lean.Meta.Tactic.Cases","Lean.Compiler.InitAttr","Lean.Compiler.InlineAttrs","Lean.Data.LOption","Lean.Data","Lean.Meta.Tactic.LinearArith.Nat","Lean.Meta.GeneralizeTelescope","Std.Data.PersistentHashMap","Lean.Elab.DefView","Lean.Elab.Exception","Lean.Elab.Tactic.Conv.Unfold","Lean.Elab.Tactic.Unfold","Lean.Elab.Quotation.Util","Lean.Meta.Tactic","Lean.Message","Lean.Meta.AbstractMVars","Lean.Compiler.IR.ResetReuse","Lean.Server.Rpc","Lean.Meta.Basic","Lean.Linter.Builtin","Lean.Elab.Attributes","Lean.Compiler.NameMangling","Lean.Meta.DiscrTreeTypes","Lean.Meta.Tactic.AuxLemma","Std.Data.RBMap","Lean.Data.Trie","Lean.Data.SSet","Lean.ToExpr","Lean.Elab.Tactic.ElabTerm","Lean.Util.FindLevelMVar","Lean.Structure","Lean.Compiler.Util","Lean.ParserCompiler","Lean.Compiler.IR","Lean.Linter.MissingDocs","Lean.Compiler.ExternAttr","Lean.Data.Position","Lean.Elab.Macro","Lean.Meta.Tactic.LinearArith.Simp","Lean.Elab.PreDefinition.Structural.IndPred","Lean.Data.KVMap","Lean.Elab.MatchAltView","Lean.Compiler.IR.Checker","Lean.Parser","Std.Data.PersistentArray","Lean.Elab.PreDefinition.WF.Ite","Lean.Data.Rat","Lean.Util.HasConstCache","Lean.MonadEnv","LSpec.SlimCheck.Gen","Lean.Compiler.AtMostOnce","Lean.Compiler.IR.NormIds","Lean.Elab.PreDefinition.Structural.Main","Lean.Elab.PreDefinition.WF.Eqns","Lean.Elab.DeclUtil","Lean.Meta.WHNF","Lean.Data.Occurrences","Lean.Compiler.IR.EmitUtil","Lean.Meta.Match.Match","Lean.Data.PrefixTree","Lean.Data.Lsp.Capabilities","Lean.Meta.Tactic.UnifyEq","Lean.Meta.Tactic.LinearArith.Main","Lean.Meta.Tactic.AC","Lean.Meta.ExprDefEq","Lean.Meta.GeneralizeVars","Lean.Elab.PreDefinition.Structural.FindRecArg","Lean.Widget.UserWidget","Lean.Elab.Tactic.Conv","Lean.Elab.AutoBound","Lean.Util.Trace","Lean.Meta.Match.MatchPatternAttr","Lean.Data.Name","Lean.Elab.PreDefinition.WF.Fix","Lean.Data.Options","Lean.LocalContext","Lean.Elab.Tactic.BuiltinTactic","Lean.Meta.KExprMap","Lean.LoadDynlib","Lean.Meta.Injective","Lean.Meta.RecursorInfo","Lean.Elab.Tactic.Congr","Lean.Elab.Tactic.Delta","Lean.Meta.DecLevel","Lean.Elab.Tactic.Calc","Lean.Elab.Deriving.FromToJson","Lean.Compiler.IR.EmitC","Lean.Meta.Tactic.Simp","Lean.Elab.Deriving.Basic","Lean.Elab.Arg","Lean.Meta.PPGoal","Lean.Elab.InfoTree.Main","Lean.Meta.Tactic.Replace","Lean.Parser.Attr","Lean.Util.PPExt","Lean.Elab.Deriving.BEq","Lean.Parser.Command","Lean.Hygiene","Lean.Meta.TransparencyMode","LSpec.LSpec","Lean.Data.Lsp.Diagnostics","Lean.Widget.Basic","Lean.Meta.Tactic.LinearArith.Nat.Simp","Lean.Linter.Util","Lean.Data.Lsp.Basic","Lean.Elab.Tactic.Injection","Lean.Meta.CollectMVars","Lean.Data.Xml.Basic","Lean.Elab.InfoTree.Types","Lean.Meta.Match.MatchEqs","Lean.Meta.Instances","Lean.Compiler.IR.Basic","Lean.Server.InfoUtils","Lean.ReducibilityAttrs","Lean.Eval","Lean.Elab.Tactic.Location","Lean.Elab.Tactic.Cache","Lean.Elab.Tactic.Meta","Lean.Compiler.IR.PushProj","Lean.Elab.Frontend","Lean.Meta.DiscrTree","Lean.Server.Utils"]},"declarations":{"«term∅»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L131-L131","name":"«term∅»","docLink":"./Init/Core.html#«term∅»","doc":""},"«term∃_,_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L80-L80","name":"«term∃_,_»","docLink":"./Init/NotationExtra.html#«term∃_,_»","doc":""},"«term‹_›»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L551-L554","name":"«term‹_›»","docLink":"./Init/Tactics.html#«term‹_›»","doc":"`‹t›` resolves to an (arbitrary) hypothesis of type `t`. It is useful for referring to hypotheses without accessible names.\n`t` may contain holes that are solved by unification with the expected type; in particular, `‹_›` is a shortcut for `by assumption`. "},"«termΣ_,_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L82-L82","name":"«termΣ_,_»","docLink":"./Init/NotationExtra.html#«termΣ_,_»","doc":""},"«termΣ'_,_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L83-L83","name":"«termΣ'_,_»","docLink":"./Init/NotationExtra.html#«termΣ'_,_»","doc":""},"«term¬_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L207-L207","name":"«term¬_»","docLink":"./Init/Notation.html#«term¬_»","doc":""},"«term~~~_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L163-L163","name":"«term~~~_»","docLink":"./Init/Notation.html#«term~~~_»","doc":""},"«term{}»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L130-L130","name":"«term{}»","docLink":"./Init/Core.html#«term{}»","doc":""},"«term{_:_//_}»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L272-L272","name":"«term{_:_//_}»","docLink":"./Init/Notation.html#«term{_:_//_}»","doc":""},"«term_⊕_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L61-L61","name":"«term_⊕_»","docLink":"./Init/Core.html#«term_⊕_»","doc":""},"«term_⊕'_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L67-L67","name":"«term_⊕'_»","docLink":"./Init/Core.html#«term_⊕'_»","doc":""},"«term_≥_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L184-L184","name":"«term_≥_»","docLink":"./Init/Notation.html#«term_≥_»","doc":""},"«term_≤_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L181-L181","name":"«term_≤_»","docLink":"./Init/Notation.html#«term_≤_»","doc":""},"«term_≠_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L246-L246","name":"«term_≠_»","docLink":"./Init/Core.html#«term_≠_»","doc":""},"«term_≈_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L125-L125","name":"«term_≈_»","docLink":"./Init/Core.html#«term_≈_»","doc":""},"«term_∨_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L206-L206","name":"«term_∨_»","docLink":"./Init/Notation.html#«term_∨_»","doc":""},"«term_∧_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L204-L204","name":"«term_∧_»","docLink":"./Init/Notation.html#«term_∧_»","doc":""},"«term_∘_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L147-L147","name":"«term_∘_»","docLink":"./Init/Notation.html#«term_∘_»","doc":""},"«term_∉_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L214-L214","name":"«term_∉_»","docLink":"./Init/Notation.html#«term_∉_»","doc":""},"«term_∈_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L213-L213","name":"«term_∈_»","docLink":"./Init/Notation.html#«term_∈_»","doc":""},"«term_↔_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L55-L55","name":"«term_↔_»","docLink":"./Init/Core.html#«term_↔_»","doc":""},"«term_×_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L148-L148","name":"«term_×_»","docLink":"./Init/Notation.html#«term_×_»","doc":""},"«term_×__1»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L84-L84","name":"«term_×__1»","docLink":"./Init/NotationExtra.html#«term_×__1»","doc":""},"«term_×'_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L85-L85","name":"«term_×'_»","docLink":"./Init/NotationExtra.html#«term_×'_»","doc":""},"«term_|||_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L150-L150","name":"«term_|||_»","docLink":"./Init/Notation.html#«term_|||_»","doc":""},"«term_||_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L210-L210","name":"«term_||_»","docLink":"./Init/Notation.html#«term_||_»","doc":""},"«term_|>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L258-L258","name":"«term_|>_»","docLink":"./Init/Notation.html#«term_|>_»","doc":""},"«term__[_]»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L582-L582","name":"«term__[_]»","docLink":"./Init/Tactics.html#«term__[_]»","doc":""},"«term__[_]_?»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L78-L78","name":"«term__[_]_?»","docLink":"./Init/Util.html#«term__[_]_?»","doc":""},"«term__[_]_!»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L79-L79","name":"«term__[_]_!»","docLink":"./Init/Util.html#«term__[_]_!»","doc":""},"«term__[_]'_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L588-L588","name":"«term__[_]'_»","docLink":"./Init/Tactics.html#«term__[_]'_»","doc":""},"«term_^_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L160-L160","name":"«term_^_»","docLink":"./Init/Notation.html#«term_^_»","doc":""},"«term_^^^_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L151-L151","name":"«term_^^^_»","docLink":"./Init/Notation.html#«term_^^^_»","doc":""},"«term_\\/_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L205-L205","name":"«term_\\/_»","docLink":"./Init/Notation.html#«term_\\/_»","doc":""},"«term_>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L185-L185","name":"«term_>_»","docLink":"./Init/Notation.html#«term_>_»","doc":""},"«term_>>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L218-L218","name":"«term_>>_»","docLink":"./Init/Notation.html#«term_>>_»","doc":""},"«term_>>>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L159-L159","name":"«term_>>>_»","docLink":"./Init/Notation.html#«term_>>>_»","doc":""},"«term_>>=_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L219-L219","name":"«term_>>=_»","docLink":"./Init/Notation.html#«term_>>=_»","doc":""},"«term_>=_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L183-L183","name":"«term_>=_»","docLink":"./Init/Notation.html#«term_>=_»","doc":""},"«term_=_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L186-L186","name":"«term_=_»","docLink":"./Init/Notation.html#«term_=_»","doc":""},"«term_==_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L187-L187","name":"«term_==_»","docLink":"./Init/Notation.html#«term_==_»","doc":""},"«term_<||>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L56-L56","name":"«term_<||>_»","docLink":"./Init/Control/Basic.html#«term_<||>_»","doc":""},"«term_<|_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L252-L252","name":"«term_<|_»","docLink":"./Init/Notation.html#«term_<|_»","doc":""},"«term_<|>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L217-L217","name":"«term_<|>_»","docLink":"./Init/Notation.html#«term_<|>_»","doc":""},"«term_<_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L182-L182","name":"«term_<_»","docLink":"./Init/Notation.html#«term_<_»","doc":""},"«term_<=_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L180-L180","name":"«term_<=_»","docLink":"./Init/Notation.html#«term_<=_»","doc":""},"«term_<<<_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L158-L158","name":"«term_<<<_»","docLink":"./Init/Notation.html#«term_<<<_»","doc":""},"«term_<->_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L54-L54","name":"«term_<->_»","docLink":"./Init/Core.html#«term_<->_»","doc":""},"«term_<*_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L221-L221","name":"«term_<*_»","docLink":"./Init/Notation.html#«term_<*_»","doc":""},"«term_<*>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L220-L220","name":"«term_<*>_»","docLink":"./Init/Notation.html#«term_<*>_»","doc":""},"«term_<&>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L14-L14","name":"«term_<&>_»","docLink":"./Init/Control/Basic.html#«term_<&>_»","doc":""},"«term_<&&>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L64-L64","name":"«term_<&&>_»","docLink":"./Init/Control/Basic.html#«term_<&&>_»","doc":""},"«term_<$>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L223-L223","name":"«term_<$>_»","docLink":"./Init/Notation.html#«term_<$>_»","doc":""},"«term_::_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L216-L216","name":"«term_::_»","docLink":"./Init/Notation.html#«term_::_»","doc":""},"«term_/_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L156-L156","name":"«term_/_»","docLink":"./Init/Notation.html#«term_/_»","doc":""},"«term_/\\_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L203-L203","name":"«term_/\\_»","docLink":"./Init/Notation.html#«term_/\\_»","doc":""},"«term_-_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L154-L154","name":"«term_-_»","docLink":"./Init/Notation.html#«term_-_»","doc":""},"«term_+_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L153-L153","name":"«term_+_»","docLink":"./Init/Notation.html#«term_+_»","doc":""},"«term_++_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L161-L161","name":"«term_++_»","docLink":"./Init/Notation.html#«term_++_»","doc":""},"«term_*_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L155-L155","name":"«term_*_»","docLink":"./Init/Notation.html#«term_*_»","doc":""},"«term_*>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L222-L222","name":"«term_*>_»","docLink":"./Init/Notation.html#«term_*>_»","doc":""},"«term_&&_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L209-L209","name":"«term_&&_»","docLink":"./Init/Notation.html#«term_&&_»","doc":""},"«term_&&&_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L152-L152","name":"«term_&&&_»","docLink":"./Init/Notation.html#«term_&&&_»","doc":""},"«term_%_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L157-L157","name":"«term_%_»","docLink":"./Init/Notation.html#«term_%_»","doc":""},"«term_$__»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L264-L266","name":"«term_$__»","docLink":"./Init/Notation.html#«term_$__»","doc":"Haskell-like pipe `<|` "},"«term_!=_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L190-L190","name":"«term_!=_»","docLink":"./Init/Core.html#«term_!=_»","doc":""},"«term[_]»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L284-L284","name":"«term[_]»","docLink":"./Init/Notation.html#«term[_]»","doc":""},"«termIfLet_:=_Then_Else_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L242-L242","name":"«termIfLet_:=_Then_Else_»","docLink":"./Init/Notation.html#«termIfLet_:=_Then_Else_»","doc":""},"«termExists_,_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L81-L81","name":"«termExists_,_»","docLink":"./Init/NotationExtra.html#«termExists_,_»","doc":""},"«term-_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L162-L162","name":"«term-_»","docLink":"./Init/Notation.html#«term-_»","doc":""},"«term%[_|_]»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L285-L285","name":"«term%[_|_]»","docLink":"./Init/Notation.html#«term%[_|_]»","doc":""},"«term#[_,]»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L510-L510","name":"«term#[_,]»","docLink":"./Init/Data/Array/Basic.html#«term#[_,]»","doc":""},"«tactic·.__;_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L271-L272","name":"«tactic·.__;_»","docLink":"./Init/NotationExtra.html#«tactic·.__;_»","doc":"`· tac` focuses on the main goal and tries to solve it using `tac`, or else fails. "},"«stx_<|>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L128-L128","name":"«stx_<|>_»","docLink":"./Init/Notation.html#«stx_<|>_»","doc":""},"«stx_,+»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L138-L138","name":"«stx_,+»","docLink":"./Init/Notation.html#«stx_,+»","doc":""},"«stx_,+,?»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L141-L141","name":"«stx_,+,?»","docLink":"./Init/Notation.html#«stx_,+,?»","doc":""},"«stx_,*»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L136-L137","name":"«stx_,*»","docLink":"./Init/Notation.html#«stx_,*»","doc":"Comma-separated sequence. "},"«stx_,*,?»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L139-L140","name":"«stx_,*,?»","docLink":"./Init/Notation.html#«stx_,*,?»","doc":"Comma-separated sequence with optional trailing comma. "},"«stx_+»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L125-L125","name":"«stx_+»","docLink":"./Init/Notation.html#«stx_+»","doc":""},"«stx_*»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L126-L126","name":"«stx_*»","docLink":"./Init/Notation.html#«stx_*»","doc":""},"«prio(_)»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L121-L121","name":"«prio(_)»","docLink":"./Init/Notation.html#«prio(_)»","doc":""},"«prec(_)»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L107-L107","name":"«prec(_)»","docLink":"./Init/Notation.html#«prec(_)»","doc":""},"withTheReader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2134-L2135","name":"withTheReader","docLink":"./Init/Prelude.html#withTheReader","doc":""},"withPtrEqUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L56-L57","name":"withPtrEqUnsafe","docLink":"./Init/Util.html#withPtrEqUnsafe","doc":""},"withPtrEqDecEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L63-L67","name":"withPtrEqDecEq","docLink":"./Init/Util.html#withPtrEqDecEq","doc":"`withPtrEq` for `DecidableEq` "},"withPtrEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L60-L60","name":"withPtrEq","docLink":"./Init/Util.html#withPtrEq","doc":""},"withPtrAddrUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L45-L46","name":"withPtrAddrUnsafe","docLink":"./Init/Util.html#withPtrAddrUnsafe","doc":""},"withPtrAddr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L70-L70","name":"withPtrAddr","docLink":"./Init/Util.html#withPtrAddr","doc":""},"usize_size_gt_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L281-L282","name":"usize_size_gt_zero","docLink":"./Init/Data/UInt.html#usize_size_gt_zero","doc":""},"usize_size_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1542-L1546","name":"usize_size_eq","docLink":"./Init/Prelude.html#usize_size_eq","doc":""},"unsafeIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L88-L89","name":"unsafeIO","docLink":"./Init/System/IO.html#unsafeIO","doc":""},"unsafeEIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L85-L86","name":"unsafeEIO","docLink":"./Init/System/IO.html#unsafeEIO","doc":""},"unsafeCast":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1801-L1802","name":"unsafeCast","docLink":"./Init/Prelude.html#unsafeCast","doc":""},"unsafeBaseIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L81-L83","name":"unsafeBaseIO","docLink":"./Init/System/IO.html#unsafeBaseIO","doc":""},"unexpandUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L133-L134","name":"unexpandUnit","docLink":"./Init/NotationExtra.html#unexpandUnit","doc":""},"unexpandTSyntaxArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L193-L195","name":"unexpandTSyntaxArray","docLink":"./Init/NotationExtra.html#unexpandTSyntaxArray","doc":""},"unexpandTSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L189-L191","name":"unexpandTSyntax","docLink":"./Init/NotationExtra.html#unexpandTSyntax","doc":""},"unexpandTSepArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L197-L199","name":"unexpandTSepArray","docLink":"./Init/NotationExtra.html#unexpandTSepArray","doc":""},"unexpandSubtype":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L184-L187","name":"unexpandSubtype","docLink":"./Init/NotationExtra.html#unexpandSubtype","doc":""},"unexpandSorryAx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L157-L160","name":"unexpandSorryAx","docLink":"./Init/NotationExtra.html#unexpandSorryAx","doc":""},"unexpandSigma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L176-L178","name":"unexpandSigma","docLink":"./Init/NotationExtra.html#unexpandSigma","doc":""},"unexpandProdMk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L148-L151","name":"unexpandProdMk","docLink":"./Init/NotationExtra.html#unexpandProdMk","doc":""},"unexpandPSigma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L180-L182","name":"unexpandPSigma","docLink":"./Init/NotationExtra.html#unexpandPSigma","doc":""},"unexpandListToArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L144-L146","name":"unexpandListToArray","docLink":"./Init/NotationExtra.html#unexpandListToArray","doc":""},"unexpandListNil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L136-L137","name":"unexpandListNil","docLink":"./Init/NotationExtra.html#unexpandListNil","doc":""},"unexpandListCons":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L139-L142","name":"unexpandListCons","docLink":"./Init/NotationExtra.html#unexpandListCons","doc":""},"unexpandIte":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L153-L155","name":"unexpandIte","docLink":"./Init/NotationExtra.html#unexpandIte","doc":""},"unexpandGetElem?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L209-L211","name":"unexpandGetElem?","docLink":"./Init/NotationExtra.html#unexpandGetElem?","doc":""},"unexpandGetElem'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L213-L215","name":"unexpandGetElem'","docLink":"./Init/NotationExtra.html#unexpandGetElem'","doc":""},"unexpandGetElem!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L205-L207","name":"unexpandGetElem!","docLink":"./Init/NotationExtra.html#unexpandGetElem!","doc":""},"unexpandGetElem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L201-L203","name":"unexpandGetElem","docLink":"./Init/NotationExtra.html#unexpandGetElem","doc":""},"unexpandExists":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L170-L174","name":"unexpandExists","docLink":"./Init/NotationExtra.html#unexpandExists","doc":""},"unexpandEqRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L166-L168","name":"unexpandEqRec","docLink":"./Init/NotationExtra.html#unexpandEqRec","doc":""},"unexpandEqNDRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L162-L164","name":"unexpandEqNDRec","docLink":"./Init/NotationExtra.html#unexpandEqNDRec","doc":""},"type_eq_of_heq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L322-L323","name":"type_eq_of_heq","docLink":"./Init/Core.html#type_eq_of_heq","doc":""},"tryFinally":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L161-L163","name":"tryFinally","docLink":"./Init/Control/Except.html#tryFinally","doc":"Execute `x` and then execute `finalizer` even if `x` threw an exception "},"tryCatchThe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2018-L2019","name":"tryCatchThe","docLink":"./Init/Prelude.html#tryCatchThe","doc":""},"true_or":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L109-L109","name":"true_or","docLink":"./Init/SimpLemmas.html#true_or","doc":""},"true_ne_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L271-L272","name":"true_ne_false","docLink":"./Init/Core.html#true_ne_false","doc":""},"true_implies":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L119-L119","name":"true_implies","docLink":"./Init/SimpLemmas.html#true_implies","doc":""},"true_iff":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L114-L114","name":"true_iff","docLink":"./Init/SimpLemmas.html#true_iff","doc":""},"true_and":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L104-L104","name":"true_and","docLink":"./Init/SimpLemmas.html#true_and","doc":""},"trivial":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L216-L216","name":"trivial","docLink":"./Init/Core.html#trivial","doc":""},"toLOptionM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LOption.lean#L28-L30","name":"toLOptionM","docLink":"./Lean/Data/LOption.html#toLOptionM","doc":""},"toLBoolM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LBool.lean#L41-L43","name":"toLBoolM","docLink":"./Lean/Data/LBool.html#toLBoolM","doc":""},"toBoolUsing_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L386-L387","name":"toBoolUsing_eq_true","docLink":"./Init/Core.html#toBoolUsing_eq_true","doc":""},"toBoolUsing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L383-L384","name":"toBoolUsing","docLink":"./Init/Core.html#toBoolUsing","doc":"Similar to `decide`, but uses an explicit instance "},"timeit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L91-L91","name":"timeit","docLink":"./Init/System/IO.html#timeit","doc":""},"throwThe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2015-L2016","name":"throwThe","docLink":"./Init/Prelude.html#throwThe","doc":""},"termWithout_expected_type_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L278-L282","name":"termWithout_expected_type_","docLink":"./Init/Notation.html#termWithout_expected_type_","doc":"`without_expected_type t` instructs Lean to elaborate `t` without an expected type.\nRecall that terms such as `match ... with ...` and `⟨...⟩` will postpone elaboration until\nexpected type is known. So, `without_expected_type` is not effective in this case. "},"termS!_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Macro.lean#L10-L10","name":"termS!_","docLink":"./Init/Data/ToString/Macro.html#termS!_","doc":""},"termPrintln!__":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L694-L694","name":"termPrintln!__","docLink":"./Init/System/IO.html#termPrintln!__","doc":""},"termMax_prec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L112-L115","name":"termMax_prec","docLink":"./Init/Notation.html#termMax_prec","doc":"`max:prec` as a term. It is equivalent to `eval_prec max` for `eval_prec` defined at `Meta.lean`.\nWe use `max_prec` to workaround bootstrapping issues. "},"termIfThenElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L235-L237","name":"termIfThenElse","docLink":"./Init/Notation.html#termIfThenElse","doc":""},"termDepIfThenElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L228-L230","name":"termDepIfThenElse","docLink":"./Init/Notation.html#termDepIfThenElse","doc":""},"term!_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L211-L211","name":"term!_","docLink":"./Init/Notation.html#term!_","doc":""},"tacticSimp_wf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WFTactics.lean#L10-L12","name":"tacticSimp_wf","docLink":"./Init/WFTactics.html#tacticSimp_wf","doc":"Unfold definitions commonly used in well founded relation definitions.\nThis is primarily intended for internal use in `decreasing_tactic`. "},"tacticGet_elem_tactic_trivial":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L556-L562","name":"tacticGet_elem_tactic_trivial","docLink":"./Init/Tactics.html#tacticGet_elem_tactic_trivial","doc":"`get_elem_tactic_trivial` is an extensible tactic automatically called\nby the notation `arr[i]` to prove any side conditions that arise when\nconstructing the term (e.g. the index is in bounds of the array).\nThe default behavior is to just try `trivial` (which handles the case\nwhere `i < arr.size` is in the context) and `simp_arith`\n(for doing linear arithmetic in the index). "},"tacticGet_elem_tactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L567-L572","name":"tacticGet_elem_tactic","docLink":"./Init/Tactics.html#tacticGet_elem_tactic","doc":"`get_elem_tactic` is the tactic automatically called by the notation `arr[i]`\nto prove any side conditions that arise when constructing the term\n(e.g. the index is in bounds of the array). It just delegates to\n`get_elem_tactic_trivial` and gives a diagnostic error message otherwise;\nusers are encouraged to extend `get_elem_tactic_trivial` instead of this tactic. "},"tacticFunext__":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L217-L230","name":"tacticFunext__","docLink":"./Init/NotationExtra.html#tacticFunext__","doc":"Apply function extensionality and introduce new hypotheses.\nThe tactic `funext` will keep applying new the `funext` lemma until the goal target is not reducible to\n```\n  |-  ((fun x => ...) = (fun x => ...))\n```\nThe variant `funext h₁ ... hₙ` applies `funext` `n` times, and uses the given identifiers to name the new hypotheses.\nPatterns can be used like in the `intro` tactic. Example, given a goal\n```\n  |-  ((fun x : Nat × Bool => ...) = (fun x => ...))\n```\n`funext (a, b)` applies `funext` once and performs pattern matching on the newly introduced pair.\n"},"tacticDecreasing_with_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WFTactics.lean#L31-L34","name":"tacticDecreasing_with_","docLink":"./Init/WFTactics.html#tacticDecreasing_with_","doc":"Constructs a proof of decreasing along a well founded relation, by applying\nlexicographic order lemmas and using `ts` to solve the base case. If it fails,\nit prints a message to help the user diagnose an ill-founded recursive definition. "},"tacticDecreasing_trivial":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WFTactics.lean#L16-L23","name":"tacticDecreasing_trivial","docLink":"./Init/WFTactics.html#tacticDecreasing_trivial","doc":"Extensible helper tactic for `decreasing_tactic`. This handles the \"base case\"\nreasoning after applying lexicographic order lemmas.\nIt can be extended by adding more macro definitions, e.g.\n```\nmacro_rules | `(tactic| decreasing_trivial) => `(tactic| linarith)\n```\n"},"tacticDecreasing_tactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WFTactics.lean#L45-L51","name":"tacticDecreasing_tactic","docLink":"./Init/WFTactics.html#tacticDecreasing_tactic","doc":"`decreasing_tactic` is called by default on well-founded recursions in order\nto synthesize a proof that recursive calls decrease along the selected\nwell founded relation. It can be locally overridden by using `decreasing_by tac`\non the recursive definition, and it can also be globally extended by adding\nmore definitions for `decreasing_tactic` (or `decreasing_trivial`,\nwhich this tactic calls). "},"subtypeCoe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L98-L99","name":"subtypeCoe","docLink":"./Init/Coe.html#subtypeCoe","doc":""},"stx_?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L127-L127","name":"stx_?","docLink":"./Init/Notation.html#stx_?","doc":""},"stx!_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L143-L143","name":"stx!_","docLink":"./Init/Notation.html#stx!_","doc":""},"strictOr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L184-L184","name":"strictOr","docLink":"./Init/Core.html#strictOr","doc":""},"strictAnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L185-L185","name":"strictAnd","docLink":"./Init/Core.html#strictAnd","doc":""},"stdSplit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L57-L64","name":"stdSplit","docLink":"./Init/Data/Random.html#stdSplit","doc":""},"stdRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L38-L38","name":"stdRange","docLink":"./Init/Data/Random.html#stdRange","doc":""},"stdNext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L43-L55","name":"stdNext","docLink":"./Init/Data/Random.html#stdNext","doc":""},"sorryAx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L614-L614","name":"sorryAx","docLink":"./Init/Prelude.html#sorryAx","doc":"Auxiliary axiom used to implement `sorry`.\n\nThe `sorry` term/tactic expands to `sorryAx _ (synthetic := false)`. This is a\nproof of anything, which is intended for stubbing out incomplete parts of a\nproof while still having a syntactically correct proof skeleton. Lean will give\na warning whenever a proof uses `sorry`, so you aren't likely to miss it, but\nyou can double check if a theorem depends on `sorry` by using\n`#print axioms my_thm` and looking for `sorryAx` in the axiom list.\n\nThe `synthetic` flag is false when written explicitly by the user, but it is\nset to `true` when a tactic fails to prove a goal, or if there is a type error\nin the expression. A synthetic `sorry` acts like a regular one, except that it\nsuppresses follow-up errors in order to prevent one error from causing a cascade\nof other errors because the desired term was not constructed.\n"},"solve":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L281-L284","name":"solve","docLink":"./Init/NotationExtra.html#solve","doc":"Similar to `first`, but succeeds only if one the given tactics solves the current goal.\n"},"sizeOf_thunk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L38-L39","name":"sizeOf_thunk","docLink":"./Init/SizeOf.html#sizeOf_thunk","doc":""},"sizeOf_nat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L33-L33","name":"sizeOf_nat","docLink":"./Init/SizeOf.html#sizeOf_nat","doc":""},"sizeOf_default":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L28-L28","name":"sizeOf_default","docLink":"./Init/SizeOf.html#sizeOf_default","doc":""},"sizeOfWFRel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L196-L197","name":"sizeOfWFRel","docLink":"./Init/WF.html#sizeOfWFRel","doc":""},"seq_eq_bind_map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L71-L72","name":"seq_eq_bind_map","docLink":"./Init/Control/Lawful.html#seq_eq_bind_map","doc":""},"seq_eq_bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L83-L84","name":"seq_eq_bind","docLink":"./Init/Control/Lawful.html#seq_eq_bind","doc":""},"seqRight_eq_bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L86-L88","name":"seqRight_eq_bind","docLink":"./Init/Control/Lawful.html#seqRight_eq_bind","doc":""},"seqLeft_eq_bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L90-L91","name":"seqLeft_eq_bind","docLink":"./Init/Control/Lawful.html#seqLeft_eq_bind","doc":""},"runST":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L32-L35","name":"runST","docLink":"./Init/System/ST.html#runST","doc":""},"runEST":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L26-L29","name":"runEST","docLink":"./Init/System/ST.html#runEST","doc":""},"rfl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L277-L277","name":"rfl","docLink":"./Init/Prelude.html#rfl","doc":"`rfl : a = a` is the unique constructor of the equality type. This is the\nsame as `Eq.refl` except that it takes `a` implicitly instead of explicitly.\n\nThis is a more powerful theorem than it may appear at first, because although\nthe statement of the theorem is `a = a`, lean will allow anything that is\ndefinitionally equal to that type. So, for instance, `2 + 2 = 4` is proven in\nlean by `rfl`, because both sides are the same up to definitional equality.\n"},"reprStr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L24-L25","name":"reprStr","docLink":"./Init/Data/Repr.html#reprStr","doc":""},"reprArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L27-L28","name":"reprArg","docLink":"./Init/Data/Repr.html#reprArg","doc":""},"repr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L21-L22","name":"repr","docLink":"./Init/Data/Repr.html#repr","doc":""},"recSubsingleton":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L547-L556","name":"recSubsingleton","docLink":"./Init/Core.html#recSubsingleton","doc":""},"readThe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2113-L2114","name":"readThe","docLink":"./Init/Prelude.html#readThe","doc":""},"rawNatLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L145-L145","name":"rawNatLit","docLink":"./Init/Notation.html#rawNatLit","doc":""},"randNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L93-L108","name":"randNat","docLink":"./Init/Data/Random.html#randNat","doc":"Generate a random natural number in the interval [lo, hi]. "},"randBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L111-L113","name":"randBool","docLink":"./Init/Data/Random.html#randBool","doc":"Generate a random Boolean. "},"pure_id_seq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L43-L44","name":"pure_id_seq","docLink":"./Init/Control/Lawful.html#pure_id_seq","doc":""},"ptrEqList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L50-L53","name":"ptrEqList","docLink":"./Init/Util.html#ptrEqList","doc":""},"ptrEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L48-L48","name":"ptrEq","docLink":"./Init/Util.html#ptrEq","doc":""},"ptrAddrUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L42-L42","name":"ptrAddrUnsafe","docLink":"./Init/Util.html#ptrAddrUnsafe","doc":""},"propext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L722-L722","name":"propext","docLink":"./Init/Core.html#propext","doc":""},"proofIrrel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L227-L227","name":"proofIrrel","docLink":"./Init/Core.html#proofIrrel","doc":""},"prodHasDecidableLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L651-L655","name":"prodHasDecidableLt","docLink":"./Init/Core.html#prodHasDecidableLt","doc":""},"prioMid":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L119-L119","name":"prioMid","docLink":"./Init/Notation.html#prioMid","doc":""},"prioLow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L118-L118","name":"prioLow","docLink":"./Init/Notation.html#prioLow","doc":""},"prioHigh":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L120-L120","name":"prioHigh","docLink":"./Init/Notation.html#prioHigh","doc":""},"prioDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L117-L117","name":"prioDefault","docLink":"./Init/Notation.html#prioDefault","doc":""},"precMin1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L110-L111","name":"precMin1","docLink":"./Init/Notation.html#precMin1","doc":"`(min+1)` (we can only write `min+1` after `Meta.lean`) "},"precMin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L108-L109","name":"precMin","docLink":"./Init/Notation.html#precMin","doc":"minimum precedence used in term parsers "},"precMax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L101-L102","name":"precMax","docLink":"./Init/Notation.html#precMax","doc":"maximum precedence used in term parsers, in particular for terms in function position (`ident`, `paren`, ...) "},"precLead":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L105-L106","name":"precLead","docLink":"./Init/Notation.html#precLead","doc":"precedence used for terms not supposed to be used as arguments (`let`, `have`, ...) "},"precArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L103-L104","name":"precArg","docLink":"./Init/Notation.html#precArg","doc":"precedence used for application arguments (`do`, `by`, ...) "},"panicWithPosWithDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L38-L39","name":"panicWithPosWithDecl","docLink":"./Init/Util.html#panicWithPosWithDecl","doc":""},"panicWithPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L32-L33","name":"panicWithPos","docLink":"./Init/Util.html#panicWithPos","doc":""},"panicCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1805-L1805","name":"panicCore","docLink":"./Init/Prelude.html#panicCore","doc":""},"panic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1816-L1817","name":"panic","docLink":"./Init/Prelude.html#panic","doc":"This is workaround for `panic` occurring in monadic code. See issue #695.\nThe `panicCore` definition cannot be specialized since it is an extern.\nWhen `panic` occurs in monadic code, the `Inhabited α` parameter depends on a `[inst : Monad m]` instance.\nThe `inst` parameter will not be eliminated during specialization if it occurs inside of a binder (to avoid work duplication), and\nwill prevent the the actual monad from being \"copied\" to the code being specialized. When we reimplement the specializer, we\nmay consider copying `inst` if it also occurs outside binders or if it is an instance.\n"},"outParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L591-L591","name":"outParam","docLink":"./Init/Prelude.html#outParam","doc":"Gadget for marking output parameters in type classes.\n\nFor example, the `Membership` class is defined as:\n```\nclass Membership (α : outParam (Type u)) (γ : Type v)\n```\nThis means that whenever a typeclass goal of the form `Membership ?α ?γ` comes\nup, lean will wait to solve it until `?γ` is known, but then it will run\ntypeclass inference, and take the first solution it finds, for any value of `?α`,\nwhich thereby determines what `?α` should be.\n\nThis expresses that in a term like `a ∈ s`, `s` might be a `Set α` or\n`List α` or some other type with a membership operation, and in each case\nthe \"member\" type `α` is determined by looking at the container type.\n"},"or_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L108-L108","name":"or_true","docLink":"./Init/SimpLemmas.html#or_true","doc":""},"or_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L107-L107","name":"or_self","docLink":"./Init/SimpLemmas.html#or_self","doc":""},"or_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L110-L110","name":"or_false","docLink":"./Init/SimpLemmas.html#or_false","doc":""},"orM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L50-L54","name":"orM","docLink":"./Init/Control/Basic.html#orM","doc":""},"or":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L944-L947","name":"or","docLink":"./Init/Prelude.html#or","doc":""},"optional":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L34-L35","name":"optional","docLink":"./Init/Control/Basic.html#optional","doc":""},"optionCoe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L95-L96","name":"optionCoe","docLink":"./Init/Coe.html#optionCoe","doc":""},"optParam_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L180-L180","name":"optParam_eq","docLink":"./Init/Core.html#optParam_eq","doc":""},"optParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L573-L573","name":"optParam","docLink":"./Init/Prelude.html#optParam","doc":"Gadget for optional parameter support.\n\nA binder like `(x : α := default)` in a declaration is syntax sugar for\n`x : optParam α default`, and triggers the elaborator to attempt to use\n`default` to supply the argument if it is not supplied.\n"},"of_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L14-L15","name":"of_eq_true","docLink":"./Init/SimpLemmas.html#of_eq_true","doc":""},"of_decide_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L828-L831","name":"of_decide_eq_true","docLink":"./Init/Prelude.html#of_decide_eq_true","doc":""},"of_decide_eq_self_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L838-L841","name":"of_decide_eq_self_eq_true","docLink":"./Init/Prelude.html#of_decide_eq_self_eq_true","doc":""},"of_decide_eq_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L833-L836","name":"of_decide_eq_false","docLink":"./Init/Prelude.html#of_decide_eq_false","doc":""},"ofBoolUsing_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L389-L390","name":"ofBoolUsing_eq_true","docLink":"./Init/Core.html#ofBoolUsing_eq_true","doc":""},"ofBoolUsing_eq_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L392-L393","name":"ofBoolUsing_eq_false","docLink":"./Init/Core.html#ofBoolUsing_eq_false","doc":""},"observing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L138-L139","name":"observing","docLink":"./Init/Control/Except.html#observing","doc":""},"not_not_intro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L223-L224","name":"not_not_intro","docLink":"./Init/Core.html#not_not_intro","doc":""},"not_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L221-L221","name":"not_false","docLink":"./Init/Core.html#not_false","doc":""},"not_decide_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L149-L149","name":"not_decide_eq_true","docLink":"./Init/SimpLemmas.html#not_decide_eq_true","doc":""},"notM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L66-L67","name":"notM","docLink":"./Init/Control/Basic.html#notM","doc":""},"not":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L954-L956","name":"not","docLink":"./Init/Prelude.html#not","doc":""},"nonempty_of_exists":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L519-L520","name":"nonempty_of_exists","docLink":"./Init/Core.html#nonempty_of_exists","doc":""},"noConfusionTypeEnum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L500-L503","name":"noConfusionTypeEnum","docLink":"./Init/Core.html#noConfusionTypeEnum","doc":"Auxiliary definitions for generating compact `noConfusion` for enumeration types "},"noConfusionEnum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L505-L510","name":"noConfusionEnum","docLink":"./Init/Core.html#noConfusionEnum","doc":""},"ne_true_of_not":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L266-L269","name":"ne_true_of_not","docLink":"./Init/Core.html#ne_true_of_not","doc":""},"ne_true_of_eq_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L628-L630","name":"ne_true_of_eq_false","docLink":"./Init/Prelude.html#ne_true_of_eq_false","doc":""},"ne_of_beq_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L284-L285","name":"ne_of_beq_false","docLink":"./Init/Core.html#ne_of_beq_false","doc":""},"ne_false_of_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L263-L264","name":"ne_false_of_self","docLink":"./Init/Core.html#ne_false_of_self","doc":""},"ne_false_of_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L624-L626","name":"ne_false_of_eq_true","docLink":"./Init/Prelude.html#ne_false_of_eq_true","doc":""},"ne_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L96-L96","name":"ne_eq","docLink":"./Init/SimpLemmas.html#ne_eq","doc":""},"namedPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L595-L595","name":"namedPattern","docLink":"./Init/Prelude.html#namedPattern","doc":"Auxiliary declaration used to implement named patterns like `x@h:p`. "},"mt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L218-L219","name":"mt","docLink":"./Init/Core.html#mt","doc":""},"monadLift_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L13-L14","name":"monadLift_self","docLink":"./Init/Control/Lawful.html#monadLift_self","doc":""},"monadFunctorRefl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1998-L1999","name":"monadFunctorRefl","docLink":"./Init/Prelude.html#monadFunctorRefl","doc":""},"modifyThe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2170-L2171","name":"modifyThe","docLink":"./Init/Prelude.html#modifyThe","doc":""},"modifyGetThe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2173-L2174","name":"modifyGetThe","docLink":"./Init/Prelude.html#modifyGetThe","doc":""},"modify":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2189-L2190","name":"modify","docLink":"./Init/Prelude.html#modify","doc":""},"mkStdGen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L73-L77","name":"mkStdGen","docLink":"./Init/Data/Random.html#mkStdGen","doc":"Return a standard number generator. "},"mixHash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2327-L2327","name":"mixHash","docLink":"./Init/Prelude.html#mixHash","doc":""},"min":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L983-L984","name":"min","docLink":"./Init/Prelude.html#min","doc":""},"measure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L190-L191","name":"measure","docLink":"./Init/WF.html#measure","doc":""},"max":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L980-L981","name":"max","docLink":"./Init/Prelude.html#max","doc":""},"map_eq_pure_bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L68-L69","name":"map_eq_pure_bind","docLink":"./Init/Control/Lawful.html#map_eq_pure_bind","doc":""},"map_congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L80-L81","name":"map_congr","docLink":"./Init/Control/Lawful.html#map_congr","doc":""},"ltOfOrd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L63-L64","name":"ltOfOrd","docLink":"./Init/Data/Ord.html#ltOfOrd","doc":""},"liftOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L98-L100","name":"liftOption","docLink":"./Init/Data/Option/Basic.html#liftOption","doc":""},"liftM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1973-L1973","name":"liftM","docLink":"./Init/Prelude.html#liftM","doc":""},"liftExcept":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L141-L143","name":"liftExcept","docLink":"./Init/Control/Except.html#liftExcept","doc":""},"let_val_congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L62-L65","name":"let_val_congr","docLink":"./Init/SimpLemmas.html#let_val_congr","doc":""},"let_congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L55-L60","name":"let_congr","docLink":"./Init/SimpLemmas.html#let_congr","doc":""},"let_body_congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L67-L71","name":"let_body_congr","docLink":"./Init/SimpLemmas.html#let_body_congr","doc":""},"leOfOrd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L74-L75","name":"leOfOrd","docLink":"./Init/Data/Ord.html#leOfOrd","doc":""},"lcUnreachable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L165-L165","name":"lcUnreachable","docLink":"./Init/Prelude.html#lcUnreachable","doc":"Auxiliary unsafe constant used by the Compiler to mark unreachable code.\n\nLike `lcProof`, this is an `unsafe axiom`, which means that even though it is\nnot sound, the kernel will not let us use it for regular proofs.\n\nExecuting this expression to actually synthesize a value of type `α` causes\n**immediate undefined behavior**, and the compiler does take advantage of this\nto optimize the code assuming that it is not called. If it is not optimized out,\nit is likely to appear as a print message saying \"unreachable code\", but this\nbehavior is not guaranteed or stable in any way.\n"},"lcProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L145-L145","name":"lcProof","docLink":"./Init/Prelude.html#lcProof","doc":"Auxiliary unsafe constant used by the Compiler when erasing proofs from code.\n\nIt may look strange to have an axiom that says \"every proposition is true\",\nsince this is obviously unsound, but the `unsafe` marker ensures that the\nkernel will not let this through into regular proofs. The lower levels of the\ncode generator don't need proofs in terms, so this is used to stub the proofs\nout.\n"},"lcCast":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L150-L150","name":"lcCast","docLink":"./Init/Prelude.html#lcCast","doc":"Auxiliary unsafe constant used by the Compiler when erasing casts.\n"},"ite_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L97-L97","name":"ite_true","docLink":"./Init/SimpLemmas.html#ite_true","doc":""},"ite_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L101-L101","name":"ite_self","docLink":"./Init/SimpLemmas.html#ite_self","doc":""},"ite_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L98-L98","name":"ite_false","docLink":"./Init/SimpLemmas.html#ite_false","doc":""},"ite_congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L74-L77","name":"ite_congr","docLink":"./Init/SimpLemmas.html#ite_congr","doc":""},"ite":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L904-L905","name":"ite","docLink":"./Init/Prelude.html#ite","doc":"`if c then t else e` is notation for `ite c t e`, \"if-then-else\", which decides to\nreturn `t` or `e` depending on whether `c` is true or false. The explicit argument\n`c : Prop` does not have any actual computational content, but there is an additional\n`[Decidable c]` argument synthesized by typeclass inference which actually\ndetermines how to evaluate `c` to true or false.\n\nBecause lean uses a strict (call-by-value) evaluation strategy, the signature of this\nfunction is problematic in that it would require `t` and `e` to be evaluated before\ncalling the `ite` function, which would cause both sides of the `if` to be evaluated.\nEven if the result is discarded, this would be a big performance problem,\nand is undesirable for users in any case. To resolve this, `ite` is marked as\n`@[macroInline]`, which means that it is unfolded during code generation, and\nthe definition of the function uses `fun _ => t` and `fun _ => e` so this recovers\nthe expected \"lazy\" behavior of `if`: the `t` and `e` arguments delay evaluation\nuntil `c` is known.\n"},"isValidChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L9-L10","name":"isValidChar","docLink":"./Init/Data/Char/Basic.html#isValidChar","doc":""},"invImage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L127-L129","name":"invImage","docLink":"./Init/WF.html#invImage","doc":""},"instXorUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L335-L335","name":"instXorUSize","docLink":"./Init/Data/UInt.html#instXorUSize","doc":""},"instXorUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L58-L58","name":"instXorUInt8","docLink":"./Init/Data/UInt.html#instXorUInt8","doc":""},"instXorUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L259-L259","name":"instXorUInt64","docLink":"./Init/Data/UInt.html#instXorUInt64","doc":""},"instXorUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L197-L197","name":"instXorUInt32","docLink":"./Init/Data/UInt.html#instXorUInt32","doc":""},"instXorUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L128-L128","name":"instXorUInt16","docLink":"./Init/Data/UInt.html#instXorUInt16","doc":""},"instWellFoundedRelation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L199-L200","name":"instWellFoundedRelation","docLink":"./Init/WF.html#instWellFoundedRelation","doc":""},"instTransEq_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L995-L996","name":"instTransEq_1","docLink":"./Init/Prelude.html#instTransEq_1","doc":""},"instTransEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L992-L993","name":"instTransEq","docLink":"./Init/Prelude.html#instTransEq","doc":""},"instToStringUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L66-L67","name":"instToStringUnit","docLink":"./Init/Data/ToString/Basic.html#instToStringUnit","doc":""},"instToStringUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L98-L99","name":"instToStringUSize","docLink":"./Init/Data/ToString/Basic.html#instToStringUSize","doc":""},"instToStringULift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L63-L64","name":"instToStringULift","docLink":"./Init/Data/ToString/Basic.html#instToStringULift","doc":""},"instToStringUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L86-L87","name":"instToStringUInt8","docLink":"./Init/Data/ToString/Basic.html#instToStringUInt8","doc":""},"instToStringUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L95-L96","name":"instToStringUInt64","docLink":"./Init/Data/ToString/Basic.html#instToStringUInt64","doc":""},"instToStringUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L92-L93","name":"instToStringUInt32","docLink":"./Init/Data/ToString/Basic.html#instToStringUInt32","doc":""},"instToStringUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L89-L90","name":"instToStringUInt16","docLink":"./Init/Data/ToString/Basic.html#instToStringUInt16","doc":""},"instToStringSum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L113-L115","name":"instToStringSum","docLink":"./Init/Data/ToString/Basic.html#instToStringSum","doc":""},"instToStringSubtype":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L123-L124","name":"instToStringSubtype","docLink":"./Init/Data/ToString/Basic.html#instToStringSubtype","doc":""},"instToStringSubstring":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L34-L35","name":"instToStringSubstring","docLink":"./Init/Data/ToString/Basic.html#instToStringSubstring","doc":""},"instToStringSubarray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L157-L158","name":"instToStringSubarray","docLink":"./Init/Data/Array/Subarray.html#instToStringSubarray","doc":""},"instToStringString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L31-L32","name":"instToStringString","docLink":"./Init/Data/ToString/Basic.html#instToStringString","doc":""},"instToStringSigma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L120-L121","name":"instToStringSigma","docLink":"./Init/Data/ToString/Basic.html#instToStringSigma","doc":""},"instToStringProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L117-L118","name":"instToStringProd","docLink":"./Init/Data/ToString/Basic.html#instToStringProd","doc":""},"instToStringPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L72-L73","name":"instToStringPos","docLink":"./Init/Data/ToString/Basic.html#instToStringPos","doc":""},"instToStringPUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L60-L61","name":"instToStringPUnit","docLink":"./Init/Data/ToString/Basic.html#instToStringPUnit","doc":""},"instToStringOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L109-L111","name":"instToStringOption","docLink":"./Init/Data/ToString/Basic.html#instToStringOption","doc":""},"instToStringNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L69-L70","name":"instToStringNat","docLink":"./Init/Data/ToString/Basic.html#instToStringNat","doc":""},"instToStringList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L57-L58","name":"instToStringList","docLink":"./Init/Data/ToString/Basic.html#instToStringList","doc":""},"instToStringIterator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L37-L38","name":"instToStringIterator","docLink":"./Init/Data/ToString/Basic.html#instToStringIterator","doc":""},"instToStringInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L75-L78","name":"instToStringInt","docLink":"./Init/Data/ToString/Basic.html#instToStringInt","doc":""},"instToStringIdType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L25-L26","name":"instToStringIdType","docLink":"./Init/Data/ToString/Basic.html#instToStringIdType","doc":""},"instToStringId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L28-L29","name":"instToStringId","docLink":"./Init/Data/ToString/Basic.html#instToStringId","doc":""},"instToStringFormat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L101-L102","name":"instToStringFormat","docLink":"./Init/Data/ToString/Basic.html#instToStringFormat","doc":""},"instToStringFloatArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L170-L170","name":"instToStringFloatArray","docLink":"./Init/Data/FloatArray/Basic.html#instToStringFloatArray","doc":""},"instToStringFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L79-L80","name":"instToStringFloat","docLink":"./Init/Data/Float.html#instToStringFloat","doc":""},"instToStringFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L83-L84","name":"instToStringFin","docLink":"./Init/Data/ToString/Basic.html#instToStringFin","doc":""},"instToStringExcept":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L144-L147","name":"instToStringExcept","docLink":"./Init/Data/ToString/Basic.html#instToStringExcept","doc":""},"instToStringDecidable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L43-L46","name":"instToStringDecidable","docLink":"./Init/Data/ToString/Basic.html#instToStringDecidable","doc":""},"instToStringChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L80-L81","name":"instToStringChar","docLink":"./Init/Data/ToString/Basic.html#instToStringChar","doc":""},"instToStringByteArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L188-L188","name":"instToStringByteArray","docLink":"./Init/Data/ByteArray/Basic.html#instToStringByteArray","doc":""},"instToStringBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L40-L41","name":"instToStringBool","docLink":"./Init/Data/ToString/Basic.html#instToStringBool","doc":""},"instToStreamSubarray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L70-L71","name":"instToStreamSubarray","docLink":"./Init/Data/Stream.html#instToStreamSubarray","doc":""},"instToStreamStringSubstring":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L73-L74","name":"instToStreamStringSubstring","docLink":"./Init/Data/Stream.html#instToStreamStringSubstring","doc":""},"instToStreamRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L76-L77","name":"instToStreamRange","docLink":"./Init/Data/Stream.html#instToStreamRange","doc":""},"instToStreamList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L64-L65","name":"instToStreamList","docLink":"./Init/Data/Stream.html#instToStreamList","doc":""},"instToStreamArraySubarray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L67-L68","name":"instToStreamArraySubarray","docLink":"./Init/Data/Stream.html#instToStreamArraySubarray","doc":""},"instToFormatProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Instances.lean#L33-L34","name":"instToFormatProd","docLink":"./Init/Data/Format/Instances.html#instToFormatProd","doc":""},"instToFormatPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Instances.lean#L39-L40","name":"instToFormatPos","docLink":"./Init/Data/Format/Instances.html#instToFormatPos","doc":""},"instToFormatOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Instances.lean#L30-L31","name":"instToFormatOption","docLink":"./Init/Data/Format/Instances.html#instToFormatOption","doc":""},"instToFormatList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Instances.lean#L20-L21","name":"instToFormatList","docLink":"./Init/Data/Format/Instances.html#instToFormatList","doc":""},"instToFormatArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Instances.lean#L23-L24","name":"instToFormatArray","docLink":"./Init/Data/Format/Instances.html#instToFormatArray","doc":""},"instToFormat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Instances.lean#L13-L14","name":"instToFormat","docLink":"./Init/Data/Format/Instances.html#instToFormat","doc":""},"instToBoolOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L13-L13","name":"instToBoolOption","docLink":"./Init/Control/Option.html#instToBoolOption","doc":""},"instToBoolBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L42-L43","name":"instToBoolBool","docLink":"./Init/Control/Basic.html#instToBoolBool","doc":""},"instSubsingletonStateM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L25-L31","name":"instSubsingletonStateM","docLink":"./Init/Control/State.html#instSubsingletonStateM","doc":""},"instSubsingletonSquash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1098-L1103","name":"instSubsingletonSquash","docLink":"./Init/Core.html#instSubsingletonSquash","doc":""},"instSubsingletonPUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L686-L687","name":"instSubsingletonPUnit","docLink":"./Init/Core.html#instSubsingletonPUnit","doc":""},"instSubsingletonForAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1082-L1084","name":"instSubsingletonForAll","docLink":"./Init/Core.html#instSubsingletonForAll","doc":""},"instSubsingletonDecidable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L538-L545","name":"instSubsingletonDecidable","docLink":"./Init/Core.html#instSubsingletonDecidable","doc":""},"instSubsingleton":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L535-L536","name":"instSubsingleton","docLink":"./Init/Core.html#instSubsingleton","doc":""},"instSubUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L321-L321","name":"instSubUSize","docLink":"./Init/Data/UInt.html#instSubUSize","doc":""},"instSubUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L44-L44","name":"instSubUInt8","docLink":"./Init/Data/UInt.html#instSubUInt8","doc":""},"instSubUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L245-L245","name":"instSubUInt64","docLink":"./Init/Data/UInt.html#instSubUInt64","doc":""},"instSubUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L185-L185","name":"instSubUInt32","docLink":"./Init/Data/UInt.html#instSubUInt32","doc":""},"instSubUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L114-L114","name":"instSubUInt16","docLink":"./Init/Data/UInt.html#instSubUInt16","doc":""},"instSubNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1373-L1374","name":"instSubNat","docLink":"./Init/Prelude.html#instSubNat","doc":""},"instSubFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L49-L49","name":"instSubFloat","docLink":"./Init/Data/Float.html#instSubFloat","doc":""},"instStreamSubstringChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L108-L113","name":"instStreamSubstringChar","docLink":"./Init/Data/Stream.html#instStreamSubstringChar","doc":""},"instStreamSubarray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L93-L99","name":"instStreamSubarray","docLink":"./Init/Data/Stream.html#instStreamSubarray","doc":""},"instStreamRangeNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L101-L106","name":"instStreamRangeNat","docLink":"./Init/Data/Stream.html#instStreamRangeNat","doc":""},"instStreamProdProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L79-L86","name":"instStreamProdProd","docLink":"./Init/Data/Stream.html#instStreamProdProd","doc":""},"instStreamList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L88-L91","name":"instStreamList","docLink":"./Init/Data/Stream.html#instStreamList","doc":""},"instSizeOfNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L30-L31","name":"instSizeOfNat","docLink":"./Init/SizeOf.html#instSizeOfNat","doc":""},"instSizeOfForAllUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L35-L36","name":"instSizeOfForAllUnit","docLink":"./Init/SizeOf.html#instSizeOfForAllUnit","doc":""},"instSizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L25-L26","name":"instSizeOf","docLink":"./Init/SizeOf.html#instSizeOf","doc":""},"instShiftRightUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L337-L337","name":"instShiftRightUSize","docLink":"./Init/Data/UInt.html#instShiftRightUSize","doc":""},"instShiftRightUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L60-L60","name":"instShiftRightUInt8","docLink":"./Init/Data/UInt.html#instShiftRightUInt8","doc":""},"instShiftRightUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L261-L261","name":"instShiftRightUInt64","docLink":"./Init/Data/UInt.html#instShiftRightUInt64","doc":""},"instShiftRightUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L199-L199","name":"instShiftRightUInt32","docLink":"./Init/Data/UInt.html#instShiftRightUInt32","doc":""},"instShiftRightUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L130-L130","name":"instShiftRightUInt16","docLink":"./Init/Data/UInt.html#instShiftRightUInt16","doc":""},"instShiftLeftUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L336-L336","name":"instShiftLeftUSize","docLink":"./Init/Data/UInt.html#instShiftLeftUSize","doc":""},"instShiftLeftUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L59-L59","name":"instShiftLeftUInt8","docLink":"./Init/Data/UInt.html#instShiftLeftUInt8","doc":""},"instShiftLeftUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L260-L260","name":"instShiftLeftUInt64","docLink":"./Init/Data/UInt.html#instShiftLeftUInt64","doc":""},"instShiftLeftUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L198-L198","name":"instShiftLeftUInt32","docLink":"./Init/Data/UInt.html#instShiftLeftUInt32","doc":""},"instShiftLeftUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L129-L129","name":"instShiftLeftUInt16","docLink":"./Init/Data/UInt.html#instShiftLeftUInt16","doc":""},"instSTWorldEST":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L23-L23","name":"instSTWorldEST","docLink":"./Init/System/ST.html#instSTWorldEST","doc":""},"instSTWorld":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L22-L22","name":"instSTWorld","docLink":"./Init/System/ST.html#instSTWorld","doc":""},"instReprUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L64-L65","name":"instReprUnit","docLink":"./Init/Data/Repr.html#instReprUnit","doc":""},"instReprUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L234-L235","name":"instReprUSize","docLink":"./Init/Data/Repr.html#instReprUSize","doc":""},"instReprULift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L60-L62","name":"instReprULift","docLink":"./Init/Data/Repr.html#instReprULift","doc":""},"instReprUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L222-L223","name":"instReprUInt8","docLink":"./Init/Data/Repr.html#instReprUInt8","doc":""},"instReprUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L231-L232","name":"instReprUInt64","docLink":"./Init/Data/Repr.html#instReprUInt64","doc":""},"instReprUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L228-L229","name":"instReprUInt32","docLink":"./Init/Data/Repr.html#instReprUInt32","doc":""},"instReprUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L225-L226","name":"instReprUInt16","docLink":"./Init/Data/Repr.html#instReprUInt16","doc":""},"instReprTupleProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L89-L90","name":"instReprTupleProd","docLink":"./Init/Data/Repr.html#instReprTupleProd","doc":""},"instReprTuple":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L86-L87","name":"instReprTuple","docLink":"./Init/Data/Repr.html#instReprTuple","doc":""},"instReprSum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L78-L79","name":"instReprSum","docLink":"./Init/Data/Repr.html#instReprSum","doc":""},"instReprSubtype":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L101-L102","name":"instReprSubtype","docLink":"./Init/Data/Repr.html#instReprSubtype","doc":""},"instReprSubstring":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L213-L214","name":"instReprSubstring","docLink":"./Init/Data/Repr.html#instReprSubstring","doc":""},"instReprSubarray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L154-L155","name":"instReprSubarray","docLink":"./Init/Data/Array/Subarray.html#instReprSubarray","doc":""},"instReprString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L207-L208","name":"instReprString","docLink":"./Init/Data/Repr.html#instReprString","doc":""},"instReprStdGen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L40-L41","name":"instReprStdGen","docLink":"./Init/Data/Random.html#instReprStdGen","doc":""},"instReprSourceInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L266-L266","name":"instReprSourceInfo","docLink":"./Init/Data/Repr.html#instReprSourceInfo","doc":""},"instReprSigma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L98-L99","name":"instReprSigma","docLink":"./Init/Data/Repr.html#instReprSigma","doc":""},"instReprSSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SSet.lean#L49-L50","name":"instReprSSet","docLink":"./Lean/Data/SSet.html#instReprSSet","doc":""},"instReprProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L95-L96","name":"instReprProd","docLink":"./Init/Data/Repr.html#instReprProd","doc":""},"instReprPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L210-L211","name":"instReprPos","docLink":"./Init/Data/Repr.html#instReprPos","doc":""},"instReprPUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L57-L58","name":"instReprPUnit","docLink":"./Init/Data/Repr.html#instReprPUnit","doc":""},"instReprOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L71-L72","name":"instReprOption","docLink":"./Init/Data/Repr.html#instReprOption","doc":""},"instReprNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L167-L168","name":"instReprNat","docLink":"./Init/Data/Repr.html#instReprNat","doc":""},"instReprList_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L252-L253","name":"instReprList_1","docLink":"./Init/Data/Repr.html#instReprList_1","doc":""},"instReprList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L243-L244","name":"instReprList","docLink":"./Init/Data/Repr.html#instReprList","doc":""},"instReprIterator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L216-L217","name":"instReprIterator","docLink":"./Init/Data/Repr.html#instReprIterator","doc":""},"instReprInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L174-L175","name":"instReprInt","docLink":"./Init/Data/Repr.html#instReprInt","doc":""},"instReprIdType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L35-L36","name":"instReprIdType","docLink":"./Init/Data/Repr.html#instReprIdType","doc":""},"instReprId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L38-L39","name":"instReprId","docLink":"./Init/Data/Repr.html#instReprId","doc":""},"instReprFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L82-L83","name":"instReprFloat","docLink":"./Init/Data/Float.html#instReprFloat","doc":""},"instReprFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L219-L220","name":"instReprFin","docLink":"./Init/Data/Repr.html#instReprFin","doc":""},"instReprExcept":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L149-L152","name":"instReprExcept","docLink":"./Init/Data/ToString/Basic.html#instReprExcept","doc":""},"instReprDecidable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L52-L55","name":"instReprDecidable","docLink":"./Init/Data/Repr.html#instReprDecidable","doc":""},"instReprChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L197-L198","name":"instReprChar","docLink":"./Init/Data/Repr.html#instReprChar","doc":""},"instReprBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L41-L44","name":"instReprBool","docLink":"./Init/Data/Repr.html#instReprBool","doc":""},"instReprAtomUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L264-L264","name":"instReprAtomUSize","docLink":"./Init/Data/Repr.html#instReprAtomUSize","doc":""},"instReprAtomUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L260-L260","name":"instReprAtomUInt8","docLink":"./Init/Data/Repr.html#instReprAtomUInt8","doc":""},"instReprAtomUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L263-L263","name":"instReprAtomUInt64","docLink":"./Init/Data/Repr.html#instReprAtomUInt64","doc":""},"instReprAtomUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L262-L262","name":"instReprAtomUInt32","docLink":"./Init/Data/Repr.html#instReprAtomUInt32","doc":""},"instReprAtomUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L261-L261","name":"instReprAtomUInt16","docLink":"./Init/Data/Repr.html#instReprAtomUInt16","doc":""},"instReprAtomString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L259-L259","name":"instReprAtomString","docLink":"./Init/Data/Repr.html#instReprAtomString","doc":""},"instReprAtomNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L256-L256","name":"instReprAtomNat","docLink":"./Init/Data/Repr.html#instReprAtomNat","doc":""},"instReprAtomInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L257-L257","name":"instReprAtomInt","docLink":"./Init/Data/Repr.html#instReprAtomInt","doc":""},"instReprAtomFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L85-L85","name":"instReprAtomFloat","docLink":"./Init/Data/Float.html#instReprAtomFloat","doc":""},"instReprAtomChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L258-L258","name":"instReprAtomChar","docLink":"./Init/Data/Repr.html#instReprAtomChar","doc":""},"instReprAtomBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L255-L255","name":"instReprAtomBool","docLink":"./Init/Data/Repr.html#instReprAtomBool","doc":""},"instRandomGenStdGen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L66-L70","name":"instRandomGenStdGen","docLink":"./Init/Data/Random.html#instRandomGenStdGen","doc":""},"instPowNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1180-L1181","name":"instPowNat","docLink":"./Init/Prelude.html#instPowNat","doc":""},"instPowFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L114-L114","name":"instPowFloat","docLink":"./Init/Data/Float.html#instPowFloat","doc":""},"instOrdUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L56-L57","name":"instOrdUSize","docLink":"./Init/Data/Ord.html#instOrdUSize","doc":""},"instOrdUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L44-L45","name":"instOrdUInt8","docLink":"./Init/Data/Ord.html#instOrdUInt8","doc":""},"instOrdUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L53-L54","name":"instOrdUInt64","docLink":"./Init/Data/Ord.html#instOrdUInt64","doc":""},"instOrdUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L50-L51","name":"instOrdUInt32","docLink":"./Init/Data/Ord.html#instOrdUInt32","doc":""},"instOrdUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L47-L48","name":"instOrdUInt16","docLink":"./Init/Data/Ord.html#instOrdUInt16","doc":""},"instOrdString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L38-L39","name":"instOrdString","docLink":"./Init/Data/Ord.html#instOrdString","doc":""},"instOrdNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L26-L27","name":"instOrdNat","docLink":"./Init/Data/Ord.html#instOrdNat","doc":""},"instOrdInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L29-L30","name":"instOrdInt","docLink":"./Init/Data/Ord.html#instOrdInt","doc":""},"instOrdFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L41-L42","name":"instOrdFin","docLink":"./Init/Data/Ord.html#instOrdFin","doc":""},"instOrdChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L59-L60","name":"instOrdChar","docLink":"./Init/Data/Ord.html#instOrdChar","doc":""},"instOrdBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L32-L36","name":"instOrdBool","docLink":"./Init/Data/Ord.html#instOrdBool","doc":""},"instOrOpUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L334-L334","name":"instOrOpUSize","docLink":"./Init/Data/UInt.html#instOrOpUSize","doc":""},"instOrOpUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L57-L57","name":"instOrOpUInt8","docLink":"./Init/Data/UInt.html#instOrOpUInt8","doc":""},"instOrOpUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L258-L258","name":"instOrOpUInt64","docLink":"./Init/Data/UInt.html#instOrOpUInt64","doc":""},"instOrOpUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L196-L196","name":"instOrOpUInt32","docLink":"./Init/Data/UInt.html#instOrOpUInt32","doc":""},"instOrOpUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L127-L127","name":"instOrOpUInt16","docLink":"./Init/Data/UInt.html#instOrOpUInt16","doc":""},"instOrElseEIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L37-L37","name":"instOrElseEIO","docLink":"./Init/System/IO.html#instOrElseEIO","doc":""},"instOrElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L25-L25","name":"instOrElse","docLink":"./Init/Control/Basic.html#instOrElse","doc":""},"instOfScientificFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/OfScientific.lean#L42-L43","name":"instOfScientificFloat","docLink":"./Init/Data/OfScientific.html#instOfScientificFloat","doc":"The `OfScientific Float` must have priority higher than `mid` since\nthe default instance `Neg Int` has `mid` priority.\n```\n#check -42.0 -- must be Float\n```\n"},"instOfNatUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L319-L319","name":"instOfNatUSize","docLink":"./Init/Data/UInt.html#instOfNatUSize","doc":""},"instOfNatUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L42-L42","name":"instOfNatUInt8","docLink":"./Init/Data/UInt.html#instOfNatUInt8","doc":""},"instOfNatUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L243-L243","name":"instOfNatUInt64","docLink":"./Init/Data/UInt.html#instOfNatUInt64","doc":""},"instOfNatUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L183-L183","name":"instOfNatUInt32","docLink":"./Init/Data/UInt.html#instOfNatUInt32","doc":""},"instOfNatUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L112-L112","name":"instOfNatUInt16","docLink":"./Init/Data/UInt.html#instOfNatUInt16","doc":""},"instOfNatNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L971-L972","name":"instOfNatNat","docLink":"./Init/Prelude.html#instOfNatNat","doc":""},"instOfNatInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L25-L26","name":"instOfNatInt","docLink":"./Init/Data/Int/Basic.html#instOfNatInt","doc":""},"instOfNatFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/OfScientific.lean#L53-L53","name":"instOfNatFloat","docLink":"./Init/Data/OfScientific.html#instOfNatFloat","doc":""},"instNonemptyForAll_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L710-L711","name":"instNonemptyForAll_1","docLink":"./Init/Prelude.html#instNonemptyForAll_1","doc":""},"instNonemptyForAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L707-L708","name":"instNonemptyForAll","docLink":"./Init/Prelude.html#instNonemptyForAll","doc":""},"instNonempty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L697-L698","name":"instNonempty","docLink":"./Init/Prelude.html#instNonempty","doc":""},"instNegFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L52-L52","name":"instNegFloat","docLink":"./Init/Data/Float.html#instNegFloat","doc":""},"instMulUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L322-L322","name":"instMulUSize","docLink":"./Init/Data/UInt.html#instMulUSize","doc":""},"instMulUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L45-L45","name":"instMulUInt8","docLink":"./Init/Data/UInt.html#instMulUInt8","doc":""},"instMulUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L246-L246","name":"instMulUInt64","docLink":"./Init/Data/UInt.html#instMulUInt64","doc":""},"instMulUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L186-L186","name":"instMulUInt32","docLink":"./Init/Data/UInt.html#instMulUInt32","doc":""},"instMulUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L115-L115","name":"instMulUInt16","docLink":"./Init/Data/UInt.html#instMulUInt16","doc":""},"instMulNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1171-L1172","name":"instMulNat","docLink":"./Init/Prelude.html#instMulNat","doc":""},"instMulFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L50-L50","name":"instMulFloat","docLink":"./Init/Data/Float.html#instMulFloat","doc":""},"instMonadWithReaderOfReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2148-L2149","name":"instMonadWithReaderOfReaderT","docLink":"./Init/Prelude.html#instMonadWithReaderOfReaderT","doc":""},"instMonadWithReaderOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2145-L2146","name":"instMonadWithReaderOf","docLink":"./Init/Prelude.html#instMonadWithReaderOf","doc":""},"instMonadWithReader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2142-L2143","name":"instMonadWithReader","docLink":"./Init/Prelude.html#instMonadWithReader","doc":""},"instMonadStateOfStateT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L89-L92","name":"instMonadStateOfStateT","docLink":"./Init/Control/State.html#instMonadStateOfStateT","doc":""},"instMonadStateOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2197-L2200","name":"instMonadStateOf","docLink":"./Init/Prelude.html#instMonadStateOf","doc":""},"instMonadState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2184-L2187","name":"instMonadState","docLink":"./Init/Prelude.html#instMonadState","doc":""},"instMonadST":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L17-L17","name":"instMonadST","docLink":"./Init/System/ST.html#instMonadST","doc":""},"instMonadReaderOfReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2128-L2129","name":"instMonadReaderOfReaderT","docLink":"./Init/Prelude.html#instMonadReaderOfReaderT","doc":""},"instMonadReaderOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2125-L2126","name":"instMonadReaderOf","docLink":"./Init/Prelude.html#instMonadReaderOf","doc":""},"instMonadReader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2122-L2123","name":"instMonadReader","docLink":"./Init/Prelude.html#instMonadReader","doc":""},"instMonadOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L90-L92","name":"instMonadOption","docLink":"./Init/Data/Option/Basic.html#instMonadOption","doc":""},"instMonadLiftT_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1978-L1979","name":"instMonadLiftT_1","docLink":"./Init/Prelude.html#instMonadLiftT_1","doc":""},"instMonadLiftT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1975-L1976","name":"instMonadLiftT","docLink":"./Init/Prelude.html#instMonadLiftT","doc":""},"instMonadLiftSTEST":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L37-L40","name":"instMonadLiftSTEST","docLink":"./Init/System/ST.html#instMonadLiftSTEST","doc":""},"instMonadLiftBaseIOEIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L50-L50","name":"instMonadLiftBaseIOEIO","docLink":"./Init/System/IO.html#instMonadLiftBaseIOEIO","doc":""},"instMonadFunctorT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1995-L1996","name":"instMonadFunctorT","docLink":"./Init/Prelude.html#instMonadFunctorT","doc":""},"instMonadFinallyStateRefT'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L60-L61","name":"instMonadFinallyStateRefT'","docLink":"./Init/Control/StateRef.html#instMonadFinallyStateRefT'","doc":""},"instMonadFinallyEIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L35-L35","name":"instMonadFinallyEIO","docLink":"./Init/System/IO.html#instMonadFinallyEIO","doc":""},"instMonadFinallyBaseIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L44-L44","name":"instMonadFinallyBaseIO","docLink":"./Init/System/IO.html#instMonadFinallyBaseIO","doc":""},"instMonadExceptOfUnitOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L107-L109","name":"instMonadExceptOfUnitOption","docLink":"./Init/Data/Option/Basic.html#instMonadExceptOfUnitOption","doc":""},"instMonadExceptOfExceptT_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L117-L119","name":"instMonadExceptOfExceptT_1","docLink":"./Init/Control/Except.html#instMonadExceptOfExceptT_1","doc":""},"instMonadExceptOfExceptT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L113-L115","name":"instMonadExceptOfExceptT","docLink":"./Init/Control/Except.html#instMonadExceptOfExceptT","doc":""},"instMonadExceptOfExcept":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L124-L126","name":"instMonadExceptOfExcept","docLink":"./Init/Control/Except.html#instMonadExceptOfExcept","doc":""},"instMonadExceptOfEST":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L15-L15","name":"instMonadExceptOfEST","docLink":"./Init/System/ST.html#instMonadExceptOfEST","doc":""},"instMonadExceptOfEIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L36-L36","name":"instMonadExceptOfEIO","docLink":"./Init/System/IO.html#instMonadExceptOfEIO","doc":""},"instMonadExcept":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2032-L2034","name":"instMonadExcept","docLink":"./Init/Prelude.html#instMonadExcept","doc":""},"instMonadEST":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L14-L14","name":"instMonadEST","docLink":"./Init/System/ST.html#instMonadEST","doc":""},"instMonadEIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L34-L34","name":"instMonadEIO","docLink":"./Init/System/IO.html#instMonadEIO","doc":""},"instMonadControlT_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L205-L208","name":"instMonadControlT_1","docLink":"./Init/Control/Basic.html#instMonadControlT_1","doc":""},"instMonadControlT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L200-L203","name":"instMonadControlT","docLink":"./Init/Control/Basic.html#instMonadControlT","doc":""},"instMonadControlStateRefT'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L57-L58","name":"instMonadControlStateRefT'","docLink":"./Init/Control/StateRef.html#instMonadControlStateRefT'","doc":""},"instMonadControlReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Reader.lean#L27-L30","name":"instMonadControlReaderT","docLink":"./Init/Control/Reader.html#instMonadControlReaderT","doc":""},"instMonadControlOptionT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L72-L75","name":"instMonadControlOptionT","docLink":"./Init/Control/Option.html#instMonadControlOptionT","doc":""},"instMonadControlExceptT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L145-L148","name":"instMonadControlExceptT","docLink":"./Init/Control/Except.html#instMonadControlExceptT","doc":""},"instMonadBaseIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L43-L43","name":"instMonadBaseIO","docLink":"./Init/System/IO.html#instMonadBaseIO","doc":""},"instModUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L323-L323","name":"instModUSize","docLink":"./Init/Data/UInt.html#instModUSize","doc":""},"instModUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L46-L46","name":"instModUInt8","docLink":"./Init/Data/UInt.html#instModUInt8","doc":""},"instModUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L247-L247","name":"instModUInt64","docLink":"./Init/Data/UInt.html#instModUInt64","doc":""},"instModUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L187-L187","name":"instModUInt32","docLink":"./Init/Data/UInt.html#instModUInt32","doc":""},"instModUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L116-L116","name":"instModUInt16","docLink":"./Init/Data/UInt.html#instModUInt16","doc":""},"instLawfulMonadStateRefT'InstMonadStateRefT'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L230-L231","name":"instLawfulMonadStateRefT'InstMonadStateRefT'","docLink":"./Init/Control/Lawful.html#instLawfulMonadStateRefT'InstMonadStateRefT'","doc":""},"instLawfulBEqStringInstBEqInstDecidableEqString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L207-L207","name":"instLawfulBEqStringInstBEqInstDecidableEqString","docLink":"./Init/Core.html#instLawfulBEqStringInstBEqInstDecidableEqString","doc":""},"instLawfulBEqProdInstBEqProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Prod.lean#L9-L13","name":"instLawfulBEqProdInstBEqProd","docLink":"./Init/Data/Prod.html#instLawfulBEqProdInstBEqProd","doc":""},"instLawfulBEqInstBEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L201-L203","name":"instLawfulBEqInstBEq","docLink":"./Init/Core.html#instLawfulBEqInstBEq","doc":""},"instLawfulBEqCharInstBEqInstDecidableEqChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L205-L205","name":"instLawfulBEqCharInstBEqInstDecidableEqChar","docLink":"./Init/Core.html#instLawfulBEqCharInstBEqInstDecidableEqChar","doc":""},"instLawfulBEqBoolInstBEqInstDecidableEqBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L197-L199","name":"instLawfulBEqBoolInstBEqInstDecidableEqBool","docLink":"./Init/Core.html#instLawfulBEqBoolInstBEqInstDecidableEqBool","doc":""},"instLTUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L326-L326","name":"instLTUSize","docLink":"./Init/Data/UInt.html#instLTUSize","doc":""},"instLTUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L49-L49","name":"instLTUInt8","docLink":"./Init/Data/UInt.html#instLTUInt8","doc":""},"instLTUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L250-L250","name":"instLTUInt64","docLink":"./Init/Data/UInt.html#instLTUInt64","doc":""},"instLTUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1494-L1495","name":"instLTUInt32","docLink":"./Init/Prelude.html#instLTUInt32","doc":""},"instLTUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L119-L119","name":"instLTUInt16","docLink":"./Init/Data/UInt.html#instLTUInt16","doc":""},"instLTProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L648-L649","name":"instLTProd","docLink":"./Init/Core.html#instLTProd","doc":""},"instLTPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1783-L1784","name":"instLTPos","docLink":"./Init/Prelude.html#instLTPos","doc":""},"instLTOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L84-L85","name":"instLTOption","docLink":"./Init/Data/Option/Basic.html#instLTOption","doc":""},"instLTNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1237-L1238","name":"instLTNat","docLink":"./Init/Prelude.html#instLTNat","doc":""},"instLTFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L53-L53","name":"instLTFloat","docLink":"./Init/Data/Float.html#instLTFloat","doc":""},"instLTFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1407-L1408","name":"instLTFin","docLink":"./Init/Prelude.html#instLTFin","doc":""},"instLEUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L327-L327","name":"instLEUSize","docLink":"./Init/Data/UInt.html#instLEUSize","doc":""},"instLEUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L50-L50","name":"instLEUInt8","docLink":"./Init/Data/UInt.html#instLEUInt8","doc":""},"instLEUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L251-L251","name":"instLEUInt64","docLink":"./Init/Data/UInt.html#instLEUInt64","doc":""},"instLEUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1497-L1498","name":"instLEUInt32","docLink":"./Init/Prelude.html#instLEUInt32","doc":""},"instLEUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L120-L120","name":"instLEUInt16","docLink":"./Init/Data/UInt.html#instLEUInt16","doc":""},"instLEPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1780-L1781","name":"instLEPos","docLink":"./Init/Prelude.html#instLEPos","doc":""},"instLENat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1231-L1232","name":"instLENat","docLink":"./Init/Prelude.html#instLENat","doc":""},"instLEFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L54-L54","name":"instLEFloat","docLink":"./Init/Data/Float.html#instLEFloat","doc":""},"instLEFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1410-L1411","name":"instLEFin","docLink":"./Init/Prelude.html#instLEFin","doc":""},"instInhabitedUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1574-L1577","name":"instInhabitedUSize","docLink":"./Init/Prelude.html#instInhabitedUSize","doc":""},"instInhabitedUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1438-L1439","name":"instInhabitedUInt8","docLink":"./Init/Prelude.html#instInhabitedUInt8","doc":""},"instInhabitedUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1537-L1538","name":"instInhabitedUInt64","docLink":"./Init/Prelude.html#instInhabitedUInt64","doc":""},"instInhabitedUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1491-L1492","name":"instInhabitedUInt32","docLink":"./Init/Prelude.html#instInhabitedUInt32","doc":""},"instInhabitedUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1463-L1464","name":"instInhabitedUInt16","docLink":"./Init/Prelude.html#instInhabitedUInt16","doc":""},"instInhabitedTrue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L517-L517","name":"instInhabitedTrue","docLink":"./Init/Core.html#instInhabitedTrue","doc":""},"instInhabitedTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L136-L136","name":"instInhabitedTask","docLink":"./Init/Core.html#instInhabitedTask","doc":""},"instInhabitedSubstring":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1751-L1752","name":"instInhabitedSubstring","docLink":"./Init/Prelude.html#instInhabitedSubstring","doc":""},"instInhabitedStdGen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L36-L36","name":"instInhabitedStdGen","docLink":"./Init/Data/Random.html#instInhabitedStdGen","doc":""},"instInhabitedSort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L713-L714","name":"instInhabitedSort","docLink":"./Init/Prelude.html#instInhabitedSort","doc":""},"instInhabitedReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2051-L2052","name":"instInhabitedReaderT","docLink":"./Init/Prelude.html#instInhabitedReaderT","doc":""},"instInhabitedProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L514-L515","name":"instInhabitedProp","docLink":"./Init/Core.html#instInhabitedProp","doc":""},"instInhabitedProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L627-L628","name":"instInhabitedProd","docLink":"./Init/Core.html#instInhabitedProd","doc":""},"instInhabitedPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1738-L1739","name":"instInhabitedPos","docLink":"./Init/Prelude.html#instInhabitedPos","doc":""},"instInhabitedPUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L689-L690","name":"instInhabitedPUnit","docLink":"./Init/Core.html#instInhabitedPUnit","doc":""},"instInhabitedPProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L633-L634","name":"instInhabitedPProd","docLink":"./Init/Core.html#instInhabitedPProd","doc":""},"instInhabitedPNonScalar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L517-L517","name":"instInhabitedPNonScalar","docLink":"./Init/Core.html#instInhabitedPNonScalar","doc":""},"instInhabitedOrdering":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L13-L13","name":"instInhabitedOrdering","docLink":"./Init/Data/Ord.html#instInhabitedOrdering","doc":""},"instInhabitedOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1652-L1653","name":"instInhabitedOption","docLink":"./Init/Prelude.html#instInhabitedOption","doc":""},"instInhabitedNonemptyType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L748-L749","name":"instInhabitedNonemptyType","docLink":"./Init/Prelude.html#instInhabitedNonemptyType","doc":"`NonemptyType` is inhabited, because `PUnit` is a nonempty type. "},"instInhabitedNonScalar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L517-L517","name":"instInhabitedNonScalar","docLink":"./Init/Core.html#instInhabitedNonScalar","doc":""},"instInhabitedNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L963-L964","name":"instInhabitedNat","docLink":"./Init/Prelude.html#instInhabitedNat","doc":""},"instInhabitedMProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L630-L631","name":"instInhabitedMProd","docLink":"./Init/Core.html#instInhabitedMProd","doc":""},"instInhabitedList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1667-L1668","name":"instInhabitedList","docLink":"./Init/Prelude.html#instInhabitedList","doc":""},"instInhabitedForInStep_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L517-L517","name":"instInhabitedForInStep_1","docLink":"./Init/Core.html#instInhabitedForInStep_1","doc":""},"instInhabitedForInStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L86-L86","name":"instInhabitedForInStep","docLink":"./Init/Core.html#instInhabitedForInStep","doc":""},"instInhabitedForAll_2":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1941-L1942","name":"instInhabitedForAll_2","docLink":"./Init/Prelude.html#instInhabitedForAll_2","doc":""},"instInhabitedForAll_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L719-L720","name":"instInhabitedForAll_1","docLink":"./Init/Prelude.html#instInhabitedForAll_1","doc":""},"instInhabitedForAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L716-L717","name":"instInhabitedForAll","docLink":"./Init/Prelude.html#instInhabitedForAll","doc":""},"instInhabitedFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L32-L32","name":"instInhabitedFloat","docLink":"./Init/Data/Float.html#instInhabitedFloat","doc":""},"instInhabitedExceptT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L121-L122","name":"instInhabitedExceptT","docLink":"./Init/Control/Except.html#instInhabitedExceptT","doc":""},"instInhabitedExcept":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2007-L2008","name":"instInhabitedExcept","docLink":"./Init/Prelude.html#instInhabitedExcept","doc":""},"instInhabitedEST":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L16-L16","name":"instInhabitedEST","docLink":"./Init/System/ST.html#instInhabitedEST","doc":""},"instInhabitedEIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L38-L38","name":"instInhabitedEIO","docLink":"./Init/System/IO.html#instInhabitedEIO","doc":""},"instInhabitedBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L722-L722","name":"instInhabitedBool","docLink":"./Init/Prelude.html#instInhabitedBool","doc":""},"instInhabited":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1944-L1945","name":"instInhabited","docLink":"./Init/Prelude.html#instInhabited","doc":""},"instHashableUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L48-L49","name":"instHashableUSize","docLink":"./Init/Data/Hashable.html#instHashableUSize","doc":""},"instHashableUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L36-L37","name":"instHashableUInt8","docLink":"./Init/Data/Hashable.html#instHashableUInt8","doc":""},"instHashableUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L45-L46","name":"instHashableUInt64","docLink":"./Init/Data/Hashable.html#instHashableUInt64","doc":""},"instHashableUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L42-L43","name":"instHashableUInt32","docLink":"./Init/Data/Hashable.html#instHashableUInt32","doc":""},"instHashableUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L39-L40","name":"instHashableUInt16","docLink":"./Init/Data/Hashable.html#instHashableUInt16","doc":""},"instHashableString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2332-L2333","name":"instHashableString","docLink":"./Init/Prelude.html#instHashableString","doc":""},"instHashableProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L17-L18","name":"instHashableProd","docLink":"./Init/Data/Hashable.html#instHashableProd","doc":""},"instHashablePos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L14-L15","name":"instHashablePos","docLink":"./Init/Data/Hashable.html#instHashablePos","doc":""},"instHashableOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L25-L28","name":"instHashableOption","docLink":"./Init/Data/Hashable.html#instHashableOption","doc":""},"instHashableNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L11-L12","name":"instHashableNat","docLink":"./Init/Data/Hashable.html#instHashableNat","doc":""},"instHashableList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L30-L31","name":"instHashableList","docLink":"./Init/Data/Hashable.html#instHashableList","doc":""},"instHashableInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L54-L57","name":"instHashableInt","docLink":"./Init/Data/Hashable.html#instHashableInt","doc":""},"instHashableFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L51-L52","name":"instHashableFin","docLink":"./Init/Data/Hashable.html#instHashableFin","doc":""},"instHashableBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L20-L23","name":"instHashableBool","docLink":"./Init/Data/Hashable.html#instHashableBool","doc":""},"instHashableArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L33-L34","name":"instHashableArray","docLink":"./Init/Data/Hashable.html#instHashableArray","doc":""},"instHashable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Hashable.lean#L59-L60","name":"instHashable","docLink":"./Init/Data/Hashable.html#instHashable","doc":""},"instHasEquiv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L701-L702","name":"instHasEquiv","docLink":"./Init/Core.html#instHasEquiv","doc":""},"instHXor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1129-L1130","name":"instHXor","docLink":"./Init/Prelude.html#instHXor","doc":""},"instHSubPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1771-L1772","name":"instHSubPos","docLink":"./Init/Prelude.html#instHSubPos","doc":""},"instHSub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1093-L1094","name":"instHSub","docLink":"./Init/Prelude.html#instHSub","doc":""},"instHShiftRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1141-L1142","name":"instHShiftRight","docLink":"./Init/Prelude.html#instHShiftRight","doc":""},"instHShiftLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1137-L1138","name":"instHShiftLeft","docLink":"./Init/Prelude.html#instHShiftLeft","doc":""},"instHPow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1109-L1110","name":"instHPow","docLink":"./Init/Prelude.html#instHPow","doc":""},"instHOrElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1117-L1118","name":"instHOrElse","docLink":"./Init/Prelude.html#instHOrElse","doc":""},"instHOr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1133-L1134","name":"instHOr","docLink":"./Init/Prelude.html#instHOr","doc":""},"instHMul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1097-L1098","name":"instHMul","docLink":"./Init/Prelude.html#instHMul","doc":""},"instHModUSizeNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L324-L324","name":"instHModUSizeNat","docLink":"./Init/Data/UInt.html#instHModUSizeNat","doc":""},"instHModUInt8Nat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L47-L47","name":"instHModUInt8Nat","docLink":"./Init/Data/UInt.html#instHModUInt8Nat","doc":""},"instHModUInt64Nat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L248-L248","name":"instHModUInt64Nat","docLink":"./Init/Data/UInt.html#instHModUInt64Nat","doc":""},"instHModUInt32Nat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L188-L188","name":"instHModUInt32Nat","docLink":"./Init/Data/UInt.html#instHModUInt32Nat","doc":""},"instHModUInt16Nat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L117-L117","name":"instHModUInt16Nat","docLink":"./Init/Data/UInt.html#instHModUInt16Nat","doc":""},"instHMod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1105-L1106","name":"instHMod","docLink":"./Init/Prelude.html#instHMod","doc":""},"instHDiv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1101-L1102","name":"instHDiv","docLink":"./Init/Prelude.html#instHDiv","doc":""},"instHAppend":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1113-L1114","name":"instHAppend","docLink":"./Init/Prelude.html#instHAppend","doc":""},"instHAndThen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1121-L1122","name":"instHAndThen","docLink":"./Init/Prelude.html#instHAndThen","doc":""},"instHAnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1125-L1126","name":"instHAnd","docLink":"./Init/Prelude.html#instHAnd","doc":""},"instHAddPosString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1777-L1778","name":"instHAddPosString","docLink":"./Init/Prelude.html#instHAddPosString","doc":""},"instHAddPosChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1774-L1775","name":"instHAddPosChar","docLink":"./Init/Prelude.html#instHAddPosChar","doc":""},"instHAddPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1768-L1769","name":"instHAddPos","docLink":"./Init/Prelude.html#instHAddPos","doc":""},"instHAdd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1089-L1090","name":"instHAdd","docLink":"./Init/Prelude.html#instHAdd","doc":""},"instGetElemFinVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L120-L121","name":"instGetElemFinVal","docLink":"./Init/Data/Fin/Basic.html#instGetElemFinVal","doc":""},"instGetElemArrayNatLtInstLTNatSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1862-L1863","name":"instGetElemArrayNatLtInstLTNatSize","docLink":"./Init/Prelude.html#instGetElemArrayNatLtInstLTNatSize","doc":""},"instFunctorOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L87-L88","name":"instFunctorOption","docLink":"./Init/Data/Option/Basic.html#instFunctorOption","doc":""},"instForIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L61-L62","name":"instForIn","docLink":"./Init/Data/Stream.html#instForIn","doc":""},"instDivUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L325-L325","name":"instDivUSize","docLink":"./Init/Data/UInt.html#instDivUSize","doc":""},"instDivUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L48-L48","name":"instDivUInt8","docLink":"./Init/Data/UInt.html#instDivUInt8","doc":""},"instDivUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L249-L249","name":"instDivUInt64","docLink":"./Init/Data/UInt.html#instDivUInt64","doc":""},"instDivUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L189-L189","name":"instDivUInt32","docLink":"./Init/Data/UInt.html#instDivUInt32","doc":""},"instDivUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L118-L118","name":"instDivUInt16","docLink":"./Init/Data/UInt.html#instDivUInt16","doc":""},"instDivFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L51-L51","name":"instDivFloat","docLink":"./Init/Data/Float.html#instDivFloat","doc":""},"instDecidableTrue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L395-L396","name":"instDecidableTrue","docLink":"./Init/Core.html#instDecidableTrue","doc":""},"instDecidableRelLtLtOfOrd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L66-L67","name":"instDecidableRelLtLtOfOrd","docLink":"./Init/Data/Ord.html#instDecidableRelLtLtOfOrd","doc":""},"instDecidableRelLeLeOfOrd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L77-L78","name":"instDecidableRelLeLeOfOrd","docLink":"./Init/Data/Ord.html#instDecidableRelLeLeOfOrd","doc":""},"instDecidableOr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L916-L925","name":"instDecidableOr","docLink":"./Init/Prelude.html#instDecidableOr","doc":""},"instDecidableNot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L927-L930","name":"instDecidableNot","docLink":"./Init/Prelude.html#instDecidableNot","doc":""},"instDecidableLtUSizeInstLTUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L351-L351","name":"instDecidableLtUSizeInstLTUSize","docLink":"./Init/Data/UInt.html#instDecidableLtUSizeInstLTUSize","doc":""},"instDecidableLtUInt8InstLTUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L74-L74","name":"instDecidableLtUInt8InstLTUInt8","docLink":"./Init/Data/UInt.html#instDecidableLtUInt8InstLTUInt8","doc":""},"instDecidableLtUInt64InstLTUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L278-L278","name":"instDecidableLtUInt64InstLTUInt64","docLink":"./Init/Data/UInt.html#instDecidableLtUInt64InstLTUInt64","doc":""},"instDecidableLtUInt32InstLTUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1512-L1512","name":"instDecidableLtUInt32InstLTUInt32","docLink":"./Init/Prelude.html#instDecidableLtUInt32InstLTUInt32","doc":""},"instDecidableLtUInt16InstLTUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L144-L144","name":"instDecidableLtUInt16InstLTUInt16","docLink":"./Init/Data/UInt.html#instDecidableLtUInt16InstLTUInt16","doc":""},"instDecidableLtPosInstLTPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1789-L1790","name":"instDecidableLtPosInstLTPos","docLink":"./Init/Prelude.html#instDecidableLtPosInstLTPos","doc":""},"instDecidableLeUSizeInstLEUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L352-L352","name":"instDecidableLeUSizeInstLEUSize","docLink":"./Init/Data/UInt.html#instDecidableLeUSizeInstLEUSize","doc":""},"instDecidableLeUInt8InstLEUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L75-L75","name":"instDecidableLeUInt8InstLEUInt8","docLink":"./Init/Data/UInt.html#instDecidableLeUInt8InstLEUInt8","doc":""},"instDecidableLeUInt64InstLEUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L279-L279","name":"instDecidableLeUInt64InstLEUInt64","docLink":"./Init/Data/UInt.html#instDecidableLeUInt64InstLEUInt64","doc":""},"instDecidableLeUInt32InstLEUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1513-L1513","name":"instDecidableLeUInt32InstLEUInt32","docLink":"./Init/Prelude.html#instDecidableLeUInt32InstLEUInt32","doc":""},"instDecidableLeUInt16InstLEUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L145-L145","name":"instDecidableLeUInt16InstLEUInt16","docLink":"./Init/Data/UInt.html#instDecidableLeUInt16InstLEUInt16","doc":""},"instDecidableLePosInstLEPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1786-L1787","name":"instDecidableLePosInstLEPos","docLink":"./Init/Prelude.html#instDecidableLePosInstLEPos","doc":""},"instDecidableIteProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L489-L492","name":"instDecidableIteProp","docLink":"./Init/Core.html#instDecidableIteProp","doc":""},"instDecidableIff":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L449-L459","name":"instDecidableIff","docLink":"./Init/Core.html#instDecidableIff","doc":""},"instDecidableForAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L443-L447","name":"instDecidableForAll","docLink":"./Init/Core.html#instDecidableForAll","doc":""},"instDecidableFalse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L398-L399","name":"instDecidableFalse","docLink":"./Init/Core.html#instDecidableFalse","doc":""},"instDecidableEqUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1572-L1572","name":"instDecidableEqUSize","docLink":"./Init/Prelude.html#instDecidableEqUSize","doc":""},"instDecidableEqUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1436-L1436","name":"instDecidableEqUInt8","docLink":"./Init/Prelude.html#instDecidableEqUInt8","doc":""},"instDecidableEqUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1535-L1535","name":"instDecidableEqUInt64","docLink":"./Init/Prelude.html#instDecidableEqUInt64","doc":""},"instDecidableEqUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1489-L1489","name":"instDecidableEqUInt32","docLink":"./Init/Prelude.html#instDecidableEqUInt32","doc":""},"instDecidableEqUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1461-L1461","name":"instDecidableEqUInt16","docLink":"./Init/Prelude.html#instDecidableEqUInt16","doc":""},"instDecidableEqSum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L612-L621","name":"instDecidableEqSum","docLink":"./Init/Core.html#instDecidableEqSum","doc":""},"instDecidableEqString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1728-L1728","name":"instDecidableEqString","docLink":"./Init/Prelude.html#instDecidableEqString","doc":""},"instDecidableEqQuotient":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1029-L1035","name":"instDecidableEqQuotient","docLink":"./Init/Core.html#instDecidableEqQuotient","doc":""},"instDecidableEqProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L728-L731","name":"instDecidableEqProp","docLink":"./Init/Core.html#instDecidableEqProp","doc":""},"instDecidableEqProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L636-L643","name":"instDecidableEqProd","docLink":"./Init/Core.html#instDecidableEqProd","doc":""},"instDecidableEqPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1741-L1744","name":"instDecidableEqPos","docLink":"./Init/Prelude.html#instDecidableEqPos","doc":""},"instDecidableEqPUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L692-L693","name":"instDecidableEqPUnit","docLink":"./Init/Core.html#instDecidableEqPUnit","doc":""},"instDecidableEqOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L81-L81","name":"instDecidableEqOption","docLink":"./Init/Data/Option/Basic.html#instDecidableEqOption","doc":""},"instDecidableEqNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1217-L1217","name":"instDecidableEqNat","docLink":"./Init/Prelude.html#instDecidableEqNat","doc":""},"instDecidableEqList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1682-L1682","name":"instDecidableEqList","docLink":"./Init/Prelude.html#instDecidableEqList","doc":""},"instDecidableEqFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1401-L1405","name":"instDecidableEqFin","docLink":"./Init/Prelude.html#instDecidableEqFin","doc":""},"instDecidableEqChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1628-L1632","name":"instDecidableEqChar","docLink":"./Init/Prelude.html#instDecidableEqChar","doc":""},"instDecidableEqBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L843-L848","name":"instDecidableEqBool","docLink":"./Init/Prelude.html#instDecidableEqBool","doc":""},"instDecidableDitePropNot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L494-L497","name":"instDecidableDitePropNot","docLink":"./Init/Core.html#instDecidableDitePropNot","doc":""},"instDecidableAnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L907-L914","name":"instDecidableAnd","docLink":"./Init/Prelude.html#instDecidableAnd","doc":""},"instComplementUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L332-L332","name":"instComplementUSize","docLink":"./Init/Data/UInt.html#instComplementUSize","doc":""},"instComplementUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L55-L55","name":"instComplementUInt8","docLink":"./Init/Data/UInt.html#instComplementUInt8","doc":""},"instComplementUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L256-L256","name":"instComplementUInt64","docLink":"./Init/Data/UInt.html#instComplementUInt64","doc":""},"instComplementUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L194-L194","name":"instComplementUInt32","docLink":"./Init/Data/UInt.html#instComplementUInt32","doc":""},"instComplementUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L125-L125","name":"instComplementUInt16","docLink":"./Init/Data/UInt.html#instComplementUInt16","doc":""},"instCoeTail_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L119-L120","name":"instCoeTail_1","docLink":"./Init/Coe.html#instCoeTail_1","doc":""},"instCoeTail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L116-L117","name":"instCoeTail","docLink":"./Init/Coe.html#instCoeTail","doc":""},"instCoeStringError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L60-L60","name":"instCoeStringError","docLink":"./Init/System/IOError.html#instCoeStringError","doc":""},"instCoeNatInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L23-L23","name":"instCoeNatInt","docLink":"./Init/Data/Int/Basic.html#instCoeNatInt","doc":""},"instCoeDep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L113-L114","name":"instCoeDep","docLink":"./Init/Coe.html#instCoeDep","doc":""},"instBEqProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L645-L646","name":"instBEqProd","docLink":"./Init/Core.html#instBEqProd","doc":""},"instBEqOrdering":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L13-L13","name":"instBEqOrdering","docLink":"./Init/Data/Ord.html#instBEqOrdering","doc":""},"instBEqOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L82-L82","name":"instBEqOption","docLink":"./Init/Data/Option/Basic.html#instBEqOption","doc":""},"instBEqNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1191-L1192","name":"instBEqNat","docLink":"./Init/Prelude.html#instBEqNat","doc":""},"instBEqFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L58-L58","name":"instBEqFloat","docLink":"./Init/Data/Float.html#instBEqFloat","doc":""},"instBEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L864-L865","name":"instBEq","docLink":"./Init/Prelude.html#instBEq","doc":""},"instAppendSubarray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L149-L152","name":"instAppendSubarray","docLink":"./Init/Data/Array/Subarray.html#instAppendSubarray","doc":""},"instAndOpUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L333-L333","name":"instAndOpUSize","docLink":"./Init/Data/UInt.html#instAndOpUSize","doc":""},"instAndOpUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L56-L56","name":"instAndOpUInt8","docLink":"./Init/Data/UInt.html#instAndOpUInt8","doc":""},"instAndOpUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L257-L257","name":"instAndOpUInt64","docLink":"./Init/Data/UInt.html#instAndOpUInt64","doc":""},"instAndOpUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L195-L195","name":"instAndOpUInt32","docLink":"./Init/Data/UInt.html#instAndOpUInt32","doc":""},"instAndOpUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L126-L126","name":"instAndOpUInt16","docLink":"./Init/Data/UInt.html#instAndOpUInt16","doc":""},"instAlternativeOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L94-L96","name":"instAlternativeOption","docLink":"./Init/Data/Option/Basic.html#instAlternativeOption","doc":""},"instAddUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L320-L320","name":"instAddUSize","docLink":"./Init/Data/UInt.html#instAddUSize","doc":""},"instAddUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L43-L43","name":"instAddUInt8","docLink":"./Init/Data/UInt.html#instAddUInt8","doc":""},"instAddUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L244-L244","name":"instAddUInt64","docLink":"./Init/Data/UInt.html#instAddUInt64","doc":""},"instAddUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L184-L184","name":"instAddUInt32","docLink":"./Init/Data/UInt.html#instAddUInt32","doc":""},"instAddUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L113-L113","name":"instAddUInt16","docLink":"./Init/Data/UInt.html#instAddUInt16","doc":""},"instAddNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1158-L1159","name":"instAddNat","docLink":"./Init/Prelude.html#instAddNat","doc":""},"instAddFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L48-L48","name":"instAddFloat","docLink":"./Init/Data/Float.html#instAddFloat","doc":""},"inline":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L14-L14","name":"inline","docLink":"./Init/Core.html#inline","doc":""},"inferInstanceAs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L99-L99","name":"inferInstanceAs","docLink":"./Init/Prelude.html#inferInstanceAs","doc":"`inferInstanceAs α` synthesizes a value of any target type by typeclass\ninference. This is just like `inferInstance` except that `α` is given\nexplicitly instead of being inferred from the target type. It is especially\nuseful when the target type is some `α'` which is definitionally equal to `α`,\nbut the instance we are looking for is only registered for `α` (because\ntypeclass search does not unfold most definitions, but definitional equality\ndoes.) Example:\n```\n#check inferInstanceAs (Inhabited Nat) -- Inhabited Nat\n```\n"},"inferInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L85-L85","name":"inferInstance","docLink":"./Init/Prelude.html#inferInstance","doc":"`inferInstance` synthesizes a value of any target type by typeclass\ninference. This function has the same type signature as the identity\nfunction, but the square brackets on the `[i : α]` argument means that it will\nattempt to construct this argument by typeclass inference. (This will fail if\n`α` is not a `class`.) Example:\n```\n#check (inferInstance : Inhabited Nat) -- Inhabited Nat\n\ndef foo : Inhabited (Nat × Nat) :=\n  inferInstance\n\nexample : foo.default = (default, default) :=\n  rfl\n```\n"},"implies_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L118-L118","name":"implies_true","docLink":"./Init/SimpLemmas.html#implies_true","doc":""},"implies_dep_congr_ctx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L46-L49","name":"implies_dep_congr_ctx","docLink":"./Init/SimpLemmas.html#implies_dep_congr_ctx","doc":""},"implies_congr_ctx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L35-L44","name":"implies_congr_ctx","docLink":"./Init/SimpLemmas.html#implies_congr_ctx","doc":""},"implies_congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L32-L33","name":"implies_congr","docLink":"./Init/SimpLemmas.html#implies_congr","doc":""},"implies.trans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L213-L214","name":"implies.trans","docLink":"./Init/Core.html#implies.trans","doc":""},"implies":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L211-L211","name":"implies","docLink":"./Init/Core.html#implies","doc":""},"iff_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L113-L113","name":"iff_true","docLink":"./Init/SimpLemmas.html#iff_true","doc":""},"iff_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L112-L112","name":"iff_self","docLink":"./Init/SimpLemmas.html#iff_self","doc":""},"iff_iff_implies_and_implies":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L340-L341","name":"iff_iff_implies_and_implies","docLink":"./Init/Core.html#iff_iff_implies_and_implies","doc":""},"iff_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L115-L115","name":"iff_false","docLink":"./Init/SimpLemmas.html#iff_false","doc":""},"if_pos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L463-L466","name":"if_pos","docLink":"./Init/Core.html#if_pos","doc":""},"if_neg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L468-L471","name":"if_neg","docLink":"./Init/Core.html#if_neg","doc":""},"id_map'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L25-L26","name":"id_map'","docLink":"./Init/Control/Lawful.html#id_map'","doc":""},"id_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L280-L280","name":"id_eq","docLink":"./Init/Prelude.html#id_eq","doc":"`id x = x`, as a `@[simp]` lemma. "},"id.def":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L229-L229","name":"id.def","docLink":"./Init/Core.html#id.def","doc":""},"id":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L32-L32","name":"id","docLink":"./Init/Prelude.html#id","doc":"The identity function. `id` takes an implicit argument `α : Sort u`\n(a type in any universe), and an argument `a : α`, and returns `a`.\n\nAlthough this may look like a useless function, one application of the identity\nfunction is to explicitly put a type on an expression. If `e` has type `T`,\nand `T'` is definitionally equal to `T`, then `@id T' e` typechecks, and lean\nknows that this expression has type `T'` rather than `T`. This can make a\ndifference for typeclass inference, since `T` and `T'` may have different\ntypeclass instances on them. `show T' from e` is sugar for an `@id T' e`\nexpression.\n"},"hexDigitRepr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L177-L178","name":"hexDigitRepr","docLink":"./Init/Data/Repr.html#hexDigitRepr","doc":""},"heq_of_heq_of_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L316-L317","name":"heq_of_heq_of_eq","docLink":"./Init/Core.html#heq_of_heq_of_eq","doc":""},"heq_of_eq_of_heq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L319-L320","name":"heq_of_eq_of_heq","docLink":"./Init/Core.html#heq_of_eq_of_heq","doc":""},"heq_of_eqRec_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L330-L333","name":"heq_of_eqRec_eq","docLink":"./Init/Core.html#heq_of_eqRec_eq","doc":""},"heq_of_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L310-L311","name":"heq_of_eq","docLink":"./Init/Core.html#heq_of_eq","doc":""},"heq_eq_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L151-L151","name":"heq_eq_eq","docLink":"./Init/SimpLemmas.html#heq_eq_eq","doc":""},"guard":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L31-L32","name":"guard","docLink":"./Init/Control/Basic.html#guard","doc":""},"getThe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2167-L2168","name":"getThe","docLink":"./Init/Prelude.html#getThe","doc":""},"getModify":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2192-L2193","name":"getModify","docLink":"./Init/Prelude.html#getModify","doc":""},"getElem?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L75-L76","name":"getElem?","docLink":"./Init/Util.html#getElem?","doc":""},"getElem'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L585-L586","name":"getElem'","docLink":"./Init/Tactics.html#getElem'","doc":"Helper declaration for the unexpander "},"getElem!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L72-L73","name":"getElem!","docLink":"./Init/Util.html#getElem!","doc":""},"funext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1074-L1078","name":"funext","docLink":"./Init/Core.html#funext","doc":""},"forall_congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L51-L53","name":"forall_congr","docLink":"./Init/SimpLemmas.html#forall_congr","doc":""},"floatSpec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L20-L27","name":"floatSpec","docLink":"./Init/Data/Float.html#floatSpec","doc":""},"floatDecLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L68-L68","name":"floatDecLt","docLink":"./Init/Data/Float.html#floatDecLt","doc":""},"floatDecLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L69-L69","name":"floatDecLe","docLink":"./Init/Data/Float.html#floatDecLe","doc":""},"flip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L16-L17","name":"flip","docLink":"./Init/Core.html#flip","doc":""},"false_or":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L111-L111","name":"false_or","docLink":"./Init/SimpLemmas.html#false_or","doc":""},"false_of_ne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L261-L261","name":"false_of_ne","docLink":"./Init/Core.html#false_of_ne","doc":""},"false_implies":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L117-L117","name":"false_implies","docLink":"./Init/SimpLemmas.html#false_implies","doc":""},"false_iff":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L116-L116","name":"false_iff","docLink":"./Init/SimpLemmas.html#false_iff","doc":""},"false_and":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L106-L106","name":"false_and","docLink":"./Init/SimpLemmas.html#false_and","doc":""},"ex_of_PSigma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L669-L670","name":"ex_of_PSigma","docLink":"./Init/Core.html#ex_of_PSigma","doc":""},"eq_true_of_ne_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L620-L622","name":"eq_true_of_ne_false","docLink":"./Init/Prelude.html#eq_true_of_ne_false","doc":""},"eq_true_of_decide":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L26-L27","name":"eq_true_of_decide","docLink":"./Init/SimpLemmas.html#eq_true_of_decide","doc":""},"eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L17-L18","name":"eq_true","docLink":"./Init/SimpLemmas.html#eq_true","doc":""},"eq_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L11-L12","name":"eq_self","docLink":"./Init/SimpLemmas.html#eq_self","doc":""},"eq_of_heq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L447-L451","name":"eq_of_heq","docLink":"./Init/Prelude.html#eq_of_heq","doc":""},"eq_false_of_ne_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L616-L618","name":"eq_false_of_ne_true","docLink":"./Init/Prelude.html#eq_false_of_ne_true","doc":""},"eq_false_of_decide":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L29-L30","name":"eq_false_of_decide","docLink":"./Init/SimpLemmas.html#eq_false_of_decide","doc":""},"eq_false'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L23-L24","name":"eq_false'","docLink":"./Init/SimpLemmas.html#eq_false'","doc":""},"eq_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L20-L21","name":"eq_false","docLink":"./Init/SimpLemmas.html#eq_false","doc":""},"eqRec_heq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L327-L328","name":"eqRec_heq","docLink":"./Init/Core.html#eqRec_heq","doc":""},"emptyWf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L83-L90","name":"emptyWf","docLink":"./Init/WF.html#emptyWf","doc":""},"emptyRelation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L563-L564","name":"emptyRelation","docLink":"./Init/Core.html#emptyRelation","doc":""},"dite_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L99-L99","name":"dite_true","docLink":"./Init/SimpLemmas.html#dite_true","doc":""},"dite_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L100-L100","name":"dite_false","docLink":"./Init/SimpLemmas.html#dite_false","doc":""},"dite_congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L86-L94","name":"dite_congr","docLink":"./Init/SimpLemmas.html#dite_congr","doc":""},"dite":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L882-L883","name":"dite","docLink":"./Init/Prelude.html#dite","doc":"\"Dependent\" if-then-else, normally written via the notation `if h : c then t(h) else e(h)`,\nis sugar for `dite c (fun h => t(h)) (fun h => e(h))`, and it is the same as\n`if c then t else e` except that `t` is allowed to depend on a proof `h : c`,\nand `e` can depend on `h : ¬c`. (Both branches use the same name for the hypothesis,\neven though it has different types in the two cases.)\n\nWe use this to be able to communicate the if-then-else condition to the branches.\nFor example, `Array.get arr ⟨i, h⟩` expects a proof `h : i < arr.size` in order to\navoid a bounds check, so you can write `if h : i < arr.size then arr.get ⟨i, h⟩ else ...`\nto avoid the bounds check inside the if branch. (Of course in this case we have only\nlifted the check into an explicit `if`, but we could also use this proof multiple times\nor derive `i < arr.size` from some other proposition that we are checking in the `if`.)\n"},"dif_pos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L473-L476","name":"dif_pos","docLink":"./Init/Core.html#dif_pos","doc":""},"dif_neg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L478-L481","name":"dif_neg","docLink":"./Init/Core.html#dif_neg","doc":""},"dif_eq_if":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L484-L487","name":"dif_eq_if","docLink":"./Init/Core.html#dif_eq_if","doc":""},"default.sizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L22-L23","name":"default.sizeOf","docLink":"./Init/SizeOf.html#default.sizeOf","doc":"Every Type `α` has a default SizeOf instance that just returns 0 for every element of `α` "},"decide_true_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L372-L375","name":"decide_true_eq_true","docLink":"./Init/Core.html#decide_true_eq_true","doc":""},"decide_not":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L148-L148","name":"decide_not","docLink":"./Init/SimpLemmas.html#decide_not","doc":""},"decide_false_eq_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L377-L380","name":"decide_false_eq_false","docLink":"./Init/Core.html#decide_false_eq_false","doc":""},"decide_eq_true_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L147-L147","name":"decide_eq_true_eq","docLink":"./Init/SimpLemmas.html#decide_eq_true_eq","doc":""},"decide_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L820-L822","name":"decide_eq_true","docLink":"./Init/Prelude.html#decide_eq_true","doc":""},"decide_eq_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L824-L826","name":"decide_eq_false","docLink":"./Init/Prelude.html#decide_eq_false","doc":""},"decide_True":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L166-L166","name":"decide_True","docLink":"./Init/SimpLemmas.html#decide_True","doc":""},"decide_False":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L165-L165","name":"decide_False","docLink":"./Init/SimpLemmas.html#decide_False","doc":""},"decidable_of_decidable_of_iff":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L433-L437","name":"decidable_of_decidable_of_iff","docLink":"./Init/Core.html#decidable_of_decidable_of_iff","doc":""},"decidable_of_decidable_of_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L439-L440","name":"decidable_of_decidable_of_eq","docLink":"./Init/Core.html#decidable_of_decidable_of_eq","doc":""},"decPropToBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L92-L93","name":"decPropToBool","docLink":"./Init/Coe.html#decPropToBool","doc":""},"decEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L816-L817","name":"decEq","docLink":"./Init/Prelude.html#decEq","doc":"Proves that `a = b` is decidable given `DecidableEq α`. "},"dbgTraceVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L18-L19","name":"dbgTraceVal","docLink":"./Init/Util.html#dbgTraceVal","doc":""},"dbgTraceIfShared":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L24-L24","name":"dbgTraceIfShared","docLink":"./Init/Util.html#dbgTraceIfShared","doc":"Display the given message if `a` is shared, that is, RC(a) > 1 "},"dbgTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L16-L16","name":"dbgTrace","docLink":"./Init/Util.html#dbgTrace","doc":""},"dbgSleep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Util.lean#L27-L27","name":"dbgSleep","docLink":"./Init/Util.html#dbgSleep","doc":""},"controlAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L211-L213","name":"controlAt","docLink":"./Init/Control/Basic.html#controlAt","doc":""},"control":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L216-L218","name":"control","docLink":"./Init/Control/Basic.html#control","doc":""},"congrFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L359-L360","name":"congrFun","docLink":"./Init/Prelude.html#congrFun","doc":"Congruence in the function part of an application: If `f = g` then `f a = g a`. "},"congrArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L345-L346","name":"congrArg","docLink":"./Init/Prelude.html#congrArg","doc":"Congruence in the function argument: if `a₁ = a₂` then `f a₁ = f a₂` for\nany (nondependent) function `f`. This is more powerful than it might look at first, because\nyou can also use a lambda expression for `f` to prove that\n`<something containing a₁> = <something containing a₂>`. This function is used\ninternally by tactics like `congr` and `simp` to apply equalities inside\nsubterms.\n\nFor more information: [Equality](https://leanprover.github.io/theorem_proving_in_lean4/quantifiers_and_equality.html#equality)\n"},"congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L355-L356","name":"congr","docLink":"./Init/Prelude.html#congr","doc":"Congruence in both function and argument. If `f₁ = f₂` and `a₁ = a₂` then\n`f₁ a₁ = f₂ a₂`. This only works for nondependent functions; the theorem\nstatement is more complex in the dependent case.\n\nFor more information: [Equality](https://leanprover.github.io/theorem_proving_in_lean4/quantifiers_and_equality.html#equality)\n"},"cond_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L153-L153","name":"cond_true","docLink":"./Init/SimpLemmas.html#cond_true","doc":""},"cond_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L154-L154","name":"cond_false","docLink":"./Init/SimpLemmas.html#cond_false","doc":""},"cond":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L939-L942","name":"cond","docLink":"./Init/Prelude.html#cond","doc":"`cond b x y` is the same as `if b then x else y`, but optimized for a\nboolean condition. This is `@[macroInline]` because `x` and `y` should not\nbe eagerly evaluated (see `ite`).\n"},"compareOfLessAndEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L21-L24","name":"compareOfLessAndEq","docLink":"./Init/Data/Ord.html#compareOfLessAndEq","doc":""},"coeTrans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L45-L46","name":"coeTrans","docLink":"./Init/Coe.html#coeTrans","doc":""},"coeSortToCoeTail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L81-L82","name":"coeSortToCoeTail","docLink":"./Init/Coe.html#coeSortToCoeTail","doc":""},"coeOfTail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L66-L67","name":"coeOfTail","docLink":"./Init/Coe.html#coeOfTail","doc":""},"coeOfTCOfTail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L57-L58","name":"coeOfTCOfTail","docLink":"./Init/Coe.html#coeOfTCOfTail","doc":""},"coeOfTC":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L69-L70","name":"coeOfTC","docLink":"./Init/Coe.html#coeOfTC","doc":""},"coeOfHeafOfTCOfTail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L51-L52","name":"coeOfHeafOfTCOfTail","docLink":"./Init/Coe.html#coeOfHeafOfTCOfTail","doc":""},"coeOfHeadOfTail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L60-L61","name":"coeOfHeadOfTail","docLink":"./Init/Coe.html#coeOfHeadOfTail","doc":""},"coeOfHeadOfTC":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L54-L55","name":"coeOfHeadOfTC","docLink":"./Init/Coe.html#coeOfHeadOfTC","doc":""},"coeOfHead":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L63-L64","name":"coeOfHead","docLink":"./Init/Coe.html#coeOfHead","doc":""},"coeOfHTCT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L72-L73","name":"coeOfHTCT","docLink":"./Init/Coe.html#coeOfHTCT","doc":""},"coeOfDep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L75-L76","name":"coeOfDep","docLink":"./Init/Coe.html#coeOfDep","doc":""},"coeNotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L43-L43","name":"coeNotation","docLink":"./Init/Coe.html#coeNotation","doc":""},"coeId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L78-L79","name":"coeId","docLink":"./Init/Coe.html#coeId","doc":""},"coeBase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L48-L49","name":"coeBase","docLink":"./Init/Coe.html#coeBase","doc":""},"cast_heq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L335-L336","name":"cast_heq","docLink":"./Init/Core.html#cast_heq","doc":""},"cast_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L240-L241","name":"cast_eq","docLink":"./Init/Core.html#cast_eq","doc":""},"cast":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L332-L333","name":"cast","docLink":"./Init/Prelude.html#cast","doc":"Cast across a type equality. If `h : α = β` is an equality of types, and\n`a : α`, then `a : β` will usually not typecheck directly, but this function\nwill allow you to work around this and embed `a` in type `β` as `cast h a : β`.\n\nIt is best to avoid this function if you can, because it is more complicated\nto reason about terms containing casts, but if the types don't match up\ndefinitionally sometimes there isn't anything better you can do.\n\nFor more information: [Equality](https://leanprover.github.io/theorem_proving_in_lean4/quantifiers_and_equality.html#equality)\n"},"calcTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L110-L131","name":"calcTactic","docLink":"./Init/NotationExtra.html#calcTactic","doc":"Step-wise reasoning over transitive relations.\n```\ncalc\n  a = b := pab\n  b = c := pbc\n  ...\n  y = z := pyz\n```\nproves `a = z` from the given step-wise proofs. `=` can be replaced with any\nrelation implementing the typeclass `Trans`. Instead of repeating the right-\nhand sides, subsequent left-hand sides can be replaced with `_`.\n\n`calc` has term mode and tactic mode variants. This is the tactic mode variant,\nwhich supports an additional feature: it works even if the goal is `a = z'`\nfor some other `z'`; in this case it will not close the goal but will instead\nleave a subgoal proving `z = z'`.\n\nSee [Theorem Proving in Lean 4][tpil4] for more information.\n\n[tpil4]: https://leanprover.github.io/theorem_proving_in_lean4/quantifiers_and_equality.html#calculational-proofs\n"},"calcStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L88-L88","name":"calcStep","docLink":"./Init/NotationExtra.html#calcStep","doc":""},"calc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L90-L108","name":"calc","docLink":"./Init/NotationExtra.html#calc","doc":"Step-wise reasoning over transitive relations.\n```\ncalc\n  a = b := pab\n  b = c := pbc\n  ...\n  y = z := pyz\n```\nproves `a = z` from the given step-wise proofs. `=` can be replaced with any\nrelation implementing the typeclass `Trans`. Instead of repeating the right-\nhand sides, subsequent left-hand sides can be replaced with `_`.\n\n`calc` has term mode and tactic mode variants. This is the term mode variant.\n\nSee [Theorem Proving in Lean 4][tpil4] for more information.\n\n[tpil4]: https://leanprover.github.io/theorem_proving_in_lean4/quantifiers_and_equality.html#calculational-proofs\n"},"boolToSort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L89-L90","name":"boolToSort","docLink":"./Init/Coe.html#boolToSort","doc":""},"boolToProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L86-L87","name":"boolToProp","docLink":"./Init/Coe.html#boolToProp","doc":""},"boolIfThenElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L245-L247","name":"boolIfThenElse","docLink":"./Init/Notation.html#boolIfThenElse","doc":""},"bool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L45-L48","name":"bool","docLink":"./Init/Control/Basic.html#bool","doc":""},"bne_self_eq_false'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L160-L160","name":"bne_self_eq_false'","docLink":"./Init/SimpLemmas.html#bne_self_eq_false'","doc":""},"bne_self_eq_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L159-L159","name":"bne_self_eq_false","docLink":"./Init/SimpLemmas.html#bne_self_eq_false","doc":""},"bne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L187-L188","name":"bne","docLink":"./Init/Core.html#bne","doc":""},"bind_pure_unit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L77-L78","name":"bind_pure_unit","docLink":"./Init/Control/Lawful.html#bind_pure_unit","doc":""},"bind_pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L64-L66","name":"bind_pure","docLink":"./Init/Control/Lawful.html#bind_pure","doc":""},"bind_congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L74-L75","name":"bind_congr","docLink":"./Init/Control/Lawful.html#bind_congr","doc":""},"beq_self_eq_true'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L157-L157","name":"beq_self_eq_true'","docLink":"./Init/SimpLemmas.html#beq_self_eq_true'","doc":""},"beq_self_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L156-L156","name":"beq_self_eq_true","docLink":"./Init/SimpLemmas.html#beq_self_eq_true","doc":""},"beq_iff_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L749-L750","name":"beq_iff_eq","docLink":"./Init/Core.html#beq_iff_eq","doc":""},"beq_false_of_ne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L287-L290","name":"beq_false_of_ne","docLink":"./Init/Core.html#beq_false_of_ne","doc":""},"autoParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1107-L1107","name":"autoParam","docLink":"./Init/Meta.html#autoParam","doc":"Gadget for automatic parameter support. This is similar to the `optParam` gadget, but it uses\nthe given tactic.\nLike `optParam`, this gadget only affects elaboration.\nFor example, the tactic will *not* be invoked during type class resolution. "},"and_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L103-L103","name":"and_true","docLink":"./Init/SimpLemmas.html#and_true","doc":""},"and_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L102-L102","name":"and_self","docLink":"./Init/SimpLemmas.html#and_self","doc":""},"and_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L105-L105","name":"and_false","docLink":"./Init/SimpLemmas.html#and_false","doc":""},"andM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L58-L62","name":"andM","docLink":"./Init/Control/Basic.html#andM","doc":""},"and":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L949-L952","name":"and","docLink":"./Init/Prelude.html#and","doc":""},"allocprof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L92-L92","name":"allocprof","docLink":"./Init/System/IO.html#allocprof","doc":""},"addParenHeuristic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L104-L107","name":"addParenHeuristic","docLink":"./Init/Data/ToString/Basic.html#addParenHeuristic","doc":""},"absurd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L229-L230","name":"absurd","docLink":"./Init/Prelude.html#absurd","doc":"Anything follows from two contradictory hypotheses. Example:\n```\nexample (hp : p) (hnp : ¬p) : q := absurd hp hnp\n```\nFor more information: [Propositional Logic](https://leanprover.github.io/theorem_proving_in_lean4/propositions_and_proofs.html#propositional-logic)\n"},"Xor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1073-L1074","name":"Xor","docLink":"./Init/Prelude.html#Xor","doc":""},"WellFoundedRelation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L37-L39","name":"WellFoundedRelation","docLink":"./Init/WF.html#WellFoundedRelation","doc":""},"WellFounded.recursion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L48-L50","name":"WellFounded.recursion","docLink":"./Init/WF.html#WellFounded.recursion","doc":""},"WellFounded.induction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L52-L53","name":"WellFounded.induction","docLink":"./Init/WF.html#WellFounded.induction","doc":""},"WellFounded.fix_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L75-L77","name":"WellFounded.fix_eq","docLink":"./Init/WF.html#WellFounded.fix_eq","doc":""},"WellFounded.fixFEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L62-L64","name":"WellFounded.fixFEq","docLink":"./Init/WF.html#WellFounded.fixFEq","doc":""},"WellFounded.fixF":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L58-L60","name":"WellFounded.fixF","docLink":"./Init/WF.html#WellFounded.fixF","doc":""},"WellFounded.fix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L71-L72","name":"WellFounded.fix","docLink":"./Init/WF.html#WellFounded.fix","doc":""},"WellFounded.apply":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L42-L43","name":"WellFounded.apply","docLink":"./Init/WF.html#WellFounded.apply","doc":""},"WellFounded":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L34-L35","name":"WellFounded","docLink":"./Init/WF.html#WellFounded","doc":""},"Unit.unit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L134-L134","name":"Unit.unit","docLink":"./Init/Prelude.html#Unit.unit","doc":"`Unit.unit : Unit` is the canonical element of the unit type.\nIt can also be written as `()`.\n"},"Unit.sizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L60-L60","name":"Unit.sizeOf","docLink":"./Init/SizeOf.html#Unit.sizeOf","doc":""},"Unit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L128-L128","name":"Unit","docLink":"./Init/Prelude.html#Unit","doc":"The unit type, the canonical type with one element, named `unit` or `()`.\nIn other words, it describes only a single value, which consists of said constructor applied\nto no arguments whatsoever.\nThe `Unit` type is similar to `void` in languages derived from C.\n\n`Unit` is actually defined as `PUnit.{0}` where `PUnit` is the universe\npolymorphic version. The `Unit` should be preferred over `PUnit` where possible to avoid\nunnecessary universe parameters.\n\nIn functional programming, `Unit` is the return type of things that \"return\nnothing\", since a type with one element conveys no additional information.\nWhen programming with monads, the type `m Unit` represents an action that has\nsome side effects but does not return a value, while `m α` would be an action\nthat has side effects and returns a value of type `α`.\n"},"USize.xor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L306-L306","name":"USize.xor","docLink":"./Init/Data/UInt.html#USize.xor","doc":""},"USize.toUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2324-L2324","name":"USize.toUInt64","docLink":"./Init/Prelude.html#USize.toUInt64","doc":""},"USize.toUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L314-L314","name":"USize.toUInt32","docLink":"./Init/Data/UInt.html#USize.toUInt32","doc":""},"USize.toNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L288-L288","name":"USize.toNat","docLink":"./Init/Data/UInt.html#USize.toNat","doc":""},"USize.sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L292-L292","name":"USize.sub","docLink":"./Init/Data/UInt.html#USize.sub","doc":""},"USize.sizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOfLemmas.lean#L26-L27","name":"USize.sizeOf","docLink":"./Init/SizeOfLemmas.html#USize.sizeOf","doc":""},"USize.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1540-L1540","name":"USize.size","docLink":"./Init/Prelude.html#USize.size","doc":""},"USize.shiftRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L310-L310","name":"USize.shiftRight","docLink":"./Init/Data/UInt.html#USize.shiftRight","doc":""},"USize.shiftLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L308-L308","name":"USize.shiftLeft","docLink":"./Init/Data/UInt.html#USize.shiftLeft","doc":""},"USize.ofNatCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1561-L1563","name":"USize.ofNatCore","docLink":"./Init/Prelude.html#USize.ofNatCore","doc":""},"USize.ofNat32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1580-L1587","name":"USize.ofNat32","docLink":"./Init/Prelude.html#USize.ofNat32","doc":""},"USize.ofNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L285-L285","name":"USize.ofNat","docLink":"./Init/Data/UInt.html#USize.ofNat","doc":""},"USize.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L294-L294","name":"USize.mul","docLink":"./Init/Data/UInt.html#USize.mul","doc":""},"USize.modn_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L354-L355","name":"USize.modn_lt","docLink":"./Init/Data/UInt.html#USize.modn_lt","doc":""},"USize.modn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L300-L300","name":"USize.modn","docLink":"./Init/Data/UInt.html#USize.modn","doc":""},"USize.mod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L298-L298","name":"USize.mod","docLink":"./Init/Data/UInt.html#USize.mod","doc":""},"USize.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L316-L316","name":"USize.lt","docLink":"./Init/Data/UInt.html#USize.lt","doc":""},"USize.lor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L304-L304","name":"USize.lor","docLink":"./Init/Data/UInt.html#USize.lor","doc":""},"USize.le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L317-L317","name":"USize.le","docLink":"./Init/Data/UInt.html#USize.le","doc":""},"USize.land":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L302-L302","name":"USize.land","docLink":"./Init/Data/UInt.html#USize.land","doc":""},"USize.div":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L296-L296","name":"USize.div","docLink":"./Init/Data/UInt.html#USize.div","doc":""},"USize.decLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L341-L343","name":"USize.decLt","docLink":"./Init/Data/UInt.html#USize.decLt","doc":""},"USize.decLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L347-L349","name":"USize.decLe","docLink":"./Init/Data/UInt.html#USize.decLe","doc":""},"USize.decEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1567-L1570","name":"USize.decEq","docLink":"./Init/Prelude.html#USize.decEq","doc":""},"USize.complement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L330-L330","name":"USize.complement","docLink":"./Init/Data/UInt.html#USize.complement","doc":""},"USize.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L290-L290","name":"USize.add","docLink":"./Init/Data/UInt.html#USize.add","doc":""},"USize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1554-L1555","name":"USize","docLink":"./Init/Prelude.html#USize","doc":"A USize is an unsigned integer with the size of a word\nfor the platform's architecture.\n\nFor example, if running on a 32-bit machine, USize is equivalent to UInt32.\nOr on a 64-bit machine, UInt64.\n"},"ULift.up_down":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L764-L764","name":"ULift.up_down","docLink":"./Init/Prelude.html#ULift.up_down","doc":"Bijection between `α` and `ULift.{v} α` "},"ULift.down_up":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L767-L767","name":"ULift.down_up","docLink":"./Init/Prelude.html#ULift.down_up","doc":"Bijection between `α` and `ULift.{v} α` "},"ULift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L759-L761","name":"ULift","docLink":"./Init/Prelude.html#ULift","doc":"Universe lifting operation from a lower `Type` universe to a higher one.\nTo express this using level variables, the input is `Type s` and the output is\n`Type (max s r)`, so if `s ≤ r` then the latter is (definitionally) `Type r`.\n\nThe universe variable `r` is written first so that `ULift.{r} α` can be used\nwhen `s` can be inferred from the type of `α`.\n"},"UInt8.xor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L34-L34","name":"UInt8.xor","docLink":"./Init/Data/UInt.html#UInt8.xor","doc":""},"UInt8.toUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L237-L237","name":"UInt8.toUInt64","docLink":"./Init/Data/UInt.html#UInt8.toUInt64","doc":""},"UInt8.toUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L179-L179","name":"UInt8.toUInt32","docLink":"./Init/Data/UInt.html#UInt8.toUInt32","doc":""},"UInt8.toUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L105-L105","name":"UInt8.toUInt16","docLink":"./Init/Data/UInt.html#UInt8.toUInt16","doc":""},"UInt8.toNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L16-L16","name":"UInt8.toNat","docLink":"./Init/Data/UInt.html#UInt8.toNat","doc":""},"UInt8.sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L20-L20","name":"UInt8.sub","docLink":"./Init/Data/UInt.html#UInt8.sub","doc":""},"UInt8.sizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOfLemmas.lean#L14-L15","name":"UInt8.sizeOf","docLink":"./Init/SizeOfLemmas.html#UInt8.sizeOf","doc":""},"UInt8.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1416-L1416","name":"UInt8.size","docLink":"./Init/Prelude.html#UInt8.size","doc":""},"UInt8.shiftRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L38-L38","name":"UInt8.shiftRight","docLink":"./Init/Data/UInt.html#UInt8.shiftRight","doc":""},"UInt8.shiftLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L36-L36","name":"UInt8.shiftLeft","docLink":"./Init/Data/UInt.html#UInt8.shiftLeft","doc":""},"UInt8.ofNatCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1425-L1427","name":"UInt8.ofNatCore","docLink":"./Init/Prelude.html#UInt8.ofNatCore","doc":""},"UInt8.ofNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L13-L13","name":"UInt8.ofNat","docLink":"./Init/Data/UInt.html#UInt8.ofNat","doc":""},"UInt8.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L22-L22","name":"UInt8.mul","docLink":"./Init/Data/UInt.html#UInt8.mul","doc":""},"UInt8.modn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L28-L28","name":"UInt8.modn","docLink":"./Init/Data/UInt.html#UInt8.modn","doc":""},"UInt8.mod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L26-L26","name":"UInt8.mod","docLink":"./Init/Data/UInt.html#UInt8.mod","doc":""},"UInt8.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L39-L39","name":"UInt8.lt","docLink":"./Init/Data/UInt.html#UInt8.lt","doc":""},"UInt8.lor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L32-L32","name":"UInt8.lor","docLink":"./Init/Data/UInt.html#UInt8.lor","doc":""},"UInt8.le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L40-L40","name":"UInt8.le","docLink":"./Init/Data/UInt.html#UInt8.le","doc":""},"UInt8.land":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L30-L30","name":"UInt8.land","docLink":"./Init/Data/UInt.html#UInt8.land","doc":""},"UInt8.div":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L24-L24","name":"UInt8.div","docLink":"./Init/Data/UInt.html#UInt8.div","doc":""},"UInt8.decLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L64-L66","name":"UInt8.decLt","docLink":"./Init/Data/UInt.html#UInt8.decLt","doc":""},"UInt8.decLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L70-L72","name":"UInt8.decLe","docLink":"./Init/Data/UInt.html#UInt8.decLe","doc":""},"UInt8.decEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1431-L1434","name":"UInt8.decEq","docLink":"./Init/Prelude.html#UInt8.decEq","doc":""},"UInt8.complement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L53-L53","name":"UInt8.complement","docLink":"./Init/Data/UInt.html#UInt8.complement","doc":""},"UInt8.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L18-L18","name":"UInt8.add","docLink":"./Init/Data/UInt.html#UInt8.add","doc":""},"UInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1418-L1419","name":"UInt8","docLink":"./Init/Prelude.html#UInt8","doc":"Unsigned 8-bit integer. "},"UInt64.xor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L223-L223","name":"UInt64.xor","docLink":"./Init/Data/UInt.html#UInt64.xor","doc":""},"UInt64.toUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2321-L2321","name":"UInt64.toUSize","docLink":"./Init/Prelude.html#UInt64.toUSize","doc":""},"UInt64.toUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L231-L231","name":"UInt64.toUInt8","docLink":"./Init/Data/UInt.html#UInt64.toUInt8","doc":""},"UInt64.toUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L235-L235","name":"UInt64.toUInt32","docLink":"./Init/Data/UInt.html#UInt64.toUInt32","doc":""},"UInt64.toUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L233-L233","name":"UInt64.toUInt16","docLink":"./Init/Data/UInt.html#UInt64.toUInt16","doc":""},"UInt64.toNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L205-L205","name":"UInt64.toNat","docLink":"./Init/Data/UInt.html#UInt64.toNat","doc":""},"UInt64.toFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L87-L87","name":"UInt64.toFloat","docLink":"./Init/Data/Float.html#UInt64.toFloat","doc":""},"UInt64.sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L209-L209","name":"UInt64.sub","docLink":"./Init/Data/UInt.html#UInt64.sub","doc":""},"UInt64.sizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOfLemmas.lean#L23-L24","name":"UInt64.sizeOf","docLink":"./Init/SizeOfLemmas.html#UInt64.sizeOf","doc":""},"UInt64.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1515-L1515","name":"UInt64.size","docLink":"./Init/Prelude.html#UInt64.size","doc":""},"UInt64.shiftRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L227-L227","name":"UInt64.shiftRight","docLink":"./Init/Data/UInt.html#UInt64.shiftRight","doc":""},"UInt64.shiftLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L225-L225","name":"UInt64.shiftLeft","docLink":"./Init/Data/UInt.html#UInt64.shiftLeft","doc":""},"UInt64.ofNatCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1524-L1526","name":"UInt64.ofNatCore","docLink":"./Init/Prelude.html#UInt64.ofNatCore","doc":""},"UInt64.ofNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L202-L202","name":"UInt64.ofNat","docLink":"./Init/Data/UInt.html#UInt64.ofNat","doc":""},"UInt64.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L211-L211","name":"UInt64.mul","docLink":"./Init/Data/UInt.html#UInt64.mul","doc":""},"UInt64.modn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L217-L217","name":"UInt64.modn","docLink":"./Init/Data/UInt.html#UInt64.modn","doc":""},"UInt64.mod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L215-L215","name":"UInt64.mod","docLink":"./Init/Data/UInt.html#UInt64.mod","doc":""},"UInt64.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L228-L228","name":"UInt64.lt","docLink":"./Init/Data/UInt.html#UInt64.lt","doc":""},"UInt64.lor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L221-L221","name":"UInt64.lor","docLink":"./Init/Data/UInt.html#UInt64.lor","doc":""},"UInt64.le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L229-L229","name":"UInt64.le","docLink":"./Init/Data/UInt.html#UInt64.le","doc":""},"UInt64.land":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L219-L219","name":"UInt64.land","docLink":"./Init/Data/UInt.html#UInt64.land","doc":""},"UInt64.div":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L213-L213","name":"UInt64.div","docLink":"./Init/Data/UInt.html#UInt64.div","doc":""},"UInt64.decLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L268-L270","name":"UInt64.decLt","docLink":"./Init/Data/UInt.html#UInt64.decLt","doc":""},"UInt64.decLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L274-L276","name":"UInt64.decLe","docLink":"./Init/Data/UInt.html#UInt64.decLe","doc":""},"UInt64.decEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1530-L1533","name":"UInt64.decEq","docLink":"./Init/Prelude.html#UInt64.decEq","doc":""},"UInt64.complement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L254-L254","name":"UInt64.complement","docLink":"./Init/Data/UInt.html#UInt64.complement","doc":""},"UInt64.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L207-L207","name":"UInt64.add","docLink":"./Init/Data/UInt.html#UInt64.add","doc":""},"UInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1517-L1518","name":"UInt64","docLink":"./Init/Prelude.html#UInt64","doc":"Unsigned, 64-bit integer. "},"UInt32.xor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L169-L169","name":"UInt32.xor","docLink":"./Init/Data/UInt.html#UInt32.xor","doc":""},"UInt32.toUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L312-L312","name":"UInt32.toUSize","docLink":"./Init/Data/UInt.html#UInt32.toUSize","doc":""},"UInt32.toUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L175-L175","name":"UInt32.toUInt8","docLink":"./Init/Data/UInt.html#UInt32.toUInt8","doc":""},"UInt32.toUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L241-L241","name":"UInt32.toUInt64","docLink":"./Init/Data/UInt.html#UInt32.toUInt64","doc":""},"UInt32.toUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L177-L177","name":"UInt32.toUInt16","docLink":"./Init/Data/UInt.html#UInt32.toUInt16","doc":""},"UInt32.toNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1480-L1480","name":"UInt32.toNat","docLink":"./Init/Prelude.html#UInt32.toNat","doc":""},"UInt32.sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L155-L155","name":"UInt32.sub","docLink":"./Init/Data/UInt.html#UInt32.sub","doc":""},"UInt32.sizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOfLemmas.lean#L20-L21","name":"UInt32.sizeOf","docLink":"./Init/SizeOfLemmas.html#UInt32.sizeOf","doc":""},"UInt32.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1466-L1466","name":"UInt32.size","docLink":"./Init/Prelude.html#UInt32.size","doc":""},"UInt32.shiftRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L173-L173","name":"UInt32.shiftRight","docLink":"./Init/Data/UInt.html#UInt32.shiftRight","doc":""},"UInt32.shiftLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L171-L171","name":"UInt32.shiftLeft","docLink":"./Init/Data/UInt.html#UInt32.shiftLeft","doc":""},"UInt32.ofNatCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1475-L1477","name":"UInt32.ofNatCore","docLink":"./Init/Prelude.html#UInt32.ofNatCore","doc":""},"UInt32.ofNat'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L150-L150","name":"UInt32.ofNat'","docLink":"./Init/Data/UInt.html#UInt32.ofNat'","doc":""},"UInt32.ofNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L148-L148","name":"UInt32.ofNat","docLink":"./Init/Data/UInt.html#UInt32.ofNat","doc":""},"UInt32.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L157-L157","name":"UInt32.mul","docLink":"./Init/Data/UInt.html#UInt32.mul","doc":""},"UInt32.modn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L163-L163","name":"UInt32.modn","docLink":"./Init/Data/UInt.html#UInt32.modn","doc":""},"UInt32.mod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L161-L161","name":"UInt32.mod","docLink":"./Init/Data/UInt.html#UInt32.mod","doc":""},"UInt32.lor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L167-L167","name":"UInt32.lor","docLink":"./Init/Data/UInt.html#UInt32.lor","doc":""},"UInt32.land":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L165-L165","name":"UInt32.land","docLink":"./Init/Data/UInt.html#UInt32.land","doc":""},"UInt32.isValidChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1592-L1593","name":"UInt32.isValidChar","docLink":"./Init/Prelude.html#UInt32.isValidChar","doc":""},"UInt32.div":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L159-L159","name":"UInt32.div","docLink":"./Init/Data/UInt.html#UInt32.div","doc":""},"UInt32.decLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1502-L1504","name":"UInt32.decLt","docLink":"./Init/Prelude.html#UInt32.decLt","doc":""},"UInt32.decLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1508-L1510","name":"UInt32.decLe","docLink":"./Init/Prelude.html#UInt32.decLe","doc":""},"UInt32.decEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1484-L1487","name":"UInt32.decEq","docLink":"./Init/Prelude.html#UInt32.decEq","doc":""},"UInt32.complement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L192-L192","name":"UInt32.complement","docLink":"./Init/Data/UInt.html#UInt32.complement","doc":""},"UInt32.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L153-L153","name":"UInt32.add","docLink":"./Init/Data/UInt.html#UInt32.add","doc":""},"UInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1468-L1469","name":"UInt32","docLink":"./Init/Prelude.html#UInt32","doc":"Unsigned, 32-bit integer. "},"UInt16.xor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L99-L99","name":"UInt16.xor","docLink":"./Init/Data/UInt.html#UInt16.xor","doc":""},"UInt16.toUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L103-L103","name":"UInt16.toUInt8","docLink":"./Init/Data/UInt.html#UInt16.toUInt8","doc":""},"UInt16.toUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L239-L239","name":"UInt16.toUInt64","docLink":"./Init/Data/UInt.html#UInt16.toUInt64","doc":""},"UInt16.toUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L181-L181","name":"UInt16.toUInt32","docLink":"./Init/Data/UInt.html#UInt16.toUInt32","doc":""},"UInt16.toNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L81-L81","name":"UInt16.toNat","docLink":"./Init/Data/UInt.html#UInt16.toNat","doc":""},"UInt16.sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L85-L85","name":"UInt16.sub","docLink":"./Init/Data/UInt.html#UInt16.sub","doc":""},"UInt16.sizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOfLemmas.lean#L17-L18","name":"UInt16.sizeOf","docLink":"./Init/SizeOfLemmas.html#UInt16.sizeOf","doc":""},"UInt16.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1441-L1441","name":"UInt16.size","docLink":"./Init/Prelude.html#UInt16.size","doc":""},"UInt16.shiftRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L107-L107","name":"UInt16.shiftRight","docLink":"./Init/Data/UInt.html#UInt16.shiftRight","doc":""},"UInt16.shiftLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L101-L101","name":"UInt16.shiftLeft","docLink":"./Init/Data/UInt.html#UInt16.shiftLeft","doc":""},"UInt16.ofNatCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1450-L1452","name":"UInt16.ofNatCore","docLink":"./Init/Prelude.html#UInt16.ofNatCore","doc":""},"UInt16.ofNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L78-L78","name":"UInt16.ofNat","docLink":"./Init/Data/UInt.html#UInt16.ofNat","doc":""},"UInt16.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L87-L87","name":"UInt16.mul","docLink":"./Init/Data/UInt.html#UInt16.mul","doc":""},"UInt16.modn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L93-L93","name":"UInt16.modn","docLink":"./Init/Data/UInt.html#UInt16.modn","doc":""},"UInt16.mod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L91-L91","name":"UInt16.mod","docLink":"./Init/Data/UInt.html#UInt16.mod","doc":""},"UInt16.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L108-L108","name":"UInt16.lt","docLink":"./Init/Data/UInt.html#UInt16.lt","doc":""},"UInt16.lor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L97-L97","name":"UInt16.lor","docLink":"./Init/Data/UInt.html#UInt16.lor","doc":""},"UInt16.le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L109-L109","name":"UInt16.le","docLink":"./Init/Data/UInt.html#UInt16.le","doc":""},"UInt16.land":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L95-L95","name":"UInt16.land","docLink":"./Init/Data/UInt.html#UInt16.land","doc":""},"UInt16.div":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L89-L89","name":"UInt16.div","docLink":"./Init/Data/UInt.html#UInt16.div","doc":""},"UInt16.decLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L134-L136","name":"UInt16.decLt","docLink":"./Init/Data/UInt.html#UInt16.decLt","doc":""},"UInt16.decLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L140-L142","name":"UInt16.decLe","docLink":"./Init/Data/UInt.html#UInt16.decLe","doc":""},"UInt16.decEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1456-L1459","name":"UInt16.decEq","docLink":"./Init/Prelude.html#UInt16.decEq","doc":""},"UInt16.complement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L123-L123","name":"UInt16.complement","docLink":"./Init/Data/UInt.html#UInt16.complement","doc":""},"UInt16.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L83-L83","name":"UInt16.add","docLink":"./Init/Data/UInt.html#UInt16.add","doc":""},"UInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1443-L1444","name":"UInt16","docLink":"./Init/Prelude.html#UInt16","doc":"Unsigned 16-bit integer. "},"True":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L172-L175","name":"True","docLink":"./Init/Prelude.html#True","doc":"`True` is a proposition and has only an introduction rule, `True.intro : True`.\nIn other words, `True` is simply true, and has a canonical proof, `True.intro`\nFor more information: [Propositional Logic](https://leanprover.github.io/theorem_proving_in_lean4/propositions_and_proofs.html#propositional-logic)\n"},"Trans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L987-L988","name":"Trans","docLink":"./Init/Prelude.html#Trans","doc":"Transitive chaining of proofs, used e.g. by `calc`. "},"ToString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L19-L20","name":"ToString","docLink":"./Init/Data/ToString/Basic.html#ToString","doc":""},"ToStream":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L43-L44","name":"ToStream","docLink":"./Init/Data/Stream.html#ToStream","doc":"Streams are used to implement parallel `for` statements.\nExample:\n```\nfor x in xs, y in ys do\n  ...\n```\nis expanded into\n```\nlet mut s := toStream ys\nfor x in xs do\n  match Stream.next? s with\n  | none => break\n  | some (y, s') =>\n    s := s'\n    ...\n```\n"},"ToBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L37-L38","name":"ToBool","docLink":"./Init/Control/Basic.html#ToBool","doc":""},"Thunk.sizeOf_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L45-L46","name":"Thunk.sizeOf_eq","docLink":"./Init/Core.html#Thunk.sizeOf_eq","doc":""},"Thunk.pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L35-L36","name":"Thunk.pure","docLink":"./Init/Core.html#Thunk.pure","doc":"Store a value in a thunk. Note that the value has already been computed, so there is no laziness. "},"Thunk.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L40-L41","name":"Thunk.map","docLink":"./Init/Core.html#Thunk.map","doc":""},"Thunk.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L38-L39","name":"Thunk.get","docLink":"./Init/Core.html#Thunk.get","doc":""},"Thunk.bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L42-L43","name":"Thunk.bind","docLink":"./Init/Core.html#Thunk.bind","doc":""},"Thunk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L29-L30","name":"Thunk","docLink":"./Init/Core.html#Thunk","doc":"Thunks are \"lazy\" values that are evaluated when first accessed using `Thunk.get/map/bind`.\nThe value is then stored and not recomputed for all further accesses. "},"Task.spawn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L155-L156","name":"Task.spawn","docLink":"./Init/Core.html#Task.spawn","doc":""},"Task.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L160-L161","name":"Task.map","docLink":"./Init/Core.html#Task.map","doc":""},"Task.bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L165-L166","name":"Task.bind","docLink":"./Init/Core.html#Task.bind","doc":""},"Task.Priority.max":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L146-L146","name":"Task.Priority.max","docLink":"./Init/Core.html#Task.Priority.max","doc":""},"Task.Priority.default":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L144-L144","name":"Task.Priority.default","docLink":"./Init/Core.html#Task.Priority.default","doc":""},"Task.Priority.dedicated":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L151-L151","name":"Task.Priority.dedicated","docLink":"./Init/Core.html#Task.Priority.dedicated","doc":"Any priority higher than `Task.Priority.max` will result in the task being scheduled immediately on a dedicated thread.\nThis is particularly useful for long-running and/or I/O-bound tasks since Lean will by default allocate no more\nnon-dedicated workers than the number of cores to reduce context switches. "},"Task.Priority":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L143-L143","name":"Task.Priority","docLink":"./Init/Core.html#Task.Priority","doc":"Task priority. Tasks with higher priority will always be scheduled before ones with lower priority. "},"Task":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L134-L136","name":"Task","docLink":"./Init/Core.html#Task","doc":"Remark: tasks have an efficient implementation in the runtime. "},"TC.wf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L144-L145","name":"TC.wf","docLink":"./Init/WF.html#TC.wf","doc":""},"TC.accessible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L135-L142","name":"TC.accessible","docLink":"./Init/WF.html#TC.accessible","doc":""},"TC":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L572-L574","name":"TC","docLink":"./Init/Core.html#TC","doc":""},"System.mkFilePath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L114-L115","name":"System.mkFilePath","docLink":"./Init/System/FilePath.html#System.mkFilePath","doc":""},"System.instToStringFilePath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L22-L23","name":"System.instToStringFilePath","docLink":"./Init/System/FilePath.html#System.instToStringFilePath","doc":""},"System.instReprFilePath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L19-L20","name":"System.instReprFilePath","docLink":"./Init/System/FilePath.html#System.instReprFilePath","doc":""},"System.instInhabitedFilePath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L17-L17","name":"System.instInhabitedFilePath","docLink":"./Init/System/FilePath.html#System.instInhabitedFilePath","doc":""},"System.instHashableFilePath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L17-L17","name":"System.instHashableFilePath","docLink":"./Init/System/FilePath.html#System.instHashableFilePath","doc":""},"System.instDecidableEqFilePath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L17-L17","name":"System.instDecidableEqFilePath","docLink":"./Init/System/FilePath.html#System.instDecidableEqFilePath","doc":""},"System.instCoeStringFilePath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L117-L118","name":"System.instCoeStringFilePath","docLink":"./Init/System/FilePath.html#System.instCoeStringFilePath","doc":""},"System.SearchPath.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L131-L132","name":"System.SearchPath.toString","docLink":"./Init/System/FilePath.html#System.SearchPath.toString","doc":""},"System.SearchPath.separator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L125-L126","name":"System.SearchPath.separator","docLink":"./Init/System/FilePath.html#System.SearchPath.separator","doc":"The character that is used to separate the entries in the $PATH (or %PATH%) environment variable. "},"System.SearchPath.parse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L128-L129","name":"System.SearchPath.parse","docLink":"./Init/System/FilePath.html#System.SearchPath.parse","doc":""},"System.SearchPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L120-L120","name":"System.SearchPath","docLink":"./Init/System/FilePath.html#System.SearchPath","doc":""},"System.Platform.numBits_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1384-L1385","name":"System.Platform.numBits_eq","docLink":"./Init/Prelude.html#System.Platform.numBits_eq","doc":""},"System.Platform.numBits":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1381-L1382","name":"System.Platform.numBits","docLink":"./Init/Prelude.html#System.Platform.numBits","doc":"Gets the word size of the platform.\nThat is, whether the platform is 64 or 32 bits. "},"System.Platform.isWindows":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/Platform.lean#L16-L16","name":"System.Platform.isWindows","docLink":"./Init/System/Platform.html#System.Platform.isWindows","doc":""},"System.Platform.isOSX":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/Platform.lean#L17-L17","name":"System.Platform.isOSX","docLink":"./Init/System/Platform.html#System.Platform.isOSX","doc":""},"System.Platform.isEmscripten":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/Platform.lean#L18-L18","name":"System.Platform.isEmscripten","docLink":"./Init/System/Platform.html#System.Platform.isEmscripten","doc":""},"System.Platform.getNumBits":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1376-L1377","name":"System.Platform.getNumBits","docLink":"./Init/Prelude.html#System.Platform.getNumBits","doc":""},"System.Platform.getIsWindows":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/Platform.lean#L12-L12","name":"System.Platform.getIsWindows","docLink":"./Init/System/Platform.html#System.Platform.getIsWindows","doc":""},"System.Platform.getIsOSX":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/Platform.lean#L13-L13","name":"System.Platform.getIsOSX","docLink":"./Init/System/Platform.html#System.Platform.getIsOSX","doc":""},"System.Platform.getIsEmscripten":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/Platform.lean#L14-L14","name":"System.Platform.getIsEmscripten","docLink":"./Init/System/Platform.html#System.Platform.getIsEmscripten","doc":""},"System.FilePath.withFileName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L99-L102","name":"System.FilePath.withFileName","docLink":"./Init/System/FilePath.html#System.FilePath.withFileName","doc":""},"System.FilePath.withExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L104-L107","name":"System.FilePath.withExtension","docLink":"./Init/System/FilePath.html#System.FilePath.withExtension","doc":""},"System.FilePath.walkDir.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L413-L427","name":"System.FilePath.walkDir.go","docLink":"./Init/System/IO.html#System.FilePath.walkDir.go","doc":""},"System.FilePath.walkDir":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L410-L427","name":"System.FilePath.walkDir","docLink":"./Init/System/IO.html#System.FilePath.walkDir","doc":"Return all filesystem entries of a preorder traversal of all directories satisfying `enter`, starting at `p`.\nSymbolic links are visited as well by default. "},"System.FilePath.readDir":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L394-L394","name":"System.FilePath.readDir","docLink":"./Init/System/IO.html#System.FilePath.readDir","doc":""},"System.FilePath.pathSeparators":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L32-L33","name":"System.FilePath.pathSeparators","docLink":"./Init/System/FilePath.html#System.FilePath.pathSeparators","doc":"The list of all possible separators. "},"System.FilePath.pathSeparator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L28-L29","name":"System.FilePath.pathSeparator","docLink":"./Init/System/FilePath.html#System.FilePath.pathSeparator","doc":"The character that separates directories. In the case where more than one character is possible, `pathSeparator` is the 'ideal' one. "},"System.FilePath.pathExists":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L404-L405","name":"System.FilePath.pathExists","docLink":"./Init/System/IO.html#System.FilePath.pathExists","doc":""},"System.FilePath.parent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L75-L76","name":"System.FilePath.parent","docLink":"./Init/System/FilePath.html#System.FilePath.parent","doc":""},"System.FilePath.normalize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L45-L50","name":"System.FilePath.normalize","docLink":"./Init/System/FilePath.html#System.FilePath.normalize","doc":""},"System.FilePath.metadata":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L397-L397","name":"System.FilePath.metadata","docLink":"./Init/System/IO.html#System.FilePath.metadata","doc":""},"System.FilePath.join":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L60-L64","name":"System.FilePath.join","docLink":"./Init/System/FilePath.html#System.FilePath.join","doc":""},"System.FilePath.isRelative":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L57-L58","name":"System.FilePath.isRelative","docLink":"./Init/System/FilePath.html#System.FilePath.isRelative","doc":""},"System.FilePath.isDir":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L399-L402","name":"System.FilePath.isDir","docLink":"./Init/System/IO.html#System.FilePath.isDir","doc":""},"System.FilePath.isCaseInsensitive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L42-L42","name":"System.FilePath.isCaseInsensitive","docLink":"./Init/System/FilePath.html#System.FilePath.isCaseInsensitive","doc":"Case-insensitive file system "},"System.FilePath.isAbsolute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L54-L55","name":"System.FilePath.isAbsolute","docLink":"./Init/System/FilePath.html#System.FilePath.isAbsolute","doc":""},"System.FilePath.instHDivFilePathString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L69-L70","name":"System.FilePath.instHDivFilePathString","docLink":"./Init/System/FilePath.html#System.FilePath.instHDivFilePathString","doc":""},"System.FilePath.instDivFilePath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L66-L67","name":"System.FilePath.instDivFilePath","docLink":"./Init/System/FilePath.html#System.FilePath.instDivFilePath","doc":""},"System.FilePath.fileStem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L85-L90","name":"System.FilePath.fileStem","docLink":"./Init/System/FilePath.html#System.FilePath.fileStem","doc":"Extracts the stem (non-extension) part of `p.fileName`. "},"System.FilePath.fileName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L78-L82","name":"System.FilePath.fileName","docLink":"./Init/System/FilePath.html#System.FilePath.fileName","doc":""},"System.FilePath.extension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L92-L97","name":"System.FilePath.extension","docLink":"./Init/System/FilePath.html#System.FilePath.extension","doc":""},"System.FilePath.extSeparator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L36-L36","name":"System.FilePath.extSeparator","docLink":"./Init/System/FilePath.html#System.FilePath.extSeparator","doc":"File extension character "},"System.FilePath.exeExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L38-L39","name":"System.FilePath.exeExtension","docLink":"./Init/System/FilePath.html#System.FilePath.exeExtension","doc":""},"System.FilePath.components":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L109-L110","name":"System.FilePath.components","docLink":"./Init/System/FilePath.html#System.FilePath.components","doc":""},"System.FilePath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/FilePath.lean#L15-L17","name":"System.FilePath","docLink":"./Init/System/FilePath.html#System.FilePath","doc":""},"Sum.repr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L74-L76","name":"Sum.repr","docLink":"./Init/Data/Repr.html#Sum.repr","doc":""},"Sum.inhabitedRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L609-L610","name":"Sum.inhabitedRight","docLink":"./Init/Core.html#Sum.inhabitedRight","doc":""},"Sum.inhabitedLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L606-L607","name":"Sum.inhabitedLeft","docLink":"./Init/Core.html#Sum.inhabitedLeft","doc":""},"Sum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L57-L59","name":"Sum","docLink":"./Init/Core.html#Sum","doc":""},"Subtype.sizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOfLemmas.lean#L32-L33","name":"Subtype.sizeOf","docLink":"./Init/SizeOfLemmas.html#Subtype.sizeOf","doc":""},"Subtype.instInhabitedSubtype":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L591-L592","name":"Subtype.instInhabitedSubtype","docLink":"./Init/Core.html#Subtype.instInhabitedSubtype","doc":""},"Subtype.instDecidableEqSubtype":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L594-L597","name":"Subtype.instDecidableEqSubtype","docLink":"./Init/Core.html#Subtype.instDecidableEqSubtype","doc":""},"Subtype.existsOfSubtype":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L579-L580","name":"Subtype.existsOfSubtype","docLink":"./Init/Core.html#Subtype.existsOfSubtype","doc":""},"Subtype.eta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L587-L589","name":"Subtype.eta","docLink":"./Init/Core.html#Subtype.eta","doc":""},"Subtype.eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L584-L585","name":"Subtype.eq","docLink":"./Init/Core.html#Subtype.eq","doc":""},"Subtype":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L556-L563","name":"Subtype","docLink":"./Init/Prelude.html#Subtype","doc":"`Subtype p`, usually written as `{x : α // p x}`, is a type which\nrepresents all the elements `x : α` for which `p x` is true. It is structurally\na pair-like type, so if you have `x : α` and `h : p x` then\n`⟨x, h⟩ : {x // p x}`. An element `s : {x // p x}` will coerce to `α` but\nyou can also make it explicit using `s.1` or `s.val`.\n"},"Substring.trimRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L535-L536","name":"Substring.trimRight","docLink":"./Init/Data/String/Basic.html#Substring.trimRight","doc":""},"Substring.trimLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L532-L533","name":"Substring.trimLeft","docLink":"./Init/Data/String/Basic.html#Substring.trimLeft","doc":""},"Substring.trim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L538-L542","name":"Substring.trim","docLink":"./Init/Data/String/Basic.html#Substring.trim","doc":""},"Substring.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L400-L401","name":"Substring.toString","docLink":"./Init/Data/String/Basic.html#Substring.toString","doc":""},"Substring.toNat?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L547-L551","name":"Substring.toNat?","docLink":"./Init/Data/String/Basic.html#Substring.toNat?","doc":""},"Substring.toIterator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L403-L404","name":"Substring.toIterator","docLink":"./Init/Data/String/Basic.html#Substring.toIterator","doc":""},"Substring.takeWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L504-L507","name":"Substring.takeWhile","docLink":"./Init/Data/String/Basic.html#Substring.takeWhile","doc":""},"Substring.takeRightWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L522-L525","name":"Substring.takeRightWhile","docLink":"./Init/Data/String/Basic.html#Substring.takeRightWhile","doc":""},"Substring.takeRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L450-L451","name":"Substring.takeRight","docLink":"./Init/Data/String/Basic.html#Substring.takeRight","doc":""},"Substring.take":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L447-L448","name":"Substring.take","docLink":"./Init/Data/String/Basic.html#Substring.take","doc":""},"Substring.splitOn.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L463-L478","name":"Substring.splitOn.loop","docLink":"./Init/Data/String/Basic.html#Substring.splitOn.loop","doc":""},"Substring.splitOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L459-L479","name":"Substring.splitOn","docLink":"./Init/Data/String/Basic.html#Substring.splitOn","doc":""},"Substring.prevn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L428-L430","name":"Substring.prevn","docLink":"./Init/Data/String/Basic.html#Substring.prevn","doc":""},"Substring.prev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L419-L422","name":"Substring.prev","docLink":"./Init/Data/String/Basic.html#Substring.prev","doc":"Given an offset of a codepoint into the substring,\nreturn the offset there of the previous codepoint. "},"Substring.posOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L437-L439","name":"Substring.posOf","docLink":"./Init/Data/String/Basic.html#Substring.posOf","doc":"Return the offset into `s` of the first occurence of `c` in `s`,\nor `s.bsize` if `c` doesn't occur. "},"Substring.nextn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L424-L426","name":"Substring.nextn","docLink":"./Init/Data/String/Basic.html#Substring.nextn","doc":""},"Substring.next":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L412-L415","name":"Substring.next","docLink":"./Init/Data/String/Basic.html#Substring.next","doc":"Given an offset of a codepoint into the substring,\nreturn the offset there of the next codepoint. "},"Substring.isNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L544-L545","name":"Substring.isNat","docLink":"./Init/Data/String/Basic.html#Substring.isNat","doc":""},"Substring.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L397-L398","name":"Substring.isEmpty","docLink":"./Init/Data/String/Basic.html#Substring.isEmpty","doc":""},"Substring.hasBeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L556-L556","name":"Substring.hasBeq","docLink":"./Init/Data/String/Basic.html#Substring.hasBeq","doc":""},"Substring.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L407-L408","name":"Substring.get","docLink":"./Init/Data/String/Basic.html#Substring.get","doc":"Return the codepoint at the given offset into the substring. "},"Substring.front":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L432-L433","name":"Substring.front","docLink":"./Init/Data/String/Basic.html#Substring.front","doc":""},"Substring.foldr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L485-L487","name":"Substring.foldr","docLink":"./Init/Data/String/Basic.html#Substring.foldr","doc":""},"Substring.foldl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L481-L483","name":"Substring.foldl","docLink":"./Init/Data/String/Basic.html#Substring.foldl","doc":""},"Substring.extract":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L456-L457","name":"Substring.extract","docLink":"./Init/Data/String/Basic.html#Substring.extract","doc":""},"Substring.dropWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L509-L512","name":"Substring.dropWhile","docLink":"./Init/Data/String/Basic.html#Substring.dropWhile","doc":""},"Substring.dropRightWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L527-L530","name":"Substring.dropRightWhile","docLink":"./Init/Data/String/Basic.html#Substring.dropRightWhile","doc":""},"Substring.dropRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L444-L445","name":"Substring.dropRight","docLink":"./Init/Data/String/Basic.html#Substring.dropRight","doc":""},"Substring.drop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L441-L442","name":"Substring.drop","docLink":"./Init/Data/String/Basic.html#Substring.drop","doc":""},"Substring.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L496-L497","name":"Substring.contains","docLink":"./Init/Data/String/Basic.html#Substring.contains","doc":""},"Substring.bsize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1754-L1755","name":"Substring.bsize","docLink":"./Init/Prelude.html#Substring.bsize","doc":""},"Substring.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L553-L554","name":"Substring.beq","docLink":"./Init/Data/String/Basic.html#Substring.beq","doc":""},"Substring.atEnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L453-L454","name":"Substring.atEnd","docLink":"./Init/Data/String/Basic.html#Substring.atEnd","doc":""},"Substring.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L489-L491","name":"Substring.any","docLink":"./Init/Data/String/Basic.html#Substring.any","doc":""},"Substring.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L493-L494","name":"Substring.all","docLink":"./Init/Data/String/Basic.html#Substring.all","doc":""},"Substring":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1746-L1749","name":"Substring","docLink":"./Init/Prelude.html#Substring","doc":""},"Subsingleton.helim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L530-L533","name":"Subsingleton.helim","docLink":"./Init/Core.html#Subsingleton.helim","doc":""},"Subsingleton.elim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L527-L528","name":"Subsingleton.elim","docLink":"./Init/Core.html#Subsingleton.elim","doc":""},"Subsingleton":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L524-L525","name":"Subsingleton","docLink":"./Init/Core.html#Subsingleton","doc":""},"Subrelation.wf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L103-L104","name":"Subrelation.wf","docLink":"./Init/WF.html#Subrelation.wf","doc":""},"Subrelation.accessible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L96-L101","name":"Subrelation.accessible","docLink":"./Init/WF.html#Subrelation.accessible","doc":""},"Subrelation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L566-L567","name":"Subrelation","docLink":"./Init/Core.html#Subrelation","doc":""},"Subarray.toArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L146-L147","name":"Subarray.toArray","docLink":"./Init/Data/Array/Subarray.html#Subarray.toArray","doc":""},"Subarray.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L20-L21","name":"Subarray.size","docLink":"./Init/Data/Array/Subarray.html#Subarray.size","doc":""},"Subarray.popFront":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L41-L45","name":"Subarray.popFront","docLink":"./Init/Data/Array/Subarray.html#Subarray.popFront","doc":""},"Subarray.instGetElemSubarrayNatLtInstLTNatSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L32-L33","name":"Subarray.instGetElemSubarrayNatLtInstLTNatSize","docLink":"./Init/Data/Array/Subarray.html#Subarray.instGetElemSubarrayNatLtInstLTNatSize","doc":""},"Subarray.instForInSubarray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L64-L65","name":"Subarray.instForInSubarray","docLink":"./Init/Data/Array/Subarray.html#Subarray.instForInSubarray","doc":""},"Subarray.getD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L35-L36","name":"Subarray.getD","docLink":"./Init/Data/Array/Subarray.html#Subarray.getD","doc":""},"Subarray.get!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L38-L39","name":"Subarray.get!","docLink":"./Init/Data/Array/Subarray.html#Subarray.get!","doc":""},"Subarray.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L23-L30","name":"Subarray.get","docLink":"./Init/Data/Array/Subarray.html#Subarray.get","doc":""},"Subarray.forRevM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L88-L89","name":"Subarray.forRevM","docLink":"./Init/Data/Array/Subarray.html#Subarray.forRevM","doc":""},"Subarray.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L84-L85","name":"Subarray.forM","docLink":"./Init/Data/Array/Subarray.html#Subarray.forM","doc":""},"Subarray.forInUnsafe.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L49-L56","name":"Subarray.forInUnsafe.loop","docLink":"./Init/Data/Array/Subarray.html#Subarray.forInUnsafe.loop","doc":""},"Subarray.forInUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L47-L57","name":"Subarray.forInUnsafe","docLink":"./Init/Data/Array/Subarray.html#Subarray.forInUnsafe","doc":""},"Subarray.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L61-L62","name":"Subarray.forIn","docLink":"./Init/Data/Array/Subarray.html#Subarray.forIn","doc":""},"Subarray.foldrM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L72-L73","name":"Subarray.foldrM","docLink":"./Init/Data/Array/Subarray.html#Subarray.foldrM","doc":""},"Subarray.foldr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L96-L97","name":"Subarray.foldr","docLink":"./Init/Data/Array/Subarray.html#Subarray.foldr","doc":""},"Subarray.foldlM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L68-L69","name":"Subarray.foldlM","docLink":"./Init/Data/Array/Subarray.html#Subarray.foldlM","doc":""},"Subarray.foldl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L92-L93","name":"Subarray.foldl","docLink":"./Init/Data/Array/Subarray.html#Subarray.foldl","doc":""},"Subarray.anyM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L76-L77","name":"Subarray.anyM","docLink":"./Init/Data/Array/Subarray.html#Subarray.anyM","doc":""},"Subarray.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L100-L101","name":"Subarray.any","docLink":"./Init/Data/Array/Subarray.html#Subarray.any","doc":""},"Subarray.allM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L80-L81","name":"Subarray.allM","docLink":"./Init/Data/Array/Subarray.html#Subarray.allM","doc":""},"Subarray.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L104-L105","name":"Subarray.all","docLink":"./Init/Data/Array/Subarray.html#Subarray.all","doc":""},"Subarray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L11-L16","name":"Subarray","docLink":"./Init/Data/Array/Subarray.html#Subarray","doc":""},"Sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1043-L1044","name":"Sub","docLink":"./Init/Prelude.html#Sub","doc":""},"String.utf8ByteSize.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1764-L1766","name":"String.utf8ByteSize.go","docLink":"./Init/Prelude.html#String.utf8ByteSize.go","doc":""},"String.utf8ByteSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1761-L1766","name":"String.utf8ByteSize","docLink":"./Init/Prelude.html#String.utf8ByteSize","doc":""},"String.utf16PosToCodepointPosFrom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Utf16.lean#L49-L50","name":"String.utf16PosToCodepointPosFrom","docLink":"./Lean/Data/Lsp/Utf16.html#String.utf16PosToCodepointPosFrom","doc":"Computes the position of the Unicode codepoint at UTF-16 offset\n`utf16pos` in the substring of `s` starting at UTF-8 offset `off`. "},"String.utf16PosToCodepointPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Utf16.lean#L52-L53","name":"String.utf16PosToCodepointPos","docLink":"./Lean/Data/Lsp/Utf16.html#String.utf16PosToCodepointPos","doc":""},"String.utf16Length":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Utf16.lean#L27-L28","name":"String.utf16Length","docLink":"./Lean/Data/Lsp/Utf16.html#String.utf16Length","doc":""},"String.trimRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L592-L593","name":"String.trimRight","docLink":"./Init/Data/String/Basic.html#String.trimRight","doc":""},"String.trimLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L595-L596","name":"String.trimLeft","docLink":"./Init/Data/String/Basic.html#String.trimLeft","doc":""},"String.trim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L598-L599","name":"String.trim","docLink":"./Init/Data/String/Basic.html#String.trim","doc":""},"String.toUpper":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L607-L608","name":"String.toUpper","docLink":"./Init/Data/String/Basic.html#String.toUpper","doc":""},"String.toUTF8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Extra.lean#L29-L29","name":"String.toUTF8","docLink":"./Init/Data/String/Extra.html#String.toUTF8","doc":""},"String.toSubstring":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1795-L1799","name":"String.toSubstring","docLink":"./Init/Prelude.html#String.toSubstring","doc":""},"String.toNat?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L357-L361","name":"String.toNat?","docLink":"./Init/Data/String/Basic.html#String.toNat?","doc":""},"String.toNat!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Extra.lean#L16-L20","name":"String.toNat!","docLink":"./Init/Data/String/Extra.html#String.toNat!","doc":""},"String.toName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L211-L213","name":"String.toName","docLink":"./Lean/Data/Name.html#String.toName","doc":""},"String.toLower":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L610-L611","name":"String.toLower","docLink":"./Init/Data/String/Basic.html#String.toLower","doc":""},"String.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L44-L45","name":"String.toList","docLink":"./Init/Data/String/Basic.html#String.toList","doc":"O(n) in the runtime, where n is the length of the String "},"String.toInt?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L126-L131","name":"String.toInt?","docLink":"./Init/Data/ToString/Basic.html#String.toInt?","doc":""},"String.toInt!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L139-L142","name":"String.toInt!","docLink":"./Init/Data/ToString/Basic.html#String.toInt!","doc":""},"String.toFormat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Instances.lean#L36-L37","name":"String.toFormat","docLink":"./Init/Data/Format/Instances.html#String.toFormat","doc":""},"String.toFileMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L83-L84","name":"String.toFileMap","docLink":"./Lean/Data/Position.html#String.toFileMap","doc":""},"String.takeWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L574-L575","name":"String.takeWhile","docLink":"./Init/Data/String/Basic.html#String.takeWhile","doc":""},"String.takeRightWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L580-L581","name":"String.takeRightWhile","docLink":"./Init/Data/String/Basic.html#String.takeRightWhile","doc":""},"String.takeRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L571-L572","name":"String.takeRight","docLink":"./Init/Data/String/Basic.html#String.takeRight","doc":""},"String.take":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L568-L569","name":"String.take","docLink":"./Init/Data/String/Basic.html#String.take","doc":""},"String.substrEq.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L369-L375","name":"String.substrEq.loop","docLink":"./Init/Data/String/Basic.html#String.substrEq.loop","doc":""},"String.substrEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L366-L375","name":"String.substrEq","docLink":"./Init/Data/String/Basic.html#String.substrEq","doc":"Return `true` iff the substring of byte size `sz` starting at position `off1` in `s1` is equal to that starting at `off2` in `s2.`.\nFalse if either substring of that byte size does not exist. "},"String.str":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L209-L209","name":"String.str","docLink":"./Init/Data/String/Basic.html#String.str","doc":""},"String.startsWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L586-L587","name":"String.startsWith","docLink":"./Init/Data/String/Basic.html#String.startsWith","doc":""},"String.splitOnAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L188-L200","name":"String.splitOnAux","docLink":"./Init/Data/String/Basic.html#String.splitOnAux","doc":""},"String.splitOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L202-L203","name":"String.splitOn","docLink":"./Init/Data/String/Basic.html#String.splitOn","doc":""},"String.splitAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L175-L183","name":"String.splitAux","docLink":"./Init/Data/String/Basic.html#String.splitAux","doc":""},"String.split":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L185-L186","name":"String.split","docLink":"./Init/Data/String/Basic.html#String.split","doc":""},"String.singleton":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L220-L221","name":"String.singleton","docLink":"./Init/Data/String/Basic.html#String.singleton","doc":""},"String.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L83-L84","name":"String.set","docLink":"./Init/Data/String/Basic.html#String.set","doc":""},"String.revPosOfAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L125-L128","name":"String.revPosOfAux","docLink":"./Init/Data/String/Basic.html#String.revPosOfAux","doc":""},"String.revPosOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L130-L132","name":"String.revPosOf","docLink":"./Init/Data/String/Basic.html#String.revPosOf","doc":""},"String.revFindAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L142-L145","name":"String.revFindAux","docLink":"./Init/Data/String/Basic.html#String.revFindAux","doc":""},"String.revFind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L147-L149","name":"String.revFind","docLink":"./Init/Data/String/Basic.html#String.revFind","doc":""},"String.replace.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L385-L391","name":"String.replace.loop","docLink":"./Init/Data/String/Basic.html#String.replace.loop","doc":""},"String.replace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L382-L391","name":"String.replace","docLink":"./Init/Data/String/Basic.html#String.replace","doc":"Replace all occurrences of `pattern` in `s` with `replacment`. "},"String.quote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L203-L205","name":"String.quote","docLink":"./Init/Data/Repr.html#String.quote","doc":""},"String.pushn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L211-L212","name":"String.pushn","docLink":"./Init/Data/String/Basic.html#String.pushn","doc":""},"String.push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L34-L35","name":"String.push","docLink":"./Init/Data/String/Basic.html#String.push","doc":"The internal implementation uses dynamic arrays and will perform destructive updates\nif the String is not shared. "},"String.prev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L101-L102","name":"String.prev","docLink":"./Init/Data/String/Basic.html#String.prev","doc":""},"String.pos_lt_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Extra.lean#L35-L35","name":"String.pos_lt_eq","docLink":"./Init/Data/String/Extra.html#String.pos_lt_eq","doc":""},"String.pos_add_char":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Extra.lean#L37-L37","name":"String.pos_add_char","docLink":"./Init/Data/String/Extra.html#String.pos_add_char","doc":""},"String.posOfAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L117-L120","name":"String.posOfAux","docLink":"./Init/Data/String/Basic.html#String.posOfAux","doc":""},"String.posOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L122-L123","name":"String.posOf","docLink":"./Init/Data/String/Basic.html#String.posOf","doc":""},"String.one_le_csize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Extra.lean#L31-L33","name":"String.one_le_csize","docLink":"./Init/Data/String/Extra.html#String.one_le_csize","doc":""},"String.offsetOfPosAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L301-L305","name":"String.offsetOfPosAux","docLink":"./Init/Data/String/Basic.html#String.offsetOfPosAux","doc":""},"String.offsetOfPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L307-L308","name":"String.offsetOfPos","docLink":"./Init/Data/String/Basic.html#String.offsetOfPos","doc":""},"String.nextWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L601-L602","name":"String.nextWhile","docLink":"./Init/Data/String/Basic.html#String.nextWhile","doc":""},"String.nextUntil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L604-L605","name":"String.nextUntil","docLink":"./Init/Data/String/Basic.html#String.nextUntil","doc":""},"String.next":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L90-L92","name":"String.next","docLink":"./Init/Data/String/Basic.html#String.next","doc":""},"String.modify":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L86-L87","name":"String.modify","docLink":"./Init/Data/String/Basic.html#String.modify","doc":""},"String.mkIterator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L235-L236","name":"String.mkIterator","docLink":"./Init/Data/String/Basic.html#String.mkIterator","doc":""},"String.mapAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L344-L349","name":"String.mapAux","docLink":"./Init/Data/String/Basic.html#String.mapAux","doc":""},"String.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L351-L352","name":"String.map","docLink":"./Init/Data/String/Basic.html#String.map","doc":""},"String.mangle":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/NameMangling.lean#L42-L43","name":"String.mangle","docLink":"./Lean/Compiler/NameMangling.html#String.mangle","doc":""},"String.lt_next":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Extra.lean#L48-L49","name":"String.lt_next","docLink":"./Init/Data/String/Extra.html#String.lt_next","doc":""},"String.length":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L28-L29","name":"String.length","docLink":"./Init/Data/String/Basic.html#String.length","doc":""},"String.join":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L217-L218","name":"String.join","docLink":"./Init/Data/String/Basic.html#String.join","doc":""},"String.iter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L238-L238","name":"String.iter","docLink":"./Init/Data/String/Basic.html#String.iter","doc":""},"String.isPrefixOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L378-L379","name":"String.isPrefixOf","docLink":"./Init/Data/String/Basic.html#String.isPrefixOf","doc":"Return true iff `p` is a prefix of `s` "},"String.isNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L354-L355","name":"String.isNat","docLink":"./Init/Data/String/Basic.html#String.isNat","doc":""},"String.isInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L133-L137","name":"String.isInt","docLink":"./Init/Data/ToString/Basic.html#String.isInt","doc":""},"String.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L214-L215","name":"String.isEmpty","docLink":"./Init/Data/String/Basic.html#String.isEmpty","doc":""},"String.intercalate.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L226-L228","name":"String.intercalate.go","docLink":"./Init/Data/String/Basic.html#String.intercalate.go","doc":""},"String.intercalate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L223-L228","name":"String.intercalate","docLink":"./Init/Data/String/Basic.html#String.intercalate","doc":""},"String.instSizeOfIterator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L240-L241","name":"String.instSizeOfIterator","docLink":"./Init/Data/String/Basic.html#String.instSizeOfIterator","doc":""},"String.instReprRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L12-L12","name":"String.instReprRange","docLink":"./Lean/Server/InfoUtils.html#String.instReprRange","doc":""},"String.instOfNatPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L17-L18","name":"String.instOfNatPos","docLink":"./Init/Data/String/Basic.html#String.instOfNatPos","doc":""},"String.instLTString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L20-L21","name":"String.instLTString","docLink":"./Init/Data/String/Basic.html#String.instLTString","doc":""},"String.instInhabitedString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L205-L205","name":"String.instInhabitedString","docLink":"./Init/Data/String/Basic.html#String.instInhabitedString","doc":""},"String.instInhabitedRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L12-L12","name":"String.instInhabitedRange","docLink":"./Lean/Server/InfoUtils.html#String.instInhabitedRange","doc":""},"String.instHashableRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L12-L12","name":"String.instHashableRange","docLink":"./Lean/Server/InfoUtils.html#String.instHashableRange","doc":""},"String.instDecidableEqIterator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L233-L233","name":"String.instDecidableEqIterator","docLink":"./Init/Data/String/Basic.html#String.instDecidableEqIterator","doc":""},"String.instBEqRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L12-L12","name":"String.instBEqRange","docLink":"./Lean/Server/InfoUtils.html#String.instBEqRange","doc":""},"String.instAppendString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L207-L207","name":"String.instAppendString","docLink":"./Init/Data/String/Basic.html#String.instAppendString","doc":""},"String.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2330-L2330","name":"String.hash","docLink":"./Init/Prelude.html#String.hash","doc":""},"String.get?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L66-L67","name":"String.get?","docLink":"./Init/Data/String/Basic.html#String.get?","doc":""},"String.get!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L73-L75","name":"String.get!","docLink":"./Init/Data/String/Basic.html#String.get!","doc":"Similar to `get`, but produces a panic error message if `p` is not a valid `String.Pos`.\n"},"String.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L57-L59","name":"String.get","docLink":"./Init/Data/String/Basic.html#String.get","doc":"Return character at position `p`. If `p` is not a valid position\nreturns `(default : Char)`.\nSee `utf8GetAux` for the reference implementation.\n"},"String.front":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L104-L105","name":"String.front","docLink":"./Init/Data/String/Basic.html#String.front","doc":""},"String.fromUTF8Unchecked":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Extra.lean#L26-L26","name":"String.fromUTF8Unchecked","docLink":"./Init/Data/String/Extra.html#String.fromUTF8Unchecked","doc":"Convert a UTF-8 encoded `ByteArray` string to `String`.\nThe result is unspecified if `a` is not properly UTF-8 encoded. "},"String.foldrAux.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L320-L322","name":"String.foldrAux.loop","docLink":"./Init/Data/String/Basic.html#String.foldrAux.loop","doc":""},"String.foldrAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L319-L323","name":"String.foldrAux","docLink":"./Init/Data/String/Basic.html#String.foldrAux","doc":""},"String.foldr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L325-L326","name":"String.foldr","docLink":"./Init/Data/String/Basic.html#String.foldr","doc":""},"String.foldlAux.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L311-L313","name":"String.foldlAux.loop","docLink":"./Init/Data/String/Basic.html#String.foldlAux.loop","doc":""},"String.foldlAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L310-L314","name":"String.foldlAux","docLink":"./Init/Data/String/Basic.html#String.foldlAux","doc":""},"String.foldl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L316-L317","name":"String.foldl","docLink":"./Init/Data/String/Basic.html#String.foldl","doc":""},"String.firstDiffPos.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L157-L159","name":"String.firstDiffPos.loop","docLink":"./Init/Data/String/Basic.html#String.firstDiffPos.loop","doc":""},"String.firstDiffPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L155-L160","name":"String.firstDiffPos","docLink":"./Init/Data/String/Basic.html#String.firstDiffPos","doc":"Returns the first position where the two strings differ. "},"String.findAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L134-L137","name":"String.findAux","docLink":"./Init/Data/String/Basic.html#String.findAux","doc":""},"String.find":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L139-L140","name":"String.find","docLink":"./Init/Data/String/Basic.html#String.find","doc":""},"String.extract.go₂":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L170-L172","name":"String.extract.go₂","docLink":"./Init/Data/String/Basic.html#String.extract.go₂","doc":""},"String.extract.go₁":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L166-L168","name":"String.extract.go₁","docLink":"./Init/Data/String/Basic.html#String.extract.go₁","doc":""},"String.extract":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L163-L172","name":"String.extract","docLink":"./Init/Data/String/Basic.html#String.extract","doc":""},"String.eq_empty_of_bsize_eq_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Extra.lean#L39-L46","name":"String.eq_empty_of_bsize_eq_zero","docLink":"./Init/Data/String/Extra.html#String.eq_empty_of_bsize_eq_zero","doc":""},"String.endsWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L589-L590","name":"String.endsWith","docLink":"./Init/Data/String/Basic.html#String.endsWith","doc":""},"String.endPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1792-L1793","name":"String.endPos","docLink":"./Init/Prelude.html#String.endPos","doc":""},"String.dropWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L577-L578","name":"String.dropWhile","docLink":"./Init/Data/String/Basic.html#String.dropWhile","doc":""},"String.dropRightWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L583-L584","name":"String.dropRightWhile","docLink":"./Init/Data/String/Basic.html#String.dropRightWhile","doc":""},"String.dropRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L565-L566","name":"String.dropRight","docLink":"./Init/Data/String/Basic.html#String.dropRight","doc":""},"String.drop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L562-L563","name":"String.drop","docLink":"./Init/Data/String/Basic.html#String.drop","doc":""},"String.decapitalize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L616-L617","name":"String.decapitalize","docLink":"./Init/Data/String/Basic.html#String.decapitalize","doc":""},"String.decLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L24-L25","name":"String.decLt","docLink":"./Init/Data/String/Basic.html#String.decLt","doc":""},"String.decEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1723-L1726","name":"String.decEq","docLink":"./Init/Prelude.html#String.decEq","doc":""},"String.csize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1757-L1758","name":"String.csize","docLink":"./Init/Prelude.html#String.csize","doc":""},"String.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L341-L342","name":"String.contains","docLink":"./Init/Data/String/Basic.html#String.contains","doc":""},"String.codepointPosToUtf8PosFrom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Utf16.lean#L56-L58","name":"String.codepointPosToUtf8PosFrom","docLink":"./Lean/Data/Lsp/Utf16.html#String.codepointPosToUtf8PosFrom","doc":"Starting at `utf8pos`, finds the UTF-8 offset of the `p`-th codepoint. "},"String.codepointPosToUtf16PosFrom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Utf16.lean#L37-L38","name":"String.codepointPosToUtf16PosFrom","docLink":"./Lean/Data/Lsp/Utf16.html#String.codepointPosToUtf16PosFrom","doc":"Computes the UTF-16 offset of the `n`-th Unicode codepoint\nin the substring of `s` starting at UTF-8 offset `off`.\nYes, this is actually useful."},"String.codepointPosToUtf16Pos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Utf16.lean#L40-L41","name":"String.codepointPosToUtf16Pos","docLink":"./Lean/Data/Lsp/Utf16.html#String.codepointPosToUtf16Pos","doc":""},"String.capitalize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L613-L614","name":"String.capitalize","docLink":"./Init/Data/String/Basic.html#String.capitalize","doc":""},"String.back":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L107-L108","name":"String.back","docLink":"./Init/Data/String/Basic.html#String.back","doc":""},"String.atEnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L111-L112","name":"String.atEnd","docLink":"./Init/Data/String/Basic.html#String.atEnd","doc":""},"String.append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L40-L41","name":"String.append","docLink":"./Init/Data/String/Basic.html#String.append","doc":"The internal implementation uses dynamic arrays and will perform destructive updates\nif the String is not shared. "},"String.anyAux.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L329-L332","name":"String.anyAux.loop","docLink":"./Init/Data/String/Basic.html#String.anyAux.loop","doc":""},"String.anyAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L328-L333","name":"String.anyAux","docLink":"./Init/Data/String/Basic.html#String.anyAux","doc":""},"String.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L335-L336","name":"String.any","docLink":"./Init/Data/String/Basic.html#String.any","doc":""},"String.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L338-L339","name":"String.all","docLink":"./Init/Data/String/Basic.html#String.all","doc":""},"String.Range.toLspRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L167-L168","name":"String.Range.toLspRange","docLink":"./Lean/Server/Utils.html#String.Range.toLspRange","doc":""},"String.Range.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L14-L15","name":"String.Range.contains","docLink":"./Lean/Server/InfoUtils.html#String.Range.contains","doc":""},"String.Range":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L9-L12","name":"String.Range","docLink":"./Lean/Server/InfoUtils.html#String.Range","doc":""},"String.Pos.min":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L151-L152","name":"String.Pos.min","docLink":"./Init/Data/String/Basic.html#String.Pos.min","doc":""},"String.Pos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1735-L1736","name":"String.Pos","docLink":"./Init/Prelude.html#String.Pos","doc":"A byte position in a `String`. Internally, `String`s are UTF-8 encoded.\nCodepoint positions (counting the Unicode codepoints rather than bytes)\nare represented by plain `Nat`s instead.\nIndexing a `String` by a byte position is constant-time, while codepoint\npositions need to be translated internally to byte positions in linear-time. "},"String.Iterator.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L247-L248","name":"String.Iterator.toString","docLink":"./Init/Data/String/Basic.html#String.Iterator.toString","doc":""},"String.Iterator.toEnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L277-L278","name":"String.Iterator.toEnd","docLink":"./Init/Data/String/Basic.html#String.Iterator.toEnd","doc":""},"String.Iterator.sizeOf_next_lt_of_hasNext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Extra.lean#L51-L59","name":"String.Iterator.sizeOf_next_lt_of_hasNext","docLink":"./Init/Data/String/Extra.html#String.Iterator.sizeOf_next_lt_of_hasNext","doc":""},"String.Iterator.sizeOf_next_lt_of_atEnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Extra.lean#L63-L65","name":"String.Iterator.sizeOf_next_lt_of_atEnd","docLink":"./Init/Data/String/Extra.html#String.Iterator.sizeOf_next_lt_of_atEnd","doc":""},"String.Iterator.sizeOf_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L243-L244","name":"String.Iterator.sizeOf_eq","docLink":"./Init/Data/String/Basic.html#String.Iterator.sizeOf_eq","doc":""},"String.Iterator.setCurr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L274-L275","name":"String.Iterator.setCurr","docLink":"./Init/Data/String/Basic.html#String.Iterator.setCurr","doc":""},"String.Iterator.remainingToString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L289-L290","name":"String.Iterator.remainingToString","docLink":"./Init/Data/String/Basic.html#String.Iterator.remainingToString","doc":""},"String.Iterator.remainingBytes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L250-L251","name":"String.Iterator.remainingBytes","docLink":"./Init/Data/String/Basic.html#String.Iterator.remainingBytes","doc":""},"String.Iterator.prevn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L296-L298","name":"String.Iterator.prevn","docLink":"./Init/Data/String/Basic.html#String.Iterator.prevn","doc":""},"String.Iterator.prev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L262-L263","name":"String.Iterator.prev","docLink":"./Init/Data/String/Basic.html#String.Iterator.prev","doc":""},"String.Iterator.pos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L253-L254","name":"String.Iterator.pos","docLink":"./Init/Data/String/Basic.html#String.Iterator.pos","doc":""},"String.Iterator.nextn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L292-L294","name":"String.Iterator.nextn","docLink":"./Init/Data/String/Basic.html#String.Iterator.nextn","doc":""},"String.Iterator.next":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L259-L260","name":"String.Iterator.next","docLink":"./Init/Data/String/Basic.html#String.Iterator.next","doc":""},"String.Iterator.hasPrev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L271-L272","name":"String.Iterator.hasPrev","docLink":"./Init/Data/String/Basic.html#String.Iterator.hasPrev","doc":""},"String.Iterator.hasNext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L268-L269","name":"String.Iterator.hasNext","docLink":"./Init/Data/String/Basic.html#String.Iterator.hasNext","doc":""},"String.Iterator.forward":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L285-L287","name":"String.Iterator.forward","docLink":"./Init/Data/String/Basic.html#String.Iterator.forward","doc":""},"String.Iterator.foldUntil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Extra.lean#L76-L82","name":"String.Iterator.foldUntil","docLink":"./Init/Data/String/Extra.html#String.Iterator.foldUntil","doc":""},"String.Iterator.find":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Extra.lean#L71-L74","name":"String.Iterator.find","docLink":"./Init/Data/String/Extra.html#String.Iterator.find","doc":""},"String.Iterator.extract":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L280-L283","name":"String.Iterator.extract","docLink":"./Init/Data/String/Basic.html#String.Iterator.extract","doc":""},"String.Iterator.curr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L256-L257","name":"String.Iterator.curr","docLink":"./Init/Data/String/Basic.html#String.Iterator.curr","doc":""},"String.Iterator.atEnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L265-L266","name":"String.Iterator.atEnd","docLink":"./Init/Data/String/Basic.html#String.Iterator.atEnd","doc":""},"String.Iterator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L230-L233","name":"String.Iterator","docLink":"./Init/Data/String/Basic.html#String.Iterator","doc":""},"String":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1716-L1717","name":"String","docLink":"./Init/Prelude.html#String","doc":""},"Stream.forIn.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L53-L58","name":"Stream.forIn.visit","docLink":"./Init/Data/Stream.html#Stream.forIn.visit","doc":""},"Stream.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L51-L59","name":"Stream.forIn","docLink":"./Init/Data/Stream.html#Stream.forIn","doc":""},"Stream":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Stream.lean#L48-L49","name":"Stream","docLink":"./Init/Data/Stream.html#Stream","doc":""},"StdGen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L32-L34","name":"StdGen","docLink":"./Init/Data/Random.html#StdGen","doc":"\"Standard\" random number generator. "},"Std.withShareCommon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L118-L118","name":"Std.withShareCommon","docLink":"./Std/ShareCommon.html#Std.withShareCommon","doc":""},"Std.termF!_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Macro.lean#L12-L12","name":"Std.termF!_","docLink":"./Init/Data/Format/Macro.html#Std.termF!_","doc":""},"Std.shareCommonM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L120-L121","name":"Std.shareCommonM","docLink":"./Std/ShareCommon.html#Std.shareCommonM","doc":""},"Std.shareCommon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L154-L155","name":"Std.shareCommon","docLink":"./Std/ShareCommon.html#Std.shareCommon","doc":""},"Std.rbtreeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L115-L116","name":"Std.rbtreeOf","docLink":"./Std/Data/RBTree.html#Std.rbtreeOf","doc":""},"Std.rbmapOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L353-L354","name":"Std.rbmapOf","docLink":"./Std/Data/RBMap.html#Std.rbmapOf","doc":""},"Std.mkRBTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L16-L17","name":"Std.mkRBTree","docLink":"./Std/Data/RBTree.html#Std.mkRBTree","doc":""},"Std.mkRBMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L237-L238","name":"Std.mkRBMap","docLink":"./Std/Data/RBMap.html#Std.mkRBMap","doc":""},"Std.mkPersistentArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L367-L368","name":"Std.mkPersistentArray","docLink":"./Std/Data/PersistentArray.html#Std.mkPersistentArray","doc":""},"Std.mkPArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L370-L371","name":"Std.mkPArray","docLink":"./Std/Data/PersistentArray.html#Std.mkPArray","doc":""},"Std.mkHashSetImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L20-L25","name":"Std.mkHashSetImp","docLink":"./Std/Data/HashSet.html#Std.mkHashSetImp","doc":""},"Std.mkHashSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L114-L115","name":"Std.mkHashSet","docLink":"./Std/Data/HashSet.html#Std.mkHashSet","doc":""},"Std.mkHashMapImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L25-L31","name":"Std.mkHashMapImp","docLink":"./Std/Data/HashMap.html#Std.mkHashMapImp","doc":""},"Std.mkHashMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L132-L133","name":"Std.mkHashMap","docLink":"./Std/Data/HashMap.html#Std.mkHashMap","doc":""},"Std.instToFormatString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L239-L240","name":"Std.instToFormatString","docLink":"./Init/Data/Format/Basic.html#Std.instToFormatString","doc":""},"Std.instToFormatFormat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L236-L237","name":"Std.instToFormatFormat","docLink":"./Init/Data/Format/Basic.html#Std.instToFormatFormat","doc":""},"Std.instMembershipNatRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L17-L18","name":"Std.instMembershipNatRange","docLink":"./Init/Data/Range.html#Std.instMembershipNatRange","doc":""},"Std.instInhabitedRBTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L13-L14","name":"Std.instInhabitedRBTree","docLink":"./Std/Data/RBTree.html#Std.instInhabitedRBTree","doc":""},"Std.instInhabitedRBMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L246-L246","name":"Std.instInhabitedRBMap","docLink":"./Std/Data/RBMap.html#Std.instInhabitedRBMap","doc":""},"Std.instInhabitedPersistentArrayNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L13-L13","name":"Std.instInhabitedPersistentArrayNode","docLink":"./Std/Data/PersistentArray.html#Std.instInhabitedPersistentArrayNode","doc":""},"Std.instInhabitedPersistentArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L36-L36","name":"Std.instInhabitedPersistentArray","docLink":"./Std/Data/PersistentArray.html#Std.instInhabitedPersistentArray","doc":""},"Std.instInhabitedFormat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L28-L28","name":"Std.instInhabitedFormat","docLink":"./Init/Data/Format/Basic.html#Std.instInhabitedFormat","doc":""},"Std.instInhabitedAssocList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L13-L13","name":"Std.instInhabitedAssocList","docLink":"./Std/Data/AssocList.html#Std.instInhabitedAssocList","doc":""},"Std.instEmptyCollectionRBTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L19-L20","name":"Std.instEmptyCollectionRBTree","docLink":"./Std/Data/RBTree.html#Std.instEmptyCollectionRBTree","doc":""},"Std.instEmptyCollectionRBMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L243-L244","name":"Std.instEmptyCollectionRBMap","docLink":"./Std/Data/RBMap.html#Std.instEmptyCollectionRBMap","doc":""},"Std.ToFormat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L230-L231","name":"Std.ToFormat","docLink":"./Init/Data/Format/Basic.html#Std.ToFormat","doc":""},"Std.ShareCommonT.withShareCommon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L128-L129","name":"Std.ShareCommonT.withShareCommon","docLink":"./Std/ShareCommon.html#Std.ShareCommonT.withShareCommon","doc":""},"Std.ShareCommonT.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L142-L143","name":"Std.ShareCommonT.run","docLink":"./Std/ShareCommon.html#Std.ShareCommonT.run","doc":""},"Std.ShareCommonT.monadShareCommon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L134-L136","name":"Std.ShareCommonT.monadShareCommon","docLink":"./Std/ShareCommon.html#Std.ShareCommonT.monadShareCommon","doc":""},"Std.ShareCommonT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L123-L123","name":"Std.ShareCommonT","docLink":"./Std/ShareCommon.html#Std.ShareCommonT","doc":""},"Std.ShareCommonM.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L148-L149","name":"Std.ShareCommonM.run","docLink":"./Std/ShareCommon.html#Std.ShareCommonM.run","doc":""},"Std.ShareCommonM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L125-L125","name":"Std.ShareCommonM","docLink":"./Std/ShareCommon.html#Std.ShareCommonM","doc":""},"Std.ShareCommon.mkState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L92-L92","name":"Std.ShareCommon.mkState","docLink":"./Std/ShareCommon.html#Std.ShareCommon.mkState","doc":""},"Std.ShareCommon.mkPersistentState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L100-L100","name":"Std.ShareCommon.mkPersistentState","docLink":"./Std/ShareCommon.html#Std.ShareCommon.mkPersistentState","doc":""},"Std.ShareCommon.mkObjectSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L53-L54","name":"Std.ShareCommon.mkObjectSet","docLink":"./Std/ShareCommon.html#Std.ShareCommon.mkObjectSet","doc":""},"Std.ShareCommon.mkObjectPersistentSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L77-L78","name":"Std.ShareCommon.mkObjectPersistentSet","docLink":"./Std/ShareCommon.html#Std.ShareCommon.mkObjectPersistentSet","doc":""},"Std.ShareCommon.mkObjectPersistentMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L65-L66","name":"Std.ShareCommon.mkObjectPersistentMap","docLink":"./Std/ShareCommon.html#Std.ShareCommon.mkObjectPersistentMap","doc":""},"Std.ShareCommon.mkObjectMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L41-L42","name":"Std.ShareCommon.mkObjectMap","docLink":"./Std/ShareCommon.html#Std.ShareCommon.mkObjectMap","doc":""},"Std.ShareCommon.StatePointed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L89-L89","name":"Std.ShareCommon.StatePointed","docLink":"./Std/ShareCommon.html#Std.ShareCommon.StatePointed","doc":"Internally `State` is implemented as a pair `ObjectMap` and `ObjectSet` "},"Std.ShareCommon.State.shareCommon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L106-L107","name":"Std.ShareCommon.State.shareCommon","docLink":"./Std/ShareCommon.html#Std.ShareCommon.State.shareCommon","doc":""},"Std.ShareCommon.State.inhabited":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L94-L94","name":"Std.ShareCommon.State.inhabited","docLink":"./Std/ShareCommon.html#Std.ShareCommon.State.inhabited","doc":""},"Std.ShareCommon.State.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L93-L93","name":"Std.ShareCommon.State.empty","docLink":"./Std/ShareCommon.html#Std.ShareCommon.State.empty","doc":""},"Std.ShareCommon.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L90-L90","name":"Std.ShareCommon.State","docLink":"./Std/ShareCommon.html#Std.ShareCommon.State","doc":""},"Std.ShareCommon.PersistentStatePointed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L97-L97","name":"Std.ShareCommon.PersistentStatePointed","docLink":"./Std/ShareCommon.html#Std.ShareCommon.PersistentStatePointed","doc":"Internally `PersistentState` is implemented as a pair `ObjectPersistentMap` and `ObjectPersistentSet` "},"Std.ShareCommon.PersistentState.shareCommon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L110-L111","name":"Std.ShareCommon.PersistentState.shareCommon","docLink":"./Std/ShareCommon.html#Std.ShareCommon.PersistentState.shareCommon","doc":""},"Std.ShareCommon.PersistentState.inhabited":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L102-L102","name":"Std.ShareCommon.PersistentState.inhabited","docLink":"./Std/ShareCommon.html#Std.ShareCommon.PersistentState.inhabited","doc":""},"Std.ShareCommon.PersistentState.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L101-L101","name":"Std.ShareCommon.PersistentState.empty","docLink":"./Std/ShareCommon.html#Std.ShareCommon.PersistentState.empty","doc":""},"Std.ShareCommon.PersistentState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L98-L98","name":"Std.ShareCommon.PersistentState","docLink":"./Std/ShareCommon.html#Std.ShareCommon.PersistentState","doc":""},"Std.ShareCommon.PState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L103-L103","name":"Std.ShareCommon.PState","docLink":"./Std/ShareCommon.html#Std.ShareCommon.PState","doc":""},"Std.ShareCommon.ObjectSet.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L61-L62","name":"Std.ShareCommon.ObjectSet.insert","docLink":"./Std/ShareCommon.html#Std.ShareCommon.ObjectSet.insert","doc":""},"Std.ShareCommon.ObjectSet.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L57-L58","name":"Std.ShareCommon.ObjectSet.find?","docLink":"./Std/ShareCommon.html#Std.ShareCommon.ObjectSet.find?","doc":""},"Std.ShareCommon.ObjectSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L36-L36","name":"Std.ShareCommon.ObjectSet","docLink":"./Std/ShareCommon.html#Std.ShareCommon.ObjectSet","doc":""},"Std.ShareCommon.ObjectPersistentSet.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L85-L86","name":"Std.ShareCommon.ObjectPersistentSet.insert","docLink":"./Std/ShareCommon.html#Std.ShareCommon.ObjectPersistentSet.insert","doc":""},"Std.ShareCommon.ObjectPersistentSet.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L81-L82","name":"Std.ShareCommon.ObjectPersistentSet.find?","docLink":"./Std/ShareCommon.html#Std.ShareCommon.ObjectPersistentSet.find?","doc":""},"Std.ShareCommon.ObjectPersistentSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L38-L38","name":"Std.ShareCommon.ObjectPersistentSet","docLink":"./Std/ShareCommon.html#Std.ShareCommon.ObjectPersistentSet","doc":""},"Std.ShareCommon.ObjectPersistentMap.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L73-L74","name":"Std.ShareCommon.ObjectPersistentMap.insert","docLink":"./Std/ShareCommon.html#Std.ShareCommon.ObjectPersistentMap.insert","doc":""},"Std.ShareCommon.ObjectPersistentMap.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L69-L70","name":"Std.ShareCommon.ObjectPersistentMap.find?","docLink":"./Std/ShareCommon.html#Std.ShareCommon.ObjectPersistentMap.find?","doc":""},"Std.ShareCommon.ObjectPersistentMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L37-L37","name":"Std.ShareCommon.ObjectPersistentMap","docLink":"./Std/ShareCommon.html#Std.ShareCommon.ObjectPersistentMap","doc":""},"Std.ShareCommon.ObjectMap.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L49-L50","name":"Std.ShareCommon.ObjectMap.insert","docLink":"./Std/ShareCommon.html#Std.ShareCommon.ObjectMap.insert","doc":""},"Std.ShareCommon.ObjectMap.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L45-L46","name":"Std.ShareCommon.ObjectMap.find?","docLink":"./Std/ShareCommon.html#Std.ShareCommon.ObjectMap.find?","doc":""},"Std.ShareCommon.ObjectMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L35-L35","name":"Std.ShareCommon.ObjectMap","docLink":"./Std/ShareCommon.html#Std.ShareCommon.ObjectMap","doc":""},"Std.ShareCommon.Object.ptrHash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L26-L27","name":"Std.ShareCommon.Object.ptrHash","docLink":"./Std/ShareCommon.html#Std.ShareCommon.Object.ptrHash","doc":""},"Std.ShareCommon.Object.ptrEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L23-L24","name":"Std.ShareCommon.Object.ptrEq","docLink":"./Std/ShareCommon.html#Std.ShareCommon.Object.ptrEq","doc":""},"Std.ShareCommon.Object.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L33-L33","name":"Std.ShareCommon.Object.hash","docLink":"./Std/ShareCommon.html#Std.ShareCommon.Object.hash","doc":""},"Std.ShareCommon.Object.eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L30-L30","name":"Std.ShareCommon.Object.eq","docLink":"./Std/ShareCommon.html#Std.ShareCommon.Object.eq","doc":""},"Std.ShareCommon.Object":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L21-L21","name":"Std.ShareCommon.Object","docLink":"./Std/ShareCommon.html#Std.ShareCommon.Object","doc":""},"Std.Rbcolor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L9-L10","name":"Std.Rbcolor","docLink":"./Std/Data/RBMap.html#Std.Rbcolor","doc":""},"Std.Range.«term[_:_]»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L66-L66","name":"Std.Range.«term[_:_]»","docLink":"./Init/Data/Range.html#Std.Range.«term[_:_]»","doc":""},"Std.Range.«term[_:_:_]»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L68-L68","name":"Std.Range.«term[_:_:_]»","docLink":"./Init/Data/Range.html#Std.Range.«term[_:_:_]»","doc":""},"Std.Range.«term[:_]»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L65-L65","name":"Std.Range.«term[:_]»","docLink":"./Init/Data/Range.html#Std.Range.«term[:_]»","doc":""},"Std.Range.«term[:_:_]»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L67-L67","name":"Std.Range.«term[:_:_]»","docLink":"./Init/Data/Range.html#Std.Range.«term[:_:_]»","doc":""},"Std.Range.instForMRangeNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L62-L63","name":"Std.Range.instForMRangeNat","docLink":"./Init/Data/Range.html#Std.Range.instForMRangeNat","doc":""},"Std.Range.instForInRangeNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L35-L36","name":"Std.Range.instForInRangeNat","docLink":"./Init/Data/Range.html#Std.Range.instForInRangeNat","doc":""},"Std.Range.instForIn'RangeNatInferInstanceMembershipInstMembershipNatRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L50-L51","name":"Std.Range.instForIn'RangeNatInferInstanceMembershipInstMembershipNatRange","docLink":"./Init/Data/Range.html#Std.Range.instForIn'RangeNatInferInstanceMembershipInstMembershipNatRange","doc":""},"Std.Range.forM.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L54-L59","name":"Std.Range.forM.loop","docLink":"./Init/Data/Range.html#Std.Range.forM.loop","doc":""},"Std.Range.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L53-L60","name":"Std.Range.forM","docLink":"./Init/Data/Range.html#Std.Range.forM","doc":""},"Std.Range.forIn.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L25-L32","name":"Std.Range.forIn.loop","docLink":"./Init/Data/Range.html#Std.Range.forIn.loop","doc":""},"Std.Range.forIn'.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L39-L47","name":"Std.Range.forIn'.loop","docLink":"./Init/Data/Range.html#Std.Range.forIn'.loop","doc":""},"Std.Range.forIn'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L38-L48","name":"Std.Range.forIn'","docLink":"./Init/Data/Range.html#Std.Range.forIn'","doc":""},"Std.Range.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L23-L33","name":"Std.Range.forIn","docLink":"./Init/Data/Range.html#Std.Range.forIn","doc":""},"Std.Range":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L12-L15","name":"Std.Range","docLink":"./Init/Data/Range.html#Std.Range","doc":""},"Std.RBTree.union":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L104-L108","name":"Std.RBTree.union","docLink":"./Std/Data/RBTree.html#Std.RBTree.union","doc":""},"Std.RBTree.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L52-L53","name":"Std.RBTree.toList","docLink":"./Std/Data/RBTree.html#Std.RBTree.toList","doc":""},"Std.RBTree.toArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L55-L56","name":"Std.RBTree.toArray","docLink":"./Std/Data/RBTree.html#Std.RBTree.toArray","doc":""},"Std.RBTree.subset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L98-L99","name":"Std.RBTree.subset","docLink":"./Std/Data/RBTree.html#Std.RBTree.subset","doc":""},"Std.RBTree.seteq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L101-L102","name":"Std.RBTree.seteq","docLink":"./Std/Data/RBTree.html#Std.RBTree.seteq","doc":""},"Std.RBTree.revFold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L34-L35","name":"Std.RBTree.revFold","docLink":"./Std/Data/RBTree.html#Std.RBTree.revFold","doc":""},"Std.RBTree.ofList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L77-L79","name":"Std.RBTree.ofList","docLink":"./Std/Data/RBTree.html#Std.RBTree.ofList","doc":""},"Std.RBTree.min":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L58-L61","name":"Std.RBTree.min","docLink":"./Std/Data/RBTree.html#Std.RBTree.min","doc":""},"Std.RBTree.max":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L63-L66","name":"Std.RBTree.max","docLink":"./Std/Data/RBTree.html#Std.RBTree.max","doc":""},"Std.RBTree.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L49-L50","name":"Std.RBTree.isEmpty","docLink":"./Std/Data/RBTree.html#Std.RBTree.isEmpty","doc":""},"Std.RBTree.instReprRBTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L68-L69","name":"Std.RBTree.instReprRBTree","docLink":"./Std/Data/RBTree.html#Std.RBTree.instReprRBTree","doc":""},"Std.RBTree.instForInRBTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L46-L47","name":"Std.RBTree.instForInRBTree","docLink":"./Std/Data/RBTree.html#Std.RBTree.instForInRBTree","doc":""},"Std.RBTree.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L71-L72","name":"Std.RBTree.insert","docLink":"./Std/Data/RBTree.html#Std.RBTree.insert","doc":""},"Std.RBTree.fromList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L89-L90","name":"Std.RBTree.fromList","docLink":"./Std/Data/RBTree.html#Std.RBTree.fromList","doc":""},"Std.RBTree.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L40-L41","name":"Std.RBTree.forM","docLink":"./Std/Data/RBTree.html#Std.RBTree.forM","doc":""},"Std.RBTree.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L43-L44","name":"Std.RBTree.forIn","docLink":"./Std/Data/RBTree.html#Std.RBTree.forIn","doc":""},"Std.RBTree.foldM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L37-L38","name":"Std.RBTree.foldM","docLink":"./Std/Data/RBTree.html#Std.RBTree.foldM","doc":""},"Std.RBTree.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L31-L32","name":"Std.RBTree.fold","docLink":"./Std/Data/RBTree.html#Std.RBTree.fold","doc":""},"Std.RBTree.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L81-L84","name":"Std.RBTree.find?","docLink":"./Std/Data/RBTree.html#Std.RBTree.find?","doc":""},"Std.RBTree.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L74-L75","name":"Std.RBTree.erase","docLink":"./Std/Data/RBTree.html#Std.RBTree.erase","doc":""},"Std.RBTree.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L25-L26","name":"Std.RBTree.empty","docLink":"./Std/Data/RBTree.html#Std.RBTree.empty","doc":""},"Std.RBTree.diff":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L110-L111","name":"Std.RBTree.diff","docLink":"./Std/Data/RBTree.html#Std.RBTree.diff","doc":""},"Std.RBTree.depth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L28-L29","name":"Std.RBTree.depth","docLink":"./Std/Data/RBTree.html#Std.RBTree.depth","doc":""},"Std.RBTree.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L86-L87","name":"Std.RBTree.contains","docLink":"./Std/Data/RBTree.html#Std.RBTree.contains","doc":""},"Std.RBTree.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L95-L96","name":"Std.RBTree.any","docLink":"./Std/Data/RBTree.html#Std.RBTree.any","doc":""},"Std.RBTree.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L92-L93","name":"Std.RBTree.all","docLink":"./Std/Data/RBTree.html#Std.RBTree.all","doc":""},"Std.RBTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBTree.lean#L10-L11","name":"Std.RBTree","docLink":"./Std/Data/RBTree.html#Std.RBTree","doc":""},"Std.RBNode.singleton":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L76-L77","name":"Std.RBNode.singleton","docLink":"./Std/Data/RBMap.html#Std.RBNode.singleton","doc":""},"Std.RBNode.setRed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L139-L141","name":"Std.RBNode.setRed","docLink":"./Std/Data/RBMap.html#Std.RBNode.setRed","doc":""},"Std.RBNode.setBlack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L120-L122","name":"Std.RBNode.setBlack","docLink":"./Std/Data/RBMap.html#Std.RBNode.setBlack","doc":""},"Std.RBNode.revFold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L64-L66","name":"Std.RBNode.revFold","docLink":"./Std/Data/RBMap.html#Std.RBNode.revFold","doc":""},"Std.RBNode.min":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L25-L28","name":"Std.RBNode.min","docLink":"./Std/Data/RBMap.html#Std.RBNode.min","doc":""},"Std.RBNode.max":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L30-L33","name":"Std.RBNode.max","docLink":"./Std/Data/RBMap.html#Std.RBNode.max","doc":""},"Std.RBNode.lowerBound":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L213-L219","name":"Std.RBNode.lowerBound","docLink":"./Std/Data/RBMap.html#Std.RBNode.lowerBound","doc":""},"Std.RBNode.isRed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L91-L93","name":"Std.RBNode.isRed","docLink":"./Std/Data/RBMap.html#Std.RBNode.isRed","doc":""},"Std.RBNode.isBlack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L95-L97","name":"Std.RBNode.isBlack","docLink":"./Std/Data/RBMap.html#Std.RBNode.isBlack","doc":""},"Std.RBNode.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L124-L126","name":"Std.RBNode.insert","docLink":"./Std/Data/RBMap.html#Std.RBNode.insert","doc":""},"Std.RBNode.ins":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L103-L118","name":"Std.RBNode.ins","docLink":"./Std/Data/RBMap.html#Std.RBNode.ins","doc":""},"Std.RBNode.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L39-L41","name":"Std.RBNode.forM","docLink":"./Std/Data/RBMap.html#Std.RBNode.forM","doc":""},"Std.RBNode.forIn.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L51-L59","name":"Std.RBNode.forIn.visit","docLink":"./Std/Data/RBMap.html#Std.RBNode.forIn.visit","doc":""},"Std.RBNode.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L50-L62","name":"Std.RBNode.forIn","docLink":"./Std/Data/RBMap.html#Std.RBNode.forIn","doc":""},"Std.RBNode.foldM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L43-L48","name":"Std.RBNode.foldM","docLink":"./Std/Data/RBMap.html#Std.RBNode.foldM","doc":""},"Std.RBNode.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L35-L37","name":"Std.RBNode.fold","docLink":"./Std/Data/RBMap.html#Std.RBNode.fold","doc":""},"Std.RBNode.findCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L197-L203","name":"Std.RBNode.findCore","docLink":"./Std/Data/RBMap.html#Std.RBNode.findCore","doc":""},"Std.RBNode.find":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L205-L211","name":"Std.RBNode.find","docLink":"./Std/Data/RBMap.html#Std.RBNode.find","doc":""},"Std.RBNode.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L188-L190","name":"Std.RBNode.erase","docLink":"./Std/Data/RBMap.html#Std.RBNode.erase","doc":""},"Std.RBNode.depth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L21-L23","name":"Std.RBNode.depth","docLink":"./Std/Data/RBMap.html#Std.RBNode.depth","doc":""},"Std.RBNode.del":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L176-L186","name":"Std.RBNode.del","docLink":"./Std/Data/RBMap.html#Std.RBNode.del","doc":""},"Std.RBNode.balance₃":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L130-L137","name":"Std.RBNode.balance₃","docLink":"./Std/Data/RBMap.html#Std.RBNode.balance₃","doc":""},"Std.RBNode.balance2":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L85-L89","name":"Std.RBNode.balance2","docLink":"./Std/Data/RBMap.html#Std.RBNode.balance2","doc":""},"Std.RBNode.balance1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L79-L83","name":"Std.RBNode.balance1","docLink":"./Std/Data/RBMap.html#Std.RBNode.balance1","doc":""},"Std.RBNode.balRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L149-L155","name":"Std.RBNode.balRight","docLink":"./Std/Data/RBMap.html#Std.RBNode.balRight","doc":""},"Std.RBNode.balLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L143-L147","name":"Std.RBNode.balLeft","docLink":"./Std/Data/RBMap.html#Std.RBNode.balLeft","doc":""},"Std.RBNode.appendTrees":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L158-L170","name":"Std.RBNode.appendTrees","docLink":"./Std/Data/RBMap.html#Std.RBNode.appendTrees","doc":""},"Std.RBNode.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L72-L74","name":"Std.RBNode.any","docLink":"./Std/Data/RBMap.html#Std.RBNode.any","doc":""},"Std.RBNode.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L68-L70","name":"Std.RBNode.all","docLink":"./Std/Data/RBMap.html#Std.RBNode.all","doc":""},"Std.RBNode.WellFormed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L223-L226","name":"Std.RBNode.WellFormed","docLink":"./Std/Data/RBMap.html#Std.RBNode.WellFormed","doc":""},"Std.RBNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L12-L14","name":"Std.RBNode","docLink":"./Std/Data/RBMap.html#Std.RBNode","doc":""},"Std.RBMap.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L276-L277","name":"Std.RBMap.toList","docLink":"./Std/Data/RBMap.html#Std.RBMap.toList","doc":""},"Std.RBMap.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L330-L331","name":"Std.RBMap.size","docLink":"./Std/Data/RBMap.html#Std.RBMap.size","doc":""},"Std.RBMap.revFold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L257-L258","name":"Std.RBMap.revFold","docLink":"./Std/Data/RBMap.html#Std.RBMap.revFold","doc":""},"Std.RBMap.ofList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L300-L302","name":"Std.RBMap.ofList","docLink":"./Std/Data/RBMap.html#Std.RBMap.ofList","doc":""},"Std.RBMap.min!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L336-L339","name":"Std.RBMap.min!","docLink":"./Std/Data/RBMap.html#Std.RBMap.min!","doc":""},"Std.RBMap.min":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L279-L283","name":"Std.RBMap.min","docLink":"./Std/Data/RBMap.html#Std.RBMap.min","doc":""},"Std.RBMap.maxDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L333-L334","name":"Std.RBMap.maxDepth","docLink":"./Std/Data/RBMap.html#Std.RBMap.maxDepth","doc":""},"Std.RBMap.max!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L341-L344","name":"Std.RBMap.max!","docLink":"./Std/Data/RBMap.html#Std.RBMap.max!","doc":""},"Std.RBMap.max":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L285-L289","name":"Std.RBMap.max","docLink":"./Std/Data/RBMap.html#Std.RBMap.max","doc":""},"Std.RBMap.lowerBound":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L315-L316","name":"Std.RBMap.lowerBound","docLink":"./Std/Data/RBMap.html#Std.RBMap.lowerBound","doc":"(lowerBound k) retrieves the kv pair of the largest key smaller than or equal to `k`,\nif it exists. "},"Std.RBMap.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L272-L274","name":"Std.RBMap.isEmpty","docLink":"./Std/Data/RBMap.html#Std.RBMap.isEmpty","doc":""},"Std.RBMap.instReprRBMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L291-L292","name":"Std.RBMap.instReprRBMap","docLink":"./Std/Data/RBMap.html#Std.RBMap.instReprRBMap","doc":""},"Std.RBMap.instForInRBMapProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L269-L270","name":"Std.RBMap.instForInRBMapProd","docLink":"./Std/Data/RBMap.html#Std.RBMap.instForInRBMapProd","doc":""},"Std.RBMap.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L294-L295","name":"Std.RBMap.insert","docLink":"./Std/Data/RBMap.html#Std.RBMap.insert","doc":""},"Std.RBMap.fromList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L321-L322","name":"Std.RBMap.fromList","docLink":"./Std/Data/RBMap.html#Std.RBMap.fromList","doc":""},"Std.RBMap.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L263-L264","name":"Std.RBMap.forM","docLink":"./Std/Data/RBMap.html#Std.RBMap.forM","doc":""},"Std.RBMap.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L266-L267","name":"Std.RBMap.forIn","docLink":"./Std/Data/RBMap.html#Std.RBMap.forIn","doc":""},"Std.RBMap.foldM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L260-L261","name":"Std.RBMap.foldM","docLink":"./Std/Data/RBMap.html#Std.RBMap.foldM","doc":""},"Std.RBMap.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L254-L255","name":"Std.RBMap.fold","docLink":"./Std/Data/RBMap.html#Std.RBMap.fold","doc":""},"Std.RBMap.findD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L310-L311","name":"Std.RBMap.findD","docLink":"./Std/Data/RBMap.html#Std.RBMap.findD","doc":""},"Std.RBMap.findCore?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L304-L305","name":"Std.RBMap.findCore?","docLink":"./Std/Data/RBMap.html#Std.RBMap.findCore?","doc":""},"Std.RBMap.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L307-L308","name":"Std.RBMap.find?","docLink":"./Std/Data/RBMap.html#Std.RBMap.find?","doc":""},"Std.RBMap.find!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L346-L349","name":"Std.RBMap.find!","docLink":"./Std/Data/RBMap.html#Std.RBMap.find!","doc":""},"Std.RBMap.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L297-L298","name":"Std.RBMap.erase","docLink":"./Std/Data/RBMap.html#Std.RBMap.erase","doc":""},"Std.RBMap.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L240-L241","name":"Std.RBMap.empty","docLink":"./Std/Data/RBMap.html#Std.RBMap.empty","doc":""},"Std.RBMap.depth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L251-L252","name":"Std.RBMap.depth","docLink":"./Std/Data/RBMap.html#Std.RBMap.depth","doc":""},"Std.RBMap.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L318-L319","name":"Std.RBMap.contains","docLink":"./Std/Data/RBMap.html#Std.RBMap.contains","doc":""},"Std.RBMap.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L327-L328","name":"Std.RBMap.any","docLink":"./Std/Data/RBMap.html#Std.RBMap.any","doc":""},"Std.RBMap.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L324-L325","name":"Std.RBMap.all","docLink":"./Std/Data/RBMap.html#Std.RBMap.all","doc":""},"Std.RBMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/RBMap.lean#L234-L235","name":"Std.RBMap","docLink":"./Std/Data/RBMap.html#Std.RBMap","doc":""},"Std.PersistentHashSet.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L46-L47","name":"Std.PersistentHashSet.size","docLink":"./Std/Data/PersistentHashSet.html#Std.PersistentHashSet.size","doc":""},"Std.PersistentHashSet.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L29-L30","name":"Std.PersistentHashSet.isEmpty","docLink":"./Std/Data/PersistentHashSet.html#Std.PersistentHashSet.isEmpty","doc":""},"Std.PersistentHashSet.instInhabitedPersistentHashSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L21-L22","name":"Std.PersistentHashSet.instInhabitedPersistentHashSet","docLink":"./Std/Data/PersistentHashSet.html#Std.PersistentHashSet.instInhabitedPersistentHashSet","doc":""},"Std.PersistentHashSet.instEmptyCollectionPersistentHashSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L24-L25","name":"Std.PersistentHashSet.instEmptyCollectionPersistentHashSet","docLink":"./Std/Data/PersistentHashSet.html#Std.PersistentHashSet.instEmptyCollectionPersistentHashSet","doc":""},"Std.PersistentHashSet.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L32-L33","name":"Std.PersistentHashSet.insert","docLink":"./Std/Data/PersistentHashSet.html#Std.PersistentHashSet.insert","doc":""},"Std.PersistentHashSet.foldM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L49-L50","name":"Std.PersistentHashSet.foldM","docLink":"./Std/Data/PersistentHashSet.html#Std.PersistentHashSet.foldM","doc":""},"Std.PersistentHashSet.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L52-L53","name":"Std.PersistentHashSet.fold","docLink":"./Std/Data/PersistentHashSet.html#Std.PersistentHashSet.fold","doc":""},"Std.PersistentHashSet.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L38-L41","name":"Std.PersistentHashSet.find?","docLink":"./Std/Data/PersistentHashSet.html#Std.PersistentHashSet.find?","doc":""},"Std.PersistentHashSet.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L35-L36","name":"Std.PersistentHashSet.erase","docLink":"./Std/Data/PersistentHashSet.html#Std.PersistentHashSet.erase","doc":""},"Std.PersistentHashSet.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L18-L19","name":"Std.PersistentHashSet.empty","docLink":"./Std/Data/PersistentHashSet.html#Std.PersistentHashSet.empty","doc":""},"Std.PersistentHashSet.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L43-L44","name":"Std.PersistentHashSet.contains","docLink":"./Std/Data/PersistentHashSet.html#Std.PersistentHashSet.contains","doc":""},"Std.PersistentHashSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L11-L12","name":"Std.PersistentHashSet","docLink":"./Std/Data/PersistentHashSet.html#Std.PersistentHashSet","doc":""},"Std.PersistentHashMap.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L317-L318","name":"Std.PersistentHashMap.toList","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.toList","doc":""},"Std.PersistentHashMap.stats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L344-L345","name":"Std.PersistentHashMap.stats","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.stats","doc":""},"Std.PersistentHashMap.shift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L24-L24","name":"Std.PersistentHashMap.shift","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.shift","doc":""},"Std.PersistentHashMap.mul2Shift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L52-L52","name":"Std.PersistentHashMap.mul2Shift","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.mul2Shift","doc":""},"Std.PersistentHashMap.mod2Shift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L54-L54","name":"Std.PersistentHashMap.mod2Shift","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.mod2Shift","doc":""},"Std.PersistentHashMap.mkEmptyEntriesArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L29-L30","name":"Std.PersistentHashMap.mkEmptyEntriesArray","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.mkEmptyEntriesArray","doc":""},"Std.PersistentHashMap.mkEmptyEntries":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L49-L50","name":"Std.PersistentHashMap.mkEmptyEntries","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.mkEmptyEntries","doc":""},"Std.PersistentHashMap.mkCollisionNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L93-L98","name":"Std.PersistentHashMap.mkCollisionNode","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.mkCollisionNode","doc":""},"Std.PersistentHashMap.maxDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L26-L26","name":"Std.PersistentHashMap.maxDepth","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.maxDepth","doc":""},"Std.PersistentHashMap.maxCollisions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L27-L27","name":"Std.PersistentHashMap.maxCollisions","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.maxCollisions","doc":""},"Std.PersistentHashMap.mapMAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L298-L308","name":"Std.PersistentHashMap.mapMAux","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.mapMAux","doc":""},"Std.PersistentHashMap.mapM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L310-L312","name":"Std.PersistentHashMap.mapM","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.mapM","doc":""},"Std.PersistentHashMap.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L314-L315","name":"Std.PersistentHashMap.map","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.map","doc":""},"Std.PersistentHashMap.isUnaryNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L212-L220","name":"Std.PersistentHashMap.isUnaryNode","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.isUnaryNode","doc":""},"Std.PersistentHashMap.isUnaryEntries":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L201-L210","name":"Std.PersistentHashMap.isUnaryEntries","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.isUnaryEntries","doc":""},"Std.PersistentHashMap.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L44-L45","name":"Std.PersistentHashMap.isEmpty","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.isEmpty","doc":""},"Std.PersistentHashMap.instToStringStats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L350-L350","name":"Std.PersistentHashMap.instToStringStats","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.instToStringStats","doc":""},"Std.PersistentHashMap.instInhabitedPersistentHashMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L47-L47","name":"Std.PersistentHashMap.instInhabitedPersistentHashMap","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.instInhabitedPersistentHashMap","doc":""},"Std.PersistentHashMap.instInhabitedNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L22-L22","name":"Std.PersistentHashMap.instInhabitedNode","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.instInhabitedNode","doc":""},"Std.PersistentHashMap.instInhabitedEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L16-L16","name":"Std.PersistentHashMap.instInhabitedEntry","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.instInhabitedEntry","doc":""},"Std.PersistentHashMap.instGetElemPersistentHashMapOptionTrue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L151-L152","name":"Std.PersistentHashMap.instGetElemPersistentHashMapOptionTrue","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.instGetElemPersistentHashMapOptionTrue","doc":""},"Std.PersistentHashMap.instForInPersistentHashMapProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L293-L294","name":"Std.PersistentHashMap.instForInPersistentHashMapProd","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.instForInPersistentHashMapProd","doc":""},"Std.PersistentHashMap.insertAux.traverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L107-L116","name":"Std.PersistentHashMap.insertAux.traverse","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.insertAux.traverse","doc":""},"Std.PersistentHashMap.insertAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L100-L126","name":"Std.PersistentHashMap.insertAux","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.insertAux","doc":""},"Std.PersistentHashMap.insertAtCollisionNodeAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L73-L84","name":"Std.PersistentHashMap.insertAtCollisionNodeAux","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.insertAtCollisionNodeAux","doc":""},"Std.PersistentHashMap.insertAtCollisionNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L86-L87","name":"Std.PersistentHashMap.insertAtCollisionNode","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.insertAtCollisionNode","doc":""},"Std.PersistentHashMap.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L128-L129","name":"Std.PersistentHashMap.insert","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.insert","doc":""},"Std.PersistentHashMap.getCollisionNodeSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L89-L91","name":"Std.PersistentHashMap.getCollisionNodeSize","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.getCollisionNodeSize","doc":""},"Std.PersistentHashMap.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L277-L278","name":"Std.PersistentHashMap.forM","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.forM","doc":""},"Std.PersistentHashMap.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L283-L291","name":"Std.PersistentHashMap.forIn","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.forIn","doc":""},"Std.PersistentHashMap.foldlMAux.traverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L258-L265","name":"Std.PersistentHashMap.foldlMAux.traverse","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.foldlMAux.traverse","doc":""},"Std.PersistentHashMap.foldlMAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L256-L272","name":"Std.PersistentHashMap.foldlMAux","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.foldlMAux","doc":""},"Std.PersistentHashMap.foldlM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L274-L275","name":"Std.PersistentHashMap.foldlM","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.foldlM","doc":""},"Std.PersistentHashMap.foldl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L280-L281","name":"Std.PersistentHashMap.foldl","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.foldl","doc":""},"Std.PersistentHashMap.findEntryAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L170-L177","name":"Std.PersistentHashMap.findEntryAux","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.findEntryAux","doc":""},"Std.PersistentHashMap.findEntryAtAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L162-L168","name":"Std.PersistentHashMap.findEntryAtAux","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.findEntryAtAux","doc":""},"Std.PersistentHashMap.findEntry?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L179-L180","name":"Std.PersistentHashMap.findEntry?","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.findEntry?","doc":""},"Std.PersistentHashMap.findD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L154-L155","name":"Std.PersistentHashMap.findD","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.findD","doc":""},"Std.PersistentHashMap.findAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L139-L146","name":"Std.PersistentHashMap.findAux","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.findAux","doc":""},"Std.PersistentHashMap.findAtAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L131-L137","name":"Std.PersistentHashMap.findAtAux","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.findAtAux","doc":""},"Std.PersistentHashMap.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L148-L149","name":"Std.PersistentHashMap.find?","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.find?","doc":""},"Std.PersistentHashMap.find!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L157-L160","name":"Std.PersistentHashMap.find!","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.find!","doc":""},"Std.PersistentHashMap.eraseAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L222-L244","name":"Std.PersistentHashMap.eraseAux","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.eraseAux","doc":""},"Std.PersistentHashMap.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L246-L250","name":"Std.PersistentHashMap.erase","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.erase","doc":""},"Std.PersistentHashMap.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L42-L42","name":"Std.PersistentHashMap.empty","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.empty","doc":""},"Std.PersistentHashMap.div2Shift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L53-L53","name":"Std.PersistentHashMap.div2Shift","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.div2Shift","doc":""},"Std.PersistentHashMap.containsAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L189-L196","name":"Std.PersistentHashMap.containsAux","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.containsAux","doc":""},"Std.PersistentHashMap.containsAtAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L182-L187","name":"Std.PersistentHashMap.containsAtAux","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.containsAtAux","doc":""},"Std.PersistentHashMap.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L198-L199","name":"Std.PersistentHashMap.contains","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.contains","doc":""},"Std.PersistentHashMap.collectStats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L326-L342","name":"Std.PersistentHashMap.collectStats","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.collectStats","doc":""},"Std.PersistentHashMap.branching":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L25-L25","name":"Std.PersistentHashMap.branching","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.branching","doc":""},"Std.PersistentHashMap.Stats.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L347-L348","name":"Std.PersistentHashMap.Stats.toString","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.Stats.toString","doc":""},"Std.PersistentHashMap.Stats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L320-L324","name":"Std.PersistentHashMap.Stats","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.Stats","doc":""},"Std.PersistentHashMap.Node":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L18-L20","name":"Std.PersistentHashMap.Node","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.Node","doc":""},"Std.PersistentHashMap.IsEntriesNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L61-L62","name":"Std.PersistentHashMap.IsEntriesNode","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.IsEntriesNode","doc":""},"Std.PersistentHashMap.IsCollisionNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L56-L57","name":"Std.PersistentHashMap.IsCollisionNode","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.IsCollisionNode","doc":""},"Std.PersistentHashMap.Entry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L11-L14","name":"Std.PersistentHashMap.Entry","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.Entry","doc":""},"Std.PersistentHashMap.EntriesNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L64-L64","name":"Std.PersistentHashMap.EntriesNode","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.EntriesNode","doc":""},"Std.PersistentHashMap.CollisionNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L59-L59","name":"Std.PersistentHashMap.CollisionNode","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap.CollisionNode","doc":""},"Std.PersistentHashMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L34-L36","name":"Std.PersistentHashMap","docLink":"./Std/Data/PersistentHashMap.html#Std.PersistentHashMap","doc":""},"Std.PersistentArrayNode.isNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L17-L19","name":"Std.PersistentArrayNode.isNode","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArrayNode.isNode","doc":""},"Std.PersistentArrayNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L10-L13","name":"Std.PersistentArrayNode","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArrayNode","doc":""},"Std.PersistentArray.tooBig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L131-L131","name":"Std.PersistentArray.tooBig","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.tooBig","doc":""},"Std.PersistentArray.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L302-L303","name":"Std.PersistentArray.toList","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.toList","doc":""},"Std.PersistentArray.toArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L285-L286","name":"Std.PersistentArray.toArray","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.toArray","doc":""},"Std.PersistentArray.stats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L357-L358","name":"Std.PersistentArray.stats","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.stats","doc":""},"Std.PersistentArray.setAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L70-L76","name":"Std.PersistentArray.setAux","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.setAux","doc":""},"Std.PersistentArray.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L78-L82","name":"Std.PersistentArray.set","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.set","doc":""},"Std.PersistentArray.push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L133-L138","name":"Std.PersistentArray.push","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.push","doc":""},"Std.PersistentArray.popLeaf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L143-L159","name":"Std.PersistentArray.popLeaf","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.popLeaf","doc":""},"Std.PersistentArray.pop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L161-L182","name":"Std.PersistentArray.pop","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.pop","doc":""},"Std.PersistentArray.mul2Shift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L52-L52","name":"Std.PersistentArray.mul2Shift","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.mul2Shift","doc":""},"Std.PersistentArray.modifyAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L84-L90","name":"Std.PersistentArray.modifyAux","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.modifyAux","doc":""},"Std.PersistentArray.modify":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L92-L96","name":"Std.PersistentArray.modify","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.modify","doc":""},"Std.PersistentArray.mod2Shift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L54-L54","name":"Std.PersistentArray.mod2Shift","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.mod2Shift","doc":""},"Std.PersistentArray.mkNewTail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L118-L129","name":"Std.PersistentArray.mkNewTail","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.mkNewTail","doc":""},"Std.PersistentArray.mkNewPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L98-L102","name":"Std.PersistentArray.mkNewPath","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.mkNewPath","doc":""},"Std.PersistentArray.mkEmptyArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L50-L50","name":"Std.PersistentArray.mkEmptyArray","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.mkEmptyArray","doc":""},"Std.PersistentArray.mapMAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L330-L332","name":"Std.PersistentArray.mapMAux","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.mapMAux","doc":""},"Std.PersistentArray.mapM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L334-L337","name":"Std.PersistentArray.mapM","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.mapM","doc":""},"Std.PersistentArray.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L341-L342","name":"Std.PersistentArray.map","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.map","doc":""},"Std.PersistentArray.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L48-L48","name":"Std.PersistentArray.isEmpty","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.isEmpty","doc":""},"Std.PersistentArray.instToStringStats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L363-L363","name":"Std.PersistentArray.instToStringStats","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.instToStringStats","doc":""},"Std.PersistentArray.instGetElemPersistentArrayNatLtInstLTNatSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L67-L68","name":"Std.PersistentArray.instGetElemPersistentArrayNatLtInstLTNatSize","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.instGetElemPersistentArrayNatLtInstLTNatSize","doc":""},"Std.PersistentArray.instForInPersistentArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L246-L247","name":"Std.PersistentArray.instForInPersistentArray","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.instForInPersistentArray","doc":""},"Std.PersistentArray.instAppendPersistentArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L294-L294","name":"Std.PersistentArray.instAppendPersistentArray","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.instAppendPersistentArray","doc":""},"Std.PersistentArray.insertNewLeaf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L104-L116","name":"Std.PersistentArray.insertNewLeaf","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.insertNewLeaf","doc":""},"Std.PersistentArray.initShift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L23-L23","name":"Std.PersistentArray.initShift","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.initShift","doc":""},"Std.PersistentArray.getAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L56-L58","name":"Std.PersistentArray.getAux","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.getAux","doc":""},"Std.PersistentArray.get!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L60-L64","name":"Std.PersistentArray.get!","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.get!","doc":""},"Std.PersistentArray.forMAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L267-L269","name":"Std.PersistentArray.forMAux","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.forMAux","doc":""},"Std.PersistentArray.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L271-L272","name":"Std.PersistentArray.forM","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.forM","doc":""},"Std.PersistentArray.forInAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L218-L233","name":"Std.PersistentArray.forInAux","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.forInAux","doc":""},"Std.PersistentArray.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L235-L244","name":"Std.PersistentArray.forIn","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.forIn","doc":""},"Std.PersistentArray.foldrM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L213-L214","name":"Std.PersistentArray.foldrM","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.foldrM","doc":""},"Std.PersistentArray.foldr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L279-L280","name":"Std.PersistentArray.foldr","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.foldr","doc":""},"Std.PersistentArray.foldlM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L199-L207","name":"Std.PersistentArray.foldlM","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.foldlM","doc":""},"Std.PersistentArray.foldl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L276-L277","name":"Std.PersistentArray.foldl","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.foldl","doc":""},"Std.PersistentArray.findSomeRevMAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L258-L260","name":"Std.PersistentArray.findSomeRevMAux","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.findSomeRevMAux","doc":""},"Std.PersistentArray.findSomeRevM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L262-L265","name":"Std.PersistentArray.findSomeRevM?","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.findSomeRevM?","doc":""},"Std.PersistentArray.findSomeRev?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L299-L300","name":"Std.PersistentArray.findSomeRev?","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.findSomeRev?","doc":""},"Std.PersistentArray.findSomeMAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L249-L251","name":"Std.PersistentArray.findSomeMAux","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.findSomeMAux","doc":""},"Std.PersistentArray.findSomeM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L253-L256","name":"Std.PersistentArray.findSomeM?","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.findSomeM?","doc":""},"Std.PersistentArray.findSome?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L296-L297","name":"Std.PersistentArray.findSome?","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.findSome?","doc":""},"Std.PersistentArray.filter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L282-L283","name":"Std.PersistentArray.filter","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.filter","doc":""},"Std.PersistentArray.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L46-L46","name":"Std.PersistentArray.empty","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.empty","doc":""},"Std.PersistentArray.div2Shift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L53-L53","name":"Std.PersistentArray.div2Shift","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.div2Shift","doc":""},"Std.PersistentArray.collectStats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L349-L355","name":"Std.PersistentArray.collectStats","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.collectStats","doc":""},"Std.PersistentArray.branching":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L24-L24","name":"Std.PersistentArray.branching","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.branching","doc":""},"Std.PersistentArray.append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L288-L292","name":"Std.PersistentArray.append","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.append","doc":""},"Std.PersistentArray.anyMAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L307-L309","name":"Std.PersistentArray.anyMAux","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.anyMAux","doc":""},"Std.PersistentArray.anyM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L311-L312","name":"Std.PersistentArray.anyM","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.anyM","doc":""},"Std.PersistentArray.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L320-L321","name":"Std.PersistentArray.any","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.any","doc":""},"Std.PersistentArray.allM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L314-L316","name":"Std.PersistentArray.allM","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.allM","doc":""},"Std.PersistentArray.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L323-L324","name":"Std.PersistentArray.all","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.all","doc":""},"Std.PersistentArray.Stats.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L360-L361","name":"Std.PersistentArray.Stats.toString","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.Stats.toString","doc":""},"Std.PersistentArray.Stats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L344-L347","name":"Std.PersistentArray.Stats","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray.Stats","doc":""},"Std.PersistentArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L26-L36","name":"Std.PersistentArray","docLink":"./Std/Data/PersistentArray.html#Std.PersistentArray","doc":""},"Std.PShareCommonT.withShareCommon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L131-L132","name":"Std.PShareCommonT.withShareCommon","docLink":"./Std/ShareCommon.html#Std.PShareCommonT.withShareCommon","doc":""},"Std.PShareCommonT.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L145-L146","name":"Std.PShareCommonT.run","docLink":"./Std/ShareCommon.html#Std.PShareCommonT.run","doc":""},"Std.PShareCommonT.monadShareCommon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L138-L140","name":"Std.PShareCommonT.monadShareCommon","docLink":"./Std/ShareCommon.html#Std.PShareCommonT.monadShareCommon","doc":""},"Std.PShareCommonT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L124-L124","name":"Std.PShareCommonT","docLink":"./Std/ShareCommon.html#Std.PShareCommonT","doc":""},"Std.PShareCommonM.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L151-L152","name":"Std.PShareCommonM.run","docLink":"./Std/ShareCommon.html#Std.PShareCommonM.run","doc":""},"Std.PShareCommonM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L126-L126","name":"Std.PShareCommonM","docLink":"./Std/ShareCommon.html#Std.PShareCommonM","doc":""},"Std.PHashSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashSet.lean#L14-L14","name":"Std.PHashSet","docLink":"./Std/Data/PersistentHashSet.html#Std.PHashSet","doc":""},"Std.PHashMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentHashMap.lean#L38-L38","name":"Std.PHashMap","docLink":"./Std/Data/PersistentHashMap.html#Std.PHashMap","doc":""},"Std.PArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L38-L38","name":"Std.PArray","docLink":"./Std/Data/PersistentArray.html#Std.PArray","doc":""},"Std.MonadShareCommon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/ShareCommon.lean#L115-L116","name":"Std.MonadShareCommon","docLink":"./Std/ShareCommon.html#Std.MonadShareCommon","doc":""},"Std.HashSetImp.reinsertAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L33-L35","name":"Std.HashSetImp.reinsertAux","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.reinsertAux","doc":""},"Std.HashSetImp.moveEntries":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L61-L71","name":"Std.HashSetImp.moveEntries","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.moveEntries","doc":""},"Std.HashSetImp.mkIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L30-L31","name":"Std.HashSetImp.mkIdx","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.mkIdx","doc":""},"Std.HashSetImp.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L80-L92","name":"Std.HashSetImp.insert","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.insert","doc":""},"Std.HashSetImp.foldM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L43-L44","name":"Std.HashSetImp.foldM","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.foldM","doc":""},"Std.HashSetImp.foldBucketsM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L37-L38","name":"Std.HashSetImp.foldBucketsM","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.foldBucketsM","doc":""},"Std.HashSetImp.foldBuckets":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L40-L41","name":"Std.HashSetImp.foldBuckets","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.foldBuckets","doc":""},"Std.HashSetImp.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L46-L47","name":"Std.HashSetImp.fold","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.fold","doc":""},"Std.HashSetImp.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L49-L53","name":"Std.HashSetImp.find?","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.find?","doc":""},"Std.HashSetImp.expand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L73-L78","name":"Std.HashSetImp.expand","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.expand","doc":""},"Std.HashSetImp.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L94-L100","name":"Std.HashSetImp.erase","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.erase","doc":""},"Std.HashSetImp.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L55-L59","name":"Std.HashSetImp.contains","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.contains","doc":""},"Std.HashSetImp.WellFormed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L102-L105","name":"Std.HashSetImp.WellFormed","docLink":"./Std/Data/HashSet.html#Std.HashSetImp.WellFormed","doc":""},"Std.HashSetImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L16-L18","name":"Std.HashSetImp","docLink":"./Std/Data/HashSet.html#Std.HashSetImp","doc":""},"Std.HashSetBucket.update":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L12-L14","name":"Std.HashSetBucket.update","docLink":"./Std/Data/HashSet.html#Std.HashSetBucket.update","doc":""},"Std.HashSetBucket":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L9-L10","name":"Std.HashSetBucket","docLink":"./Std/Data/HashSet.html#Std.HashSetBucket","doc":""},"Std.HashSet.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L159-L160","name":"Std.HashSet.toList","docLink":"./Std/Data/HashSet.html#Std.HashSet.toList","doc":""},"Std.HashSet.toArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L162-L163","name":"Std.HashSet.toArray","docLink":"./Std/Data/HashSet.html#Std.HashSet.toArray","doc":""},"Std.HashSet.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L152-L154","name":"Std.HashSet.size","docLink":"./Std/Data/HashSet.html#Std.HashSet.size","doc":""},"Std.HashSet.numBuckets":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L165-L166","name":"Std.HashSet.numBuckets","docLink":"./Std/Data/HashSet.html#Std.HashSet.numBuckets","doc":""},"Std.HashSet.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L156-L157","name":"Std.HashSet.isEmpty","docLink":"./Std/Data/HashSet.html#Std.HashSet.isEmpty","doc":""},"Std.HashSet.instInhabitedHashSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L121-L122","name":"Std.HashSet.instInhabitedHashSet","docLink":"./Std/Data/HashSet.html#Std.HashSet.instInhabitedHashSet","doc":""},"Std.HashSet.instEmptyCollectionHashSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L124-L124","name":"Std.HashSet.instEmptyCollectionHashSet","docLink":"./Std/Data/HashSet.html#Std.HashSet.instEmptyCollectionHashSet","doc":""},"Std.HashSet.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L128-L130","name":"Std.HashSet.insert","docLink":"./Std/Data/HashSet.html#Std.HashSet.insert","doc":""},"Std.HashSet.foldM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L144-L146","name":"Std.HashSet.foldM","docLink":"./Std/Data/HashSet.html#Std.HashSet.foldM","doc":""},"Std.HashSet.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L148-L150","name":"Std.HashSet.fold","docLink":"./Std/Data/HashSet.html#Std.HashSet.fold","doc":""},"Std.HashSet.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L136-L138","name":"Std.HashSet.find?","docLink":"./Std/Data/HashSet.html#Std.HashSet.find?","doc":""},"Std.HashSet.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L132-L134","name":"Std.HashSet.erase","docLink":"./Std/Data/HashSet.html#Std.HashSet.erase","doc":""},"Std.HashSet.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L118-L119","name":"Std.HashSet.empty","docLink":"./Std/Data/HashSet.html#Std.HashSet.empty","doc":""},"Std.HashSet.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L140-L142","name":"Std.HashSet.contains","docLink":"./Std/Data/HashSet.html#Std.HashSet.contains","doc":""},"Std.HashSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashSet.lean#L109-L110","name":"Std.HashSet","docLink":"./Std/Data/HashSet.html#Std.HashSet","doc":""},"Std.HashMapImp.reinsertAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L39-L41","name":"Std.HashMapImp.reinsertAux","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.reinsertAux","doc":""},"Std.HashMapImp.moveEntries":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L79-L88","name":"Std.HashMapImp.moveEntries","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.moveEntries","doc":""},"Std.HashMapImp.mkIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L36-L37","name":"Std.HashMapImp.mkIdx","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.mkIdx","doc":""},"Std.HashMapImp.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L97-L110","name":"Std.HashMapImp.insert","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.insert","doc":""},"Std.HashMapImp.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L58-L59","name":"Std.HashMapImp.forM","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.forM","doc":""},"Std.HashMapImp.forBucketsM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L55-L56","name":"Std.HashMapImp.forBucketsM","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.forBucketsM","doc":""},"Std.HashMapImp.foldM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L49-L50","name":"Std.HashMapImp.foldM","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.foldM","doc":""},"Std.HashMapImp.foldBucketsM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L43-L44","name":"Std.HashMapImp.foldBucketsM","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.foldBucketsM","doc":""},"Std.HashMapImp.foldBuckets":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L46-L47","name":"Std.HashMapImp.foldBuckets","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.foldBuckets","doc":""},"Std.HashMapImp.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L52-L53","name":"Std.HashMapImp.fold","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.fold","doc":""},"Std.HashMapImp.findEntry?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L61-L65","name":"Std.HashMapImp.findEntry?","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.findEntry?","doc":""},"Std.HashMapImp.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L67-L71","name":"Std.HashMapImp.find?","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.find?","doc":""},"Std.HashMapImp.expand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L90-L95","name":"Std.HashMapImp.expand","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.expand","doc":""},"Std.HashMapImp.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L112-L118","name":"Std.HashMapImp.erase","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.erase","doc":""},"Std.HashMapImp.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L73-L77","name":"Std.HashMapImp.contains","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.contains","doc":""},"Std.HashMapImp.WellFormed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L120-L123","name":"Std.HashMapImp.WellFormed","docLink":"./Std/Data/HashMap.html#Std.HashMapImp.WellFormed","doc":""},"Std.HashMapImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L17-L19","name":"Std.HashMapImp","docLink":"./Std/Data/HashMap.html#Std.HashMapImp","doc":""},"Std.HashMapBucket.update":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L13-L15","name":"Std.HashMapBucket.update","docLink":"./Std/Data/HashMap.html#Std.HashMapBucket.update","doc":""},"Std.HashMapBucket":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L10-L11","name":"Std.HashMapBucket","docLink":"./Std/Data/HashMap.html#Std.HashMapBucket","doc":""},"Std.HashMap.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L205-L206","name":"Std.HashMap.toList","docLink":"./Std/Data/HashMap.html#Std.HashMap.toList","doc":""},"Std.HashMap.toArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L208-L209","name":"Std.HashMap.toArray","docLink":"./Std/Data/HashMap.html#Std.HashMap.toArray","doc":""},"Std.HashMap.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L198-L200","name":"Std.HashMap.size","docLink":"./Std/Data/HashMap.html#Std.HashMap.size","doc":""},"Std.HashMap.ofListWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L219-L224","name":"Std.HashMap.ofListWith","docLink":"./Std/Data/HashMap.html#Std.HashMap.ofListWith","doc":"Variant of `ofList` which accepts a function that combines values of duplicated keys. "},"Std.HashMap.ofList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L215-L216","name":"Std.HashMap.ofList","docLink":"./Std/Data/HashMap.html#Std.HashMap.ofList","doc":"Builds a `HashMap` from a list of key-value pairs. Values of duplicated keys are replaced by their respective last occurrences. "},"Std.HashMap.numBuckets":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L211-L212","name":"Std.HashMap.numBuckets","docLink":"./Std/Data/HashMap.html#Std.HashMap.numBuckets","doc":""},"Std.HashMap.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L202-L203","name":"Std.HashMap.isEmpty","docLink":"./Std/Data/HashMap.html#Std.HashMap.isEmpty","doc":""},"Std.HashMap.instInhabitedHashMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L136-L137","name":"Std.HashMap.instInhabitedHashMap","docLink":"./Std/Data/HashMap.html#Std.HashMap.instInhabitedHashMap","doc":""},"Std.HashMap.instGetElemHashMapOptionTrue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L179-L180","name":"Std.HashMap.instGetElemHashMapOptionTrue","docLink":"./Std/Data/HashMap.html#Std.HashMap.instGetElemHashMapOptionTrue","doc":""},"Std.HashMap.instEmptyCollectionHashMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L139-L139","name":"Std.HashMap.instEmptyCollectionHashMap","docLink":"./Std/Data/HashMap.html#Std.HashMap.instEmptyCollectionHashMap","doc":""},"Std.HashMap.insert'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L153-L157","name":"Std.HashMap.insert'","docLink":"./Std/Data/HashMap.html#Std.HashMap.insert'","doc":"Similar to `insert`, but also returns a Boolean flad indicating whether an existing entry has been replaced with `a -> b`. "},"Std.HashMap.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L146-L150","name":"Std.HashMap.insert","docLink":"./Std/Data/HashMap.html#Std.HashMap.insert","doc":""},"Std.HashMap.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L194-L196","name":"Std.HashMap.forM","docLink":"./Std/Data/HashMap.html#Std.HashMap.forM","doc":""},"Std.HashMap.foldM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L186-L188","name":"Std.HashMap.foldM","docLink":"./Std/Data/HashMap.html#Std.HashMap.foldM","doc":""},"Std.HashMap.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L190-L192","name":"Std.HashMap.fold","docLink":"./Std/Data/HashMap.html#Std.HashMap.fold","doc":""},"Std.HashMap.findEntry?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L163-L165","name":"Std.HashMap.findEntry?","docLink":"./Std/Data/HashMap.html#Std.HashMap.findEntry?","doc":""},"Std.HashMap.findD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L171-L172","name":"Std.HashMap.findD","docLink":"./Std/Data/HashMap.html#Std.HashMap.findD","doc":""},"Std.HashMap.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L167-L169","name":"Std.HashMap.find?","docLink":"./Std/Data/HashMap.html#Std.HashMap.find?","doc":""},"Std.HashMap.find!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L174-L177","name":"Std.HashMap.find!","docLink":"./Std/Data/HashMap.html#Std.HashMap.find!","doc":""},"Std.HashMap.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L159-L161","name":"Std.HashMap.erase","docLink":"./Std/Data/HashMap.html#Std.HashMap.erase","doc":""},"Std.HashMap.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L141-L142","name":"Std.HashMap.empty","docLink":"./Std/Data/HashMap.html#Std.HashMap.empty","doc":""},"Std.HashMap.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L182-L184","name":"Std.HashMap.contains","docLink":"./Std/Data/HashMap.html#Std.HashMap.contains","doc":""},"Std.HashMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/HashMap.lean#L127-L128","name":"Std.HashMap","docLink":"./Std/Data/HashMap.html#Std.HashMap","doc":""},"Std.Format.sbracket":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L194-L195","name":"Std.Format.sbracket","docLink":"./Init/Data/Format/Basic.html#Std.Format.sbracket","doc":""},"Std.Format.prettyM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L185-L186","name":"Std.Format.prettyM","docLink":"./Init/Data/Format/Basic.html#Std.Format.prettyM","doc":""},"Std.Format.pretty'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Format.lean#L32-L33","name":"Std.Format.pretty'","docLink":"./Lean/Data/Format.html#Std.Format.pretty'","doc":""},"Std.Format.pretty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L224-L226","name":"Std.Format.pretty","docLink":"./Init/Data/Format/Basic.html#Std.Format.pretty","doc":"Pretty-print a `Format` object as a string with expected width `w`. "},"Std.Format.prefixJoin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L247-L249","name":"Std.Format.prefixJoin","docLink":"./Init/Data/Format/Basic.html#Std.Format.prefixJoin","doc":""},"Std.Format.paren":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L191-L192","name":"Std.Format.paren","docLink":"./Init/Data/Format/Basic.html#Std.Format.paren","doc":""},"Std.Format.nestD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L204-L205","name":"Std.Format.nestD","docLink":"./Init/Data/Format/Basic.html#Std.Format.nestD","doc":""},"Std.Format.joinSuffix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L251-L253","name":"Std.Format.joinSuffix","docLink":"./Init/Data/Format/Basic.html#Std.Format.joinSuffix","doc":""},"Std.Format.joinSep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L242-L245","name":"Std.Format.joinSep","docLink":"./Init/Data/Format/Basic.html#Std.Format.joinSep","doc":""},"Std.Format.join":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L55-L56","name":"Std.Format.join","docLink":"./Init/Data/Format/Basic.html#Std.Format.join","doc":""},"Std.Format.isNil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L58-L60","name":"Std.Format.isNil","docLink":"./Init/Data/Format/Basic.html#Std.Format.isNil","doc":""},"Std.Format.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L32-L39","name":"Std.Format.isEmpty","docLink":"./Init/Data/Format/Basic.html#Std.Format.isEmpty","doc":""},"Std.Format.instMonadPrettyFormatStateMState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L214-L220","name":"Std.Format.instMonadPrettyFormatStateMState","docLink":"./Init/Data/Format/Basic.html#Std.Format.instMonadPrettyFormatStateMState","doc":""},"Std.Format.instInhabitedSpaceResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L66-L66","name":"Std.Format.instInhabitedSpaceResult","docLink":"./Init/Data/Format/Basic.html#Std.Format.instInhabitedSpaceResult","doc":""},"Std.Format.instInhabitedFlattenBehavior":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L16-L16","name":"Std.Format.instInhabitedFlattenBehavior","docLink":"./Init/Data/Format/Basic.html#Std.Format.instInhabitedFlattenBehavior","doc":""},"Std.Format.instCoeStringFormat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L53-L53","name":"Std.Format.instCoeStringFormat","docLink":"./Init/Data/Format/Basic.html#Std.Format.instCoeStringFormat","doc":""},"Std.Format.instBEqFlattenBehavior":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L16-L16","name":"Std.Format.instBEqFlattenBehavior","docLink":"./Init/Data/Format/Basic.html#Std.Format.instBEqFlattenBehavior","doc":""},"Std.Format.instAppendFormat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L52-L52","name":"Std.Format.instAppendFormat","docLink":"./Init/Data/Format/Basic.html#Std.Format.instAppendFormat","doc":""},"Std.Format.indentD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L207-L208","name":"Std.Format.indentD","docLink":"./Init/Data/Format/Basic.html#Std.Format.indentD","doc":""},"Std.Format.groupEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L49-L50","name":"Std.Format.groupEx","docLink":"./Init/Data/Format/Basic.html#Std.Format.groupEx","doc":""},"Std.Format.getWidth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Format.lean#L13-L13","name":"Std.Format.getWidth","docLink":"./Lean/Data/Format.html#Std.Format.getWidth","doc":""},"Std.Format.getUnicode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Format.lean#L15-L15","name":"Std.Format.getUnicode","docLink":"./Lean/Data/Format.html#Std.Format.getUnicode","doc":""},"Std.Format.getIndent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Format.lean#L14-L14","name":"Std.Format.getIndent","docLink":"./Lean/Data/Format.html#Std.Format.getIndent","doc":""},"Std.Format.format.width":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Format.lean#L17-L17","name":"Std.Format.format.width","docLink":"./Lean/Data/Format.html#Std.Format.format.width","doc":""},"Std.Format.format.unicode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Format.lean#L22-L22","name":"Std.Format.format.unicode","docLink":"./Lean/Data/Format.html#Std.Format.format.unicode","doc":""},"Std.Format.format.indent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Format.lean#L27-L27","name":"Std.Format.format.indent","docLink":"./Lean/Data/Format.html#Std.Format.format.indent","doc":""},"Std.Format.fill":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L41-L42","name":"Std.Format.fill","docLink":"./Init/Data/Format/Basic.html#Std.Format.fill","doc":""},"Std.Format.defWidth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L202-L202","name":"Std.Format.defWidth","docLink":"./Init/Data/Format/Basic.html#Std.Format.defWidth","doc":""},"Std.Format.defUnicode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L201-L201","name":"Std.Format.defUnicode","docLink":"./Init/Data/Format/Basic.html#Std.Format.defUnicode","doc":""},"Std.Format.defIndent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L200-L200","name":"Std.Format.defIndent","docLink":"./Init/Data/Format/Basic.html#Std.Format.defIndent","doc":""},"Std.Format.bracketFill":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L197-L198","name":"Std.Format.bracketFill","docLink":"./Init/Data/Format/Basic.html#Std.Format.bracketFill","doc":""},"Std.Format.bracket":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L188-L189","name":"Std.Format.bracket","docLink":"./Init/Data/Format/Basic.html#Std.Format.bracket","doc":""},"Std.Format.appendEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L45-L46","name":"Std.Format.appendEx","docLink":"./Init/Data/Format/Basic.html#Std.Format.appendEx","doc":""},"Std.Format.MonadPrettyFormat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L103-L110","name":"Std.Format.MonadPrettyFormat","docLink":"./Init/Data/Format/Basic.html#Std.Format.MonadPrettyFormat","doc":"A monad in which we can pretty-print `Format` objects. "},"Std.Format.FlattenBehavior":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L13-L16","name":"Std.Format.FlattenBehavior","docLink":"./Init/Data/Format/Basic.html#Std.Format.FlattenBehavior","doc":""},"Std.Format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Basic.lean#L19-L28","name":"Std.Format","docLink":"./Init/Data/Format/Basic.html#Std.Format","doc":""},"Std.AssocList.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L39-L40","name":"Std.AssocList.toList","docLink":"./Std/Data/AssocList.html#Std.AssocList.toList","doc":""},"Std.AssocList.replace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L70-L74","name":"Std.AssocList.replace","docLink":"./Std/Data/AssocList.html#Std.AssocList.replace","doc":""},"Std.AssocList.mapVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L50-L52","name":"Std.AssocList.mapVal","docLink":"./Std/Data/AssocList.html#Std.AssocList.mapVal","doc":""},"Std.AssocList.mapKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L46-L48","name":"Std.AssocList.mapKey","docLink":"./Std/Data/AssocList.html#Std.AssocList.mapKey","doc":""},"Std.AssocList.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L26-L28","name":"Std.AssocList.isEmpty","docLink":"./Std/Data/AssocList.html#Std.AssocList.isEmpty","doc":""},"Std.AssocList.instForInAssocListProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L100-L101","name":"Std.AssocList.instForInAssocListProd","docLink":"./Std/Data/AssocList.html#Std.AssocList.instForInAssocListProd","doc":""},"Std.AssocList.instEmptyCollectionAssocList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L21-L21","name":"Std.AssocList.instEmptyCollectionAssocList","docLink":"./Std/Data/AssocList.html#Std.AssocList.instEmptyCollectionAssocList","doc":""},"Std.AssocList.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L23-L24","name":"Std.AssocList.insert","docLink":"./Std/Data/AssocList.html#Std.AssocList.insert","doc":""},"Std.AssocList.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L42-L44","name":"Std.AssocList.forM","docLink":"./Std/Data/AssocList.html#Std.AssocList.forM","doc":""},"Std.AssocList.forIn.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L92-L97","name":"Std.AssocList.forIn.loop","docLink":"./Std/Data/AssocList.html#Std.AssocList.forIn.loop","doc":""},"Std.AssocList.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L90-L98","name":"Std.AssocList.forIn","docLink":"./Std/Data/AssocList.html#Std.AssocList.forIn","doc":""},"Std.AssocList.foldlM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L30-L34","name":"Std.AssocList.foldlM","docLink":"./Std/Data/AssocList.html#Std.AssocList.foldlM","doc":""},"Std.AssocList.foldl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L36-L37","name":"Std.AssocList.foldl","docLink":"./Std/Data/AssocList.html#Std.AssocList.foldl","doc":""},"Std.AssocList.findEntry?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L54-L58","name":"Std.AssocList.findEntry?","docLink":"./Std/Data/AssocList.html#Std.AssocList.findEntry?","doc":""},"Std.AssocList.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L60-L64","name":"Std.AssocList.find?","docLink":"./Std/Data/AssocList.html#Std.AssocList.find?","doc":""},"Std.AssocList.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L76-L80","name":"Std.AssocList.erase","docLink":"./Std/Data/AssocList.html#Std.AssocList.erase","doc":""},"Std.AssocList.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L18-L19","name":"Std.AssocList.empty","docLink":"./Std/Data/AssocList.html#Std.AssocList.empty","doc":""},"Std.AssocList.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L66-L68","name":"Std.AssocList.contains","docLink":"./Std/Data/AssocList.html#Std.AssocList.contains","doc":""},"Std.AssocList.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L82-L84","name":"Std.AssocList.any","docLink":"./Std/Data/AssocList.html#Std.AssocList.any","doc":""},"Std.AssocList.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L86-L88","name":"Std.AssocList.all","docLink":"./Std/Data/AssocList.html#Std.AssocList.all","doc":""},"Std.AssocList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L10-L13","name":"Std.AssocList","docLink":"./Std/Data/AssocList.html#Std.AssocList","doc":"List-like type to avoid extra level of indirection "},"StateT.tryFinally":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L101-L106","name":"StateT.tryFinally","docLink":"./Init/Control/State.html#StateT.tryFinally","doc":""},"StateT.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L65-L66","name":"StateT.set","docLink":"./Init/Control/State.html#StateT.set","doc":""},"StateT.seqRight_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L283-L287","name":"StateT.seqRight_eq","docLink":"./Init/Control/Lawful.html#StateT.seqRight_eq","doc":""},"StateT.seqLeft_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L289-L291","name":"StateT.seqLeft_eq","docLink":"./Init/Control/Lawful.html#StateT.seqLeft_eq","doc":""},"StateT.run_set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L254-L254","name":"StateT.run_set","docLink":"./Init/Control/Lawful.html#StateT.run_set","doc":""},"StateT.run_seqRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L275-L277","name":"StateT.run_seqRight","docLink":"./Init/Control/Lawful.html#StateT.run_seqRight","doc":""},"StateT.run_seqLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L279-L281","name":"StateT.run_seqLeft","docLink":"./Init/Control/Lawful.html#StateT.run_seqLeft","doc":""},"StateT.run_seq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L271-L273","name":"StateT.run_seq","docLink":"./Init/Control/Lawful.html#StateT.run_seq","doc":""},"StateT.run_pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L243-L243","name":"StateT.run_pure","docLink":"./Init/Control/Lawful.html#StateT.run_pure","doc":""},"StateT.run_monadMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L268-L269","name":"StateT.run_monadMap","docLink":"./Init/Control/Lawful.html#StateT.run_monadMap","doc":""},"StateT.run_monadLift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L266-L266","name":"StateT.run_monadLift","docLink":"./Init/Control/Lawful.html#StateT.run_monadLift","doc":""},"StateT.run_modifyGet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L258-L259","name":"StateT.run_modifyGet","docLink":"./Init/Control/Lawful.html#StateT.run_modifyGet","doc":""},"StateT.run_modify":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L256-L256","name":"StateT.run_modify","docLink":"./Init/Control/Lawful.html#StateT.run_modify","doc":""},"StateT.run_map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L249-L250","name":"StateT.run_map","docLink":"./Init/Control/Lawful.html#StateT.run_map","doc":""},"StateT.run_lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L261-L261","name":"StateT.run_lift","docLink":"./Init/Control/Lawful.html#StateT.run_lift","doc":""},"StateT.run_get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L252-L252","name":"StateT.run_get","docLink":"./Init/Control/Lawful.html#StateT.run_get","doc":""},"StateT.run_bind_lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L263-L264","name":"StateT.run_bind_lift","docLink":"./Init/Control/Lawful.html#StateT.run_bind_lift","doc":""},"StateT.run_bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L245-L247","name":"StateT.run_bind","docLink":"./Init/Control/Lawful.html#StateT.run_bind","doc":""},"StateT.run'_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L240-L241","name":"StateT.run'_eq","docLink":"./Init/Control/Lawful.html#StateT.run'_eq","doc":""},"StateT.run'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L20-L21","name":"StateT.run'","docLink":"./Init/Control/State.html#StateT.run'","doc":""},"StateT.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L17-L18","name":"StateT.run","docLink":"./Init/Control/State.html#StateT.run","doc":""},"StateT.pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L38-L39","name":"StateT.pure","docLink":"./Init/Control/State.html#StateT.pure","doc":""},"StateT.orElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L52-L53","name":"StateT.orElse","docLink":"./Init/Control/State.html#StateT.orElse","doc":""},"StateT.monadControl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L96-L99","name":"StateT.monadControl","docLink":"./Init/Control/State.html#StateT.monadControl","doc":""},"StateT.modifyGet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L68-L69","name":"StateT.modifyGet","docLink":"./Init/Control/State.html#StateT.modifyGet","doc":""},"StateT.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L44-L45","name":"StateT.map","docLink":"./Init/Control/State.html#StateT.map","doc":""},"StateT.lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L71-L72","name":"StateT.lift","docLink":"./Init/Control/State.html#StateT.lift","doc":""},"StateT.instMonadStateT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L47-L50","name":"StateT.instMonadStateT","docLink":"./Init/Control/State.html#StateT.instMonadStateT","doc":""},"StateT.instMonadLiftStateT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L74-L74","name":"StateT.instMonadLiftStateT","docLink":"./Init/Control/State.html#StateT.instMonadLiftStateT","doc":""},"StateT.instMonadFunctorStateT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L76-L76","name":"StateT.instMonadFunctorStateT","docLink":"./Init/Control/State.html#StateT.instMonadFunctorStateT","doc":""},"StateT.instMonadExceptOfStateT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L78-L81","name":"StateT.instMonadExceptOfStateT","docLink":"./Init/Control/State.html#StateT.instMonadExceptOfStateT","doc":""},"StateT.instLawfulMonadStateTInstMonadStateT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L293-L302","name":"StateT.instLawfulMonadStateTInstMonadStateT","docLink":"./Init/Control/Lawful.html#StateT.instLawfulMonadStateTInstMonadStateT","doc":""},"StateT.instAlternativeStateT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L58-L60","name":"StateT.instAlternativeStateT","docLink":"./Init/Control/State.html#StateT.instAlternativeStateT","doc":""},"StateT.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L62-L63","name":"StateT.get","docLink":"./Init/Control/State.html#StateT.get","doc":""},"StateT.failure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L55-L56","name":"StateT.failure","docLink":"./Init/Control/State.html#StateT.failure","doc":""},"StateT.ext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L237-L238","name":"StateT.ext","docLink":"./Init/Control/Lawful.html#StateT.ext","doc":""},"StateT.bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L41-L42","name":"StateT.bind","docLink":"./Init/Control/State.html#StateT.bind","doc":""},"StateT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L14-L15","name":"StateT","docLink":"./Init/Control/State.html#StateT","doc":""},"StateRefT'.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L40-L41","name":"StateRefT'.set","docLink":"./Init/Control/StateRef.html#StateRefT'.set","doc":""},"StateRefT'.run'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L22-L24","name":"StateRefT'.run'","docLink":"./Init/Control/StateRef.html#StateRefT'.run'","doc":""},"StateRefT'.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L16-L20","name":"StateRefT'.run","docLink":"./Init/Control/StateRef.html#StateRefT'.run","doc":""},"StateRefT'.modifyGet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L43-L44","name":"StateRefT'.modifyGet","docLink":"./Init/Control/StateRef.html#StateRefT'.modifyGet","doc":""},"StateRefT'.lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L29-L30","name":"StateRefT'.lift","docLink":"./Init/Control/StateRef.html#StateRefT'.lift","doc":""},"StateRefT'.instMonadStateRefT'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L32-L32","name":"StateRefT'.instMonadStateRefT'","docLink":"./Init/Control/StateRef.html#StateRefT'.instMonadStateRefT'","doc":""},"StateRefT'.instMonadStateOfStateRefT'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L46-L49","name":"StateRefT'.instMonadStateOfStateRefT'","docLink":"./Init/Control/StateRef.html#StateRefT'.instMonadStateOfStateRefT'","doc":""},"StateRefT'.instMonadLiftStateRefT'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L33-L33","name":"StateRefT'.instMonadLiftStateRefT'","docLink":"./Init/Control/StateRef.html#StateRefT'.instMonadLiftStateRefT'","doc":""},"StateRefT'.instMonadFunctorStateRefT'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L34-L34","name":"StateRefT'.instMonadFunctorStateRefT'","docLink":"./Init/Control/StateRef.html#StateRefT'.instMonadFunctorStateRefT'","doc":""},"StateRefT'.instMonadExceptOfStateRefT'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L51-L53","name":"StateRefT'.instMonadExceptOfStateRefT'","docLink":"./Init/Control/StateRef.html#StateRefT'.instMonadExceptOfStateRefT'","doc":""},"StateRefT'.instAlternativeStateRefT'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L35-L35","name":"StateRefT'.instAlternativeStateRefT'","docLink":"./Init/Control/StateRef.html#StateRefT'.instAlternativeStateRefT'","doc":""},"StateRefT'.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L37-L38","name":"StateRefT'.get","docLink":"./Init/Control/StateRef.html#StateRefT'.get","doc":""},"StateRefT'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateRef.lean#L12-L12","name":"StateRefT'","docLink":"./Init/Control/StateRef.html#StateRefT'","doc":""},"StateM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/State.lean#L23-L23","name":"StateM","docLink":"./Init/Control/State.html#StateM","doc":""},"StateCpsT.run_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L69-L69","name":"StateCpsT.run_eq","docLink":"./Init/Control/StateCps.html#StateCpsT.run_eq","doc":""},"StateCpsT.runK_set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L49-L49","name":"StateCpsT.runK_set","docLink":"./Init/Control/StateCps.html#StateCpsT.runK_set","doc":""},"StateCpsT.runK_pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L45-L45","name":"StateCpsT.runK_pure","docLink":"./Init/Control/StateCps.html#StateCpsT.runK_pure","doc":""},"StateCpsT.runK_monadLift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L55-L56","name":"StateCpsT.runK_monadLift","docLink":"./Init/Control/StateCps.html#StateCpsT.runK_monadLift","doc":""},"StateCpsT.runK_modify":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L51-L51","name":"StateCpsT.runK_modify","docLink":"./Init/Control/StateCps.html#StateCpsT.runK_modify","doc":""},"StateCpsT.runK_lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L53-L53","name":"StateCpsT.runK_lift","docLink":"./Init/Control/StateCps.html#StateCpsT.runK_lift","doc":""},"StateCpsT.runK_get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L47-L47","name":"StateCpsT.runK_get","docLink":"./Init/Control/StateCps.html#StateCpsT.runK_get","doc":""},"StateCpsT.runK_bind_set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L65-L65","name":"StateCpsT.runK_bind_set","docLink":"./Init/Control/StateCps.html#StateCpsT.runK_bind_set","doc":""},"StateCpsT.runK_bind_pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L58-L58","name":"StateCpsT.runK_bind_pure","docLink":"./Init/Control/StateCps.html#StateCpsT.runK_bind_pure","doc":""},"StateCpsT.runK_bind_modify":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L67-L67","name":"StateCpsT.runK_bind_modify","docLink":"./Init/Control/StateCps.html#StateCpsT.runK_bind_modify","doc":""},"StateCpsT.runK_bind_lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L60-L61","name":"StateCpsT.runK_bind_lift","docLink":"./Init/Control/StateCps.html#StateCpsT.runK_bind_lift","doc":""},"StateCpsT.runK_bind_get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L63-L63","name":"StateCpsT.runK_bind_get","docLink":"./Init/Control/StateCps.html#StateCpsT.runK_bind_get","doc":""},"StateCpsT.runK":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L17-L18","name":"StateCpsT.runK","docLink":"./Init/Control/StateCps.html#StateCpsT.runK","doc":""},"StateCpsT.run'_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L71-L71","name":"StateCpsT.run'_eq","docLink":"./Init/Control/StateCps.html#StateCpsT.run'_eq","doc":""},"StateCpsT.run'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L23-L24","name":"StateCpsT.run'","docLink":"./Init/Control/StateCps.html#StateCpsT.run'","doc":""},"StateCpsT.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L20-L21","name":"StateCpsT.run","docLink":"./Init/Control/StateCps.html#StateCpsT.run","doc":""},"StateCpsT.lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L39-L40","name":"StateCpsT.lift","docLink":"./Init/Control/StateCps.html#StateCpsT.lift","doc":""},"StateCpsT.instMonadStateOfStateCpsT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L34-L37","name":"StateCpsT.instMonadStateOfStateCpsT","docLink":"./Init/Control/StateCps.html#StateCpsT.instMonadStateOfStateCpsT","doc":""},"StateCpsT.instMonadStateCpsT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L26-L29","name":"StateCpsT.instMonadStateCpsT","docLink":"./Init/Control/StateCps.html#StateCpsT.instMonadStateCpsT","doc":""},"StateCpsT.instMonadLiftStateCpsT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L42-L43","name":"StateCpsT.instMonadLiftStateCpsT","docLink":"./Init/Control/StateCps.html#StateCpsT.instMonadLiftStateCpsT","doc":""},"StateCpsT.instLawfulMonadStateCpsTInstMonadStateCpsT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L31-L32","name":"StateCpsT.instLawfulMonadStateCpsTInstMonadStateCpsT","docLink":"./Init/Control/StateCps.html#StateCpsT.instLawfulMonadStateCpsTInstMonadStateCpsT","doc":""},"StateCpsT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/StateCps.lean#L13-L13","name":"StateCpsT","docLink":"./Init/Control/StateCps.html#StateCpsT","doc":""},"Squash.mk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1090-L1090","name":"Squash.mk","docLink":"./Init/Core.html#Squash.mk","doc":""},"Squash.lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1095-L1096","name":"Squash.lift","docLink":"./Init/Core.html#Squash.lift","doc":""},"Squash.ind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1092-L1093","name":"Squash.ind","docLink":"./Init/Core.html#Squash.ind","doc":""},"Squash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1088-L1088","name":"Squash","docLink":"./Init/Core.html#Squash","doc":""},"SlimCheck.retry":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L418-L425","name":"SlimCheck.retry","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.retry","doc":"Execute `cmd` and repeat every time the result is `gave_up` (at most `n` times). "},"SlimCheck.instPrintableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L113-L114","name":"SlimCheck.instPrintableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.instPrintableProp","doc":""},"SlimCheck.instInhabitedTestResult":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L88-L88","name":"SlimCheck.instInhabitedTestResult","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.instInhabitedTestResult","doc":""},"SlimCheck.instInhabitedConfiguration":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L101-L101","name":"SlimCheck.instInhabitedConfiguration","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.instInhabitedConfiguration","doc":""},"SlimCheck.instDefaultRangeNat":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/DefaultRange.lean#L49-L51","name":"SlimCheck.instDefaultRangeNat","docLink":"./LSpec/SlimCheck/Control/DefaultRange.html#SlimCheck.instDefaultRangeNat","doc":""},"SlimCheck.instDefaultRangeInt":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/DefaultRange.lean#L57-L59","name":"SlimCheck.instDefaultRangeInt","docLink":"./LSpec/SlimCheck/Control/DefaultRange.html#SlimCheck.instDefaultRangeInt","doc":""},"SlimCheck.instDefaultRange":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/DefaultRange.lean#L41-L43","name":"SlimCheck.instDefaultRange","docLink":"./LSpec/SlimCheck/Control/DefaultRange.html#SlimCheck.instDefaultRange","doc":""},"SlimCheck.instBoundedFinSucc":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/DefaultRange.lean#L53-L55","name":"SlimCheck.instBoundedFinSucc","docLink":"./LSpec/SlimCheck/Control/DefaultRange.html#SlimCheck.instBoundedFinSucc","doc":""},"SlimCheck.instBoundedBool":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/DefaultRange.lean#L45-L47","name":"SlimCheck.instBoundedBool","docLink":"./LSpec/SlimCheck/Control/DefaultRange.html#SlimCheck.instBoundedBool","doc":""},"SlimCheck.inhabitedStdGen":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L42-L43","name":"SlimCheck.inhabitedStdGen","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.inhabitedStdGen","doc":""},"SlimCheck.inhabitedRandT":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L36-L37","name":"SlimCheck.inhabitedRandT","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.inhabitedRandT","doc":""},"SlimCheck.giveUp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L428-L432","name":"SlimCheck.giveUp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.giveUp","doc":"Count the number of times the test procedure gave up. "},"SlimCheck.True.printableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L403-L404","name":"SlimCheck.True.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.True.printableProp","doc":""},"SlimCheck.TestResult.toString":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L124-L128","name":"SlimCheck.TestResult.toString","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.toString","doc":""},"SlimCheck.TestResult.or":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L147-L158","name":"SlimCheck.TestResult.or","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.or","doc":"Combine the test result for properties `p` and `q` to create a test for their disjunction. "},"SlimCheck.TestResult.isFailure":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L188-L190","name":"SlimCheck.TestResult.isFailure","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.isFailure","doc":""},"SlimCheck.TestResult.instToStringTestResult":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L130-L130","name":"SlimCheck.TestResult.instToStringTestResult","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.instToStringTestResult","doc":""},"SlimCheck.TestResult.imp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L162-L167","name":"SlimCheck.TestResult.imp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.imp","doc":"If `q → p`, then `¬ p → ¬ q` which means that testing `p` can allow us\nto find counter-examples to `q`. "},"SlimCheck.TestResult.iff":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L170-L171","name":"SlimCheck.TestResult.iff","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.iff","doc":"Test `q` by testing `p` and proving the equivalence between the two. "},"SlimCheck.TestResult.combine":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L133-L135","name":"SlimCheck.TestResult.combine","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.combine","doc":"Applicative combinator proof carrying test results. "},"SlimCheck.TestResult.and":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L138-L144","name":"SlimCheck.TestResult.and","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.and","doc":"Combine the test result for properties `p` and `q` to create a test for their conjunction. "},"SlimCheck.TestResult.addVarInfo":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L184-L186","name":"SlimCheck.TestResult.addVarInfo","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.addVarInfo","doc":"Add some formatting to the information recorded by `addInfo`. "},"SlimCheck.TestResult.addInfo":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L176-L181","name":"SlimCheck.TestResult.addInfo","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult.addInfo","doc":"When we assign a value to a universally quantified variable,\nwe record that value using this function so that our counter-examples\ncan be informative. "},"SlimCheck.TestResult":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L84-L88","name":"SlimCheck.TestResult","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.TestResult","doc":"Result of trying to disprove `p`\nThe constructors are:\n  *  `success : (PSum Unit p) → TestResult p`\n     succeed when we find another example satisfying `p`\n     In `success h`, `h` is an optional proof of the proposition.\n     Without the proof, all we know is that we found one example\n     where `p` holds. With a proof, the one test was sufficient to\n     prove that `p` holds and we do not need to keep finding examples.\n   * `gaveUp : ℕ → TestResult p`\n     give up when a well-formed example cannot be generated.\n     `gaveUp n` tells us that `n` invalid examples were tried.\n     Above 100, we give up on the proposition and report that we\n     did not find a way to properly test it.\n   * `failure : ¬ p → (List String) → ℕ → TestResult p`\n     a counter-example to `p`; the strings specify values for the relevant variables.\n     `failure h vs n` also carries a proof that `p` does not hold. This way, we can\n     guarantee that there will be no false positive. The last component, `n`,\n     is the number of times that the counter-example was shrunk.\n"},"SlimCheck.Shrinkable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L71-L72","name":"SlimCheck.Shrinkable","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Shrinkable","doc":"Given an example `x : α`, `Shrinkable α` gives us a way to shrink it\nand suggest simpler examples. "},"SlimCheck.SampleableExt.mkSelfContained":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L99-L104","name":"SlimCheck.SampleableExt.mkSelfContained","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.SampleableExt.mkSelfContained","doc":"Use to generate instance whose purpose is to simply generate values\nof a type directly using the `Gen` monad "},"SlimCheck.SampleableExt.interpSample":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L108-L108","name":"SlimCheck.SampleableExt.interpSample","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.SampleableExt.interpSample","doc":"First samples a proxy value and interprets it. Especially useful if\nthe proxy and target type are the same. "},"SlimCheck.SampleableExt":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L85-L90","name":"SlimCheck.SampleableExt","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.SampleableExt","doc":"`SampleableExt` can be used in two ways. The first (and most common)\nis to simply generate values of a type directly using the `Gen` monad,\nif this is what you want to do then `SampleableExt.mkSelfContained` is\nthe way to go.\nFurthermore it makes it possible to express generators for types that\ndo not lend themselves to introspection, such as `ℕ → ℕ`.\nIf we test a quantification over functions the\ncounter-examples cannot be shrunken or printed meaningfully.\nFor that purpose, `SampleableExt` provides a proxy representation\n`proxy` that can be printed and shrunken as well\nas interpreted (using `interp`) as an object of the right type. "},"SlimCheck.Random.randFin":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L86-L87","name":"SlimCheck.Random.randFin","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.Random.randFin","doc":""},"SlimCheck.Random.randBound":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L83-L84","name":"SlimCheck.Random.randBound","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.Random.randBound","doc":"Generate a random value of type `α` between `x` and `y` inclusive. "},"SlimCheck.Random.rand":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L79-L80","name":"SlimCheck.Random.rand","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.Random.rand","doc":"Generate a random value of type `α`. "},"SlimCheck.Random.instRandomNat":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L97-L100","name":"SlimCheck.Random.instRandomNat","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.Random.instRandomNat","doc":""},"SlimCheck.Random.instRandomInt":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L107-L113","name":"SlimCheck.Random.instRandomInt","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.Random.instRandomInt","doc":""},"SlimCheck.Random.instRandomFinSucc":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L102-L105","name":"SlimCheck.Random.instRandomFinSucc","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.Random.instRandomFinSucc","doc":""},"SlimCheck.Random.instRandomBool":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L89-L95","name":"SlimCheck.Random.instRandomBool","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.Random.instRandomBool","doc":""},"SlimCheck.Random":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L46-L47","name":"SlimCheck.Random","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.Random","doc":"`Random α` gives us machinery to generate values of type `α` "},"SlimCheck.RandT":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L34-L34","name":"SlimCheck.RandT","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.RandT","doc":"A monad to generate random objects using the generic generator type `g` "},"SlimCheck.Rand.split":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L62-L66","name":"SlimCheck.Rand.split","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.Rand.split","doc":"Create a new random number generator distinct from the one stored in the state "},"SlimCheck.Rand.range":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L69-L71","name":"SlimCheck.Rand.range","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.Rand.range","doc":"Get the range of Nat that can be generated by the generator `g` "},"SlimCheck.Rand.next":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L55-L59","name":"SlimCheck.Rand.next","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.Rand.next","doc":"Generate one more `Nat` "},"SlimCheck.Rand":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L40-L40","name":"SlimCheck.Rand","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.Rand","doc":"A monad to generate random objects using the generator type `Rng` "},"SlimCheck.Prop.sampleableExt":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L196-L201","name":"SlimCheck.Prop.sampleableExt","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Prop.sampleableExt","doc":""},"SlimCheck.Prod.shrinkable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L149-L153","name":"SlimCheck.Prod.shrinkable","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Prod.shrinkable","doc":""},"SlimCheck.Prod.sampleableExt":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L188-L194","name":"SlimCheck.Prod.sampleableExt","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Prod.sampleableExt","doc":""},"SlimCheck.PrintableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L108-L109","name":"SlimCheck.PrintableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.PrintableProp","doc":"`PrintableProp p` allows one to print a proposition so that\n`SlimCheck` can indicate how values relate to each other.\nIt's basically a poor man's delaborator.\n"},"SlimCheck.Or.printableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L391-L392","name":"SlimCheck.Or.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Or.printableProp","doc":""},"SlimCheck.Not.printableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L400-L401","name":"SlimCheck.Not.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Not.printableProp","doc":""},"SlimCheck.NoShrink.shrinkable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L216-L217","name":"SlimCheck.NoShrink.shrinkable","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.NoShrink.shrinkable","doc":""},"SlimCheck.NoShrink.sampleableExt":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L219-L220","name":"SlimCheck.NoShrink.sampleableExt","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.NoShrink.sampleableExt","doc":""},"SlimCheck.NoShrink.repr":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L214-L214","name":"SlimCheck.NoShrink.repr","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.NoShrink.repr","doc":""},"SlimCheck.NoShrink.mk":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L210-L210","name":"SlimCheck.NoShrink.mk","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.NoShrink.mk","doc":""},"SlimCheck.NoShrink.inhabited":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L213-L213","name":"SlimCheck.NoShrink.inhabited","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.NoShrink.inhabited","doc":""},"SlimCheck.NoShrink.get":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L211-L211","name":"SlimCheck.NoShrink.get","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.NoShrink.get","doc":""},"SlimCheck.NoShrink":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L206-L206","name":"SlimCheck.NoShrink","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.NoShrink","doc":"An annotation for values that should never get shrinked. "},"SlimCheck.Ne.printableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L379-L380","name":"SlimCheck.Ne.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Ne.printableProp","doc":""},"SlimCheck.Nat.shrinkable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L124-L125","name":"SlimCheck.Nat.shrinkable","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Nat.shrinkable","doc":""},"SlimCheck.Nat.shrink":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L116-L122","name":"SlimCheck.Nat.shrink","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Nat.shrink","doc":"`Nat.shrink' n` creates a list of smaller natural numbers by\nsuccessively dividing `n` by 2 . For example, `Nat.shrink 5 = [2, 1, 0]`. "},"SlimCheck.Nat.sampleableExt":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L161-L162","name":"SlimCheck.Nat.sampleableExt","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Nat.sampleableExt","doc":""},"SlimCheck.NamedBinder":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L120-L120","name":"SlimCheck.NamedBinder","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.NamedBinder","doc":""},"SlimCheck.LT.printableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L385-L386","name":"SlimCheck.LT.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.LT.printableProp","doc":""},"SlimCheck.LE.printableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L382-L383","name":"SlimCheck.LE.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.LE.printableProp","doc":""},"SlimCheck.Int_sizeOfAbs":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L139-L139","name":"SlimCheck.Int_sizeOfAbs","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Int_sizeOfAbs","doc":""},"SlimCheck.Int.shrinkable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L142-L144","name":"SlimCheck.Int.shrinkable","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Int.shrinkable","doc":"`Int.shrinkable` operates like `Nat.shrinkable` but also includes the negative variants. "},"SlimCheck.Int.sampleableExt":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L167-L168","name":"SlimCheck.Int.sampleableExt","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Int.sampleableExt","doc":""},"SlimCheck.Imp.printableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L397-L398","name":"SlimCheck.Imp.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Imp.printableProp","doc":""},"SlimCheck.Iff.printableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L394-L395","name":"SlimCheck.Iff.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Iff.printableProp","doc":""},"SlimCheck.IO.runRandWith":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L131-L132","name":"SlimCheck.IO.runRandWith","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.IO.runRandWith","doc":""},"SlimCheck.IO.runRand":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/Random.lean#L124-L129","name":"SlimCheck.IO.runRand","docLink":"./LSpec/SlimCheck/Control/Random.html#SlimCheck.IO.runRand","doc":"Computes a `Rand α` using the global `stdGenRef` as RNG.\nNote that:\n- `stdGenRef` is not necessarily properly seeded on program startup\n  as of now and will therefore be deterministic.\n- `stdGenRef` is not thread local, hence two threads accessing it\n  at the same time will get the exact same generator.\n"},"SlimCheck.Gen.run":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L92-L93","name":"SlimCheck.Gen.run","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen.run","doc":"Execute a `Gen` inside the `IO` monad using `size` as the example size"},"SlimCheck.Gen.resize":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L49-L50","name":"SlimCheck.Gen.resize","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen.resize","doc":"Apply a function to the size parameter. "},"SlimCheck.Gen.prodOf":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L86-L87","name":"SlimCheck.Gen.prodOf","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen.prodOf","doc":"Given two generators produces a tuple consisting out of the result of both "},"SlimCheck.Gen.permutationOf":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L78-L83","name":"SlimCheck.Gen.permutationOf","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen.permutationOf","doc":"Generate a random permutation of a given list. "},"SlimCheck.Gen.oneOf":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L67-L69","name":"SlimCheck.Gen.oneOf","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen.oneOf","doc":"Given a list of example generators, choose one to create an example. "},"SlimCheck.Gen.listOf":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L63-L64","name":"SlimCheck.Gen.listOf","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen.listOf","doc":"Create an `List` of examples using `x`. The size is controlled\nby the size parameter of `Gen`. "},"SlimCheck.Gen.getSize":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L45-L46","name":"SlimCheck.Gen.getSize","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen.getSize","doc":"Get access to the size parameter of the `Gen` monad. "},"SlimCheck.Gen.elements":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L72-L74","name":"SlimCheck.Gen.elements","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen.elements","doc":"Given a list of examples, choose one to create an example. "},"SlimCheck.Gen.chooseNatLt":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L41-L42","name":"SlimCheck.Gen.chooseNatLt","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen.chooseNatLt","doc":"Generate a `Nat` example between `x` and `y` (exclusively). "},"SlimCheck.Gen.chooseAny":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L33-L34","name":"SlimCheck.Gen.chooseAny","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen.chooseAny","doc":"Lift `Random.random` to the `Gen` monad. "},"SlimCheck.Gen.choose":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L37-L38","name":"SlimCheck.Gen.choose","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen.choose","doc":"Lift `BoundedRandom.randomR` to the `Gen` monad. "},"SlimCheck.Gen.arrayOf":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L54-L59","name":"SlimCheck.Gen.arrayOf","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen.arrayOf","doc":"Create an `Array` of examples using `x`. The size is controlled\nby the size parameter of `Gen`. "},"SlimCheck.Gen":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Gen.lean#L28-L28","name":"SlimCheck.Gen","docLink":"./LSpec/SlimCheck/Gen.html#SlimCheck.Gen","doc":"Monad to generate random examples to test properties with.\nIt has a `Nat` parameter so that the caller can decide on the\nsize of the examples. "},"SlimCheck.Fin.shrinkable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L136-L137","name":"SlimCheck.Fin.shrinkable","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Fin.shrinkable","doc":""},"SlimCheck.Fin.shrink":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L128-L134","name":"SlimCheck.Fin.shrink","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Fin.shrink","doc":"`Fin.shrink` works like `Nat.shrink` but instead operates on `Fin`. "},"SlimCheck.Fin.sampleableExt":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L164-L165","name":"SlimCheck.Fin.sampleableExt","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Fin.sampleableExt","doc":""},"SlimCheck.False.printableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L406-L407","name":"SlimCheck.False.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.False.printableProp","doc":""},"SlimCheck.Eq.printableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L376-L377","name":"SlimCheck.Eq.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Eq.printableProp","doc":""},"SlimCheck.DefaultRange":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/DefaultRange.lean#L37-L39","name":"SlimCheck.DefaultRange","docLink":"./LSpec/SlimCheck/Control/DefaultRange.html#SlimCheck.DefaultRange","doc":""},"SlimCheck.Decorations.tacticMk_decorations":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L485-L495","name":"SlimCheck.Decorations.tacticMk_decorations","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Decorations.tacticMk_decorations","doc":"In a goal of the shape `⊢ DecorationsOf p`, `mk_decoration` examines\nthe syntax of `p` and adds `NamedBinder` around universal quantifications\nto improve error messages. This tool can be used in the declaration of a\nfunction as follows:\n```lean\ndef foo (p : Prop) (p' : Decorations.DecorationsOf p := by mk_decorations) [Checkable p'] : ...\n```\n`p` is the parameter given by the user, `p'` is a definitionally equivalent\nproposition where the quantifiers are annotated with `NamedBinder`.\n"},"SlimCheck.Decorations.addDecorations":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L466-L475","name":"SlimCheck.Decorations.addDecorations","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Decorations.addDecorations","doc":"Traverse the syntax of a proposition to find universal quantifiers\nquantifiers and add `NamedBinder` annotations next to them. "},"SlimCheck.Decorations.DecorationsOf":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L480-L480","name":"SlimCheck.Decorations.DecorationsOf","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Decorations.DecorationsOf","doc":"`DecorationsOf p` is used as a hint to `mk_decorations` to specify\nthat the goal should be satisfied with a proposition equivalent to `p`\nwith added annotations. "},"SlimCheck.Configuration.verbose":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L197-L201","name":"SlimCheck.Configuration.verbose","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Configuration.verbose","doc":"A configuration with all the trace options enabled, useful for debugging. "},"SlimCheck.Configuration":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L91-L101","name":"SlimCheck.Configuration","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Configuration","doc":"Configuration for testing a property. "},"SlimCheck.Checkable.varCheckable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L329-L345","name":"SlimCheck.Checkable.varCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.varCheckable","doc":"Test a universal property by creating a sample of the right type and instantiating the\nbound variable with it. "},"SlimCheck.Checkable.unusedVarCheckable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L354-L362","name":"SlimCheck.Checkable.unusedVarCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.unusedVarCheckable","doc":""},"SlimCheck.Checkable.slimTrace":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L212-L212","name":"SlimCheck.Checkable.slimTrace","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.slimTrace","doc":"A `dbgTrace` with special formatting "},"SlimCheck.Checkable.runSuiteAux":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L435-L446","name":"SlimCheck.Checkable.runSuiteAux","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.runSuiteAux","doc":"Try `n` times to find a counter-example for `p`. "},"SlimCheck.Checkable.runSuite":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L449-L450","name":"SlimCheck.Checkable.runSuite","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.runSuite","doc":"Try to find a counter-example of `p`. "},"SlimCheck.Checkable.runProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L209-L209","name":"SlimCheck.Checkable.runProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.runProp","doc":""},"SlimCheck.Checkable.propVarCheckable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L348-L352","name":"SlimCheck.Checkable.propVarCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.propVarCheckable","doc":"Test a universal property about propositions "},"SlimCheck.Checkable.orCheckable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L220-L230","name":"SlimCheck.Checkable.orCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.orCheckable","doc":""},"SlimCheck.Checkable.minimizeAux":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L297-L315","name":"SlimCheck.Checkable.minimizeAux","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.minimizeAux","doc":"Shrink a counter-example `x` by using `Shrinkable.shrink x`, picking the first\ncandidate that falsifies a property and recursively shrinking that one.\nThe process is guaranteed to terminate because `shrink x` produces\na proof that all the values it produces are smaller (according to `SizeOf`)\nthan `x`. "},"SlimCheck.Checkable.minimize":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L319-L325","name":"SlimCheck.Checkable.minimize","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.minimize","doc":"Once a property fails to hold on an example, look for smaller counter-examples\nto show the user. "},"SlimCheck.Checkable.key":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L233-L242","name":"SlimCheck.Checkable.key","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.key","doc":""},"SlimCheck.Checkable.instInhabitedOptionT":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L289-L290","name":"SlimCheck.Checkable.instInhabitedOptionT","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.instInhabitedOptionT","doc":""},"SlimCheck.Checkable.iffCheckable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L244-L247","name":"SlimCheck.Checkable.iffCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.iffCheckable","doc":""},"SlimCheck.Checkable.formatFailure":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L270-L279","name":"SlimCheck.Checkable.formatFailure","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.formatFailure","doc":"Format the counter-examples found in a test failure.\n"},"SlimCheck.Checkable.forallTypesCheckable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L262-L265","name":"SlimCheck.Checkable.forallTypesCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.forallTypesCheckable","doc":""},"SlimCheck.Checkable.decidableCheckable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L364-L370","name":"SlimCheck.Checkable.decidableCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.decidableCheckable","doc":""},"SlimCheck.Checkable.decGuardCheckable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L249-L260","name":"SlimCheck.Checkable.decGuardCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.decGuardCheckable","doc":""},"SlimCheck.Checkable.checkIO":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L453-L456","name":"SlimCheck.Checkable.checkIO","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.checkIO","doc":"Run a test suite for `p` in `BaseIO` using the global RNG in `stdGenRef`. "},"SlimCheck.Checkable.check.go":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L506-L510","name":"SlimCheck.Checkable.check.go","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.check.go","doc":"HACK: https://github.com/leanprover/lean4/issues/1247 "},"SlimCheck.Checkable.check":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L504-L510","name":"SlimCheck.Checkable.check","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.check","doc":"Run a test suite for `p` and throw an exception if `p` does not not hold."},"SlimCheck.Checkable.andCheckable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L214-L218","name":"SlimCheck.Checkable.andCheckable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.andCheckable","doc":""},"SlimCheck.Checkable.addShrinks":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L284-L286","name":"SlimCheck.Checkable.addShrinks","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable.addShrinks","doc":"Increase the number of shrinking steps in a test result.\n"},"SlimCheck.Checkable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L117-L118","name":"SlimCheck.Checkable","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Checkable","doc":"`Checkable p` uses random examples to try to disprove `p`. "},"SlimCheck.Char.shrinkable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L147-L147","name":"SlimCheck.Char.shrinkable","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Char.shrinkable","doc":""},"SlimCheck.Char.sampleableDefault":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L185-L186","name":"SlimCheck.Char.sampleableDefault","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Char.sampleableDefault","doc":""},"SlimCheck.Char.sampleable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L176-L183","name":"SlimCheck.Char.sampleable","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Char.sampleable","doc":"This can be specialized into customized `SampleableExt Char` instances.\nThe resulting instance has `1 / length` chances of making an unrestricted choice of characters\nand it otherwise chooses a character from `chars` with uniform probabilities.  "},"SlimCheck.Bounded":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Control/DefaultRange.lean#L33-L35","name":"SlimCheck.Bounded","docLink":"./LSpec/SlimCheck/Control/DefaultRange.html#SlimCheck.Bounded","doc":""},"SlimCheck.Bool.shrinkable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L146-L146","name":"SlimCheck.Bool.shrinkable","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Bool.shrinkable","doc":""},"SlimCheck.Bool.sampleableExt":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Sampleable.lean#L170-L171","name":"SlimCheck.Bool.sampleableExt","docLink":"./LSpec/SlimCheck/Sampleable.html#SlimCheck.Bool.sampleableExt","doc":""},"SlimCheck.Bool.printableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L409-L410","name":"SlimCheck.Bool.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.Bool.printableProp","doc":""},"SlimCheck.And.printableProp":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/SlimCheck/Checkable.lean#L388-L389","name":"SlimCheck.And.printableProp","docLink":"./LSpec/SlimCheck/Checkable.html#SlimCheck.And.printableProp","doc":""},"SizeOfRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L193-L194","name":"SizeOfRef","docLink":"./Init/WF.html#SizeOfRef","doc":""},"SizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L11-L12","name":"SizeOf","docLink":"./Init/SizeOf.html#SizeOf","doc":""},"Sigma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L69-L71","name":"Sigma","docLink":"./Init/Core.html#Sigma","doc":""},"ShiftRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1085-L1086","name":"ShiftRight","docLink":"./Init/Prelude.html#ShiftRight","doc":""},"ShiftLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1082-L1083","name":"ShiftLeft","docLink":"./Init/Prelude.html#ShiftLeft","doc":""},"Setoid.trans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L714-L715","name":"Setoid.trans","docLink":"./Init/Core.html#Setoid.trans","doc":""},"Setoid.symm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L711-L712","name":"Setoid.symm","docLink":"./Init/Core.html#Setoid.symm","doc":""},"Setoid.refl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L708-L709","name":"Setoid.refl","docLink":"./Init/Core.html#Setoid.refl","doc":""},"Setoid":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L697-L699","name":"Setoid","docLink":"./Init/Core.html#Setoid","doc":""},"SeqRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1927-L1928","name":"SeqRight","docLink":"./Init/Prelude.html#SeqRight","doc":""},"SeqLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1924-L1925","name":"SeqLeft","docLink":"./Init/Prelude.html#SeqLeft","doc":""},"Seq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1921-L1922","name":"Seq","docLink":"./Init/Prelude.html#Seq","doc":""},"STWorld":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L20-L20","name":"STWorld","docLink":"./Init/System/ST.html#STWorld","doc":""},"ST.mkRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L101-L101","name":"ST.mkRef","docLink":"./Init/System/ST.html#ST.mkRef","doc":""},"ST.instNonemptyRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L51-L52","name":"ST.instNonemptyRef","docLink":"./Init/System/ST.html#ST.instNonemptyRef","doc":""},"ST.RefPointed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L45-L45","name":"ST.RefPointed","docLink":"./Init/System/ST.html#ST.RefPointed","doc":"References "},"ST.Ref.take":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L105-L105","name":"ST.Ref.take","docLink":"./Init/System/ST.html#ST.Ref.take","doc":""},"ST.Ref.swap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L104-L104","name":"ST.Ref.swap","docLink":"./Init/System/ST.html#ST.Ref.swap","doc":""},"ST.Ref.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L103-L103","name":"ST.Ref.set","docLink":"./Init/System/ST.html#ST.Ref.set","doc":""},"ST.Ref.ptrEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L106-L106","name":"ST.Ref.ptrEq","docLink":"./Init/System/ST.html#ST.Ref.ptrEq","doc":""},"ST.Ref.modifyGet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L108-L108","name":"ST.Ref.modifyGet","docLink":"./Init/System/ST.html#ST.Ref.modifyGet","doc":""},"ST.Ref.modify":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L107-L107","name":"ST.Ref.modify","docLink":"./Init/System/ST.html#ST.Ref.modify","doc":""},"ST.Ref.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L102-L102","name":"ST.Ref.get","docLink":"./Init/System/ST.html#ST.Ref.get","doc":""},"ST.Ref":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L47-L49","name":"ST.Ref","docLink":"./Init/System/ST.html#ST.Ref","doc":""},"ST.Prim.mkRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L62-L62","name":"ST.Prim.mkRef","docLink":"./Init/System/ST.html#ST.Prim.mkRef","doc":""},"ST.Prim.Ref.take":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L70-L70","name":"ST.Prim.Ref.take","docLink":"./Init/System/ST.html#ST.Prim.Ref.take","doc":""},"ST.Prim.Ref.swap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L68-L68","name":"ST.Prim.Ref.swap","docLink":"./Init/System/ST.html#ST.Prim.Ref.swap","doc":""},"ST.Prim.Ref.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L66-L66","name":"ST.Prim.Ref.set","docLink":"./Init/System/ST.html#ST.Prim.Ref.set","doc":""},"ST.Prim.Ref.ptrEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L72-L72","name":"ST.Prim.Ref.ptrEq","docLink":"./Init/System/ST.html#ST.Prim.Ref.ptrEq","doc":""},"ST.Prim.Ref.modifyUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L74-L76","name":"ST.Prim.Ref.modifyUnsafe","docLink":"./Init/System/ST.html#ST.Prim.Ref.modifyUnsafe","doc":""},"ST.Prim.Ref.modifyGetUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L78-L82","name":"ST.Prim.Ref.modifyGetUnsafe","docLink":"./Init/System/ST.html#ST.Prim.Ref.modifyGetUnsafe","doc":""},"ST.Prim.Ref.modifyGet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L90-L94","name":"ST.Prim.Ref.modifyGet","docLink":"./Init/System/ST.html#ST.Prim.Ref.modifyGet","doc":""},"ST.Prim.Ref.modify":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L85-L87","name":"ST.Prim.Ref.modify","docLink":"./Init/System/ST.html#ST.Prim.Ref.modify","doc":""},"ST.Prim.Ref.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L64-L64","name":"ST.Prim.Ref.get","docLink":"./Init/System/ST.html#ST.Prim.Ref.get","doc":""},"ST":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L12-L12","name":"ST","docLink":"./Init/System/ST.html#ST","doc":""},"ReprTuple":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L81-L82","name":"ReprTuple","docLink":"./Init/Data/Repr.html#ReprTuple","doc":""},"ReprAtom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L32-L32","name":"ReprAtom","docLink":"./Init/Data/Repr.html#ReprAtom","doc":"Auxiliary class for marking types that should be considered atomic by `Repr` methods.\nWe use it at `Repr (List α)` to decide whether `bracketFill` should be used or not. "},"Repr.addAppParen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L46-L50","name":"Repr.addAppParen","docLink":"./Init/Data/Repr.html#Repr.addAppParen","doc":""},"Repr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L16-L17","name":"Repr","docLink":"./Init/Data/Repr.html#Repr","doc":""},"ReaderT.tryFinally":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Reader.lean#L32-L33","name":"ReaderT.tryFinally","docLink":"./Init/Control/Reader.html#ReaderT.tryFinally","doc":""},"ReaderT.run_seqRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L209-L210","name":"ReaderT.run_seqRight","docLink":"./Init/Control/Lawful.html#ReaderT.run_seqRight","doc":""},"ReaderT.run_seqLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L212-L213","name":"ReaderT.run_seqLeft","docLink":"./Init/Control/Lawful.html#ReaderT.run_seqLeft","doc":""},"ReaderT.run_seq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L206-L207","name":"ReaderT.run_seq","docLink":"./Init/Control/Lawful.html#ReaderT.run_seq","doc":""},"ReaderT.run_read":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L204-L204","name":"ReaderT.run_read","docLink":"./Init/Control/Lawful.html#ReaderT.run_read","doc":""},"ReaderT.run_pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L190-L190","name":"ReaderT.run_pure","docLink":"./Init/Control/Lawful.html#ReaderT.run_pure","doc":""},"ReaderT.run_monadMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L201-L202","name":"ReaderT.run_monadMap","docLink":"./Init/Control/Lawful.html#ReaderT.run_monadMap","doc":""},"ReaderT.run_monadLift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L198-L199","name":"ReaderT.run_monadLift","docLink":"./Init/Control/Lawful.html#ReaderT.run_monadLift","doc":""},"ReaderT.run_map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L195-L196","name":"ReaderT.run_map","docLink":"./Init/Control/Lawful.html#ReaderT.run_map","doc":""},"ReaderT.run_bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L192-L193","name":"ReaderT.run_bind","docLink":"./Init/Control/Lawful.html#ReaderT.run_bind","doc":""},"ReaderT.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2054-L2055","name":"ReaderT.run","docLink":"./Init/Prelude.html#ReaderT.run","doc":""},"ReaderT.read":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2074-L2075","name":"ReaderT.read","docLink":"./Init/Prelude.html#ReaderT.read","doc":""},"ReaderT.pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2077-L2078","name":"ReaderT.pure","docLink":"./Init/Prelude.html#ReaderT.pure","doc":""},"ReaderT.orElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Reader.lean#L15-L16","name":"ReaderT.orElse","docLink":"./Init/Control/Reader.html#ReaderT.orElse","doc":""},"ReaderT.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2083-L2084","name":"ReaderT.map","docLink":"./Init/Prelude.html#ReaderT.map","doc":""},"ReaderT.instMonadReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2086-L2089","name":"ReaderT.instMonadReaderT","docLink":"./Init/Prelude.html#ReaderT.instMonadReaderT","doc":""},"ReaderT.instMonadLiftReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2062-L2063","name":"ReaderT.instMonadLiftReaderT","docLink":"./Init/Prelude.html#ReaderT.instMonadLiftReaderT","doc":""},"ReaderT.instMonadFunctorReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2091-L2092","name":"ReaderT.instMonadFunctorReaderT","docLink":"./Init/Prelude.html#ReaderT.instMonadFunctorReaderT","doc":""},"ReaderT.instMonadExceptOfReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2065-L2067","name":"ReaderT.instMonadExceptOfReaderT","docLink":"./Init/Prelude.html#ReaderT.instMonadExceptOfReaderT","doc":""},"ReaderT.instLawfulMonadReaderTInstMonadReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L215-L224","name":"ReaderT.instLawfulMonadReaderTInstMonadReaderT","docLink":"./Init/Control/Lawful.html#ReaderT.instLawfulMonadReaderTInstMonadReaderT","doc":""},"ReaderT.instAlternativeReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Reader.lean#L21-L23","name":"ReaderT.instAlternativeReaderT","docLink":"./Init/Control/Reader.html#ReaderT.instAlternativeReaderT","doc":""},"ReaderT.failure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Reader.lean#L18-L19","name":"ReaderT.failure","docLink":"./Init/Control/Reader.html#ReaderT.failure","doc":""},"ReaderT.ext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L186-L188","name":"ReaderT.ext","docLink":"./Init/Control/Lawful.html#ReaderT.ext","doc":""},"ReaderT.bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2080-L2081","name":"ReaderT.bind","docLink":"./Init/Prelude.html#ReaderT.bind","doc":""},"ReaderT.adapt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2094-L2095","name":"ReaderT.adapt","docLink":"./Init/Prelude.html#ReaderT.adapt","doc":""},"ReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2048-L2049","name":"ReaderT","docLink":"./Init/Prelude.html#ReaderT","doc":"An implementation of [ReaderT](https://hackage.haskell.org/package/transformers-0.5.5.0/docs/Control-Monad-Trans-Reader.html#t:ReaderT) "},"Reader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Reader.lean#L35-L35","name":"Reader","docLink":"./Init/Control/Reader.html#Reader","doc":""},"RandomGen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L17-L29","name":"RandomGen","docLink":"./Init/Data/Random.html#RandomGen","doc":"Interface for random number generators. "},"Quotient.sound":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L857-L858","name":"Quotient.sound","docLink":"./Init/Core.html#Quotient.sound","doc":""},"Quotient.recOnSubsingleton₂":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1007-L1020","name":"Quotient.recOnSubsingleton₂","docLink":"./Init/Core.html#Quotient.recOnSubsingleton₂","doc":""},"Quotient.recOnSubsingleton":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L901-L906","name":"Quotient.recOnSubsingleton","docLink":"./Init/Core.html#Quotient.recOnSubsingleton","doc":""},"Quotient.recOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L893-L898","name":"Quotient.recOn","docLink":"./Init/Core.html#Quotient.recOn","doc":""},"Quotient.rec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L885-L890","name":"Quotient.rec","docLink":"./Init/Core.html#Quotient.rec","doc":""},"Quotient.mk'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L854-L855","name":"Quotient.mk'","docLink":"./Init/Core.html#Quotient.mk'","doc":""},"Quotient.mk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L851-L852","name":"Quotient.mk","docLink":"./Init/Core.html#Quotient.mk","doc":""},"Quotient.lift₂":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L922-L930","name":"Quotient.lift₂","docLink":"./Init/Core.html#Quotient.lift₂","doc":""},"Quotient.liftOn₂":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L932-L938","name":"Quotient.liftOn₂","docLink":"./Init/Core.html#Quotient.liftOn₂","doc":""},"Quotient.liftOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L866-L867","name":"Quotient.liftOn","docLink":"./Init/Core.html#Quotient.liftOn","doc":""},"Quotient.lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L860-L861","name":"Quotient.lift","docLink":"./Init/Core.html#Quotient.lift","doc":""},"Quotient.ind₂":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L941-L949","name":"Quotient.ind₂","docLink":"./Init/Core.html#Quotient.ind₂","doc":""},"Quotient.inductionOn₃":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L963-L974","name":"Quotient.inductionOn₃","docLink":"./Init/Core.html#Quotient.inductionOn₃","doc":""},"Quotient.inductionOn₂":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L952-L960","name":"Quotient.inductionOn₂","docLink":"./Init/Core.html#Quotient.inductionOn₂","doc":""},"Quotient.inductionOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L870-L874","name":"Quotient.inductionOn","docLink":"./Init/Core.html#Quotient.inductionOn","doc":""},"Quotient.ind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L863-L864","name":"Quotient.ind","docLink":"./Init/Core.html#Quotient.ind","doc":""},"Quotient.hrecOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L909-L914","name":"Quotient.hrecOn","docLink":"./Init/Core.html#Quotient.hrecOn","doc":""},"Quotient.exists_rep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L876-L877","name":"Quotient.exists_rep","docLink":"./Init/Core.html#Quotient.exists_rep","doc":""},"Quotient.exact":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L996-L997","name":"Quotient.exact","docLink":"./Init/Core.html#Quotient.exact","doc":""},"Quotient":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L845-L846","name":"Quotient","docLink":"./Init/Core.html#Quotient","doc":""},"Quot.sound":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L759-L759","name":"Quot.sound","docLink":"./Init/Core.html#Quot.sound","doc":""},"Quot.recOnSubsingleton":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L823-L830","name":"Quot.recOnSubsingleton","docLink":"./Init/Core.html#Quot.recOnSubsingleton","doc":""},"Quot.recOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L816-L821","name":"Quot.recOn","docLink":"./Init/Core.html#Quot.recOn","doc":""},"Quot.rec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L810-L814","name":"Quot.rec","docLink":"./Init/Core.html#Quot.rec","doc":""},"Quot.liftOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L774-L775","name":"Quot.liftOn","docLink":"./Init/Core.html#Quot.liftOn","doc":""},"Quot.liftIndepPr1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L802-L808","name":"Quot.liftIndepPr1","docLink":"./Init/Core.html#Quot.liftIndepPr1","doc":""},"Quot.liftBeta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L761-L766","name":"Quot.liftBeta","docLink":"./Init/Core.html#Quot.liftBeta","doc":""},"Quot.lcInv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L425-L425","name":"Quot.lcInv","docLink":"./Init/Prelude.html#Quot.lcInv","doc":"Unsafe auxiliary constant used by the compiler to erase `Quot.lift`.\n"},"Quot.inductionOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L778-L782","name":"Quot.inductionOn","docLink":"./Init/Core.html#Quot.inductionOn","doc":""},"Quot.indepCoherent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L796-L800","name":"Quot.indepCoherent","docLink":"./Init/Core.html#Quot.indepCoherent","doc":""},"Quot.indep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L793-L794","name":"Quot.indep","docLink":"./Init/Core.html#Quot.indep","doc":""},"Quot.indBeta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L768-L772","name":"Quot.indBeta","docLink":"./Init/Core.html#Quot.indBeta","doc":""},"Quot.hrecOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L832-L839","name":"Quot.hrecOn","docLink":"./Init/Core.html#Quot.hrecOn","doc":""},"Quot.exists_rep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L784-L785","name":"Quot.exists_rep","docLink":"./Init/Core.html#Quot.exists_rep","doc":""},"Pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1912-L1913","name":"Pure","docLink":"./Init/Prelude.html#Pure","doc":""},"Prod.rprod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L256-L261","name":"Prod.rprod","docLink":"./Init/WF.html#Prod.rprod","doc":""},"Prod.repr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L92-L93","name":"Prod.repr","docLink":"./Init/Data/Repr.html#Prod.repr","doc":""},"Prod.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L663-L665","name":"Prod.map","docLink":"./Init/Core.html#Prod.map","doc":""},"Prod.lt_def":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L657-L658","name":"Prod.lt_def","docLink":"./Init/Core.html#Prod.lt_def","doc":""},"Prod.lexAccessible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L231-L240","name":"Prod.lexAccessible","docLink":"./Init/WF.html#Prod.lexAccessible","doc":""},"Prod.lex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L243-L245","name":"Prod.lex","docLink":"./Init/WF.html#Prod.lex","doc":""},"Prod.instWellFoundedRelationProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L247-L248","name":"Prod.instWellFoundedRelationProd","docLink":"./Init/WF.html#Prod.instWellFoundedRelationProd","doc":""},"Prod.foldI":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L677-L678","name":"Prod.foldI","docLink":"./Init/Data/Nat/Basic.html#Prod.foldI","doc":""},"Prod.ext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L660-L661","name":"Prod.ext","docLink":"./Init/Core.html#Prod.ext","doc":""},"Prod.anyI":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L680-L681","name":"Prod.anyI","docLink":"./Init/Data/Nat/Basic.html#Prod.anyI","doc":""},"Prod.allI":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L683-L684","name":"Prod.allI","docLink":"./Init/Data/Nat/Basic.html#Prod.allI","doc":""},"Prod.RProdSubLex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L251-L253","name":"Prod.RProdSubLex","docLink":"./Init/WF.html#Prod.RProdSubLex","doc":""},"Prod.RProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L222-L223","name":"Prod.RProd","docLink":"./Init/WF.html#Prod.RProd","doc":""},"Prod.Lex.right'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L216-L219","name":"Prod.Lex.right'","docLink":"./Init/WF.html#Prod.Lex.right'","doc":""},"Prod.Lex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L211-L213","name":"Prod.Lex","docLink":"./Init/WF.html#Prod.Lex","doc":""},"Prod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L462-L466","name":"Prod","docLink":"./Init/Prelude.html#Prod","doc":"Product type (aka pair). You can use `α × β` as notation for `Prod α β`.\nGiven `a : α` and `b : β`, `Prod.mk a b : Prod α β`. You can use `(a, b)`\nas notation for `Prod.mk a b`. Moreover, `(a, b, c)` is notation for\n`Prod.mk a (Prod.mk b c)`.\nGiven `p : Prod α β`, `p.1 : α` and `p.2 : β`. They are short for `Prod.fst p`\nand `Prod.snd p` respectively. You can also write `p.fst` and `p.snd`.\nFor more information: [Constructors with Arguments](https://leanprover.github.io/theorem_proving_in_lean4/inductive_types.html?highlight=Prod#constructors-with-arguments)\n"},"Pow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1058-L1059","name":"Pow","docLink":"./Init/Prelude.html#Pow","doc":""},"PUnit.subsingleton":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L680-L681","name":"PUnit.subsingleton","docLink":"./Init/Core.html#PUnit.subsingleton","doc":""},"PUnit.eq_punit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L683-L684","name":"PUnit.eq_punit","docLink":"./Init/Core.html#PUnit.eq_punit","doc":""},"PUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L108-L110","name":"PUnit","docLink":"./Init/Prelude.html#PUnit","doc":"The unit type, the canonical type with one element, named `unit` or `()`.\nThis is the universe-polymorphic version of `Unit`; it is preferred to use\n`Unit` instead where applicable.\nFor more information about universe levels: [Types as objects](https://leanprover.github.io/theorem_proving_in_lean4/dependent_type_theory.html#types-as-objects)\n"},"PSum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L63-L65","name":"PSum","docLink":"./Init/Core.html#PSum","doc":""},"PSigma.skipLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L348-L350","name":"PSigma.skipLeft","docLink":"./Init/WF.html#PSigma.skipLeft","doc":""},"PSigma.revLexAccessible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L328-L338","name":"PSigma.revLexAccessible","docLink":"./Init/WF.html#PSigma.revLexAccessible","doc":""},"PSigma.revLex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L340-L341","name":"PSigma.revLex","docLink":"./Init/WF.html#PSigma.revLex","doc":""},"PSigma.mkSkipLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L352-L353","name":"PSigma.mkSkipLeft","docLink":"./Init/WF.html#PSigma.mkSkipLeft","doc":""},"PSigma.lexNdepWf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L310-L311","name":"PSigma.lexNdepWf","docLink":"./Init/WF.html#PSigma.lexNdepWf","doc":""},"PSigma.lexNdep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L307-L308","name":"PSigma.lexNdep","docLink":"./Init/WF.html#PSigma.lexNdep","doc":""},"PSigma.lexAccessible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L283-L292","name":"PSigma.lexAccessible","docLink":"./Init/WF.html#PSigma.lexAccessible","doc":""},"PSigma.lex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L295-L297","name":"PSigma.lex","docLink":"./Init/WF.html#PSigma.lex","doc":""},"PSigma.instWellFoundedRelationPSigma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L299-L300","name":"PSigma.instWellFoundedRelationPSigma","docLink":"./Init/WF.html#PSigma.instWellFoundedRelationPSigma","doc":""},"PSigma.eta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L672-L676","name":"PSigma.eta","docLink":"./Init/Core.html#PSigma.eta","doc":""},"PSigma.SkipLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L345-L346","name":"PSigma.SkipLeft","docLink":"./Init/WF.html#PSigma.SkipLeft","doc":""},"PSigma.RevLex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L318-L320","name":"PSigma.RevLex","docLink":"./Init/WF.html#PSigma.RevLex","doc":""},"PSigma.Lex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L274-L276","name":"PSigma.Lex","docLink":"./Init/WF.html#PSigma.Lex","doc":""},"PSigma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L75-L77","name":"PSigma","docLink":"./Init/Core.html#PSigma","doc":""},"PProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L474-L478","name":"PProd","docLink":"./Init/Prelude.html#PProd","doc":"Similar to `Prod`, but `α` and `β` can be propositions.\nWe use this Type internally to automatically generate the `brecOn` recursor.\n"},"PNonScalar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L175-L176","name":"PNonScalar","docLink":"./Init/Core.html#PNonScalar","doc":"Some type that is not a scalar value in our runtime and is universe polymorphic. "},"PLift.up_down":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L730-L730","name":"PLift.up_down","docLink":"./Init/Prelude.html#PLift.up_down","doc":"Bijection between `α` and `PLift α` "},"PLift.down_up":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L733-L733","name":"PLift.down_up","docLink":"./Init/Prelude.html#PLift.down_up","doc":"Bijection between `α` and `PLift α` "},"PLift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L725-L727","name":"PLift","docLink":"./Init/Prelude.html#PLift","doc":"Universe lifting operation from `Sort u` to `Type u`. "},"PEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L198-L198","name":"PEmpty","docLink":"./Init/Prelude.html#PEmpty","doc":"The universe-polymorphic empty type. Prefer `Empty` or `False` where\npossible.\n"},"Ordering.isLE":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L69-L72","name":"Ordering.isLE","docLink":"./Init/Data/Ord.html#Ordering.isLE","doc":""},"Ordering":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L11-L13","name":"Ordering","docLink":"./Init/Data/Ord.html#Ordering","doc":""},"Ord":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Ord.lean#L16-L17","name":"Ord","docLink":"./Init/Data/Ord.html#Ord","doc":""},"OrOp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1076-L1077","name":"OrOp","docLink":"./Init/Prelude.html#OrOp","doc":""},"OrElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1064-L1065","name":"OrElse","docLink":"./Init/Prelude.html#OrElse","doc":""},"Or.intro_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L522-L523","name":"Or.intro_right","docLink":"./Init/Prelude.html#Or.intro_right","doc":"Alias for `Or.inr`. "},"Or.intro_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L518-L519","name":"Or.intro_left","docLink":"./Init/Prelude.html#Or.intro_left","doc":"Alias for `Or.inl`. "},"Or.elim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L529-L532","name":"Or.elim","docLink":"./Init/Prelude.html#Or.elim","doc":"Proof by cases on an `Or`. If `a ∨ b`, and both `a` and `b` imply\nproposition `c`, then `c` is true.\n"},"Or":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L511-L515","name":"Or","docLink":"./Init/Prelude.html#Or","doc":"`Or a b`, or `a ∨ b`, is the disjunction of propositions. There are two\nconstructors for `Or`, called `Or.inl : a → a ∨ b` and `Or.inr : b → a ∨ b`,\nand you can use `match` or `cases` to destruct an `Or` assumption into the\ntwo cases.\n"},"OptionT.tryCatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L58-L60","name":"OptionT.tryCatch","docLink":"./Init/Control/Option.html#OptionT.tryCatch","doc":""},"OptionT.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L18-L19","name":"OptionT.run","docLink":"./Init/Control/Option.html#OptionT.run","doc":""},"OptionT.pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L32-L33","name":"OptionT.pure","docLink":"./Init/Control/Option.html#OptionT.pure","doc":""},"OptionT.orElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L39-L42","name":"OptionT.orElse","docLink":"./Init/Control/Option.html#OptionT.orElse","doc":""},"OptionT.mk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L24-L25","name":"OptionT.mk","docLink":"./Init/Control/Option.html#OptionT.mk","doc":""},"OptionT.lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L51-L52","name":"OptionT.lift","docLink":"./Init/Control/Option.html#OptionT.lift","doc":""},"OptionT.instMonadOptionT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L35-L37","name":"OptionT.instMonadOptionT","docLink":"./Init/Control/Option.html#OptionT.instMonadOptionT","doc":""},"OptionT.instMonadLiftOptionT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L54-L54","name":"OptionT.instMonadLiftOptionT","docLink":"./Init/Control/Option.html#OptionT.instMonadLiftOptionT","doc":""},"OptionT.instMonadFunctorOptionT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L56-L56","name":"OptionT.instMonadFunctorOptionT","docLink":"./Init/Control/Option.html#OptionT.instMonadFunctorOptionT","doc":""},"OptionT.instMonadExceptOfUnitOptionT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L62-L64","name":"OptionT.instMonadExceptOfUnitOptionT","docLink":"./Init/Control/Option.html#OptionT.instMonadExceptOfUnitOptionT","doc":""},"OptionT.instMonadExceptOfOptionT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L66-L68","name":"OptionT.instMonadExceptOfOptionT","docLink":"./Init/Control/Option.html#OptionT.instMonadExceptOfOptionT","doc":""},"OptionT.instAlternativeOptionT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L47-L49","name":"OptionT.instAlternativeOptionT","docLink":"./Init/Control/Option.html#OptionT.instAlternativeOptionT","doc":""},"OptionT.fail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L44-L45","name":"OptionT.fail","docLink":"./Init/Control/Option.html#OptionT.fail","doc":""},"OptionT.bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L27-L30","name":"OptionT.bind","docLink":"./Init/Control/Option.html#OptionT.bind","doc":""},"OptionT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Option.lean#L15-L16","name":"OptionT","docLink":"./Init/Control/Option.html#OptionT","doc":""},"Option.tryCatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L102-L105","name":"Option.tryCatch","docLink":"./Init/Data/Option/Basic.html#Option.tryCatch","doc":""},"Option.toMonad":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L13-L15","name":"Option.toMonad","docLink":"./Init/Data/Option/Basic.html#Option.toMonad","doc":""},"Option.toLOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LOption.lean#L24-L26","name":"Option.toLOption","docLink":"./Lean/Data/LOption.html#Option.toLOption","doc":""},"Option.toBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L17-L19","name":"Option.toBool","docLink":"./Init/Data/Option/Basic.html#Option.toBool","doc":""},"Option.repr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L67-L69","name":"Option.repr","docLink":"./Init/Data/Repr.html#Option.repr","doc":""},"Option.orElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L61-L63","name":"Option.orElse","docLink":"./Init/Data/Option/Basic.html#Option.orElse","doc":""},"Option.map_id":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L43-L44","name":"Option.map_id","docLink":"./Init/Data/Option/Basic.html#Option.map_id","doc":""},"Option.mapM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L37-L41","name":"Option.mapM","docLink":"./Init/Data/Option/Basic.html#Option.mapM","doc":""},"Option.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1659-L1661","name":"Option.map","docLink":"./Init/Prelude.html#Option.map","doc":""},"Option.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L68-L71","name":"Option.lt","docLink":"./Init/Data/Option/Basic.html#Option.lt","doc":""},"Option.isSome":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L21-L23","name":"Option.isSome","docLink":"./Init/Data/Option/Basic.html#Option.isSome","doc":""},"Option.isNone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L25-L27","name":"Option.isNone","docLink":"./Init/Data/Option/Basic.html#Option.isNone","doc":""},"Option.isEqSome":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L29-L31","name":"Option.isEqSome","docLink":"./Init/Data/Option/Basic.html#Option.isEqSome","doc":""},"Option.instOrElseOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L65-L66","name":"Option.instOrElseOption","docLink":"./Init/Data/Option/Basic.html#Option.instOrElseOption","doc":""},"Option.instFunctorOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L46-L47","name":"Option.instFunctorOption","docLink":"./Init/Data/Option/Basic.html#Option.instFunctorOption","doc":""},"Option.instDecidableRelOptionLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L73-L77","name":"Option.instDecidableRelOptionLt","docLink":"./Init/Data/Option/Basic.html#Option.instDecidableRelOptionLt","doc":""},"Option.getD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1655-L1657","name":"Option.getD","docLink":"./Init/Prelude.html#Option.getD","doc":""},"Option.get!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/BasicAux.lean#L14-L16","name":"Option.get!","docLink":"./Init/Data/Option/BasicAux.html#Option.get!","doc":""},"Option.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Instances.lean#L26-L28","name":"Option.format","docLink":"./Init/Data/Format/Instances.html#Option.format","doc":""},"Option.filter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L49-L51","name":"Option.filter","docLink":"./Init/Data/Option/Basic.html#Option.filter","doc":""},"Option.eq_of_eq_some":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Instances.lean#L11-L15","name":"Option.eq_of_eq_some","docLink":"./Init/Data/Option/Instances.html#Option.eq_of_eq_some","doc":""},"Option.eq_none_of_isNone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Instances.lean#L17-L18","name":"Option.eq_none_of_isNone","docLink":"./Init/Data/Option/Instances.html#Option.eq_none_of_isNone","doc":""},"Option.bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L33-L35","name":"Option.bind","docLink":"./Init/Data/Option/Basic.html#Option.bind","doc":""},"Option.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L57-L59","name":"Option.any","docLink":"./Init/Data/Option/Basic.html#Option.any","doc":""},"Option.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Option/Basic.lean#L53-L55","name":"Option.all","docLink":"./Init/Data/Option/Basic.html#Option.all","doc":""},"Option":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1644-L1646","name":"Option","docLink":"./Init/Prelude.html#Option","doc":""},"OfScientific":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/OfScientific.lean#L16-L17","name":"OfScientific","docLink":"./Init/Data/OfScientific.html#OfScientific","doc":"For decimal and scientific numbers (e.g., `1.23`, `3.12e10`).\nExamples:\n- `OfScientific.ofScientific 123 true 2`    represents `1.23`\n- `OfScientific.ofScientific 121 false 100` represents `121e100`\n"},"OfNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L967-L968","name":"OfNat","docLink":"./Init/Prelude.html#OfNat","doc":"For numeric literals notation "},"Not":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L207-L207","name":"Not","docLink":"./Init/Prelude.html#Not","doc":"`Not p`, or `¬p`, is the negation of `p`. It is defined to be `p → False`,\nso if your goal is `¬p` you can use `intro h` to turn the goal into\n`h : p ⊢ False`, and if you have `hn : ¬p` and `h : p` then `hn h : False`\nand `(hn h).elim` will prove anything.\nFor more information: [Propositional Logic](https://leanprover.github.io/theorem_proving_in_lean4/propositions_and_proofs.html#propositional-logic)\n"},"NonemptyType.type":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L744-L745","name":"NonemptyType.type","docLink":"./Init/Prelude.html#NonemptyType.type","doc":"The underlying type of a `NonemptyType`. "},"NonemptyType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L741-L741","name":"NonemptyType","docLink":"./Init/Prelude.html#NonemptyType","doc":"`NonemptyType.{u}` is the type of nonempty types in universe `u`.\nIt is mainly used in constant declarations where we wish to introduce a type\nand simultaneously assert that it is nonempty, but otherwise make the type\nopaque.\n"},"Nonempty.elim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L693-L695","name":"Nonempty.elim","docLink":"./Init/Prelude.html#Nonempty.elim","doc":"The elimination principle for `Nonempty α`. If `Nonempty α`, and we can\nprove `p` given any element `x : α`, then `p` holds. Note that it is essential\nthat `p` is a `Prop` here; the version with `p` being a `Sort u` is equivalent\nto `Classical.choice`.\n"},"Nonempty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L659-L661","name":"Nonempty","docLink":"./Init/Prelude.html#Nonempty","doc":"`Nonempty α` is a typeclass that says that `α` is not an empty type,\nthat is, there exists an element in the type. It differs from `Inhabited α`\nin that `Nonempty α` is a `Prop`, which means that it does not actually carry\nan element of `α`, only a proof that *there exists* such an element.\nGiven `Nonempty α`, you can construct an element of `α` *nonconstructively*\nusing `Classical.choice`.\n"},"NonScalar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L171-L172","name":"NonScalar","docLink":"./Init/Core.html#NonScalar","doc":"Some type that is not a scalar value in our runtime. "},"Neg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1049-L1050","name":"Neg","docLink":"./Init/Prelude.html#Neg","doc":""},"Ne.symm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L258-L259","name":"Ne.symm","docLink":"./Init/Core.html#Ne.symm","doc":""},"Ne.irrefl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L256-L256","name":"Ne.irrefl","docLink":"./Init/Core.html#Ne.irrefl","doc":""},"Ne.intro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L252-L252","name":"Ne.intro","docLink":"./Init/Core.html#Ne.intro","doc":""},"Ne.elim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L254-L254","name":"Ne.elim","docLink":"./Init/Core.html#Ne.elim","doc":""},"Ne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L243-L244","name":"Ne","docLink":"./Init/Core.html#Ne","doc":""},"Nat.zero_sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L569-L572","name":"Nat.zero_sub","docLink":"./Init/Data/Nat/Basic.html#Nat.zero_sub","doc":""},"Nat.zero_ne_one":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L390-L391","name":"Nat.zero_ne_one","docLink":"./Init/Data/Nat/Basic.html#Nat.zero_ne_one","doc":""},"Nat.zero_mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L131-L133","name":"Nat.zero_mul","docLink":"./Init/Data/Nat/Basic.html#Nat.zero_mul","doc":""},"Nat.zero_mod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L132-L137","name":"Nat.zero_mod","docLink":"./Init/Data/Nat/Div.html#Nat.zero_mod","doc":""},"Nat.zero_lt_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1255-L1256","name":"Nat.zero_lt_succ","docLink":"./Init/Prelude.html#Nat.zero_lt_succ","doc":""},"Nat.zero_lt_sub_of_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L493-L501","name":"Nat.zero_lt_sub_of_lt","docLink":"./Init/Data/Nat/Basic.html#Nat.zero_lt_sub_of_lt","doc":""},"Nat.zero_lt_one":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L362-L363","name":"Nat.zero_lt_one","docLink":"./Init/Data/Nat/Basic.html#Nat.zero_lt_one","doc":""},"Nat.zero_lt_of_ne_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L283-L286","name":"Nat.zero_lt_of_ne_zero","docLink":"./Init/Data/Nat/Basic.html#Nat.zero_lt_of_ne_zero","doc":""},"Nat.zero_lt_of_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L277-L281","name":"Nat.zero_lt_of_lt","docLink":"./Init/Data/Nat/Basic.html#Nat.zero_lt_of_lt","doc":""},"Nat.zero_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1247-L1249","name":"Nat.zero_le","docLink":"./Init/Prelude.html#Nat.zero_le","doc":""},"Nat.zero_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L49-L49","name":"Nat.zero_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.zero_eq","doc":""},"Nat.zero_add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L80-L82","name":"Nat.zero_add","docLink":"./Init/Data/Nat/Basic.html#Nat.zero_add","doc":""},"Nat.xor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Bitwise.lean#L38-L38","name":"Nat.xor","docLink":"./Init/Data/Nat/Bitwise.html#Nat.xor","doc":""},"Nat.toUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L286-L286","name":"Nat.toUSize","docLink":"./Init/Data/UInt.html#Nat.toUSize","doc":""},"Nat.toUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L14-L14","name":"Nat.toUInt8","docLink":"./Init/Data/UInt.html#Nat.toUInt8","doc":""},"Nat.toUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L203-L203","name":"Nat.toUInt64","docLink":"./Init/Data/UInt.html#Nat.toUInt64","doc":""},"Nat.toUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L151-L151","name":"Nat.toUInt32","docLink":"./Init/Data/UInt.html#Nat.toUInt32","doc":""},"Nat.toUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L79-L79","name":"Nat.toUInt16","docLink":"./Init/Data/UInt.html#Nat.toUInt16","doc":""},"Nat.toSuperscriptString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L162-L163","name":"Nat.toSuperscriptString","docLink":"./Init/Data/Repr.html#Nat.toSuperscriptString","doc":""},"Nat.toSuperDigitsAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L152-L157","name":"Nat.toSuperDigitsAux","docLink":"./Init/Data/Repr.html#Nat.toSuperDigitsAux","doc":""},"Nat.toSuperDigits":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L159-L160","name":"Nat.toSuperDigits","docLink":"./Init/Data/Repr.html#Nat.toSuperDigits","doc":""},"Nat.toLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L633-L634","name":"Nat.toLevel","docLink":"./Lean/Level.html#Nat.toLevel","doc":""},"Nat.toFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/OfScientific.lean#L55-L56","name":"Nat.toFloat","docLink":"./Init/Data/OfScientific.html#Nat.toFloat","doc":""},"Nat.toDigitsCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L125-L131","name":"Nat.toDigitsCore","docLink":"./Init/Data/Repr.html#Nat.toDigitsCore","doc":""},"Nat.toDigits":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L133-L134","name":"Nat.toDigits","docLink":"./Init/Data/Repr.html#Nat.toDigits","doc":""},"Nat.superDigitChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L139-L150","name":"Nat.superDigitChar","docLink":"./Init/Data/Repr.html#Nat.superDigitChar","doc":""},"Nat.succ_sub_succ_eq_sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L184-L187","name":"Nat.succ_sub_succ_eq_sub","docLink":"./Init/Data/Nat/Basic.html#Nat.succ_sub_succ_eq_sub","doc":""},"Nat.succ_sub_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L213-L214","name":"Nat.succ_sub_succ","docLink":"./Init/Data/Nat/Basic.html#Nat.succ_sub_succ","doc":""},"Nat.succ_pred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L510-L513","name":"Nat.succ_pred","docLink":"./Init/Data/Nat/Basic.html#Nat.succ_pred","doc":""},"Nat.succ_pos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1277-L1278","name":"Nat.succ_pos","docLink":"./Init/Prelude.html#Nat.succ_pos","doc":""},"Nat.succ_ne_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L393-L394","name":"Nat.succ_ne_zero","docLink":"./Init/Data/Nat/Basic.html#Nat.succ_ne_zero","doc":""},"Nat.succ_mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L135-L138","name":"Nat.succ_mul","docLink":"./Init/Data/Nat/Basic.html#Nat.succ_mul","doc":""},"Nat.succ_lt_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L175-L176","name":"Nat.succ_lt_succ","docLink":"./Init/Data/Nat/Basic.html#Nat.succ_lt_succ","doc":""},"Nat.succ_le_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1251-L1253","name":"Nat.succ_le_succ","docLink":"./Init/Prelude.html#Nat.succ_le_succ","doc":""},"Nat.succ_le_of_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L274-L275","name":"Nat.succ_le_of_lt","docLink":"./Init/Data/Nat/Basic.html#Nat.succ_le_of_lt","doc":""},"Nat.succ_eq_add_one":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L94-L95","name":"Nat.succ_eq_add_one","docLink":"./Init/Data/Nat/Basic.html#Nat.succ_eq_add_one","doc":""},"Nat.succ_add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L84-L86","name":"Nat.succ_add","docLink":"./Init/Data/Nat/Basic.html#Nat.succ_add","doc":""},"Nat.sub_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L181-L182","name":"Nat.sub_zero","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_zero","doc":""},"Nat.sub_succ_lt_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L503-L508","name":"Nat.sub_succ_lt_self","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_succ_lt_self","doc":""},"Nat.sub_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L210-L211","name":"Nat.sub_succ","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_succ","doc":""},"Nat.sub_sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L646-L649","name":"Nat.sub_sub","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_sub","doc":""},"Nat.sub_self_add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L574-L576","name":"Nat.sub_self_add","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_self_add","doc":""},"Nat.sub_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L216-L218","name":"Nat.sub_self","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_self","doc":""},"Nat.sub_ne_zero_of_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L515-L519","name":"Nat.sub_ne_zero_of_lt","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_ne_zero_of_lt","doc":""},"Nat.sub_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L202-L208","name":"Nat.sub_lt","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_lt","doc":""},"Nat.sub_le_succ_sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L488-L491","name":"Nat.sub_le_succ_sub","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_le_succ_sub","doc":""},"Nat.sub_le_of_le_add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L582-L591","name":"Nat.sub_le_of_le_add","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_le_of_le_add","doc":""},"Nat.sub_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L197-L200","name":"Nat.sub_le","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_le","doc":""},"Nat.sub_eq_zero_of_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L578-L580","name":"Nat.sub_eq_zero_of_le","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_eq_zero_of_le","doc":""},"Nat.sub_eq_of_eq_add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L556-L557","name":"Nat.sub_eq_of_eq_add","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_eq_of_eq_add","doc":""},"Nat.sub_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L52-L52","name":"Nat.sub_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_eq","doc":""},"Nat.sub_add_cancel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L529-L530","name":"Nat.sub_add_cancel","docLink":"./Init/Data/Nat/Basic.html#Nat.sub_add_cancel","doc":""},"Nat.sub.elim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L629-L636","name":"Nat.sub.elim","docLink":"./Init/Data/Nat/Basic.html#Nat.sub.elim","doc":""},"Nat.sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1369-L1371","name":"Nat.sub","docLink":"./Init/Prelude.html#Nat.sub","doc":""},"Nat.strongInductionOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L169-L173","name":"Nat.strongInductionOn","docLink":"./Init/WF.html#Nat.strongInductionOn","doc":""},"Nat.shiftRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Bitwise.lean#L44-L46","name":"Nat.shiftRight","docLink":"./Init/Data/Nat/Bitwise.html#Nat.shiftRight","doc":""},"Nat.shiftLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Bitwise.lean#L40-L42","name":"Nat.shiftLeft","docLink":"./Init/Data/Nat/Bitwise.html#Nat.shiftLeft","doc":""},"Nat.right_distrib":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L155-L156","name":"Nat.right_distrib","docLink":"./Init/Data/Nat/Basic.html#Nat.right_distrib","doc":""},"Nat.repr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L136-L137","name":"Nat.repr","docLink":"./Init/Data/Repr.html#Nat.repr","doc":""},"Nat.repeat.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L37-L39","name":"Nat.repeat.loop","docLink":"./Init/Data/Nat/Basic.html#Nat.repeat.loop","doc":""},"Nat.repeat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L36-L40","name":"Nat.repeat","docLink":"./Init/Data/Nat/Basic.html#Nat.repeat","doc":""},"Nat.pred_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L623-L624","name":"Nat.pred_zero","docLink":"./Init/Data/Nat/Basic.html#Nat.pred_zero","doc":""},"Nat.pred_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L626-L627","name":"Nat.pred_succ","docLink":"./Init/Data/Nat/Basic.html#Nat.pred_succ","doc":""},"Nat.pred_lt'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L473-L474","name":"Nat.pred_lt'","docLink":"./Init/Data/Nat/Basic.html#Nat.pred_lt'","doc":""},"Nat.pred_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L193-L195","name":"Nat.pred_lt","docLink":"./Init/Data/Nat/Basic.html#Nat.pred_lt","doc":""},"Nat.pred_le_pred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1286-L1289","name":"Nat.pred_le_pred","docLink":"./Init/Prelude.html#Nat.pred_le_pred","doc":""},"Nat.pred_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L189-L191","name":"Nat.pred_le","docLink":"./Init/Data/Nat/Basic.html#Nat.pred_le","doc":""},"Nat.pred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1282-L1284","name":"Nat.pred","docLink":"./Init/Prelude.html#Nat.pred","doc":""},"Nat.pow_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L437-L437","name":"Nat.pow_zero","docLink":"./Init/Data/Nat/Basic.html#Nat.pow_zero","doc":""},"Nat.pow_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L434-L435","name":"Nat.pow_succ","docLink":"./Init/Data/Nat/Basic.html#Nat.pow_succ","doc":""},"Nat.pow_le_pow_of_le_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L443-L453","name":"Nat.pow_le_pow_of_le_right","docLink":"./Init/Data/Nat/Basic.html#Nat.pow_le_pow_of_le_right","doc":""},"Nat.pow_le_pow_of_le_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L439-L441","name":"Nat.pow_le_pow_of_le_left","docLink":"./Init/Data/Nat/Basic.html#Nat.pow_le_pow_of_le_left","doc":""},"Nat.pow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1176-L1178","name":"Nat.pow","docLink":"./Init/Prelude.html#Nat.pow","doc":""},"Nat.pos_pow_of_pos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L455-L456","name":"Nat.pos_pow_of_pos","docLink":"./Init/Data/Nat/Basic.html#Nat.pos_pow_of_pos","doc":""},"Nat.one_ne_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L387-L388","name":"Nat.one_ne_zero","docLink":"./Init/Data/Nat/Basic.html#Nat.one_ne_zero","doc":""},"Nat.one_mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L147-L148","name":"Nat.one_mul","docLink":"./Init/Data/Nat/Basic.html#Nat.one_mul","doc":""},"Nat.not_succ_le_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1240-L1242","name":"Nat.not_succ_le_zero","docLink":"./Init/Prelude.html#Nat.not_succ_le_zero","doc":""},"Nat.not_succ_le_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1318-L1320","name":"Nat.not_succ_le_self","docLink":"./Init/Prelude.html#Nat.not_succ_le_self","doc":""},"Nat.not_lt_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1244-L1245","name":"Nat.not_lt_zero","docLink":"./Init/Prelude.html#Nat.not_lt_zero","doc":""},"Nat.not_lt_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L667-L668","name":"Nat.not_lt_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.not_lt_eq","doc":""},"Nat.not_le_of_not_ble_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1356-L1357","name":"Nat.not_le_of_not_ble_eq_true","docLink":"./Init/Prelude.html#Nat.not_le_of_not_ble_eq_true","doc":""},"Nat.not_le_of_gt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L321-L326","name":"Nat.not_le_of_gt","docLink":"./Init/Data/Nat/Basic.html#Nat.not_le_of_gt","doc":""},"Nat.not_le_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L661-L662","name":"Nat.not_le_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.not_le_eq","doc":""},"Nat.not_gt_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L670-L671","name":"Nat.not_gt_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.not_gt_eq","doc":""},"Nat.not_ge_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L664-L665","name":"Nat.not_ge_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.not_ge_eq","doc":""},"Nat.not_eq_zero_of_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L468-L471","name":"Nat.not_eq_zero_of_lt","docLink":"./Init/Data/Nat/Basic.html#Nat.not_eq_zero_of_lt","doc":""},"Nat.not_beq_eq_true_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L71-L76","name":"Nat.not_beq_eq_true_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.not_beq_eq_true_eq","doc":""},"Nat.ne_of_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L290-L291","name":"Nat.ne_of_lt","docLink":"./Init/Data/Nat/Basic.html#Nat.ne_of_lt","doc":""},"Nat.ne_of_beq_eq_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1203-L1209","name":"Nat.ne_of_beq_eq_false","docLink":"./Init/Prelude.html#Nat.ne_of_beq_eq_false","doc":""},"Nat.mul_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L125-L126","name":"Nat.mul_zero","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_zero","doc":""},"Nat.mul_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L128-L129","name":"Nat.mul_succ","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_succ","doc":""},"Nat.mul_sub_right_distrib":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L651-L654","name":"Nat.mul_sub_right_distrib","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_sub_right_distrib","doc":""},"Nat.mul_sub_left_distrib":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L656-L657","name":"Nat.mul_sub_left_distrib","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_sub_left_distrib","doc":""},"Nat.mul_pred_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L643-L644","name":"Nat.mul_pred_right","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_pred_right","doc":""},"Nat.mul_pred_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L638-L641","name":"Nat.mul_pred_left","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_pred_left","doc":""},"Nat.mul_pos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L416-L418","name":"Nat.mul_pos","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_pos","doc":""},"Nat.mul_one":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L144-L145","name":"Nat.mul_one","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_one","doc":""},"Nat.mul_lt_mul_of_pos_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L413-L414","name":"Nat.mul_lt_mul_of_pos_right","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_lt_mul_of_pos_right","doc":""},"Nat.mul_lt_mul_of_pos_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L410-L411","name":"Nat.mul_lt_mul_of_pos_left","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_lt_mul_of_pos_left","doc":""},"Nat.mul_left_comm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L168-L169","name":"Nat.mul_left_comm","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_left_comm","doc":""},"Nat.mul_le_mul_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L404-L405","name":"Nat.mul_le_mul_right","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_le_mul_right","doc":""},"Nat.mul_le_mul_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L398-L402","name":"Nat.mul_le_mul_left","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_le_mul_left","doc":""},"Nat.mul_le_mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L407-L408","name":"Nat.mul_le_mul","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_le_mul","doc":""},"Nat.mul_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L51-L51","name":"Nat.mul_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_eq","doc":""},"Nat.mul_comm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L140-L142","name":"Nat.mul_comm","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_comm","doc":""},"Nat.mul_assoc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L164-L166","name":"Nat.mul_assoc","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_assoc","doc":""},"Nat.mul_add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L158-L159","name":"Nat.mul_add","docLink":"./Init/Data/Nat/Basic.html#Nat.mul_add","doc":""},"Nat.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1167-L1169","name":"Nat.mul","docLink":"./Init/Prelude.html#Nat.mul","doc":""},"Nat.mod_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L90-L94","name":"Nat.mod_zero","docLink":"./Init/Data/Nat/Div.html#Nat.mod_zero","doc":""},"Nat.mod_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L139-L140","name":"Nat.mod_self","docLink":"./Init/Data/Nat/Div.html#Nat.mod_self","doc":""},"Nat.mod_one":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L142-L149","name":"Nat.mod_one","docLink":"./Init/Data/Nat/Div.html#Nat.mod_one","doc":""},"Nat.mod_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L107-L123","name":"Nat.mod_lt","docLink":"./Init/Data/Nat/Div.html#Nat.mod_lt","doc":""},"Nat.mod_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L125-L130","name":"Nat.mod_le","docLink":"./Init/Data/Nat/Div.html#Nat.mod_le","doc":""},"Nat.mod_eq_sub_mod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L102-L105","name":"Nat.mod_eq_sub_mod","docLink":"./Init/Data/Nat/Div.html#Nat.mod_eq_sub_mod","doc":""},"Nat.mod_eq_of_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L96-L100","name":"Nat.mod_eq_of_lt","docLink":"./Init/Data/Nat/Div.html#Nat.mod_eq_of_lt","doc":""},"Nat.mod_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L77-L80","name":"Nat.mod_eq","docLink":"./Init/Data/Nat/Div.html#Nat.mod_eq","doc":""},"Nat.mod.inductionOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L82-L88","name":"Nat.mod.inductionOn","docLink":"./Init/Data/Nat/Div.html#Nat.mod.inductionOn","doc":""},"Nat.mod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L68-L73","name":"Nat.mod","docLink":"./Init/Data/Nat/Div.html#Nat.mod","doc":""},"Nat.min":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L460-L461","name":"Nat.min","docLink":"./Init/Data/Nat/Basic.html#Nat.min","doc":""},"Nat.max":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L463-L464","name":"Nat.max","docLink":"./Init/Data/Nat/Basic.html#Nat.max","doc":""},"Nat.lt_wfRel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L151-L167","name":"Nat.lt_wfRel","docLink":"./Init/WF.html#Nat.lt_wfRel","doc":""},"Nat.lt_trans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1265-L1266","name":"Nat.lt_trans","docLink":"./Init/Prelude.html#Nat.lt_trans","doc":""},"Nat.lt_succ_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L255-L255","name":"Nat.lt_succ_self","docLink":"./Init/Data/Nat/Basic.html#Nat.lt_succ_self","doc":""},"Nat.lt_succ_of_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L178-L179","name":"Nat.lt_succ_of_le","docLink":"./Init/Data/Nat/Basic.html#Nat.lt_succ_of_le","doc":""},"Nat.lt_sub_of_add_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L619-L621","name":"Nat.lt_sub_of_add_lt","docLink":"./Init/Data/Nat/Basic.html#Nat.lt_sub_of_add_lt","doc":""},"Nat.lt_or_ge":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1307-L1316","name":"Nat.lt_or_ge","docLink":"./Init/Prelude.html#Nat.lt_or_ge","doc":""},"Nat.lt_of_succ_lt_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L268-L269","name":"Nat.lt_of_succ_lt_succ","docLink":"./Init/Data/Nat/Basic.html#Nat.lt_of_succ_lt_succ","doc":""},"Nat.lt_of_succ_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L265-L266","name":"Nat.lt_of_succ_lt","docLink":"./Init/Data/Nat/Basic.html#Nat.lt_of_succ_lt","doc":""},"Nat.lt_of_succ_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L271-L272","name":"Nat.lt_of_succ_le","docLink":"./Init/Data/Nat/Basic.html#Nat.lt_of_succ_le","doc":""},"Nat.lt_of_lt_of_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L220-L221","name":"Nat.lt_of_lt_of_le","docLink":"./Init/Data/Nat/Basic.html#Nat.lt_of_lt_of_le","doc":""},"Nat.lt_of_lt_of_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L223-L224","name":"Nat.lt_of_lt_of_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.lt_of_lt_of_eq","doc":""},"Nat.lt_of_le_of_ne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1333-L1336","name":"Nat.lt_of_le_of_ne","docLink":"./Init/Prelude.html#Nat.lt_of_le_of_ne","doc":""},"Nat.lt_of_le_of_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1325-L1326","name":"Nat.lt_of_le_of_lt","docLink":"./Init/Prelude.html#Nat.lt_of_le_of_lt","doc":""},"Nat.lt_irrefl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1322-L1323","name":"Nat.lt_irrefl","docLink":"./Init/Prelude.html#Nat.lt_irrefl","doc":""},"Nat.lt_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L53-L53","name":"Nat.lt_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.lt_eq","doc":""},"Nat.lt.step":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L247-L247","name":"Nat.lt.step","docLink":"./Init/Data/Nat/Basic.html#Nat.lt.step","doc":""},"Nat.lt.base":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L253-L253","name":"Nat.lt.base","docLink":"./Init/Data/Nat/Basic.html#Nat.lt.base","doc":""},"Nat.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1234-L1235","name":"Nat.lt","docLink":"./Init/Prelude.html#Nat.lt","doc":""},"Nat.lor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Bitwise.lean#L36-L36","name":"Nat.lor","docLink":"./Init/Data/Nat/Bitwise.html#Nat.lor","doc":""},"Nat.log2":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Log2.lean#L27-L29","name":"Nat.log2","docLink":"./Init/Data/Nat/Log2.html#Nat.log2","doc":"Computes `⌊max 0 (log₂ n)⌋`.\n\n`log2 0 = log2 1 = 0`, `log2 2 = 1`, ..., `log2 (2^i) = i`, etc.\n"},"Nat.left_distrib":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L150-L153","name":"Nat.left_distrib","docLink":"./Init/Data/Nat/Basic.html#Nat.left_distrib","doc":""},"Nat.le_zero_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L162-L163","name":"Nat.le_zero_eq","docLink":"./Init/SimpLemmas.html#Nat.le_zero_eq","doc":""},"Nat.le_trans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1261-L1263","name":"Nat.le_trans","docLink":"./Init/Prelude.html#Nat.le_trans","doc":""},"Nat.le_total":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L257-L260","name":"Nat.le_total","docLink":"./Init/Data/Nat/Basic.html#Nat.le_total","doc":""},"Nat.le_succ_of_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1271-L1272","name":"Nat.le_succ_of_le","docLink":"./Init/Prelude.html#Nat.le_succ_of_le","doc":""},"Nat.le_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1268-L1269","name":"Nat.le_succ","docLink":"./Init/Prelude.html#Nat.le_succ","doc":""},"Nat.le_sub_of_add_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L600-L606","name":"Nat.le_sub_of_add_le","docLink":"./Init/Data/Nat/Basic.html#Nat.le_sub_of_add_le","doc":""},"Nat.le_step":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1258-L1259","name":"Nat.le_step","docLink":"./Init/Prelude.html#Nat.le_step","doc":""},"Nat.le_refl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1274-L1275","name":"Nat.le_refl","docLink":"./Init/Prelude.html#Nat.le_refl","doc":""},"Nat.le_or_eq_or_le_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L293-L299","name":"Nat.le_or_eq_or_le_succ","docLink":"./Init/Data/Nat/Basic.html#Nat.le_or_eq_or_le_succ","doc":""},"Nat.le_of_succ_le_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1291-L1292","name":"Nat.le_of_succ_le_succ","docLink":"./Init/Prelude.html#Nat.le_of_succ_le_succ","doc":""},"Nat.le_of_succ_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L241-L242","name":"Nat.le_of_succ_le","docLink":"./Init/Data/Nat/Basic.html#Nat.le_of_succ_le","doc":""},"Nat.le_of_mul_le_mul_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L420-L423","name":"Nat.le_of_mul_le_mul_left","docLink":"./Init/Data/Nat/Basic.html#Nat.le_of_mul_le_mul_left","doc":""},"Nat.le_of_lt_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1294-L1295","name":"Nat.le_of_lt_succ","docLink":"./Init/Prelude.html#Nat.le_of_lt_succ","doc":""},"Nat.le_of_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L244-L245","name":"Nat.le_of_lt","docLink":"./Init/Data/Nat/Basic.html#Nat.le_of_lt","doc":""},"Nat.le_of_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L238-L239","name":"Nat.le_of_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.le_of_eq","doc":""},"Nat.le_of_ble_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1338-L1341","name":"Nat.le_of_ble_eq_true","docLink":"./Init/Prelude.html#Nat.le_of_ble_eq_true","doc":""},"Nat.le_of_add_le_add_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L378-L380","name":"Nat.le_of_add_le_add_right","docLink":"./Init/Data/Nat/Basic.html#Nat.le_of_add_le_add_right","doc":""},"Nat.le_of_add_le_add_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L371-L376","name":"Nat.le_of_add_le_add_left","docLink":"./Init/Data/Nat/Basic.html#Nat.le_of_add_le_add_left","doc":""},"Nat.le_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L54-L54","name":"Nat.le_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.le_eq","doc":""},"Nat.le_antisymm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1328-L1331","name":"Nat.le_antisymm","docLink":"./Init/Prelude.html#Nat.le_antisymm","doc":""},"Nat.le_add_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L301-L303","name":"Nat.le_add_right","docLink":"./Init/Data/Nat/Basic.html#Nat.le_add_right","doc":""},"Nat.le_add_of_sub_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L559-L567","name":"Nat.le_add_of_sub_le","docLink":"./Init/Data/Nat/Basic.html#Nat.le_add_of_sub_le","doc":""},"Nat.le_add_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L305-L306","name":"Nat.le_add_left","docLink":"./Init/Data/Nat/Basic.html#Nat.le_add_left","doc":""},"Nat.le.intro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L318-L319","name":"Nat.le.intro","docLink":"./Init/Data/Nat/Basic.html#Nat.le.intro","doc":""},"Nat.le.dest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L308-L316","name":"Nat.le.dest","docLink":"./Init/Data/Nat/Basic.html#Nat.le.dest","doc":""},"Nat.le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1227-L1229","name":"Nat.le","docLink":"./Init/Prelude.html#Nat.le","doc":""},"Nat.land":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Bitwise.lean#L34-L34","name":"Nat.land","docLink":"./Init/Data/Nat/Bitwise.html#Nat.land","doc":""},"Nat.isValidChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1589-L1590","name":"Nat.isValidChar","docLink":"./Init/Prelude.html#Nat.isValidChar","doc":""},"Nat.instXorNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Bitwise.lean#L50-L50","name":"Nat.instXorNat","docLink":"./Init/Data/Nat/Bitwise.html#Nat.instXorNat","doc":""},"Nat.instTransNatLtInstLTNatLeInstLENat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L232-L233","name":"Nat.instTransNatLtInstLTNatLeInstLENat","docLink":"./Init/Data/Nat/Basic.html#Nat.instTransNatLtInstLTNatLeInstLENat","doc":""},"Nat.instTransNatLtInstLTNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L226-L227","name":"Nat.instTransNatLtInstLTNat","docLink":"./Init/Data/Nat/Basic.html#Nat.instTransNatLtInstLTNat","doc":""},"Nat.instTransNatLeInstLENatLtInstLTNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L235-L236","name":"Nat.instTransNatLeInstLENatLtInstLTNat","docLink":"./Init/Data/Nat/Basic.html#Nat.instTransNatLeInstLENatLtInstLTNat","doc":""},"Nat.instTransNatLeInstLENat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L229-L230","name":"Nat.instTransNatLeInstLENat","docLink":"./Init/Data/Nat/Basic.html#Nat.instTransNatLeInstLENat","doc":""},"Nat.instShiftRightNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Bitwise.lean#L52-L52","name":"Nat.instShiftRightNat","docLink":"./Init/Data/Nat/Bitwise.html#Nat.instShiftRightNat","doc":""},"Nat.instShiftLeftNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Bitwise.lean#L51-L51","name":"Nat.instShiftLeftNat","docLink":"./Init/Data/Nat/Bitwise.html#Nat.instShiftLeftNat","doc":""},"Nat.instOrOpNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Bitwise.lean#L49-L49","name":"Nat.instOrOpNat","docLink":"./Init/Data/Nat/Bitwise.html#Nat.instOrOpNat","doc":""},"Nat.instModNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L75-L75","name":"Nat.instModNat","docLink":"./Init/Data/Nat/Div.html#Nat.instModNat","doc":""},"Nat.instLawfulBEqNatInstBEqNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L66-L68","name":"Nat.instLawfulBEqNatInstBEqNat","docLink":"./Init/Data/Nat/Basic.html#Nat.instLawfulBEqNatInstBEqNat","doc":""},"Nat.instDivNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L23-L23","name":"Nat.instDivNat","docLink":"./Init/Data/Nat/Div.html#Nat.instDivNat","doc":""},"Nat.instAntisymmNatNotLtInstLTNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L341-L342","name":"Nat.instAntisymmNatNotLtInstLTNat","docLink":"./Init/Data/Nat/Basic.html#Nat.instAntisymmNatNotLtInstLTNat","doc":""},"Nat.instAntisymmNatLeInstLENat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L338-L339","name":"Nat.instAntisymmNatLeInstLENat","docLink":"./Init/Data/Nat/Basic.html#Nat.instAntisymmNatLeInstLENat","doc":""},"Nat.instAndOpNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Bitwise.lean#L48-L48","name":"Nat.instAndOpNat","docLink":"./Init/Data/Nat/Bitwise.html#Nat.instAndOpNat","doc":""},"Nat.imax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L14-L15","name":"Nat.imax","docLink":"./Lean/Level.html#Nat.imax","doc":""},"Nat.gt_of_not_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L328-L331","name":"Nat.gt_of_not_le","docLink":"./Init/Data/Nat/Basic.html#Nat.gt_of_not_le","doc":""},"Nat.ge_of_not_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L333-L336","name":"Nat.ge_of_not_lt","docLink":"./Init/Data/Nat/Basic.html#Nat.ge_of_not_lt","doc":""},"Nat.gcd_zero_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Gcd.lean#L30-L31","name":"Nat.gcd_zero_right","docLink":"./Init/Data/Nat/Gcd.html#Nat.gcd_zero_right","doc":""},"Nat.gcd_zero_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Gcd.lean#L20-L21","name":"Nat.gcd_zero_left","docLink":"./Init/Data/Nat/Gcd.html#Nat.gcd_zero_left","doc":""},"Nat.gcd_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Gcd.lean#L23-L24","name":"Nat.gcd_succ","docLink":"./Init/Data/Nat/Gcd.html#Nat.gcd_succ","doc":""},"Nat.gcd_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Gcd.lean#L33-L34","name":"Nat.gcd_self","docLink":"./Init/Data/Nat/Gcd.html#Nat.gcd_self","doc":""},"Nat.gcd_one_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Gcd.lean#L26-L28","name":"Nat.gcd_one_left","docLink":"./Init/Data/Nat/Gcd.html#Nat.gcd_one_left","doc":""},"Nat.gcd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Gcd.lean#L17-L18","name":"Nat.gcd","docLink":"./Init/Data/Nat/Gcd.html#Nat.gcd","doc":""},"Nat.forRevM.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Control.lean#L20-L22","name":"Nat.forRevM.loop","docLink":"./Init/Data/Nat/Control.html#Nat.forRevM.loop","doc":""},"Nat.forRevM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Control.lean#L19-L23","name":"Nat.forRevM","docLink":"./Init/Data/Nat/Control.html#Nat.forRevM","doc":""},"Nat.forM.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Control.lean#L14-L16","name":"Nat.forM.loop","docLink":"./Init/Data/Nat/Control.html#Nat.forM.loop","doc":""},"Nat.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Control.lean#L13-L17","name":"Nat.forM","docLink":"./Init/Data/Nat/Control.html#Nat.forM","doc":""},"Nat.foldRevM.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Control.lean#L32-L34","name":"Nat.foldRevM.loop","docLink":"./Init/Data/Nat/Control.html#Nat.foldRevM.loop","doc":""},"Nat.foldRevM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Control.lean#L31-L35","name":"Nat.foldRevM","docLink":"./Init/Data/Nat/Control.html#Nat.foldRevM","doc":""},"Nat.foldRev.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L20-L22","name":"Nat.foldRev.loop","docLink":"./Init/Data/Nat/Basic.html#Nat.foldRev.loop","doc":""},"Nat.foldRev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L19-L23","name":"Nat.foldRev","docLink":"./Init/Data/Nat/Basic.html#Nat.foldRev","doc":""},"Nat.foldM.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Control.lean#L26-L28","name":"Nat.foldM.loop","docLink":"./Init/Data/Nat/Control.html#Nat.foldM.loop","doc":""},"Nat.foldM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Control.lean#L25-L29","name":"Nat.foldM","docLink":"./Init/Data/Nat/Control.html#Nat.foldM","doc":""},"Nat.foldAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L12-L14","name":"Nat.foldAux","docLink":"./Init/Data/Nat/Basic.html#Nat.foldAux","doc":""},"Nat.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L16-L17","name":"Nat.fold","docLink":"./Init/Data/Nat/Basic.html#Nat.fold","doc":""},"Nat.eq_zero_or_pos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L249-L251","name":"Nat.eq_zero_or_pos","docLink":"./Init/Data/Nat/Basic.html#Nat.eq_zero_or_pos","doc":""},"Nat.eq_zero_of_le_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L262-L263","name":"Nat.eq_zero_of_le_zero","docLink":"./Init/Data/Nat/Basic.html#Nat.eq_zero_of_le_zero","doc":""},"Nat.eq_or_lt_of_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1297-L1305","name":"Nat.eq_or_lt_of_le","docLink":"./Init/Prelude.html#Nat.eq_or_lt_of_le","doc":""},"Nat.eq_of_mul_eq_mul_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L429-L430","name":"Nat.eq_of_mul_eq_mul_right","docLink":"./Init/Data/Nat/Basic.html#Nat.eq_of_mul_eq_mul_right","doc":""},"Nat.eq_of_mul_eq_mul_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L425-L427","name":"Nat.eq_of_mul_eq_mul_left","docLink":"./Init/Data/Nat/Basic.html#Nat.eq_of_mul_eq_mul_left","doc":""},"Nat.eq_of_beq_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1194-L1201","name":"Nat.eq_of_beq_eq_true","docLink":"./Init/Prelude.html#Nat.eq_of_beq_eq_true","doc":""},"Nat.eq_add_of_sub_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L553-L554","name":"Nat.eq_add_of_sub_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.eq_add_of_sub_eq","doc":""},"Nat.div_rec_lemma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L12-L13","name":"Nat.div_rec_lemma","docLink":"./Init/Data/Nat/Div.html#Nat.div_rec_lemma","doc":""},"Nat.div_lt_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L56-L65","name":"Nat.div_lt_self","docLink":"./Init/Data/Nat/Div.html#Nat.div_lt_self","doc":""},"Nat.div_le_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L42-L54","name":"Nat.div_le_self","docLink":"./Init/Data/Nat/Div.html#Nat.div_le_self","doc":""},"Nat.div_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L25-L28","name":"Nat.div_eq","docLink":"./Init/Data/Nat/Div.html#Nat.div_eq","doc":""},"Nat.div_add_mod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L151-L160","name":"Nat.div_add_mod","docLink":"./Init/Data/Nat/Div.html#Nat.div_add_mod","doc":""},"Nat.div.inductionOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L30-L40","name":"Nat.div.inductionOn","docLink":"./Init/Data/Nat/Div.html#Nat.div.inductionOn","doc":""},"Nat.div":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Div.lean#L16-L21","name":"Nat.div","docLink":"./Init/Data/Nat/Div.html#Nat.div","doc":""},"Nat.digitChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L106-L123","name":"Nat.digitChar","docLink":"./Init/Data/Repr.html#Nat.digitChar","doc":""},"Nat.decLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1364-L1365","name":"Nat.decLt","docLink":"./Init/Prelude.html#Nat.decLt","doc":""},"Nat.decLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1360-L1361","name":"Nat.decLe","docLink":"./Init/Prelude.html#Nat.decLe","doc":""},"Nat.decEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1212-L1215","name":"Nat.decEq","docLink":"./Init/Prelude.html#Nat.decEq","doc":""},"Nat.ctor_eq_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L384-L385","name":"Nat.ctor_eq_zero","docLink":"./Init/Data/Nat/Basic.html#Nat.ctor_eq_zero","doc":""},"Nat.caseStrongInductionOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L175-L183","name":"Nat.caseStrongInductionOn","docLink":"./Init/WF.html#Nat.caseStrongInductionOn","doc":""},"Nat.blt_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L64-L64","name":"Nat.blt_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.blt_eq","doc":""},"Nat.blt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L42-L43","name":"Nat.blt","docLink":"./Init/Data/Nat/Basic.html#Nat.blt","doc":""},"Nat.ble_succ_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1347-L1349","name":"Nat.ble_succ_eq_true","docLink":"./Init/Prelude.html#Nat.ble_succ_eq_true","doc":""},"Nat.ble_self_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1343-L1345","name":"Nat.ble_self_eq_true","docLink":"./Init/Prelude.html#Nat.ble_self_eq_true","doc":""},"Nat.ble_eq_true_of_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1351-L1354","name":"Nat.ble_eq_true_of_le","docLink":"./Init/Prelude.html#Nat.ble_eq_true_of_le","doc":""},"Nat.ble_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L63-L63","name":"Nat.ble_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.ble_eq","doc":""},"Nat.ble":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1221-L1225","name":"Nat.ble","docLink":"./Init/Prelude.html#Nat.ble","doc":""},"Nat.bitwise_rec_lemma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Bitwise.lean#L13-L14","name":"Nat.bitwise_rec_lemma","docLink":"./Init/Data/Nat/Bitwise.html#Nat.bitwise_rec_lemma","doc":""},"Nat.bitwise":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Bitwise.lean#L16-L31","name":"Nat.bitwise","docLink":"./Init/Data/Nat/Bitwise.html#Nat.bitwise","doc":""},"Nat.beq_refl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L58-L60","name":"Nat.beq_refl","docLink":"./Init/Data/Nat/Basic.html#Nat.beq_refl","doc":""},"Nat.beq_eq_true_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L70-L70","name":"Nat.beq_eq_true_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.beq_eq_true_eq","doc":""},"Nat.beq_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L62-L62","name":"Nat.beq_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.beq_eq","doc":""},"Nat.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1185-L1189","name":"Nat.beq","docLink":"./Init/Prelude.html#Nat.beq","doc":""},"Nat.anyM.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Control.lean#L47-L52","name":"Nat.anyM.loop","docLink":"./Init/Data/Nat/Control.html#Nat.anyM.loop","doc":""},"Nat.anyM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Control.lean#L46-L53","name":"Nat.anyM","docLink":"./Init/Data/Nat/Control.html#Nat.anyM","doc":""},"Nat.anyAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L25-L27","name":"Nat.anyAux","docLink":"./Init/Data/Nat/Basic.html#Nat.anyAux","doc":""},"Nat.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L30-L31","name":"Nat.any","docLink":"./Init/Data/Nat/Basic.html#Nat.any","doc":"`any f n = true` iff there is `i in [0, n-1]` s.t. `f i = true` "},"Nat.allM.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Control.lean#L38-L43","name":"Nat.allM.loop","docLink":"./Init/Data/Nat/Control.html#Nat.allM.loop","doc":""},"Nat.allM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Control.lean#L37-L44","name":"Nat.allM","docLink":"./Init/Data/Nat/Control.html#Nat.allM","doc":""},"Nat.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L33-L34","name":"Nat.all","docLink":"./Init/Data/Nat/Basic.html#Nat.all","doc":""},"Nat.add_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L178-L178","name":"Nat.add_zero","docLink":"./Init/Core.html#Nat.add_zero","doc":""},"Nat.add_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L88-L89","name":"Nat.add_succ","docLink":"./Init/Data/Nat/Basic.html#Nat.add_succ","doc":""},"Nat.add_sub_self_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L485-L486","name":"Nat.add_sub_self_right","docLink":"./Init/Data/Nat/Basic.html#Nat.add_sub_self_right","doc":""},"Nat.add_sub_self_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L478-L483","name":"Nat.add_sub_self_left","docLink":"./Init/Data/Nat/Basic.html#Nat.add_sub_self_left","doc":""},"Nat.add_sub_of_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L521-L527","name":"Nat.add_sub_of_le","docLink":"./Init/Data/Nat/Basic.html#Nat.add_sub_of_le","doc":""},"Nat.add_sub_cancel_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L544-L546","name":"Nat.add_sub_cancel_left","docLink":"./Init/Data/Nat/Basic.html#Nat.add_sub_cancel_left","doc":""},"Nat.add_sub_cancel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L540-L542","name":"Nat.add_sub_cancel","docLink":"./Init/Data/Nat/Basic.html#Nat.add_sub_cancel","doc":""},"Nat.add_sub_assoc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L548-L551","name":"Nat.add_sub_assoc","docLink":"./Init/Data/Nat/Basic.html#Nat.add_sub_assoc","doc":""},"Nat.add_sub_add_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L532-L535","name":"Nat.add_sub_add_right","docLink":"./Init/Data/Nat/Basic.html#Nat.add_sub_add_right","doc":""},"Nat.add_sub_add_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L537-L538","name":"Nat.add_sub_add_left","docLink":"./Init/Data/Nat/Basic.html#Nat.add_sub_add_left","doc":""},"Nat.add_right_comm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L111-L112","name":"Nat.add_right_comm","docLink":"./Init/Data/Nat/Basic.html#Nat.add_right_comm","doc":""},"Nat.add_right_cancel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L119-L121","name":"Nat.add_right_cancel","docLink":"./Init/Data/Nat/Basic.html#Nat.add_right_cancel","doc":""},"Nat.add_one":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L91-L92","name":"Nat.add_one","docLink":"./Init/Data/Nat/Basic.html#Nat.add_one","doc":""},"Nat.add_mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L161-L162","name":"Nat.add_mul","docLink":"./Init/Data/Nat/Basic.html#Nat.add_mul","doc":""},"Nat.add_lt_of_lt_sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L608-L617","name":"Nat.add_lt_of_lt_sub","docLink":"./Init/Data/Nat/Basic.html#Nat.add_lt_of_lt_sub","doc":""},"Nat.add_lt_add_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L359-L360","name":"Nat.add_lt_add_right","docLink":"./Init/Data/Nat/Basic.html#Nat.add_lt_add_right","doc":""},"Nat.add_lt_add_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L356-L357","name":"Nat.add_lt_add_left","docLink":"./Init/Data/Nat/Basic.html#Nat.add_lt_add_left","doc":""},"Nat.add_lt_add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L368-L369","name":"Nat.add_lt_add","docLink":"./Init/Data/Nat/Basic.html#Nat.add_lt_add","doc":""},"Nat.add_left_comm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L108-L109","name":"Nat.add_left_comm","docLink":"./Init/Data/Nat/Basic.html#Nat.add_left_comm","doc":""},"Nat.add_left_cancel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L114-L117","name":"Nat.add_left_cancel","docLink":"./Init/Data/Nat/Basic.html#Nat.add_left_cancel","doc":""},"Nat.add_le_of_le_sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L593-L598","name":"Nat.add_le_of_le_sub","docLink":"./Init/Data/Nat/Basic.html#Nat.add_le_of_le_sub","doc":""},"Nat.add_le_add_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L351-L354","name":"Nat.add_le_add_right","docLink":"./Init/Data/Nat/Basic.html#Nat.add_le_add_right","doc":""},"Nat.add_le_add_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L344-L349","name":"Nat.add_le_add_left","docLink":"./Init/Data/Nat/Basic.html#Nat.add_le_add_left","doc":""},"Nat.add_le_add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L365-L366","name":"Nat.add_le_add","docLink":"./Init/Data/Nat/Basic.html#Nat.add_le_add","doc":""},"Nat.add_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L50-L50","name":"Nat.add_eq","docLink":"./Init/Data/Nat/Basic.html#Nat.add_eq","doc":""},"Nat.add_comm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L97-L102","name":"Nat.add_comm","docLink":"./Init/Data/Nat/Basic.html#Nat.add_comm","doc":""},"Nat.add_assoc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Basic.lean#L104-L106","name":"Nat.add_assoc","docLink":"./Init/Data/Nat/Basic.html#Nat.add_assoc","doc":""},"Nat.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1154-L1156","name":"Nat.add","docLink":"./Init/Prelude.html#Nat.add","doc":""},"Nat.SOM.instInhabitedExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L19-L19","name":"Nat.SOM.instInhabitedExpr","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.instInhabitedExpr","doc":""},"Nat.SOM.Poly.mul_denote.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L163-L169","name":"Nat.SOM.Poly.mul_denote.go","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.mul_denote.go","doc":""},"Nat.SOM.Poly.mul_denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L160-L169","name":"Nat.SOM.Poly.mul_denote","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.mul_denote","doc":""},"Nat.SOM.Poly.mulMon_denote.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L154-L158","name":"Nat.SOM.Poly.mulMon_denote.go","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.mulMon_denote.go","doc":""},"Nat.SOM.Poly.mulMon_denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L151-L158","name":"Nat.SOM.Poly.mulMon_denote","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.mulMon_denote","doc":""},"Nat.SOM.Poly.mulMon.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L85-L88","name":"Nat.SOM.Poly.mulMon.go","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.mulMon.go","doc":""},"Nat.SOM.Poly.mulMon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L82-L88","name":"Nat.SOM.Poly.mulMon","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.mulMon","doc":""},"Nat.SOM.Poly.mul.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L93-L96","name":"Nat.SOM.Poly.mul.go","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.mul.go","doc":""},"Nat.SOM.Poly.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L90-L96","name":"Nat.SOM.Poly.mul","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.mul","doc":""},"Nat.SOM.Poly.insertSorted":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L77-L80","name":"Nat.SOM.Poly.insertSorted","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.insertSorted","doc":""},"Nat.SOM.Poly.denote_insertSorted":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L145-L149","name":"Nat.SOM.Poly.denote_insertSorted","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.denote_insertSorted","doc":""},"Nat.SOM.Poly.denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L53-L55","name":"Nat.SOM.Poly.denote","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.denote","doc":""},"Nat.SOM.Poly.append_denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L122-L125","name":"Nat.SOM.Poly.append_denote","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.append_denote","doc":""},"Nat.SOM.Poly.add_denote.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L130-L143","name":"Nat.SOM.Poly.add_denote.go","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.add_denote.go","doc":""},"Nat.SOM.Poly.add_denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L127-L143","name":"Nat.SOM.Poly.add_denote","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.add_denote","doc":""},"Nat.SOM.Poly.add.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L60-L75","name":"Nat.SOM.Poly.add.go","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.add.go","doc":""},"Nat.SOM.Poly.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L57-L75","name":"Nat.SOM.Poly.add","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly.add","doc":""},"Nat.SOM.Poly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L51-L51","name":"Nat.SOM.Poly","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Poly","doc":""},"Nat.SOM.Mon.mul_denote.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L112-L120","name":"Nat.SOM.Mon.mul_denote.go","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Mon.mul_denote.go","doc":""},"Nat.SOM.Mon.mul_denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L109-L120","name":"Nat.SOM.Mon.mul_denote","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Mon.mul_denote","doc":""},"Nat.SOM.Mon.mul.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L36-L49","name":"Nat.SOM.Mon.mul.go","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Mon.mul.go","doc":""},"Nat.SOM.Mon.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L33-L49","name":"Nat.SOM.Mon.mul","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Mon.mul","doc":""},"Nat.SOM.Mon.denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L29-L31","name":"Nat.SOM.Mon.denote","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Mon.denote","doc":""},"Nat.SOM.Mon.append_denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L104-L107","name":"Nat.SOM.Mon.append_denote","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Mon.append_denote","doc":""},"Nat.SOM.Mon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L27-L27","name":"Nat.SOM.Mon","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Mon","doc":""},"Nat.SOM.Expr.toPoly_denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L171-L178","name":"Nat.SOM.Expr.toPoly_denote","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Expr.toPoly_denote","doc":""},"Nat.SOM.Expr.toPoly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L98-L102","name":"Nat.SOM.Expr.toPoly","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Expr.toPoly","doc":""},"Nat.SOM.Expr.eq_of_toPoly_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L180-L183","name":"Nat.SOM.Expr.eq_of_toPoly_eq","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Expr.eq_of_toPoly_eq","doc":""},"Nat.SOM.Expr.denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L21-L25","name":"Nat.SOM.Expr.denote","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Expr.denote","doc":""},"Nat.SOM.Expr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/SOM.lean#L14-L19","name":"Nat.SOM.Expr","docLink":"./Init/Data/Nat/SOM.html#Nat.SOM.Expr","doc":""},"Nat.Linear.monomialToExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L253-L259","name":"Nat.Linear.monomialToExpr","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.monomialToExpr","doc":""},"Nat.Linear.instLawfulBEqPolyCnstrInstBEqPolyCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L176-L187","name":"Nat.Linear.instLawfulBEqPolyCnstrInstBEqPolyCnstr","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instLawfulBEqPolyCnstrInstBEqPolyCnstr","doc":""},"Nat.Linear.instInhabitedExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L43-L43","name":"Nat.Linear.instInhabitedExpr","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr","doc":""},"Nat.Linear.instBEqPolyCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L173-L173","name":"Nat.Linear.instBEqPolyCnstr","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr","doc":""},"Nat.Linear.hugeFuel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L110-L110","name":"Nat.Linear.hugeFuel","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.hugeFuel","doc":""},"Nat.Linear.fixedVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L27-L27","name":"Nat.Linear.fixedVar","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.fixedVar","doc":"When encoding polynomials. We use `fixedVar` for encoding numerals.\nThe denotation of `fixedVar` is always `1`. "},"Nat.Linear.denote_monomialToExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L695-L699","name":"Nat.Linear.denote_monomialToExpr","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.denote_monomialToExpr","doc":""},"Nat.Linear.Var.denote.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L32-L35","name":"Nat.Linear.Var.denote.go","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote.go","doc":""},"Nat.Linear.Var.denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L29-L35","name":"Nat.Linear.Var.denote","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote","doc":""},"Nat.Linear.Var":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L20-L20","name":"Nat.Linear.Var","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Var","doc":""},"Nat.Linear.PolyCnstr.toExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L271-L272","name":"Nat.Linear.PolyCnstr.toExpr","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.toExpr","doc":""},"Nat.Linear.PolyCnstr.norm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L207-L209","name":"Nat.Linear.PolyCnstr.norm","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.norm","doc":""},"Nat.Linear.PolyCnstr.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L189-L190","name":"Nat.Linear.PolyCnstr.mul","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mul","doc":""},"Nat.Linear.PolyCnstr.isValid":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L217-L221","name":"Nat.Linear.PolyCnstr.isValid","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid","doc":""},"Nat.Linear.PolyCnstr.isUnsat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L211-L215","name":"Nat.Linear.PolyCnstr.isUnsat","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat","doc":""},"Nat.Linear.PolyCnstr.eq_true_of_isValid":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L652-L659","name":"Nat.Linear.PolyCnstr.eq_true_of_isValid","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_true_of_isValid","doc":""},"Nat.Linear.PolyCnstr.eq_false_of_isUnsat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L639-L650","name":"Nat.Linear.PolyCnstr.eq_false_of_isUnsat","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_false_of_isUnsat","doc":""},"Nat.Linear.PolyCnstr.denote_mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L587-L599","name":"Nat.Linear.PolyCnstr.denote_mul","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote_mul","doc":""},"Nat.Linear.PolyCnstr.denote_combine":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L605-L613","name":"Nat.Linear.PolyCnstr.denote_combine","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote_combine","doc":""},"Nat.Linear.PolyCnstr.denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L201-L205","name":"Nat.Linear.PolyCnstr.denote","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote","doc":""},"Nat.Linear.PolyCnstr.combine":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L192-L194","name":"Nat.Linear.PolyCnstr.combine","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.combine","doc":""},"Nat.Linear.PolyCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L169-L173","name":"Nat.Linear.PolyCnstr","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr","doc":""},"Nat.Linear.Poly.toExpr.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L266-L269","name":"Nat.Linear.Poly.toExpr.go","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr.go","doc":""},"Nat.Linear.Poly.toExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L261-L269","name":"Nat.Linear.Poly.toExpr","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr","doc":""},"Nat.Linear.Poly.sort.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L65-L68","name":"Nat.Linear.Poly.sort.go","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.sort.go","doc":""},"Nat.Linear.Poly.sort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L64-L69","name":"Nat.Linear.Poly.sort","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.sort","doc":""},"Nat.Linear.Poly.of_isZero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L624-L628","name":"Nat.Linear.Poly.of_isZero","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isZero","doc":""},"Nat.Linear.Poly.of_isNonZero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L630-L637","name":"Nat.Linear.Poly.of_isNonZero","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isNonZero","doc":""},"Nat.Linear.Poly.of_denote_le_cancelAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L463-L494","name":"Nat.Linear.Poly.of_denote_le_cancelAux","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancelAux","doc":""},"Nat.Linear.Poly.of_denote_le_cancel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L499-L503","name":"Nat.Linear.Poly.of_denote_le_cancel","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancel","doc":""},"Nat.Linear.Poly.of_denote_eq_cancelAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L384-L413","name":"Nat.Linear.Poly.of_denote_eq_cancelAux","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancelAux","doc":""},"Nat.Linear.Poly.of_denote_eq_cancel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L418-L422","name":"Nat.Linear.Poly.of_denote_eq_cancel","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancel","doc":""},"Nat.Linear.Poly.norm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L160-L161","name":"Nat.Linear.Poly.norm","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm","doc":""},"Nat.Linear.Poly.mul.go_denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L577-L580","name":"Nat.Linear.Poly.mul.go_denote","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul.go_denote","doc":""},"Nat.Linear.Poly.mul.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L87-L89","name":"Nat.Linear.Poly.mul.go","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul.go","doc":""},"Nat.Linear.Poly.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L79-L89","name":"Nat.Linear.Poly.mul","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul","doc":""},"Nat.Linear.Poly.isZero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L121-L124","name":"Nat.Linear.Poly.isZero","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isZero","doc":""},"Nat.Linear.Poly.isNum?_eq_some":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L617-L622","name":"Nat.Linear.Poly.isNum?_eq_some","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?_eq_some","doc":""},"Nat.Linear.Poly.isNum?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L115-L119","name":"Nat.Linear.Poly.isNum?","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?","doc":""},"Nat.Linear.Poly.isNonZero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L126-L129","name":"Nat.Linear.Poly.isNonZero","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNonZero","doc":""},"Nat.Linear.Poly.insertSorted":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L59-L62","name":"Nat.Linear.Poly.insertSorted","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insertSorted","doc":""},"Nat.Linear.Poly.fuse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L71-L77","name":"Nat.Linear.Poly.fuse","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.fuse","doc":""},"Nat.Linear.Poly.denote_toExpr_go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L703-L706","name":"Nat.Linear.Poly.denote_toExpr_go","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_toExpr_go","doc":""},"Nat.Linear.Poly.denote_toExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L710-L713","name":"Nat.Linear.Poly.denote_toExpr","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_toExpr","doc":""},"Nat.Linear.Poly.denote_sort_go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L285-L288","name":"Nat.Linear.Poly.denote_sort_go","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_sort_go","doc":""},"Nat.Linear.Poly.denote_sort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L292-L293","name":"Nat.Linear.Poly.denote_sort","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_sort","doc":""},"Nat.Linear.Poly.denote_reverseAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L311-L314","name":"Nat.Linear.Poly.denote_reverseAux","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverseAux","doc":""},"Nat.Linear.Poly.denote_reverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L318-L319","name":"Nat.Linear.Poly.denote_reverse","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverse","doc":""},"Nat.Linear.Poly.denote_mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L335-L341","name":"Nat.Linear.Poly.denote_mul","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_mul","doc":""},"Nat.Linear.Poly.denote_le_cancel_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L505-L506","name":"Nat.Linear.Poly.denote_le_cancel_eq","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel_eq","doc":""},"Nat.Linear.Poly.denote_le_cancelAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L429-L461","name":"Nat.Linear.Poly.denote_le_cancelAux","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancelAux","doc":""},"Nat.Linear.Poly.denote_le_cancel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L496-L497","name":"Nat.Linear.Poly.denote_le_cancel","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel","doc":""},"Nat.Linear.Poly.denote_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L133-L133","name":"Nat.Linear.Poly.denote_le","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le","doc":""},"Nat.Linear.Poly.denote_insertSorted":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L278-L281","name":"Nat.Linear.Poly.denote_insertSorted","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_insertSorted","doc":""},"Nat.Linear.Poly.denote_fuse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L323-L331","name":"Nat.Linear.Poly.denote_fuse","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_fuse","doc":""},"Nat.Linear.Poly.denote_eq_cancel_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L424-L425","name":"Nat.Linear.Poly.denote_eq_cancel_eq","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel_eq","doc":""},"Nat.Linear.Poly.denote_eq_cancelAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L350-L382","name":"Nat.Linear.Poly.denote_eq_cancelAux","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancelAux","doc":""},"Nat.Linear.Poly.denote_eq_cancel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L415-L416","name":"Nat.Linear.Poly.denote_eq_cancel","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel","doc":""},"Nat.Linear.Poly.denote_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L131-L131","name":"Nat.Linear.Poly.denote_eq","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq","doc":""},"Nat.Linear.Poly.denote_cons":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L304-L307","name":"Nat.Linear.Poly.denote_cons","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_cons","doc":""},"Nat.Linear.Poly.denote_combineAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L510-L518","name":"Nat.Linear.Poly.denote_combineAux","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_combineAux","doc":""},"Nat.Linear.Poly.denote_combine":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L520-L521","name":"Nat.Linear.Poly.denote_combine","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_combine","doc":""},"Nat.Linear.Poly.denote_append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L297-L300","name":"Nat.Linear.Poly.denote_append","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_append","doc":""},"Nat.Linear.Poly.denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L54-L57","name":"Nat.Linear.Poly.denote","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote","doc":""},"Nat.Linear.Poly.combineAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L135-L148","name":"Nat.Linear.Poly.combineAux","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.combineAux","doc":""},"Nat.Linear.Poly.combine":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L150-L151","name":"Nat.Linear.Poly.combine","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.combine","doc":""},"Nat.Linear.Poly.cancelAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L91-L108","name":"Nat.Linear.Poly.cancelAux","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux","doc":""},"Nat.Linear.Poly.cancel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L112-L113","name":"Nat.Linear.Poly.cancel","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel","doc":""},"Nat.Linear.Poly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L52-L52","name":"Nat.Linear.Poly","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly","doc":""},"Nat.Linear.ExprCnstr.toPoly_norm_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L556-L557","name":"Nat.Linear.ExprCnstr.toPoly_norm_eq","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly_norm_eq","doc":""},"Nat.Linear.ExprCnstr.toPoly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L229-L230","name":"Nat.Linear.ExprCnstr.toPoly","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly","doc":""},"Nat.Linear.ExprCnstr.toNormPoly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L232-L234","name":"Nat.Linear.ExprCnstr.toNormPoly","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly","doc":""},"Nat.Linear.ExprCnstr.eq_true_of_isValid":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L666-L669","name":"Nat.Linear.ExprCnstr.eq_true_of_isValid","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_true_of_isValid","doc":""},"Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L715-L718","name":"Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq","doc":""},"Nat.Linear.ExprCnstr.eq_false_of_isUnsat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L661-L664","name":"Nat.Linear.ExprCnstr.eq_false_of_isUnsat","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_false_of_isUnsat","doc":""},"Nat.Linear.ExprCnstr.denote_toPoly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L559-L564","name":"Nat.Linear.ExprCnstr.denote_toPoly","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toPoly","doc":""},"Nat.Linear.ExprCnstr.denote_toNormPoly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L568-L573","name":"Nat.Linear.ExprCnstr.denote_toNormPoly","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toNormPoly","doc":""},"Nat.Linear.ExprCnstr.denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L223-L227","name":"Nat.Linear.ExprCnstr.denote","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote","doc":""},"Nat.Linear.ExprCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L196-L199","name":"Nat.Linear.ExprCnstr","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr","doc":""},"Nat.Linear.Expr.toPoly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L153-L158","name":"Nat.Linear.Expr.toPoly","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly","doc":""},"Nat.Linear.Expr.toNormPoly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L163-L164","name":"Nat.Linear.Expr.toNormPoly","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly","doc":""},"Nat.Linear.Expr.of_cancel_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L553-L554","name":"Nat.Linear.Expr.of_cancel_lt","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_lt","doc":""},"Nat.Linear.Expr.of_cancel_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L547-L551","name":"Nat.Linear.Expr.of_cancel_le","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_le","doc":""},"Nat.Linear.Expr.of_cancel_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L541-L545","name":"Nat.Linear.Expr.of_cancel_eq","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_eq","doc":""},"Nat.Linear.Expr.inc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L166-L167","name":"Nat.Linear.Expr.inc","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc","doc":""},"Nat.Linear.Expr.eq_of_toNormPoly_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L720-L723","name":"Nat.Linear.Expr.eq_of_toNormPoly_eq","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly_eq","doc":""},"Nat.Linear.Expr.eq_of_toNormPoly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L535-L539","name":"Nat.Linear.Expr.eq_of_toNormPoly","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly","doc":""},"Nat.Linear.Expr.denote_toPoly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L525-L531","name":"Nat.Linear.Expr.denote_toPoly","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly","doc":""},"Nat.Linear.Expr.denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L45-L50","name":"Nat.Linear.Expr.denote","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote","doc":""},"Nat.Linear.Expr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L37-L43","name":"Nat.Linear.Expr","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr","doc":""},"Nat.Linear.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L22-L22","name":"Nat.Linear.Context","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Context","doc":""},"Nat.Linear.Certificate.of_combine_isUnsat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L691-L693","name":"Nat.Linear.Certificate.of_combine_isUnsat","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combine_isUnsat","doc":""},"Nat.Linear.Certificate.of_combineHyps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L671-L680","name":"Nat.Linear.Certificate.of_combineHyps","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combineHyps","doc":""},"Nat.Linear.Certificate.of_combine":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L682-L689","name":"Nat.Linear.Certificate.of_combine","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combine","doc":""},"Nat.Linear.Certificate.denote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L248-L251","name":"Nat.Linear.Certificate.denote","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.denote","doc":""},"Nat.Linear.Certificate.combineHyps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L238-L241","name":"Nat.Linear.Certificate.combineHyps","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.combineHyps","doc":""},"Nat.Linear.Certificate.combine":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L243-L246","name":"Nat.Linear.Certificate.combine","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.combine","doc":""},"Nat.Linear.Certificate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Nat/Linear.lean#L236-L236","name":"Nat.Linear.Certificate","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate","doc":""},"Nat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L959-L961","name":"Nat","docLink":"./Init/Prelude.html#Nat","doc":"The type of natural numbers. `0`, `1`, `2`, ..."},"Mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1046-L1047","name":"Mul","docLink":"./Init/Prelude.html#Mul","doc":""},"MonadWithReaderOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2131-L2132","name":"MonadWithReaderOf","docLink":"./Init/Prelude.html#MonadWithReaderOf","doc":""},"MonadWithReader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2137-L2138","name":"MonadWithReader","docLink":"./Init/Prelude.html#MonadWithReader","doc":""},"MonadStateOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2154-L2163","name":"MonadStateOf","docLink":"./Init/Prelude.html#MonadStateOf","doc":"An implementation of [MonadState](https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-State-Class.html).\nIn contrast to the Haskell implementation, we use overlapping instances to derive instances\nautomatically from `monadLift`. "},"MonadState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2177-L2180","name":"MonadState","docLink":"./Init/Prelude.html#MonadState","doc":"Similar to `MonadStateOf`, but `σ` is an outParam for convenience "},"MonadReaderOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2110-L2111","name":"MonadReaderOf","docLink":"./Init/Prelude.html#MonadReaderOf","doc":"An implementation of [MonadReader](https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-Reader-Class.html#t:MonadReader).\n    It does not contain `local` because this Function cannot be lifted using `monadLift`.\n    Instead, the `MonadReaderAdapter` class provides the more general `adaptReader` Function.\n\n    Note: This class can be seen as a simplification of the more \"principled\" definition\n    ```\n    class MonadReader (ρ : outParam (Type u)) (n : Type u → Type u) where\n      lift {α : Type u} : ({m : Type u → Type u} → [Monad m] → ReaderT ρ m α) → n α\n    ```\n    "},"MonadReader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2117-L2118","name":"MonadReader","docLink":"./Init/Prelude.html#MonadReader","doc":"Similar to `MonadReaderOf`, but `ρ` is an outParam for convenience "},"MonadLiftT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1968-L1969","name":"MonadLiftT","docLink":"./Init/Prelude.html#MonadLiftT","doc":"The reflexive-transitive closure of `MonadLift`.\n`monadLift` is used to transitively lift monadic computations such as `StateT.get` or `StateT.put s`.\nCorresponds to [MonadLift](https://hackage.haskell.org/package/layers-0.1/docs/Control-Monad-Layer.html#t:MonadLift). "},"MonadLift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1962-L1963","name":"MonadLift","docLink":"./Init/Prelude.html#MonadLift","doc":"A Function for lifting a computation from an inner Monad to an outer Monad.\nLike [MonadTrans](https://hackage.haskell.org/package/transformers-0.5.5.0/docs/Control-Monad-Trans-Class.html),\nbut `n` does not have to be a monad transformer.\nAlternatively, an implementation of [MonadLayer](https://hackage.haskell.org/package/layers-0.1/docs/Control-Monad-Layer.html#t:MonadLayer) without `layerInvmap` (so far). "},"MonadFunctorT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1990-L1991","name":"MonadFunctorT","docLink":"./Init/Prelude.html#MonadFunctorT","doc":"The reflexive-transitive closure of `MonadFunctor`.\n`monadMap` is used to transitively lift Monad morphisms "},"MonadFunctor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1985-L1986","name":"MonadFunctor","docLink":"./Init/Prelude.html#MonadFunctor","doc":"A functor in the category of monads. Can be used to lift monad-transforming functions.\nBased on pipes' [MFunctor](https://hackage.haskell.org/package/pipes-2.4.0/docs/Control-MFunctor.html),\nbut not restricted to monad transformers.\nAlternatively, an implementation of [MonadTransFunctor](http://duairc.netsoc.ie/layers-docs/Control-Monad-Layer.html#t:MonadTransFunctor). "},"MonadFinally":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L150-L156","name":"MonadFinally","docLink":"./Init/Control/Except.html#MonadFinally","doc":""},"MonadExceptOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2011-L2013","name":"MonadExceptOf","docLink":"./Init/Prelude.html#MonadExceptOf","doc":"An implementation of [MonadError](https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-Except.html#t:MonadError) "},"MonadExcept.orelse'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L133-L134","name":"MonadExcept.orelse'","docLink":"./Init/Control/Except.html#MonadExcept.orelse'","doc":"Alternative orelse operator that allows to select which exception should be used.\nThe default is to use the first exception since the standard `orelse` uses the second. "},"MonadExcept.orElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2039-L2040","name":"MonadExcept.orElse","docLink":"./Init/Prelude.html#MonadExcept.orElse","doc":""},"MonadExcept.ofExcept":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2026-L2028","name":"MonadExcept.ofExcept","docLink":"./Init/Prelude.html#MonadExcept.ofExcept","doc":""},"MonadExcept.instOrElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2042-L2043","name":"MonadExcept.instOrElse","docLink":"./Init/Prelude.html#MonadExcept.instOrElse","doc":""},"MonadExcept":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2022-L2024","name":"MonadExcept","docLink":"./Init/Prelude.html#MonadExcept","doc":"Similar to `MonadExceptOf`, but `ε` is an outParam for convenience "},"MonadControlT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L193-L196","name":"MonadControlT","docLink":"./Init/Control/Basic.html#MonadControlT","doc":"Transitive closure of MonadControl. "},"MonadControl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L187-L190","name":"MonadControl","docLink":"./Init/Control/Basic.html#MonadControl","doc":"MonadControl is a way of stating that the monad `m` can be 'run inside' the monad `n`.\n\nThis is the same as [`MonadBaseControl`](https://hackage.haskell.org/package/monad-control-1.0.3.1/docs/Control-Monad-Trans-Control.html#t:MonadBaseControl) in Haskell.\nTo learn about `MonadControl`, see the comment above this docstring.\n\n"},"Monad":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1935-L1939","name":"Monad","docLink":"./Init/Prelude.html#Monad","doc":""},"Mod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1055-L1056","name":"Mod","docLink":"./Init/Prelude.html#Mod","doc":""},"Membership.mem.upper":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L79-L81","name":"Membership.mem.upper","docLink":"./Init/Data/Range.html#Membership.mem.upper","doc":""},"Membership.mem.lower":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Range.lean#L83-L85","name":"Membership.mem.lower","docLink":"./Init/Data/Range.html#Membership.mem.lower","doc":""},"Membership":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1149-L1150","name":"Membership","docLink":"./Init/Prelude.html#Membership","doc":""},"Measure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L187-L188","name":"Measure","docLink":"./Init/WF.html#Measure","doc":""},"MProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L484-L488","name":"MProd","docLink":"./Init/Prelude.html#MProd","doc":"Similar to `Prod`, but `α` and `β` are in the same universe.\nWe say `MProd` is the universe monomorphic product type.\n"},"List.zipWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L370-L372","name":"List.zipWith","docLink":"./Init/Data/List/Basic.html#List.zipWith","doc":""},"List.zip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L374-L375","name":"List.zip","docLink":"./Init/Data/List/Basic.html#List.zip","doc":""},"List.unzip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L377-L379","name":"List.unzip","docLink":"./Init/Data/List/Basic.html#List.unzip","doc":""},"List.toStringAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L48-L51","name":"List.toStringAux","docLink":"./Init/Data/ToString/Basic.html#List.toStringAux","doc":""},"List.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ToString/Basic.lean#L53-L55","name":"List.toString","docLink":"./Init/Data/ToString/Basic.html#List.toString","doc":""},"List.toSSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SSet.lean#L46-L47","name":"List.toSSet","docLink":"./Lean/Data/SSet.html#List.toSSet","doc":""},"List.toPersistentArrayAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L377-L379","name":"List.toPersistentArrayAux","docLink":"./Std/Data/PersistentArray.html#List.toPersistentArrayAux","doc":""},"List.toPersistentArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L381-L382","name":"List.toPersistentArray","docLink":"./Std/Data/PersistentArray.html#List.toPersistentArray","doc":""},"List.toFloatArray.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L164-L166","name":"List.toFloatArray.loop","docLink":"./Init/Data/FloatArray/Basic.html#List.toFloatArray.loop","doc":""},"List.toFloatArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L163-L167","name":"List.toFloatArray","docLink":"./Init/Data/FloatArray/Basic.html#List.toFloatArray","doc":""},"List.toByteArray.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L183-L185","name":"List.toByteArray.loop","docLink":"./Init/Data/ByteArray/Basic.html#List.toByteArray.loop","doc":""},"List.toByteArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L182-L186","name":"List.toByteArray","docLink":"./Init/Data/ByteArray/Basic.html#List.toByteArray","doc":""},"List.toAssocList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/AssocList.lean#L105-L107","name":"List.toAssocList","docLink":"./Std/Data/AssocList.html#List.toAssocList","doc":""},"List.toArray_eq_toArray_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/BasicAux.lean#L35-L38","name":"List.toArray_eq_toArray_eq","docLink":"./Init/Data/Array/BasicAux.html#List.toArray_eq_toArray_eq","doc":""},"List.toArrayAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1894-L1896","name":"List.toArrayAux","docLink":"./Init/Prelude.html#List.toArrayAux","doc":""},"List.toArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1904-L1905","name":"List.toArray","docLink":"./Init/Prelude.html#List.toArray","doc":""},"List.takeWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L350-L354","name":"List.takeWhile","docLink":"./Init/Data/List/Basic.html#List.takeWhile","doc":""},"List.take":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L345-L348","name":"List.take","docLink":"./Init/Data/List/Basic.html#List.take","doc":""},"List.tailD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L53-L55","name":"List.tailD","docLink":"./Init/Data/List/BasicAux.html#List.tailD","doc":""},"List.tail?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L49-L51","name":"List.tail?","docLink":"./Init/Data/List/BasicAux.html#List.tail?","doc":""},"List.tail!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L45-L47","name":"List.tail!","docLink":"./Init/Data/List/BasicAux.html#List.tail!","doc":""},"List.tacticSizeOf_list_dec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L124-L127","name":"List.tacticSizeOf_list_dec","docLink":"./Init/Data/List/BasicAux.html#List.tacticSizeOf_list_dec","doc":"This tactic, added to the `decreasing_trivial` toolbox, proves that\n`sizeOf a < sizeOf as` when `a ∈ as`, which is useful for well founded recursions\nover a nested inductive like `inductive T | mk : List T → T`. "},"List.spanAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L304-L308","name":"List.spanAux","docLink":"./Init/Data/List/Basic.html#List.spanAux","doc":""},"List.span":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L310-L311","name":"List.span","docLink":"./Init/Data/List/Basic.html#List.span","doc":""},"List.sizeOf_lt_of_mem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L119-L122","name":"List.sizeOf_lt_of_mem","docLink":"./Init/Data/List/BasicAux.html#List.sizeOf_lt_of_mem","doc":""},"List.sizeOf_get_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Mem.lean#L11-L19","name":"List.sizeOf_get_lt","docLink":"./Init/Data/Array/Mem.html#List.sizeOf_get_lt","doc":""},"List.sizeOf_get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L160-L166","name":"List.sizeOf_get","docLink":"./Init/Data/List/BasicAux.html#List.sizeOf_get","doc":""},"List.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1689-L1692","name":"List.set","docLink":"./Init/Prelude.html#List.set","doc":""},"List.rotateRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L84-L92","name":"List.rotateRight","docLink":"./Init/Data/List/BasicAux.html#List.rotateRight","doc":""},"List.rotateLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L74-L82","name":"List.rotateLeft","docLink":"./Init/Data/List/BasicAux.html#List.rotateLeft","doc":""},"List.reverse_reverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L57-L58","name":"List.reverse_reverse","docLink":"./Init/Data/List/Basic.html#List.reverse_reverse","doc":""},"List.reverse_nil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L134-L135","name":"List.reverse_nil","docLink":"./Init/Data/List/Basic.html#List.reverse_nil","doc":""},"List.reverse_cons":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L137-L139","name":"List.reverse_cons","docLink":"./Init/Data/List/Basic.html#List.reverse_cons","doc":""},"List.reverse_append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L141-L144","name":"List.reverse_append","docLink":"./Init/Data/List/Basic.html#List.reverse_append","doc":""},"List.reverseAux_reverseAux_nil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L47-L50","name":"List.reverseAux_reverseAux_nil","docLink":"./Init/Data/List/Basic.html#List.reverseAux_reverseAux_nil","doc":""},"List.reverseAux_reverseAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L52-L55","name":"List.reverseAux_reverseAux","docLink":"./Init/Data/List/Basic.html#List.reverseAux_reverseAux","doc":""},"List.reverseAux_eq_append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L126-L132","name":"List.reverseAux_eq_append","docLink":"./Init/Data/List/Basic.html#List.reverseAux_eq_append","doc":""},"List.reverseAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L40-L42","name":"List.reverseAux","docLink":"./Init/Data/List/Basic.html#List.reverseAux","doc":""},"List.reverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L44-L45","name":"List.reverse","docLink":"./Init/Data/List/Basic.html#List.reverse","doc":""},"List.repr'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L246-L250","name":"List.repr'","docLink":"./Init/Data/Repr.html#List.repr'","doc":""},"List.repr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L237-L241","name":"List.repr","docLink":"./Init/Data/Repr.html#List.repr","doc":""},"List.replicate_eq_replicateTR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L501-L503","name":"List.replicate_eq_replicateTR","docLink":"./Init/Data/List/Basic.html#List.replicate_eq_replicateTR","doc":""},"List.replicateTR_loop_replicate_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L496-L499","name":"List.replicateTR_loop_replicate_eq","docLink":"./Init/Data/List/Basic.html#List.replicateTR_loop_replicate_eq","doc":""},"List.replicateTR.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L491-L493","name":"List.replicateTR.loop","docLink":"./Init/Data/List/Basic.html#List.replicateTR.loop","doc":""},"List.replicateTR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L490-L494","name":"List.replicateTR","docLink":"./Init/Data/List/Basic.html#List.replicateTR","doc":""},"List.replicate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L486-L488","name":"List.replicate","docLink":"./Init/Data/List/Basic.html#List.replicate","doc":""},"List.replace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L230-L234","name":"List.replace","docLink":"./Init/Data/List/Basic.html#List.replace","doc":""},"List.removeAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L329-L330","name":"List.removeAll","docLink":"./Init/Data/List/Basic.html#List.removeAll","doc":""},"List.redLength":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1899-L1901","name":"List.redLength","docLink":"./Init/Prelude.html#List.redLength","doc":""},"List.rangeAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L381-L383","name":"List.rangeAux","docLink":"./Init/Data/List/Basic.html#List.rangeAux","doc":""},"List.range":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L385-L386","name":"List.range","docLink":"./Init/Data/List/Basic.html#List.range","doc":""},"List.pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L427-L427","name":"List.pure","docLink":"./Init/Data/List/Basic.html#List.pure","doc":""},"List.partitionAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L202-L207","name":"List.partitionAux","docLink":"./Init/Data/List/Basic.html#List.partitionAux","doc":""},"List.partition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L209-L210","name":"List.partition","docLink":"./Init/Data/List/Basic.html#List.partition","doc":""},"List.or":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L366-L366","name":"List.or","docLink":"./Init/Data/List/Basic.html#List.or","doc":""},"List.of_concat_eq_concat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L572-L579","name":"List.of_concat_eq_concat","docLink":"./Init/Data/List/Basic.html#List.of_concat_eq_concat","doc":""},"List.notElem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L242-L243","name":"List.notElem","docLink":"./Init/Data/List/Basic.html#List.notElem","doc":""},"List.nil_append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L77-L77","name":"List.nil_append","docLink":"./Init/Data/List/Basic.html#List.nil_append","doc":""},"List.minimum?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L552-L554","name":"List.minimum?","docLink":"./Init/Data/List/Basic.html#List.minimum?","doc":""},"List.mem_of_elem_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L255-L262","name":"List.mem_of_elem_eq_true","docLink":"./Init/Data/List/Basic.html#List.mem_of_elem_eq_true","doc":""},"List.mem_append_of_mem_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L278-L282","name":"List.mem_append_of_mem_right","docLink":"./Init/Data/List/Basic.html#List.mem_append_of_mem_right","doc":""},"List.mem_append_of_mem_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L272-L276","name":"List.mem_append_of_mem_left","docLink":"./Init/Data/List/Basic.html#List.mem_append_of_mem_left","doc":""},"List.maximum?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L548-L550","name":"List.maximum?","docLink":"./Init/Data/List/Basic.html#List.maximum?","doc":""},"List.map₂":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L158-L161","name":"List.map₂","docLink":"./Init/Data/List/Basic.html#List.map₂","doc":""},"List.map_eq_mapTR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L154-L156","name":"List.map_eq_mapTR","docLink":"./Init/Data/List/Basic.html#List.map_eq_mapTR","doc":""},"List.mapTRAux_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L146-L152","name":"List.mapTRAux_eq","docLink":"./Init/Data/List/Basic.html#List.mapTRAux_eq","doc":""},"List.mapTRAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L119-L121","name":"List.mapTRAux","docLink":"./Init/Data/List/Basic.html#List.mapTRAux","doc":""},"List.mapTR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L123-L124","name":"List.mapTR","docLink":"./Init/Data/List/Basic.html#List.mapTR","doc":""},"List.mapM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L44-L46","name":"List.mapM","docLink":"./Init/Data/List/Control.html#List.mapM","doc":""},"List.mapA":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L49-L51","name":"List.mapA","docLink":"./Init/Data/List/Control.html#List.mapA","doc":""},"List.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L115-L117","name":"List.map","docLink":"./Init/Data/List/Basic.html#List.map","doc":""},"List.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L429-L432","name":"List.lt","docLink":"./Init/Data/List/Basic.html#List.lt","doc":""},"List.lookup":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L323-L327","name":"List.lookup","docLink":"./Init/Data/List/Basic.html#List.lookup","doc":""},"List.length_set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L518-L524","name":"List.length_set","docLink":"./Init/Data/List/Basic.html#List.length_set","doc":""},"List.length_reverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L543-L546","name":"List.length_reverse","docLink":"./Init/Data/List/Basic.html#List.length_reverse","doc":""},"List.length_replicate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L510-L511","name":"List.length_replicate","docLink":"./Init/Data/List/Basic.html#List.length_replicate","doc":""},"List.length_nil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L37-L38","name":"List.length_nil","docLink":"./Init/Data/List/Basic.html#List.length_nil","doc":""},"List.length_map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L538-L541","name":"List.length_map","docLink":"./Init/Data/List/Basic.html#List.length_map","doc":""},"List.length_eq_lengthTR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L33-L35","name":"List.length_eq_lengthTR","docLink":"./Init/Data/List/Basic.html#List.length_eq_lengthTR","doc":""},"List.length_dropLast_cons":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L526-L531","name":"List.length_dropLast_cons","docLink":"./Init/Data/List/Basic.html#List.length_dropLast_cons","doc":""},"List.length_cons":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1705-L1706","name":"List.length_cons","docLink":"./Init/Prelude.html#List.length_cons","doc":""},"List.length_concat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L513-L516","name":"List.length_concat","docLink":"./Init/Data/List/Basic.html#List.length_concat","doc":""},"List.length_append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L533-L536","name":"List.length_append","docLink":"./Init/Data/List/Basic.html#List.length_append","doc":""},"List.length_add_eq_lengthTRAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L26-L31","name":"List.length_add_eq_lengthTRAux","docLink":"./Init/Data/List/Basic.html#List.length_add_eq_lengthTRAux","doc":""},"List.lengthTRAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1698-L1700","name":"List.lengthTRAux","docLink":"./Init/Prelude.html#List.lengthTRAux","doc":""},"List.lengthTR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1702-L1703","name":"List.lengthTR","docLink":"./Init/Prelude.html#List.lengthTR","doc":""},"List.length":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1694-L1696","name":"List.length","docLink":"./Init/Prelude.html#List.length","doc":""},"List.le_antisymm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L168-L182","name":"List.le_antisymm","docLink":"./Init/Data/List/BasicAux.html#List.le_antisymm","doc":""},"List.le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L455-L455","name":"List.le","docLink":"./Init/Data/List/Basic.html#List.le","doc":""},"List.join":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L163-L165","name":"List.join","docLink":"./Init/Data/List/Basic.html#List.join","doc":""},"List.isSuffixOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L471-L472","name":"List.isSuffixOf","docLink":"./Init/Data/List/Basic.html#List.isSuffixOf","doc":"`isSuffixOf l₁ l₂` returns `true` Iff `l₁` is a suffix of `l₂`.\nThat is, there exists a `t` such that `l₂ == t ++ l₁`. "},"List.isPrefixOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L464-L467","name":"List.isPrefixOf","docLink":"./Init/Data/List/Basic.html#List.isPrefixOf","doc":"`isPrefixOf l₁ l₂` returns `true` Iff `l₁` is a prefix of `l₂`.\nThat is, there exists a `t` such that `l₂ == l₁ ++ t`. "},"List.isEqv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L474-L477","name":"List.isEqv","docLink":"./Init/Data/List/Basic.html#List.isEqv","doc":""},"List.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L111-L113","name":"List.isEmpty","docLink":"./Init/Data/List/Basic.html#List.isEmpty","doc":""},"List.iota_eq_iotaTR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L399-L404","name":"List.iota_eq_iotaTR","docLink":"./Init/Data/List/Basic.html#List.iota_eq_iotaTR","doc":""},"List.iotaTR.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L393-L395","name":"List.iotaTR.go","docLink":"./Init/Data/List/Basic.html#List.iotaTR.go","doc":""},"List.iotaTR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L392-L396","name":"List.iotaTR","docLink":"./Init/Data/List/Basic.html#List.iotaTR","doc":""},"List.iota":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L388-L390","name":"List.iota","docLink":"./Init/Data/List/Basic.html#List.iota","doc":""},"List.intersperse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L417-L420","name":"List.intersperse","docLink":"./Init/Data/List/Basic.html#List.intersperse","doc":""},"List.intercalate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L422-L423","name":"List.intercalate","docLink":"./Init/Data/List/Basic.html#List.intercalate","doc":""},"List.instMembershipList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L252-L253","name":"List.instMembershipList","docLink":"./Init/Data/List/Basic.html#List.instMembershipList","doc":""},"List.instLawfulBEqListInstBEqList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L556-L570","name":"List.instLawfulBEqListInstBEqList","docLink":"./Init/Data/List/Basic.html#List.instLawfulBEqListInstBEqList","doc":""},"List.instLTList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L434-L434","name":"List.instLTList","docLink":"./Init/Data/List/Basic.html#List.instLTList","doc":""},"List.instLEList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L457-L457","name":"List.instLEList","docLink":"./Init/Data/List/Basic.html#List.instLEList","doc":""},"List.instGetElemListNatLtInstLTNatLength":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L17-L18","name":"List.instGetElemListNatLtInstLTNatLength","docLink":"./Init/Data/List/Basic.html#List.instGetElemListNatLtInstLTNatLength","doc":""},"List.instFunctorList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L196-L197","name":"List.instFunctorList","docLink":"./Init/Data/List/Control.html#List.instFunctorList","doc":""},"List.instForMList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L188-L189","name":"List.instForMList","docLink":"./Init/Data/List/Control.html#List.instForMList","doc":""},"List.instForInList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L151-L152","name":"List.instForInList","docLink":"./Init/Data/List/Control.html#List.instForInList","doc":""},"List.instForIn'ListInferInstanceMembershipInstMembershipList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L176-L177","name":"List.instForIn'ListInferInstanceMembershipInstMembershipList","docLink":"./Init/Data/List/Control.html#List.instForIn'ListInferInstanceMembershipInstMembershipList","doc":""},"List.instForAllListDecidableLeInstLEList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L459-L460","name":"List.instForAllListDecidableLeInstLEList","docLink":"./Init/Data/List/Basic.html#List.instForAllListDecidableLeInstLEList","doc":""},"List.instEmptyCollectionList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L98-L98","name":"List.instEmptyCollectionList","docLink":"./Init/Data/List/Basic.html#List.instEmptyCollectionList","doc":""},"List.instDecidableMemListInstMembershipList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L269-L270","name":"List.instDecidableMemListInstMembershipList","docLink":"./Init/Data/List/Basic.html#List.instDecidableMemListInstMembershipList","doc":""},"List.instBEqList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L484-L484","name":"List.instBEqList","docLink":"./Init/Data/List/Basic.html#List.instBEqList","doc":""},"List.instAppendList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L75-L75","name":"List.instAppendList","docLink":"./Init/Data/List/Basic.html#List.instAppendList","doc":""},"List.instAntisymmListLeInstLEList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L184-L185","name":"List.instAntisymmListLeInstLEList","docLink":"./Init/Data/List/BasicAux.html#List.instAntisymmListLeInstLEList","doc":""},"List.init":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L412-L415","name":"List.init","docLink":"./Init/Data/List/Basic.html#List.init","doc":""},"List.headD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L38-L40","name":"List.headD","docLink":"./Init/Data/List/BasicAux.html#List.headD","doc":""},"List.head?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L34-L36","name":"List.head?","docLink":"./Init/Data/List/BasicAux.html#List.head?","doc":""},"List.head!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L30-L32","name":"List.head!","docLink":"./Init/Data/List/BasicAux.html#List.head!","doc":""},"List.head":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L42-L43","name":"List.head","docLink":"./Init/Data/List/BasicAux.html#List.head","doc":""},"List.hasDecidableLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L436-L453","name":"List.hasDecidableLt","docLink":"./Init/Data/List/Basic.html#List.hasDecidableLt","doc":""},"List.hasDecEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1670-L1680","name":"List.hasDecEq","docLink":"./Init/Prelude.html#List.hasDecEq","doc":""},"List.groupByAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L313-L317","name":"List.groupByAux","docLink":"./Init/Data/List/Basic.html#List.groupByAux","doc":""},"List.groupBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L319-L321","name":"List.groupBy","docLink":"./Init/Data/List/Basic.html#List.groupBy","doc":""},"List.get_last":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L109-L117","name":"List.get_last","docLink":"./Init/Data/List/BasicAux.html#List.get_last","doc":""},"List.get_drop_eq_drop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L340-L343","name":"List.get_drop_eq_drop","docLink":"./Init/Data/List/Basic.html#List.get_drop_eq_drop","doc":""},"List.get_append_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L102-L107","name":"List.get_append_right","docLink":"./Init/Data/List/BasicAux.html#List.get_append_right","doc":""},"List.get_append_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L94-L100","name":"List.get_append_left","docLink":"./Init/Data/List/BasicAux.html#List.get_append_left","doc":""},"List.getLastD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L70-L72","name":"List.getLastD","docLink":"./Init/Data/List/BasicAux.html#List.getLastD","doc":""},"List.getLast?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L66-L68","name":"List.getLast?","docLink":"./Init/Data/List/BasicAux.html#List.getLast?","doc":""},"List.getLast!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L62-L64","name":"List.getLast!","docLink":"./Init/Data/List/BasicAux.html#List.getLast!","doc":""},"List.getLast":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L57-L60","name":"List.getLast","docLink":"./Init/Data/List/BasicAux.html#List.getLast","doc":""},"List.getD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L27-L28","name":"List.getD","docLink":"./Init/Data/List/BasicAux.html#List.getD","doc":""},"List.get?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L22-L25","name":"List.get?","docLink":"./Init/Data/List/BasicAux.html#List.get?","doc":""},"List.get!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L17-L20","name":"List.get!","docLink":"./Init/Data/List/BasicAux.html#List.get!","doc":""},"List.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1712-L1714","name":"List.get","docLink":"./Init/Prelude.html#List.get","doc":""},"List.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Instances.lean#L16-L18","name":"List.format","docLink":"./Init/Data/Format/Instances.html#List.format","doc":""},"List.forM_nil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L191-L192","name":"List.forM_nil","docLink":"./Init/Data/List/Control.html#List.forM_nil","doc":""},"List.forM_cons":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L193-L194","name":"List.forM_cons","docLink":"./Init/Data/List/Control.html#List.forM_cons","doc":""},"List.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L54-L57","name":"List.forM","docLink":"./Init/Data/List/Control.html#List.forM","doc":""},"List.forIn_nil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L154-L155","name":"List.forIn_nil","docLink":"./Init/Data/List/Control.html#List.forIn_nil","doc":""},"List.forIn_cons":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L157-L159","name":"List.forIn_cons","docLink":"./Init/Data/List/Control.html#List.forIn_cons","doc":""},"List.forIn.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L143-L148","name":"List.forIn.loop","docLink":"./Init/Data/List/Control.html#List.forIn.loop","doc":""},"List.forIn'_eq_forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L179-L186","name":"List.forIn'_eq_forIn","docLink":"./Init/Data/List/Control.html#List.forIn'_eq_forIn","doc":""},"List.forIn'.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L162-L173","name":"List.forIn'.loop","docLink":"./Init/Data/List/Control.html#List.forIn'.loop","doc":""},"List.forIn'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L161-L174","name":"List.forIn'","docLink":"./Init/Data/List/Control.html#List.forIn'","doc":""},"List.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L142-L149","name":"List.forIn","docLink":"./Init/Data/List/Control.html#List.forIn","doc":""},"List.forA":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L60-L63","name":"List.forA","docLink":"./Init/Data/List/Control.html#List.forA","doc":""},"List.foldrM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L99-L103","name":"List.foldrM","docLink":"./Init/Data/List/Control.html#List.foldrM","doc":""},"List.foldr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L356-L358","name":"List.foldr","docLink":"./Init/Data/List/Basic.html#List.foldr","doc":""},"List.foldlM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L92-L96","name":"List.foldlM","docLink":"./Init/Data/List/Control.html#List.foldlM","doc":""},"List.foldl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1685-L1687","name":"List.foldl","docLink":"./Init/Prelude.html#List.foldl","doc":""},"List.firstM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L106-L108","name":"List.firstM","docLink":"./Init/Data/List/Control.html#List.firstM","doc":""},"List.findSomeM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L135-L140","name":"List.findSomeM?","docLink":"./Init/Data/List/Control.html#List.findSomeM?","doc":""},"List.findSome?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L224-L228","name":"List.findSome?","docLink":"./Init/Data/List/Basic.html#List.findSome?","doc":""},"List.findM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L127-L132","name":"List.findM?","docLink":"./Init/Data/List/Control.html#List.findM?","doc":""},"List.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L218-L222","name":"List.find?","docLink":"./Init/Data/List/Basic.html#List.find?","doc":""},"List.filter_eq_filterTR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L198-L200","name":"List.filter_eq_filterTR","docLink":"./Init/Data/List/Basic.html#List.filter_eq_filterTR","doc":""},"List.filterTRAux_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L189-L196","name":"List.filterTRAux_eq","docLink":"./Init/Data/List/Basic.html#List.filterTRAux_eq","doc":""},"List.filterTRAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L180-L184","name":"List.filterTRAux","docLink":"./Init/Data/List/Basic.html#List.filterTRAux","doc":""},"List.filterTR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L186-L187","name":"List.filterTR","docLink":"./Init/Data/List/Basic.html#List.filterTR","doc":""},"List.filterRevM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L78-L79","name":"List.filterRevM","docLink":"./Init/Data/List/Control.html#List.filterRevM","doc":""},"List.filterMapM.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L83-L88","name":"List.filterMapM.loop","docLink":"./Init/Data/List/Control.html#List.filterMapM.loop","doc":""},"List.filterMapM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L82-L89","name":"List.filterMapM","docLink":"./Init/Data/List/Control.html#List.filterMapM","doc":""},"List.filterMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L167-L172","name":"List.filterMap","docLink":"./Init/Data/List/Basic.html#List.filterMap","doc":""},"List.filterM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L73-L75","name":"List.filterM","docLink":"./Init/Data/List/Control.html#List.filterM","doc":""},"List.filterAuxM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L66-L70","name":"List.filterAuxM","docLink":"./Init/Data/List/Control.html#List.filterAuxM","doc":""},"List.filter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L174-L178","name":"List.filter","docLink":"./Init/Data/List/Basic.html#List.filter","doc":""},"List.eraseRepsAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L293-L297","name":"List.eraseRepsAux","docLink":"./Init/Data/List/Basic.html#List.eraseRepsAux","doc":""},"List.eraseReps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L300-L302","name":"List.eraseReps","docLink":"./Init/Data/List/Basic.html#List.eraseReps","doc":"Erase repeated adjacent elements. "},"List.eraseIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L106-L109","name":"List.eraseIdx","docLink":"./Init/Data/List/Basic.html#List.eraseIdx","doc":""},"List.eraseDupsAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L284-L288","name":"List.eraseDupsAux","docLink":"./Init/Data/List/Basic.html#List.eraseDupsAux","doc":""},"List.eraseDups":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L290-L291","name":"List.eraseDups","docLink":"./Init/Data/List/Basic.html#List.eraseDups","doc":""},"List.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L100-L104","name":"List.erase","docLink":"./Init/Data/List/Basic.html#List.erase","doc":""},"List.enumFrom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L406-L408","name":"List.enumFrom","docLink":"./Init/Data/List/Basic.html#List.enumFrom","doc":""},"List.enum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L410-L410","name":"List.enum","docLink":"./Init/Data/List/Basic.html#List.enum","doc":""},"List.elem_eq_true_of_mem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L264-L267","name":"List.elem_eq_true_of_mem","docLink":"./Init/Data/List/Basic.html#List.elem_eq_true_of_mem","doc":""},"List.elem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L236-L240","name":"List.elem","docLink":"./Init/Data/List/Basic.html#List.elem","doc":""},"List.drop_nil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L337-L338","name":"List.drop_nil","docLink":"./Init/Data/List/Basic.html#List.drop_nil","doc":""},"List.drop_eq_nil_of_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L584-L588","name":"List.drop_eq_nil_of_le","docLink":"./Init/Data/List/Basic.html#List.drop_eq_nil_of_le","doc":""},"List.dropWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L212-L216","name":"List.dropWhile","docLink":"./Init/Data/List/Basic.html#List.dropWhile","doc":""},"List.dropLast":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L505-L508","name":"List.dropLast","docLink":"./Init/Data/List/Basic.html#List.dropLast","doc":""},"List.drop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L332-L335","name":"List.drop","docLink":"./Init/Data/List/Basic.html#List.drop","doc":""},"List.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L245-L246","name":"List.contains","docLink":"./Init/Data/List/Basic.html#List.contains","doc":""},"List.cons_getElem_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L20-L21","name":"List.cons_getElem_zero","docLink":"./Init/Data/List/Basic.html#List.cons_getElem_zero","doc":""},"List.cons_getElem_succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L23-L24","name":"List.cons_getElem_succ","docLink":"./Init/Data/List/Basic.html#List.cons_getElem_succ","doc":""},"List.cons_append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L84-L84","name":"List.cons_append","docLink":"./Init/Data/List/Basic.html#List.cons_append","doc":""},"List.concat_eq_append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L581-L582","name":"List.concat_eq_append","docLink":"./Init/Data/List/Basic.html#List.concat_eq_append","doc":""},"List.concat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1708-L1710","name":"List.concat","docLink":"./Init/Prelude.html#List.concat","doc":""},"List.bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L425-L425","name":"List.bind","docLink":"./Init/Data/List/Basic.html#List.bind","doc":""},"List.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L479-L482","name":"List.beq","docLink":"./Init/Data/List/Basic.html#List.beq","doc":""},"List.asString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L12-L13","name":"List.asString","docLink":"./Init/Data/String/Basic.html#List.asString","doc":""},"List.append_nil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L78-L82","name":"List.append_nil","docLink":"./Init/Data/List/Basic.html#List.append_nil","doc":""},"List.append_eq_appendTR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L67-L73","name":"List.append_eq_appendTR","docLink":"./Init/Data/List/Basic.html#List.append_eq_appendTR","doc":""},"List.append_cons":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L93-L96","name":"List.append_cons","docLink":"./Init/Data/List/Basic.html#List.append_cons","doc":""},"List.append_cancel_right_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L155-L158","name":"List.append_cancel_right_eq","docLink":"./Init/Data/List/BasicAux.html#List.append_cancel_right_eq","doc":""},"List.append_cancel_right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L143-L148","name":"List.append_cancel_right","docLink":"./Init/Data/List/BasicAux.html#List.append_cancel_right","doc":""},"List.append_cancel_left_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L150-L153","name":"List.append_cancel_left_eq","docLink":"./Init/Data/List/BasicAux.html#List.append_cancel_left_eq","doc":""},"List.append_cancel_left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/BasicAux.lean#L136-L141","name":"List.append_cancel_left","docLink":"./Init/Data/List/BasicAux.html#List.append_cancel_left","doc":""},"List.append_assoc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L88-L91","name":"List.append_assoc","docLink":"./Init/Data/List/Basic.html#List.append_assoc","doc":""},"List.appendTR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L64-L65","name":"List.appendTR","docLink":"./Init/Data/List/Basic.html#List.appendTR","doc":""},"List.append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L60-L62","name":"List.append","docLink":"./Init/Data/List/Basic.html#List.append","doc":""},"List.anyM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L111-L116","name":"List.anyM","docLink":"./Init/Data/List/Control.html#List.anyM","doc":""},"List.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L360-L361","name":"List.any","docLink":"./Init/Data/List/Basic.html#List.any","doc":""},"List.and":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L368-L368","name":"List.and","docLink":"./Init/Data/List/Basic.html#List.and","doc":""},"List.allM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Control.lean#L119-L124","name":"List.allM","docLink":"./Init/Data/List/Control.html#List.allM","doc":""},"List.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L363-L364","name":"List.all","docLink":"./Init/Data/List/Basic.html#List.all","doc":""},"List.Mem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L248-L250","name":"List.Mem","docLink":"./Init/Data/List/Basic.html#List.Mem","doc":""},"List.List.append_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/List/Basic.lean#L86-L86","name":"List.List.append_eq","docLink":"./Init/Data/List/Basic.html#List.List.append_eq","doc":""},"List":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1663-L1665","name":"List","docLink":"./Init/Prelude.html#List","doc":""},"Lean.«term_Matches_|»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L326-L326","name":"Lean.«term_Matches_|»","docLink":"./Init/NotationExtra.html#Lean.«term_Matches_|»","doc":""},"Lean.«termMacro.trace[_]_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L14-L14","name":"Lean.«termMacro.trace[_]_»","docLink":"./Init/NotationExtra.html#Lean.«termMacro.trace[_]_»","doc":""},"Lean.«doElemWhile_:_Do_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L311-L311","name":"Lean.«doElemWhile_:_Do_»","docLink":"./Init/NotationExtra.html#Lean.«doElemWhile_:_Do_»","doc":""},"Lean.«doElemTrace[_]__»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L149-L149","name":"Lean.«doElemTrace[_]__»","docLink":"./Lean/Util/Trace.html#Lean.«doElemTrace[_]__»","doc":""},"Lean.«command__Unif_hint__Where_|-⊢_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L67-L67","name":"Lean.«command__Unif_hint__Where_|-⊢_»","docLink":"./Init/NotationExtra.html#Lean.«command__Unif_hint__Where_|-⊢_»","doc":""},"Lean.writeModule":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L593-L594","name":"Lean.writeModule","docLink":"./Lean/Environment.html#Lean.writeModule","doc":""},"Lean.withoutModifyingState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadBacktrack.lean#L48-L53","name":"Lean.withoutModifyingState","docLink":"./Lean/Util/MonadBacktrack.html#Lean.withoutModifyingState","doc":""},"Lean.withoutModifyingEnv'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L45-L51","name":"Lean.withoutModifyingEnv'","docLink":"./Lean/MonadEnv.html#Lean.withoutModifyingEnv'","doc":"Similar to `withoutModifyingEnv`, but also returns the updated environment "},"Lean.withoutModifyingEnv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L40-L42","name":"Lean.withoutModifyingEnv","docLink":"./Lean/MonadEnv.html#Lean.withoutModifyingEnv","doc":""},"Lean.withRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2725-L2728","name":"Lean.withRef","docLink":"./Init/Prelude.html#Lean.withRef","doc":""},"Lean.withNestedTraces":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L167-L171","name":"Lean.withNestedTraces","docLink":"./Lean/Util/Trace.html#Lean.withNestedTraces","doc":""},"Lean.withIncRecDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L130-L136","name":"Lean.withIncRecDepth","docLink":"./Lean/Exception.html#Lean.withIncRecDepth","doc":"Increment the current recursion depth and then execute `x`.\nThrow an exception if maximum recursion depth has been reached.\nWe use this combinator to prevent stack overflows.\n"},"Lean.withInPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L113-L114","name":"Lean.withInPattern","docLink":"./Lean/Data/Options.html#Lean.withInPattern","doc":""},"Lean.withImporting":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ImportingFlag.lean#L46-L52","name":"Lean.withImporting","docLink":"./Lean/ImportingFlag.html#Lean.withImporting","doc":"Execute `x` with \"importing\" flag turned on.\nWhen the \"importing\" flag is set to true, we allow user-extensions defined with with\nthe `initialize` command to update global references.\nIMPORTANT: There is no semaphore controlling the access to these global references.\nWe assume these global references are updated by a single execution thread.\nThis is true in the Lean frontend where we process the `import` commands at the beginning\nof the execution only. Users must make sure that `importModules` is used, there is only\none execution thread accessing the global references.\n"},"Lean.withImportModules":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L718-L720","name":"Lean.withImportModules","docLink":"./Lean/Environment.html#Lean.withImportModules","doc":"Create environment object from imports and free compacted regions after calling `act`. No live references to the\nenvironment object or imported objects may exist after `act` finishes. "},"Lean.withHeadRefOnly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L443-L446","name":"Lean.withHeadRefOnly","docLink":"./Init/Meta.html#Lean.withHeadRefOnly","doc":"Use the head atom/identifier of the current `ref` as the `ref` "},"Lean.withEnv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L19-L25","name":"Lean.withEnv","docLink":"./Lean/MonadEnv.html#Lean.withEnv","doc":""},"Lean.withAnnotateTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L315-L316","name":"Lean.withAnnotateTerm","docLink":"./Init/Notation.html#Lean.withAnnotateTerm","doc":"`with_annotate_term stx e` annotates the lexical range of `stx : Syntax` with term info for `e`. "},"Lean.warningAsError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L48-L49","name":"Lean.warningAsError","docLink":"./Lean/Log.html#Lean.warningAsError","doc":"If `warningAsError` is set to `true`, then warning messages are treated as errors. "},"Lean.versionStringCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L39-L40","name":"Lean.versionStringCore","docLink":"./Init/Meta.html#Lean.versionStringCore","doc":""},"Lean.versionString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L42-L48","name":"Lean.versionString","docLink":"./Init/Meta.html#Lean.versionString","doc":""},"Lean.version.specialDesc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L37-L37","name":"Lean.version.specialDesc","docLink":"./Init/Meta.html#Lean.version.specialDesc","doc":""},"Lean.version.patch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L24-L24","name":"Lean.version.patch","docLink":"./Init/Meta.html#Lean.version.patch","doc":""},"Lean.version.minor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L20-L20","name":"Lean.version.minor","docLink":"./Init/Meta.html#Lean.version.minor","doc":""},"Lean.version.major":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L16-L16","name":"Lean.version.major","docLink":"./Init/Meta.html#Lean.version.major","doc":""},"Lean.version.isRelease":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L32-L32","name":"Lean.version.isRelease","docLink":"./Init/Meta.html#Lean.version.isRelease","doc":""},"Lean.version.getSpecialDesc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L36-L36","name":"Lean.version.getSpecialDesc","docLink":"./Init/Meta.html#Lean.version.getSpecialDesc","doc":"Additional version description like \"nightly-2018-03-11\" "},"Lean.version.getIsRelease":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L31-L31","name":"Lean.version.getIsRelease","docLink":"./Init/Meta.html#Lean.version.getIsRelease","doc":""},"Lean.updateEnvAttributesImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L439-L447","name":"Lean.updateEnvAttributesImpl","docLink":"./Lean/Attributes.html#Lean.updateEnvAttributesImpl","doc":"`updateEnvAttributes` implementation "},"Lean.updateEnvAttributes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L621-L621","name":"Lean.updateEnvAttributes","docLink":"./Lean/Environment.html#Lean.updateEnvAttributes","doc":"\"Forward declaration\" needed for updating the attribute table with user-defined attributes.\nUser-defined attributes are declared using the `initialize` command. The `initialize` command is just syntax sugar for the `init` attribute.\nThe `init` attribute is initialized after the `attributeExtension` is initialized. We cannot change the order since the `init` attribute is an attribute,\nand requires this extension.\nThe `attributeExtension` initializer uses `attributeMapRef` to initialize the attribute mapping.\nWhen we a new user-defined attribute declaration is imported, `attributeMapRef` is updated.\nLater, we set this method with code that adds the user-defined attributes that were imported after we initialized `attributeExtension`.\n"},"Lean.unreachIsNodeMissing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L22-L22","name":"Lean.unreachIsNodeMissing","docLink":"./Lean/Syntax.html#Lean.unreachIsNodeMissing","doc":""},"Lean.unreachIsNodeIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L24-L24","name":"Lean.unreachIsNodeIdent","docLink":"./Lean/Syntax.html#Lean.unreachIsNodeIdent","doc":""},"Lean.unreachIsNodeAtom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L23-L23","name":"Lean.unreachIsNodeAtom","docLink":"./Lean/Syntax.html#Lean.unreachIsNodeAtom","doc":""},"Lean.unifConstraintElem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L65-L65","name":"Lean.unifConstraintElem","docLink":"./Init/NotationExtra.html#Lean.unifConstraintElem","doc":""},"Lean.unifConstraint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L64-L64","name":"Lean.unifConstraint","docLink":"./Init/NotationExtra.html#Lean.unifConstraint","doc":""},"Lean.unbracketedExplicitBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L19-L19","name":"Lean.unbracketedExplicitBinders","docLink":"./Init/NotationExtra.html#Lean.unbracketedExplicitBinders","doc":""},"Lean.traceM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L125-L128","name":"Lean.traceM","docLink":"./Lean/Util/Trace.html#Lean.traceM","doc":""},"Lean.traceCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L130-L138","name":"Lean.traceCtx","docLink":"./Lean/Util/Trace.html#Lean.traceCtx","doc":""},"Lean.trace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L121-L123","name":"Lean.trace","docLink":"./Lean/Util/Trace.html#Lean.trace","doc":""},"Lean.toolchain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L53-L62","name":"Lean.toolchain","docLink":"./Init/Meta.html#Lean.toolchain","doc":""},"Lean.toMessageList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L312-L313","name":"Lean.toMessageList","docLink":"./Lean/Message.html#Lean.toMessageList","doc":""},"Lean.throwUnknownConstant":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L68-L69","name":"Lean.throwUnknownConstant","docLink":"./Lean/Exception.html#Lean.throwUnknownConstant","doc":"Thrown an unknown constant error message. "},"Lean.throwMaxRecDepthAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L111-L112","name":"Lean.throwMaxRecDepthAt","docLink":"./Lean/Exception.html#Lean.throwMaxRecDepthAt","doc":"Throw a \"maximum recursion depth has been reached\" exception using the given reference syntax.\n"},"Lean.throwKernelException":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L87-L88","name":"Lean.throwKernelException","docLink":"./Lean/Exception.html#Lean.throwKernelException","doc":"Throw an error exception for the given kernel exception.\n"},"Lean.throwErrorAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L72-L73","name":"Lean.throwErrorAt","docLink":"./Lean/Exception.html#Lean.throwErrorAt","doc":"Throw an error exception using the given message data and reference syntax. "},"Lean.throwError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L62-L65","name":"Lean.throwError","docLink":"./Lean/Exception.html#Lean.throwError","doc":"Throw an error exception using the given message data.\nThe result of `getRef` is used as position information.\nRecall that `getRef` returns the current \"reference\" syntax.\n"},"Lean.termThrowError__":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L138-L144","name":"Lean.termThrowError__","docLink":"./Lean/Exception.html#Lean.termThrowError__","doc":"Macro for throwing error exceptions. The argument can be an interpolated string.\nIt is a convenient way of building `MessageData` objects.\nThe result of `getRef` is used as position information.\nRecall that `getRef` returns the current \"reference\" syntax.\n"},"Lean.termThrowErrorAt___":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L145-L152","name":"Lean.termThrowErrorAt___","docLink":"./Lean/Exception.html#Lean.termThrowErrorAt___","doc":"Macro for throwing error exceptions. The argument can be an interpolated string.\nIt is a convenient way of building `MessageData` objects.\nThe first argument must be a `Syntax` that provides position information for\nthe error message.\n`throwErrorAt ref msg` is equivalent to `withRef ref <| throwError msg`\n"},"Lean.termThis":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L304-L305","name":"Lean.termThis","docLink":"./Init/Notation.html#Lean.termThis","doc":"Special identifier introduced by \"anonymous\" `have : ...`, `suffices p ...` etc. "},"Lean.termM!_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L307-L307","name":"Lean.termM!_","docLink":"./Lean/Message.html#Lean.termM!_","doc":""},"Lean.termEval_prio_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L999-L999","name":"Lean.termEval_prio_","docLink":"./Init/Meta.html#Lean.termEval_prio_","doc":""},"Lean.termEval_prec_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L983-L983","name":"Lean.termEval_prec_","docLink":"./Init/Meta.html#Lean.termEval_prec_","doc":""},"Lean.structureExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L46-L46","name":"Lean.structureExt","docLink":"./Lean/Structure.html#Lean.structureExt","doc":""},"Lean.stringToMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L286-L289","name":"Lean.stringToMessageData","docLink":"./Lean/Message.html#Lean.stringToMessageData","doc":""},"Lean.strLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L128-L128","name":"Lean.strLt","docLink":"./Lean/Data/Json/Basic.html#Lean.strLt","doc":""},"Lean.strLitKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2520-L2520","name":"Lean.strLitKind","docLink":"./Init/Prelude.html#Lean.strLitKind","doc":""},"Lean.simpLevelMax'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L506-L507","name":"Lean.simpLevelMax'","docLink":"./Lean/Level.html#Lean.simpLevelMax'","doc":""},"Lean.simpLevelIMax'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L520-L521","name":"Lean.simpLevelIMax'","docLink":"./Lean/Level.html#Lean.simpLevelIMax'","doc":""},"Lean.setTraceState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L85-L86","name":"Lean.setTraceState","docLink":"./Lean/Util/Trace.html#Lean.setTraceState","doc":""},"Lean.setReducibleAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ReducibilityAttrs.lean#L47-L48","name":"Lean.setReducibleAttribute","docLink":"./Lean/ReducibilityAttrs.html#Lean.setReducibleAttribute","doc":"Set the given declaration as `[reducible]` "},"Lean.setReducibilityStatus":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ReducibilityAttrs.lean#L43-L44","name":"Lean.setReducibilityStatus","docLink":"./Lean/ReducibilityAttrs.html#Lean.setReducibilityStatus","doc":"Set the reducibility attribute for the given declaration. "},"Lean.setOptionFromString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L62-L82","name":"Lean.setOptionFromString","docLink":"./Lean/Data/Options.html#Lean.setOptionFromString","doc":""},"Lean.setMCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L315-L316","name":"Lean.setMCtx","docLink":"./Lean/MetavarContext.html#Lean.setMCtx","doc":""},"Lean.setImplementedBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ImplementedByAttr.lean#L41-L45","name":"Lean.setImplementedBy","docLink":"./Lean/Compiler/ImplementedByAttr.html#Lean.setImplementedBy","doc":""},"Lean.setEnv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L16-L17","name":"Lean.setEnv","docLink":"./Lean/MonadEnv.html#Lean.setEnv","doc":""},"Lean.setBuiltinInitAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L120-L121","name":"Lean.setBuiltinInitAttr","docLink":"./Lean/Compiler/InitAttr.html#Lean.setBuiltinInitAttr","doc":""},"Lean.searchPathRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L57-L57","name":"Lean.searchPathRef","docLink":"./Lean/Util/Path.html#Lean.searchPathRef","doc":""},"Lean.searchModuleNameOfFileName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L128-L135","name":"Lean.searchModuleNameOfFileName","docLink":"./Lean/Util/Path.html#Lean.searchModuleNameOfFileName","doc":""},"Lean.scopedEnvExtensionsRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L104-L104","name":"Lean.scopedEnvExtensionsRef","docLink":"./Lean/ScopedEnvExtension.html#Lean.scopedEnvExtensionsRef","doc":""},"Lean.scientificLitKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2523-L2523","name":"Lean.scientificLitKind","docLink":"./Init/Prelude.html#Lean.scientificLitKind","doc":""},"Lean.saveModuleData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L551-L551","name":"Lean.saveModuleData","docLink":"./Lean/Environment.html#Lean.saveModuleData","doc":""},"Lean.sanitizeSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Hygiene.lean#L107-L111","name":"Lean.sanitizeSyntax","docLink":"./Lean/Hygiene.html#Lean.sanitizeSyntax","doc":""},"Lean.sanitizeName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Hygiene.lean#L91-L96","name":"Lean.sanitizeName","docLink":"./Lean/Hygiene.html#Lean.sanitizeName","doc":"Erase macro scopes from `userName` and add \"tombstone\" + superscript (or `._hyg`). "},"Lean.runModInit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L29-L29","name":"Lean.runModInit","docLink":"./Lean/Compiler/InitAttr.html#Lean.runModInit","doc":"Run the initializer of the given module (without `builtin_initialize` commands).\nReturn `false` if the initializer is not available as native code.\nInitializers do not have corresponding Lean definitions, so they cannot be interpreted in this case. "},"Lean.runMetaEval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Eval.lean#L23-L24","name":"Lean.runMetaEval","docLink":"./Lean/Eval.html#Lean.runMetaEval","doc":""},"Lean.runInit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L33-L33","name":"Lean.runInit","docLink":"./Lean/Compiler/InitAttr.html#Lean.runInit","doc":"Run the initializer for `decl` and store its value for global access. Should only be used while importing. "},"Lean.runEval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L689-L690","name":"Lean.runEval","docLink":"./Init/System/IO.html#Lean.runEval","doc":""},"Lean.rootNamespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/OpenDecl.lean#L25-L25","name":"Lean.rootNamespace","docLink":"./Lean/Data/OpenDecl.html#Lean.rootNamespace","doc":""},"Lean.resolveUniqueNamespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L212-L215","name":"Lean.resolveUniqueNamespace","docLink":"./Lean/ResolveName.html#Lean.resolveUniqueNamespace","doc":""},"Lean.resolveNamespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L207-L210","name":"Lean.resolveNamespace","docLink":"./Lean/ResolveName.html#Lean.resolveNamespace","doc":""},"Lean.resolveGlobalName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L204-L205","name":"Lean.resolveGlobalName","docLink":"./Lean/ResolveName.html#Lean.resolveGlobalName","doc":"Given a name `n`, return a list of possible interpretations.\n  Each interpretation is a pair `(declName, fieldList)`, where `declName`\n  is the name of a declaration in the current environment, and `fieldList` are\n  (potential) field names.\n  The pair is needed because in Lean `.` may be part of a qualified name or\n  a field (aka dot-notation).\n  As an example, consider the following definitions\n  ```\n  def Boo.x   := 1\n  def Foo.x   := 2\n  def Foo.x.y := 3\n  ```\n  After `open Foo`, we have\n  - `resolveGlobalName x`     => `[(Foo.x, [])]`\n  - `resolveGlobalName x.y`   => `[(Foo.x.y, [])]`\n  - `resolveGlobalName x.z.w` => `[(Foo.x, [z, w])]`\n\n  After `open Foo open Boo`, we have\n  - `resolveGlobalName x`     => `[(Foo.x, []), (Boo.x, [])]`\n  - `resolveGlobalName x.y`   => `[(Foo.x.y, [])]`\n  - `resolveGlobalName x.z.w` => `[(Foo.x, [z, w]), (Boo.x, [z, w])]`\n"},"Lean.resolveGlobalConstNoOverloadCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L228-L232","name":"Lean.resolveGlobalConstNoOverloadCore","docLink":"./Lean/ResolveName.html#Lean.resolveGlobalConstNoOverloadCore","doc":"For identifiers taken from syntax, use `resolveGlobalConstNoOverload` instead, which respects preresolved names. "},"Lean.resolveGlobalConstNoOverload":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L283-L287","name":"Lean.resolveGlobalConstNoOverload","docLink":"./Lean/ResolveName.html#Lean.resolveGlobalConstNoOverload","doc":"Interpret the syntax `n` as an identifier for a global constant, and return a resolved\nconstant name. If there are multiple possible interpretations it will throw.\n\n## Example:\n```\ndef Boo.x   := 1\ndef Foo.x   := 2\ndef Foo.x.y := 3\n```\nAfter `open Foo`, we have\n- `resolveGlobalConstNoOverload x`     => `Foo.x`\n- `resolveGlobalConstNoOverload x.y`   => `Foo.x.y`\n- `resolveGlobalConstNoOverload x.z.w` => error: unknown constant\n\nAfter `open Foo open Boo`, we have\n- `resolveGlobalConstNoOverload x`     => error: ambiguous identifier\n- `resolveGlobalConstNoOverload x.y`   => `Foo.x.y`\n- `resolveGlobalConstNoOverload x.z.w` => error: unknown constant\n"},"Lean.resolveGlobalConstCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L221-L225","name":"Lean.resolveGlobalConstCore","docLink":"./Lean/ResolveName.html#Lean.resolveGlobalConstCore","doc":"Given a name `n`, return a list of possible interpretations for global constants.\n\nSimilar to `resolveGlobalName`, but discard any candidate whose `fieldList` is not empty.\nFor identifiers taken from syntax, use `resolveGlobalConst` instead, which respects preresolved names. "},"Lean.resolveGlobalConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L255-L262","name":"Lean.resolveGlobalConst","docLink":"./Lean/ResolveName.html#Lean.resolveGlobalConst","doc":"Interpret the syntax `n` as an identifier for a global constant, and return a list of resolved\nconstant names that it could be refering to based on the currently open namespaces.\nThis should be used instead of `resolveGlobalConstCore` for identifiers taken from syntax\nbecause `Syntax` objects may have names that have already been resolved.\n\n## Example:\n```\ndef Boo.x   := 1\ndef Foo.x   := 2\ndef Foo.x.y := 3\n```\nAfter `open Foo`, we have\n- `resolveGlobalConst x`     => `[Foo.x]`\n- `resolveGlobalConst x.y`   => `[Foo.x.y]`\n- `resolveGlobalConst x.z.w` => error: unknown constant\n\nAfter `open Foo open Boo`, we have\n- `resolveGlobalConst x`     => `[Foo.x, Boo.x]`\n- `resolveGlobalConst x.y`   => `[Foo.x.y]`\n- `resolveGlobalConst x.z.w` => error: unknown constant\n"},"Lean.resetTraceState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L53-L54","name":"Lean.resetTraceState","docLink":"./Lean/Util/Trace.html#Lean.resetTraceState","doc":""},"Lean.reservedMacroScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2706-L2706","name":"Lean.reservedMacroScope","docLink":"./Init/Prelude.html#Lean.reservedMacroScope","doc":"Macro scope used internally. It is not available for our frontend. "},"Lean.replaceRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2720-L2723","name":"Lean.replaceRef","docLink":"./Init/Prelude.html#Lean.replaceRef","doc":""},"Lean.removeRoot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/OpenDecl.lean#L27-L28","name":"Lean.removeRoot","docLink":"./Lean/Data/OpenDecl.html#Lean.removeRoot","doc":""},"Lean.regularInitAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L80-L80","name":"Lean.regularInitAttr","docLink":"./Lean/Compiler/InitAttr.html#Lean.regularInitAttr","doc":""},"Lean.registerTraceClass":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L146-L147","name":"Lean.registerTraceClass","docLink":"./Lean/Util/Trace.html#Lean.registerTraceClass","doc":""},"Lean.registerTagAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L141-L168","name":"Lean.registerTagAttribute","docLink":"./Lean/Attributes.html#Lean.registerTagAttribute","doc":""},"Lean.registerStructure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L58-L63","name":"Lean.registerStructure","docLink":"./Lean/Structure.html#Lean.registerStructure","doc":""},"Lean.registerSimpleScopedEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L205-L213","name":"Lean.registerSimpleScopedEnvExtension","docLink":"./Lean/ScopedEnvExtension.html#Lean.registerSimpleScopedEnvExtension","doc":""},"Lean.registerSimplePersistentEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L455-L464","name":"Lean.registerSimplePersistentEnvExtension","docLink":"./Lean/Environment.html#Lean.registerSimplePersistentEnvExtension","doc":""},"Lean.registerScopedEnvExtensionUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L106-L117","name":"Lean.registerScopedEnvExtensionUnsafe","docLink":"./Lean/ScopedEnvExtension.html#Lean.registerScopedEnvExtensionUnsafe","doc":""},"Lean.registerScopedEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L120-L120","name":"Lean.registerScopedEnvExtension","docLink":"./Lean/ScopedEnvExtension.html#Lean.registerScopedEnvExtension","doc":""},"Lean.registerPersistentEnvExtensionUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L419-L438","name":"Lean.registerPersistentEnvExtensionUnsafe","docLink":"./Lean/Environment.html#Lean.registerPersistentEnvExtensionUnsafe","doc":""},"Lean.registerPersistentEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L441-L441","name":"Lean.registerPersistentEnvExtension","docLink":"./Lean/Environment.html#Lean.registerPersistentEnvExtension","doc":""},"Lean.registerParametricAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L196-L222","name":"Lean.registerParametricAttribute","docLink":"./Lean/Attributes.html#Lean.registerParametricAttribute","doc":""},"Lean.registerOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L32-L38","name":"Lean.registerOption","docLink":"./Lean/Data/Options.html#Lean.registerOption","doc":""},"Lean.registerLazyInitExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LazyInitExtension.lean#L29-L31","name":"Lean.registerLazyInitExtension","docLink":"./Lean/LazyInitExtension.html#Lean.registerLazyInitExtension","doc":"Register an environment extension for storing the result of `fn`.\n  We initialize the extension with `none`, and `fn` is executed the\n  first time `LazyInit.get` is executed.\n\n  This kind of extension is useful for avoiding work duplication in\n  scenarios where a thunk cannot be used because the computation depends\n  on state from the `m` monad. For example, we may want to \"cache\" a collection\n  of theorems as a `SimpLemmas` object.  "},"Lean.registerInternalExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/InternalExceptionId.lean#L22-L27","name":"Lean.registerInternalExceptionId","docLink":"./Lean/InternalExceptionId.html#Lean.registerInternalExceptionId","doc":"Register a new internal exception in the system.\nEach internal exception has a unique index.\nThrow an exception if the given name is not unique.\nThis method is usually invoked using the `initialize` command.\n"},"Lean.registerInitAttrUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L35-L71","name":"Lean.registerInitAttrUnsafe","docLink":"./Lean/Compiler/InitAttr.html#Lean.registerInitAttrUnsafe","doc":""},"Lean.registerInitAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L77-L78","name":"Lean.registerInitAttr","docLink":"./Lean/Compiler/InitAttr.html#Lean.registerInitAttr","doc":""},"Lean.registerEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L326-L326","name":"Lean.registerEnvExtension","docLink":"./Lean/Environment.html#Lean.registerEnvExtension","doc":"Environment extensions can only be registered during initialization.\n   Reasons:\n   1- Our implementation assumes the number of extensions does not change after an environment object is created.\n   2- We do not use any synchronization primitive to access `envExtensionsRef`.\n\n   Note that by default, extension state is *not* stored in .olean files and will not propagate across `import`s.\n   For that, you need to register a persistent environment extension. "},"Lean.registerEnumAttributes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L253-L283","name":"Lean.registerEnumAttributes","docLink":"./Lean/Attributes.html#Lean.registerEnumAttributes","doc":""},"Lean.registerBuiltinAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L61-L66","name":"Lean.registerBuiltinAttribute","docLink":"./Lean/Attributes.html#Lean.registerBuiltinAttribute","doc":"Low level attribute registration function. "},"Lean.registerAttributeOfDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L415-L420","name":"Lean.registerAttributeOfDecl","docLink":"./Lean/Attributes.html#Lean.registerAttributeOfDecl","doc":""},"Lean.registerAttributeOfBuilder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L422-L427","name":"Lean.registerAttributeOfBuilder","docLink":"./Lean/Attributes.html#Lean.registerAttributeOfBuilder","doc":""},"Lean.registerAttributeImplBuilder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L314-L317","name":"Lean.registerAttributeImplBuilder","docLink":"./Lean/Attributes.html#Lean.registerAttributeImplBuilder","doc":""},"Lean.reducibilityAttrs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ReducibilityAttrs.lean#L17-L20","name":"Lean.reducibilityAttrs","docLink":"./Lean/ReducibilityAttrs.html#Lean.reducibilityAttrs","doc":"Environment extension for storing the reducibility attribute for definitions.\n"},"Lean.reduceNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1140-L1140","name":"Lean.reduceNat","docLink":"./Init/Core.html#Lean.reduceNat","doc":"Similar to `Lean.reduceBool` for closed `Nat` terms.\n\n  Remark: we do not have plans for supporting a generic `reduceValue {α} (a : α) : α := a`.\n  The main issue is that it is non-trivial to convert an arbitrary runtime object back into a Lean expression.\n  We believe `Lean.reduceBool` enables most interesting applications (e.g., proof by reflection). "},"Lean.reduceBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1132-L1132","name":"Lean.reduceBool","docLink":"./Init/Core.html#Lean.reduceBool","doc":"When the kernel tries to reduce a term `Lean.reduceBool c`, it will invoke the Lean interpreter to evaluate `c`.\n  The kernel will not use the interpreter if `c` is not a constant.\n  This feature is useful for performing proofs by reflection.\n\n  Remark: the Lean frontend allows terms of the from `Lean.reduceBool t` where `t` is a term not containing\n  free variables. The frontend automatically declares a fresh auxiliary constant `c` and replaces the term with\n  `Lean.reduceBool c`. The main motivation is that the code for `t` will be pre-compiled.\n\n  Warning: by using this feature, the Lean compiler and interpreter become part of your trusted code base.\n  This is extra 30k lines of code. More importantly, you will probably not be able to check your developement using\n  external type checkers (e.g., Trepplein) that do not implement this feature.\n  Keep in mind that if you are using Lean as programming language, you are already trusting the Lean compiler and interpreter.\n  So, you are mainly losing the capability of type checking your developement using external checkers.\n\n  Recall that the compiler trusts the correctness of all `[implementedBy ...]` and `[extern ...]` annotations.\n  If an extern function is executed, then the trusted code base will also include the implementation of the associated\n  foreign function.\n"},"Lean.recOnSuffix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L11-L11","name":"Lean.recOnSuffix","docLink":"./Lean/AuxRecursor.html#Lean.recOnSuffix","doc":""},"Lean.realPathNormalized":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L16-L17","name":"Lean.realPathNormalized","docLink":"./Lean/Util/Path.html#Lean.realPathNormalized","doc":""},"Lean.readModuleData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L553-L553","name":"Lean.readModuleData","docLink":"./Lean/Environment.html#Lean.readModuleData","doc":""},"Lean.rawStx.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L307-L310","name":"Lean.rawStx.quot","docLink":"./Init/Notation.html#Lean.rawStx.quot","doc":""},"Lean.quoteNameMk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L939-L942","name":"Lean.quoteNameMk","docLink":"./Init/Meta.html#Lean.quoteNameMk","doc":""},"Lean.pushScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L185-L187","name":"Lean.pushScope","docLink":"./Lean/ScopedEnvExtension.html#Lean.pushScope","doc":""},"Lean.protectedExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Modifiers.lean#L10-L10","name":"Lean.protectedExt","docLink":"./Lean/Modifiers.html#Lean.protectedExt","doc":""},"Lean.projectionFnInfoExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ProjFns.lean#L32-L32","name":"Lean.projectionFnInfoExt","docLink":"./Lean/ProjFns.html#Lean.projectionFnInfoExt","doc":""},"Lean.profileitM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Profile.lean#L23-L24","name":"Lean.profileitM","docLink":"./Lean/Util/Profile.html#Lean.profileitM","doc":""},"Lean.profileitIOUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Profile.lean#L14-L17","name":"Lean.profileitIOUnsafe","docLink":"./Lean/Util/Profile.html#Lean.profileitIOUnsafe","doc":""},"Lean.profileitIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Profile.lean#L20-L20","name":"Lean.profileitIO","docLink":"./Lean/Util/Profile.html#Lean.profileitIO","doc":""},"Lean.profileit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Profile.lean#L12-L12","name":"Lean.profileit","docLink":"./Lean/Util/Profile.html#Lean.profileit","doc":"Print and accumulate run time of `act` when option `profiler` is set to `true`. "},"Lean.privateToUserName?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Modifiers.lean#L50-L52","name":"Lean.privateToUserName?","docLink":"./Lean/Modifiers.html#Lean.privateToUserName?","doc":""},"Lean.privatePrefix?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Modifiers.lean#L64-L66","name":"Lean.privatePrefix?","docLink":"./Lean/Modifiers.html#Lean.privatePrefix?","doc":""},"Lean.privateHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Modifiers.lean#L31-L31","name":"Lean.privateHeader","docLink":"./Lean/Modifiers.html#Lean.privateHeader","doc":""},"Lean.printTraces":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L47-L51","name":"Lean.printTraces","docLink":"./Lean/Util/Trace.html#Lean.printTraces","doc":""},"Lean.ppTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/PPExt.lean#L70-L81","name":"Lean.ppTerm","docLink":"./Lean/Util/PPExt.html#Lean.ppTerm","doc":""},"Lean.ppSpace.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L141-L141","name":"Lean.ppSpace.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppSpace.formatter","doc":""},"Lean.ppRealGroup.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L144-L144","name":"Lean.ppRealGroup.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppRealGroup.formatter","doc":""},"Lean.ppRealFill.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L143-L143","name":"Lean.ppRealFill.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppRealFill.formatter","doc":""},"Lean.ppLine.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L142-L142","name":"Lean.ppLine.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppLine.formatter","doc":""},"Lean.ppIndent.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L145-L145","name":"Lean.ppIndent.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppIndent.formatter","doc":""},"Lean.ppHardSpace.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L140-L140","name":"Lean.ppHardSpace.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppHardSpace.formatter","doc":""},"Lean.ppHardLineUnlessUngrouped.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L157-L161","name":"Lean.ppHardLineUnlessUngrouped.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppHardLineUnlessUngrouped.formatter","doc":""},"Lean.ppGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/PPExt.lean#L83-L84","name":"Lean.ppGoal","docLink":"./Lean/Util/PPExt.html#Lean.ppGoal","doc":""},"Lean.ppFnsRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/PPExt.lean#L47-L47","name":"Lean.ppFnsRef","docLink":"./Lean/Util/PPExt.html#Lean.ppFnsRef","doc":""},"Lean.ppExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/PPExt.lean#L54-L54","name":"Lean.ppExt","docLink":"./Lean/Util/PPExt.html#Lean.ppExt","doc":""},"Lean.ppExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/PPExt.lean#L57-L68","name":"Lean.ppExpr","docLink":"./Lean/Util/PPExt.html#Lean.ppExpr","doc":""},"Lean.ppDedentIfGrouped.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L152-L156","name":"Lean.ppDedentIfGrouped.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppDedentIfGrouped.formatter","doc":""},"Lean.ppDedent.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L146-L148","name":"Lean.ppDedent.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppDedent.formatter","doc":""},"Lean.ppAllowUngrouped.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L150-L151","name":"Lean.ppAllowUngrouped.formatter","docLink":"./Lean/Parser/Extra.html#Lean.ppAllowUngrouped.formatter","doc":""},"Lean.pp.universes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L31-L31","name":"Lean.pp.universes","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.universes","doc":""},"Lean.pp.tagAppFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L93-L93","name":"Lean.pp.tagAppFns","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.tagAppFns","doc":""},"Lean.pp.structureProjections":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L73-L73","name":"Lean.pp.structureProjections","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.structureProjections","doc":""},"Lean.pp.structureInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L66-L66","name":"Lean.pp.structureInstances","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.structureInstances","doc":""},"Lean.pp.structureInstanceTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L83-L83","name":"Lean.pp.structureInstanceTypes","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.structureInstanceTypes","doc":""},"Lean.pp.sanitizeNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Hygiene.lean#L66-L66","name":"Lean.pp.sanitizeNames","docLink":"./Lean/Hygiene.html#Lean.pp.sanitizeNames","doc":""},"Lean.pp.safeShadowing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L88-L88","name":"Lean.pp.safeShadowing","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.safeShadowing","doc":""},"Lean.pp.rawOnError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/PPExt.lean#L27-L27","name":"Lean.pp.rawOnError","docLink":"./Lean/Util/PPExt.html#Lean.pp.rawOnError","doc":""},"Lean.pp.raw.showInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/PPExt.lean#L17-L17","name":"Lean.pp.raw.showInfo","docLink":"./Lean/Util/PPExt.html#Lean.pp.raw.showInfo","doc":""},"Lean.pp.raw.maxDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/PPExt.lean#L22-L22","name":"Lean.pp.raw.maxDepth","docLink":"./Lean/Util/PPExt.html#Lean.pp.raw.maxDepth","doc":""},"Lean.pp.raw":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/PPExt.lean#L12-L12","name":"Lean.pp.raw","docLink":"./Lean/Util/PPExt.html#Lean.pp.raw","doc":""},"Lean.pp.proofs.withType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L103-L103","name":"Lean.pp.proofs.withType","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.proofs.withType","doc":""},"Lean.pp.proofs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L98-L98","name":"Lean.pp.proofs","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.proofs","doc":""},"Lean.pp.privateNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L41-L41","name":"Lean.pp.privateNames","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.privateNames","doc":""},"Lean.pp.piBinderTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L51-L51","name":"Lean.pp.piBinderTypes","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.piBinderTypes","doc":""},"Lean.pp.notation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L16-L16","name":"Lean.pp.notation","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.notation","doc":""},"Lean.pp.motives.pi":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L118-L118","name":"Lean.pp.motives.pi","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.motives.pi","doc":""},"Lean.pp.motives.nonConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L123-L123","name":"Lean.pp.motives.nonConst","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.motives.nonConst","doc":""},"Lean.pp.motives.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L128-L128","name":"Lean.pp.motives.all","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.motives.all","doc":""},"Lean.pp.match":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L21-L21","name":"Lean.pp.match","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.match","doc":""},"Lean.pp.letVarTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L56-L56","name":"Lean.pp.letVarTypes","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.letVarTypes","doc":""},"Lean.pp.instantiateMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L61-L61","name":"Lean.pp.instantiateMVars","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.instantiateMVars","doc":""},"Lean.pp.instances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L108-L108","name":"Lean.pp.instances","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.instances","doc":""},"Lean.pp.instanceTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L113-L113","name":"Lean.pp.instanceTypes","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.instanceTypes","doc":""},"Lean.pp.funBinderTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L46-L46","name":"Lean.pp.funBinderTypes","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.funBinderTypes","doc":""},"Lean.pp.fullNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L36-L36","name":"Lean.pp.fullNames","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.fullNames","doc":""},"Lean.pp.explicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L78-L78","name":"Lean.pp.explicit","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.explicit","doc":""},"Lean.pp.coercions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L26-L26","name":"Lean.pp.coercions","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.coercions","doc":""},"Lean.pp.analyze.typeAscriptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L47-L47","name":"Lean.pp.analyze.typeAscriptions","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze.typeAscriptions","doc":""},"Lean.pp.analyze.trustSubtypeMk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L78-L78","name":"Lean.pp.analyze.trustSubtypeMk","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze.trustSubtypeMk","doc":""},"Lean.pp.analyze.trustSubst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L53-L53","name":"Lean.pp.analyze.trustSubst","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze.trustSubst","doc":""},"Lean.pp.analyze.trustOfScientific":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L65-L65","name":"Lean.pp.analyze.trustOfScientific","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze.trustOfScientific","doc":""},"Lean.pp.analyze.trustOfNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L59-L59","name":"Lean.pp.analyze.trustOfNat","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze.trustOfNat","doc":""},"Lean.pp.analyze.trustKnownFOType2TypeHOFuns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L90-L90","name":"Lean.pp.analyze.trustKnownFOType2TypeHOFuns","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze.trustKnownFOType2TypeHOFuns","doc":""},"Lean.pp.analyze.trustId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L84-L84","name":"Lean.pp.analyze.trustId","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze.trustId","doc":""},"Lean.pp.analyze.trustCoe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L71-L71","name":"Lean.pp.analyze.trustCoe","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze.trustCoe","doc":""},"Lean.pp.analyze.omitMax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L96-L96","name":"Lean.pp.analyze.omitMax","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze.omitMax","doc":""},"Lean.pp.analyze.knowsType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L102-L102","name":"Lean.pp.analyze.knowsType","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze.knowsType","doc":""},"Lean.pp.analyze.explicitHoles":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L108-L108","name":"Lean.pp.analyze.explicitHoles","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze.explicitHoles","doc":""},"Lean.pp.analyze.checkInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L37-L37","name":"Lean.pp.analyze.checkInstances","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze.checkInstances","doc":""},"Lean.pp.analyze":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L31-L31","name":"Lean.pp.analyze","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.pp.analyze","doc":""},"Lean.pp.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L10-L10","name":"Lean.pp.all","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.pp.all","doc":""},"Lean.popScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L189-L191","name":"Lean.popScope","docLink":"./Lean/ScopedEnvExtension.html#Lean.popScope","doc":""},"Lean.persistentEnvExtensionsRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L409-L409","name":"Lean.persistentEnvExtensionsRef","docLink":"./Lean/Environment.html#Lean.persistentEnvExtensionsRef","doc":""},"Lean.patternWithRef?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1682-L1688","name":"Lean.patternWithRef?","docLink":"./Lean/Expr.html#Lean.patternWithRef?","doc":"During elaboration expressions corresponding to pattern matching terms\nare annotated with `Syntax` objects. This function returns `some (stx, p')` if\n`p` is the pattern `p'` annotated with `stx`\n"},"Lean.patternAnnotation?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1701-L1707","name":"Lean.patternAnnotation?","docLink":"./Lean/Expr.html#Lean.patternAnnotation?","doc":"Return `some p` if `e` is an annotated pattern (`inaccessible?` or `patternWithRef?`) "},"Lean.origin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L50-L51","name":"Lean.origin","docLink":"./Init/Meta.html#Lean.origin","doc":""},"Lean.ofReduceNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1143-L1143","name":"Lean.ofReduceNat","docLink":"./Init/Core.html#Lean.ofReduceNat","doc":""},"Lean.ofReduceBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1142-L1142","name":"Lean.ofReduceBool","docLink":"./Init/Core.html#Lean.ofReduceBool","doc":""},"Lean.ofExcept":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L79-L82","name":"Lean.ofExcept","docLink":"./Lean/Exception.html#Lean.ofExcept","doc":"Convert an `Except` into a `m` monadic action, where `m` is any monad that\nimplements `MonadError`.\n"},"Lean.occursCheck.visitMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/OccursCheck.lean#L21-L30","name":"Lean.occursCheck.visitMVar","docLink":"./Lean/Util/OccursCheck.html#Lean.occursCheck.visitMVar","doc":""},"Lean.occursCheck.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/OccursCheck.lean#L32-L47","name":"Lean.occursCheck.visit","docLink":"./Lean/Util/OccursCheck.html#Lean.occursCheck.visit","doc":""},"Lean.occursCheck":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/OccursCheck.lean#L13-L47","name":"Lean.occursCheck","docLink":"./Lean/Util/OccursCheck.html#Lean.occursCheck","doc":"Return true if `e` does **not** contain `mvarId` directly or indirectly\nThis function considers assigments and delayed assignments. "},"Lean.observing?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadBacktrack.lean#L55-L61","name":"Lean.observing?","docLink":"./Lean/Util/MonadBacktrack.html#Lean.observing?","doc":""},"Lean.numLitKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2522-L2522","name":"Lean.numLitKind","docLink":"./Init/Prelude.html#Lean.numLitKind","doc":""},"Lean.nullKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2517-L2517","name":"Lean.nullKind","docLink":"./Init/Prelude.html#Lean.nullKind","doc":""},"Lean.noncomputableExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/NoncomputableAttr.lean#L10-L10","name":"Lean.noncomputableExt","docLink":"./Lean/Compiler/NoncomputableAttr.html#Lean.noncomputableExt","doc":""},"Lean.noConfusionExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L50-L50","name":"Lean.noConfusionExt","docLink":"./Lean/AuxRecursor.html#Lean.noConfusionExt","doc":""},"Lean.neverExtractAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/NeverExtractAttr.lean#L11-L11","name":"Lean.neverExtractAttr","docLink":"./Lean/Compiler/NeverExtractAttr.html#Lean.neverExtractAttr","doc":""},"Lean.namespacesExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L722-L725","name":"Lean.namespacesExt","docLink":"./Lean/Environment.html#Lean.namespacesExt","doc":"Environment extension for tracking all `namespace` declared by users.\n"},"Lean.nameLitKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2524-L2524","name":"Lean.nameLitKind","docLink":"./Init/Prelude.html#Lean.nameLitKind","doc":""},"Lean.monadNameGeneratorLift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L253-L256","name":"Lean.monadNameGeneratorLift","docLink":"./Init/Meta.html#Lean.monadNameGeneratorLift","doc":""},"Lean.moduleNameOfFileName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L112-L126","name":"Lean.moduleNameOfFileName","docLink":"./Lean/Util/Path.html#Lean.moduleNameOfFileName","doc":"Infer module name of source file name. "},"Lean.modifyTraces":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L82-L83","name":"Lean.modifyTraces","docLink":"./Lean/Util/Trace.html#Lean.modifyTraces","doc":""},"Lean.modToFilePath.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L22-L25","name":"Lean.modToFilePath.go","docLink":"./Lean/Util/Path.html#Lean.modToFilePath.go","doc":""},"Lean.modToFilePath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L19-L25","name":"Lean.modToFilePath","docLink":"./Lean/Util/Path.html#Lean.modToFilePath","doc":""},"Lean.mkTagDeclarationExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L489-L495","name":"Lean.mkTagDeclarationExtension","docLink":"./Lean/Environment.html#Lean.mkTagDeclarationExtension","doc":""},"Lean.mkStrLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L688-L689","name":"Lean.mkStrLit","docLink":"./Lean/Expr.html#Lean.mkStrLit","doc":"Return the string literal `.lit (.strVal s)` "},"Lean.mkStateFromImportedEntries":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L446-L447","name":"Lean.mkStateFromImportedEntries","docLink":"./Lean/Environment.html#Lean.mkStateFromImportedEntries","doc":""},"Lean.mkSortEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L694-L694","name":"Lean.mkSortEx","docLink":"./Lean/Expr.html#Lean.mkSortEx","doc":""},"Lean.mkSort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L590-L591","name":"Lean.mkSort","docLink":"./Lean/Expr.html#Lean.mkSort","doc":"`.sort u` is now the preferred form. "},"Lean.mkSimpleThunkType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L640-L641","name":"Lean.mkSimpleThunkType","docLink":"./Lean/Expr.html#Lean.mkSimpleThunkType","doc":"Return `Unit -> type`. Do not confuse with `Thunk type` "},"Lean.mkSimpleThunk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L644-L645","name":"Lean.mkSimpleThunk","docLink":"./Lean/Expr.html#Lean.mkSimpleThunk","doc":"Return `fun (_ : Unit), e` "},"Lean.mkSimpleFnCall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L104-L105","name":"Lean.mkSimpleFnCall","docLink":"./Lean/Compiler/ExternAttr.html#Lean.mkSimpleFnCall","doc":""},"Lean.mkSepArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L530-L539","name":"Lean.mkSepArray","docLink":"./Init/Meta.html#Lean.mkSepArray","doc":""},"Lean.mkReducibilityHintsRegularEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L40-L41","name":"Lean.mkReducibilityHintsRegularEx","docLink":"./Lean/Declaration.html#Lean.mkReducibilityHintsRegularEx","doc":""},"Lean.mkRecursorValEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L328-L332","name":"Lean.mkRecursorValEx","docLink":"./Lean/Declaration.html#Lean.mkRecursorValEx","doc":""},"Lean.mkRecOnName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L17-L17","name":"Lean.mkRecOnName","docLink":"./Lean/AuxRecursor.html#Lean.mkRecOnName","doc":""},"Lean.mkRecOnImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L12-L12","name":"Lean.mkRecOnImp","docLink":"./Lean/Meta/Constructions.html#Lean.mkRecOnImp","doc":""},"Lean.mkRecOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L27-L27","name":"Lean.mkRecOn","docLink":"./Lean/Meta/Constructions.html#Lean.mkRecOn","doc":""},"Lean.mkRecName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L458-L459","name":"Lean.mkRecName","docLink":"./Lean/Declaration.html#Lean.mkRecName","doc":""},"Lean.mkRecAppWithSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/RecAppSyntax.lean#L16-L17","name":"Lean.mkRecAppWithSyntax","docLink":"./Lean/Elab/RecAppSyntax.html#Lean.mkRecAppWithSyntax","doc":"We store the syntax at recursive applications to be able to generate better error messages\nwhen performing well-founded and structural recursion.\n"},"Lean.mkRawNatLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L675-L676","name":"Lean.mkRawNatLit","docLink":"./Lean/Expr.html#Lean.mkRawNatLit","doc":"Return the \"raw\" natural number `.lit (.natVal n)`.\nThis is not the default representation used by the Lean frontend.\nSee `mkNatLit`.\n"},"Lean.mkRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L29-L30","name":"Lean.mkRat","docLink":"./Lean/Data/Rat.html#Lean.mkRat","doc":""},"Lean.mkQuotValEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L361-L363","name":"Lean.mkQuotValEx","docLink":"./Lean/Declaration.html#Lean.mkQuotValEx","doc":""},"Lean.mkProjectionInfoEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ProjFns.lean#L26-L27","name":"Lean.mkProjectionInfoEx","docLink":"./Lean/ProjFns.html#Lean.mkProjectionInfoEx","doc":""},"Lean.mkProjEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L702-L702","name":"Lean.mkProjEx","docLink":"./Lean/Expr.html#Lean.mkProjEx","doc":""},"Lean.mkProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L618-L619","name":"Lean.mkProj","docLink":"./Lean/Expr.html#Lean.mkProj","doc":"`.proj structName idx struct` is now the preferred form.\n"},"Lean.mkPrivateName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Modifiers.lean#L33-L34","name":"Lean.mkPrivateName","docLink":"./Lean/Modifiers.html#Lean.mkPrivateName","doc":""},"Lean.mkPatternWithRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1694-L1698","name":"Lean.mkPatternWithRef","docLink":"./Lean/Expr.html#Lean.mkPatternWithRef","doc":"Annotate the pattern `p` with `stx`. This is an auxiliary annotation\nfor producing better hover information.\n"},"Lean.mkOr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1751-L1751","name":"Lean.mkOr","docLink":"./Lean/Expr.html#Lean.mkOr","doc":"Return `p ∨ q` "},"Lean.mkOptionalNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L541-L544","name":"Lean.mkOptionalNode","docLink":"./Init/Meta.html#Lean.mkOptionalNode","doc":""},"Lean.mkOpaqueValEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L135-L137","name":"Lean.mkOpaqueValEx","docLink":"./Lean/Declaration.html#Lean.mkOpaqueValEx","doc":""},"Lean.mkNullNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L524-L525","name":"Lean.mkNullNode","docLink":"./Init/Meta.html#Lean.mkNullNode","doc":""},"Lean.mkNot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1749-L1749","name":"Lean.mkNot","docLink":"./Lean/Expr.html#Lean.mkNot","doc":"Return `Not p` "},"Lean.mkNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L448-L449","name":"Lean.mkNode","docLink":"./Init/Meta.html#Lean.mkNode","doc":""},"Lean.mkNoConfusionEnum.mkToCtorIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L46-L68","name":"Lean.mkNoConfusionEnum.mkToCtorIdx","docLink":"./Lean/Meta/Constructions.html#Lean.mkNoConfusionEnum.mkToCtorIdx","doc":""},"Lean.mkNoConfusionEnum.mkNoConfusionType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L70-L91","name":"Lean.mkNoConfusionEnum.mkNoConfusionType","docLink":"./Lean/Meta/Constructions.html#Lean.mkNoConfusionEnum.mkNoConfusionType","doc":""},"Lean.mkNoConfusionEnum.mkNoConfusion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L93-L117","name":"Lean.mkNoConfusionEnum.mkNoConfusion","docLink":"./Lean/Meta/Constructions.html#Lean.mkNoConfusionEnum.mkNoConfusion","doc":""},"Lean.mkNoConfusionEnum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L36-L117","name":"Lean.mkNoConfusionEnum","docLink":"./Lean/Meta/Constructions.html#Lean.mkNoConfusionEnum","doc":""},"Lean.mkNoConfusionCoreImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L13-L13","name":"Lean.mkNoConfusionCoreImp","docLink":"./Lean/Meta/Constructions.html#Lean.mkNoConfusionCoreImp","doc":""},"Lean.mkNoConfusionCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L28-L28","name":"Lean.mkNoConfusionCore","docLink":"./Lean/Meta/Constructions.html#Lean.mkNoConfusionCore","doc":""},"Lean.mkNoConfusion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L119-L123","name":"Lean.mkNoConfusion","docLink":"./Lean/Meta/Constructions.html#Lean.mkNoConfusion","doc":""},"Lean.mkNatLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L683-L685","name":"Lean.mkNatLit","docLink":"./Lean/Expr.html#Lean.mkNatLit","doc":"Return a natural number literal used in the frontend. It is a `OfNat.ofNat` application.\nRecall that all theorems and definitions containing numeric literals are encoded using\n`OfNat.ofNat` applications in the frontend.\n"},"Lean.mkNameMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L141-L141","name":"Lean.mkNameMap","docLink":"./Lean/Data/Name.html#Lean.mkNameMap","doc":""},"Lean.mkModuleInitializationFunctionName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/NameMangling.lean#L63-L64","name":"Lean.mkModuleInitializationFunctionName","docLink":"./Lean/Compiler/NameMangling.html#Lean.mkModuleInitializationFunctionName","doc":""},"Lean.mkModuleData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L577-L590","name":"Lean.mkModuleData","docLink":"./Lean/Environment.html#Lean.mkModuleData","doc":""},"Lean.mkMapDeclarationExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L518-L524","name":"Lean.mkMapDeclarationExtension","docLink":"./Lean/Environment.html#Lean.mkMapDeclarationExtension","doc":""},"Lean.mkMVarEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L693-L693","name":"Lean.mkMVarEx","docLink":"./Lean/Expr.html#Lean.mkMVarEx","doc":""},"Lean.mkMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L606-L607","name":"Lean.mkMVar","docLink":"./Lean/Expr.html#Lean.mkMVar","doc":"`.mvar mvarId` is now the preferred form.\nThis function is seldom used, metavariables are often created using functions such\nas `mkFresheExprMVar` at `MetaM`.\n"},"Lean.mkMDataEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L701-L701","name":"Lean.mkMDataEx","docLink":"./Lean/Expr.html#Lean.mkMDataEx","doc":""},"Lean.mkMData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L612-L613","name":"Lean.mkMData","docLink":"./Lean/Expr.html#Lean.mkMData","doc":"`.mdata m e` is now the preferred form.\n"},"Lean.mkLocalDeclEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L26-L27","name":"Lean.mkLocalDeclEx","docLink":"./Lean/LocalContext.html#Lean.mkLocalDeclEx","doc":""},"Lean.mkLitEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L700-L700","name":"Lean.mkLitEx","docLink":"./Lean/Expr.html#Lean.mkLitEx","doc":""},"Lean.mkLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L667-L668","name":"Lean.mkLit","docLink":"./Lean/Expr.html#Lean.mkLit","doc":"`.lit l` is now the preferred form.\n"},"Lean.mkListNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L363-L364","name":"Lean.mkListNode","docLink":"./Lean/Syntax.html#Lean.mkListNode","doc":""},"Lean.mkLevelZeroEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L152-L152","name":"Lean.mkLevelZeroEx","docLink":"./Lean/Level.html#Lean.mkLevelZeroEx","doc":""},"Lean.mkLevelSuccEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L153-L153","name":"Lean.mkLevelSuccEx","docLink":"./Lean/Level.html#Lean.mkLevelSuccEx","doc":""},"Lean.mkLevelSucc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L141-L142","name":"Lean.mkLevelSucc","docLink":"./Lean/Level.html#Lean.mkLevelSucc","doc":""},"Lean.mkLevelParamEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L155-L155","name":"Lean.mkLevelParamEx","docLink":"./Lean/Level.html#Lean.mkLevelParamEx","doc":""},"Lean.mkLevelParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L138-L139","name":"Lean.mkLevelParam","docLink":"./Lean/Level.html#Lean.mkLevelParam","doc":""},"Lean.mkLevelMaxEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L156-L156","name":"Lean.mkLevelMaxEx","docLink":"./Lean/Level.html#Lean.mkLevelMaxEx","doc":""},"Lean.mkLevelMax'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L503-L504","name":"Lean.mkLevelMax'","docLink":"./Lean/Level.html#Lean.mkLevelMax'","doc":""},"Lean.mkLevelMax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L144-L145","name":"Lean.mkLevelMax","docLink":"./Lean/Level.html#Lean.mkLevelMax","doc":""},"Lean.mkLevelMVarEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L154-L154","name":"Lean.mkLevelMVarEx","docLink":"./Lean/Level.html#Lean.mkLevelMVarEx","doc":""},"Lean.mkLevelMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L135-L136","name":"Lean.mkLevelMVar","docLink":"./Lean/Level.html#Lean.mkLevelMVar","doc":""},"Lean.mkLevelIMaxEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L157-L157","name":"Lean.mkLevelIMaxEx","docLink":"./Lean/Level.html#Lean.mkLevelIMaxEx","doc":""},"Lean.mkLevelIMax'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L517-L518","name":"Lean.mkLevelIMax'","docLink":"./Lean/Level.html#Lean.mkLevelIMax'","doc":""},"Lean.mkLevelIMax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L147-L148","name":"Lean.mkLevelIMax","docLink":"./Lean/Level.html#Lean.mkLevelIMax","doc":""},"Lean.mkLetFunAnnotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1647-L1648","name":"Lean.mkLetFunAnnotation","docLink":"./Lean/Expr.html#Lean.mkLetFunAnnotation","doc":"Annotate `e` with the `let_fun` annotation. This annotation is used as hint for the delaborator.\nIf `e` is of the form `(fun x : t => b) v`, then `mkLetFunAnnotation e` is delaborated at\n`let_fun x : t := v; b`\n"},"Lean.mkLetEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L699-L699","name":"Lean.mkLetEx","docLink":"./Lean/Expr.html#Lean.mkLetEx","doc":""},"Lean.mkLetDeclEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L29-L30","name":"Lean.mkLetDeclEx","docLink":"./Lean/LocalContext.html#Lean.mkLetDeclEx","doc":""},"Lean.mkLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L650-L651","name":"Lean.mkLet","docLink":"./Lean/Expr.html#Lean.mkLet","doc":"`.letE x t v b nonDep` is now the preferred form.\n"},"Lean.mkLambdaEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L697-L697","name":"Lean.mkLambdaEx","docLink":"./Lean/Expr.html#Lean.mkLambdaEx","doc":""},"Lean.mkLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L630-L631","name":"Lean.mkLambda","docLink":"./Lean/Expr.html#Lean.mkLambda","doc":"`.lam x t b bi` is now the preferred form.\n"},"Lean.mkLHSGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1714-L1715","name":"Lean.mkLHSGoal","docLink":"./Lean/Expr.html#Lean.mkLHSGoal","doc":"Annotate `e` with the LHS annotation. The delaborator displays\nexpressions of the form `lhs = rhs` as `lhs` when they have this annotation.\nThis is used to implement the infoview for the `conv` mode.\n"},"Lean.mkInductiveValEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L243-L256","name":"Lean.mkInductiveValEx","docLink":"./Lean/Declaration.html#Lean.mkInductiveValEx","doc":""},"Lean.mkInductiveDeclEs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L165-L166","name":"Lean.mkInductiveDeclEs","docLink":"./Lean/Declaration.html#Lean.mkInductiveDeclEs","doc":""},"Lean.mkInaccessible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1668-L1669","name":"Lean.mkInaccessible","docLink":"./Lean/Expr.html#Lean.mkInaccessible","doc":"Auxiliary annotation used to mark terms marked with the \"inaccessible\" annotation `.(t)` and\n`_` in patterns.\n"},"Lean.mkIdentFromRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L502-L503","name":"Lean.mkIdentFromRef","docLink":"./Init/Meta.html#Lean.mkIdentFromRef","doc":""},"Lean.mkIdentFrom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L499-L500","name":"Lean.mkIdentFrom","docLink":"./Init/Meta.html#Lean.mkIdentFrom","doc":"Create an identifier copying the position from `src`.\nTo refer to a specific constant, use `mkCIdentFrom` instead. "},"Lean.mkIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L521-L522","name":"Lean.mkIdent","docLink":"./Init/Meta.html#Lean.mkIdent","doc":""},"Lean.mkIBelowImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L15-L15","name":"Lean.mkIBelowImp","docLink":"./Lean/Meta/Constructions.html#Lean.mkIBelowImp","doc":""},"Lean.mkIBelow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L30-L30","name":"Lean.mkIBelow","docLink":"./Lean/Meta/Constructions.html#Lean.mkIBelow","doc":""},"Lean.mkHole":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L546-L547","name":"Lean.mkHole","docLink":"./Init/Meta.html#Lean.mkHole","doc":""},"Lean.mkGroupNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L527-L528","name":"Lean.mkGroupNode","docLink":"./Init/Meta.html#Lean.mkGroupNode","doc":""},"Lean.mkFreshMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1738-L1739","name":"Lean.mkFreshMVarId","docLink":"./Lean/Expr.html#Lean.mkFreshMVarId","doc":"Polymorphic operation for generating unique/fresh metavariable identifiers.\nIt is available in any monad `m` that implements the inferface `MonadNameGenerator`.\n"},"Lean.mkFreshLMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1745-L1746","name":"Lean.mkFreshLMVarId","docLink":"./Lean/Expr.html#Lean.mkFreshLMVarId","doc":"Polymorphic operation for generating unique/fresh universe metavariable identifiers.\nIt is available in any monad `m` that implements the inferface `MonadNameGenerator`.\n"},"Lean.mkFreshId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L247-L251","name":"Lean.mkFreshId","docLink":"./Init/Meta.html#Lean.mkFreshId","doc":""},"Lean.mkFreshFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1731-L1732","name":"Lean.mkFreshFVarId","docLink":"./Lean/Expr.html#Lean.mkFreshFVarId","doc":"Polymorphic operation for generating unique/fresh free variable identifiers.\nIt is available in any monad `m` that implements the inferface `MonadNameGenerator`.\n"},"Lean.mkForallEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L698-L698","name":"Lean.mkForallEx","docLink":"./Lean/Expr.html#Lean.mkForallEx","doc":""},"Lean.mkForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L636-L637","name":"Lean.mkForall","docLink":"./Lean/Expr.html#Lean.mkForall","doc":"`.forallE x t b bi` is now the preferred form.\n"},"Lean.mkFVarEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L692-L692","name":"Lean.mkFVarEx","docLink":"./Lean/Expr.html#Lean.mkFVarEx","doc":""},"Lean.mkFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L598-L599","name":"Lean.mkFVar","docLink":"./Lean/Expr.html#Lean.mkFVar","doc":"`.fvar fvarId` is now the preferred form.\nThis function is seldom used, free variables are often automatically created using the\ntelescope functions (e.g., `forallTelescope` and `lambdaTelescope`) at `MetaM`.\n"},"Lean.mkErrorStringWithPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L17-L21","name":"Lean.mkErrorStringWithPos","docLink":"./Lean/Message.html#Lean.mkErrorStringWithPos","doc":""},"Lean.mkEmptyEnvironment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L330-L339","name":"Lean.mkEmptyEnvironment","docLink":"./Lean/Environment.html#Lean.mkEmptyEnvironment","doc":""},"Lean.mkEM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1755-L1755","name":"Lean.mkEM","docLink":"./Lean/Expr.html#Lean.mkEM","doc":"Return `Classical.em p` "},"Lean.mkDefinitionValEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L109-L111","name":"Lean.mkDefinitionValEx","docLink":"./Lean/Declaration.html#Lean.mkDefinitionValEx","doc":""},"Lean.mkDefaultFnOfProjFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L163-L164","name":"Lean.mkDefaultFnOfProjFn","docLink":"./Lean/Structure.html#Lean.mkDefaultFnOfProjFn","doc":""},"Lean.mkDecIsTrue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1175-L1176","name":"Lean.mkDecIsTrue","docLink":"./Lean/Expr.html#Lean.mkDecIsTrue","doc":""},"Lean.mkDecIsFalse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1178-L1179","name":"Lean.mkDecIsFalse","docLink":"./Lean/Expr.html#Lean.mkDecIsFalse","doc":""},"Lean.mkConstructorValEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L278-L287","name":"Lean.mkConstructorValEx","docLink":"./Lean/Declaration.html#Lean.mkConstructorValEx","doc":""},"Lean.mkConstWithLevelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L97-L99","name":"Lean.mkConstWithLevelParams","docLink":"./Lean/MonadEnv.html#Lean.mkConstWithLevelParams","doc":""},"Lean.mkConstEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L695-L695","name":"Lean.mkConstEx","docLink":"./Lean/Expr.html#Lean.mkConstEx","doc":""},"Lean.mkConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L574-L575","name":"Lean.mkConst","docLink":"./Lean/Expr.html#Lean.mkConst","doc":"`mkConst declName us` return `.const declName us`. "},"Lean.mkCasesOnName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L16-L16","name":"Lean.mkCasesOnName","docLink":"./Lean/AuxRecursor.html#Lean.mkCasesOnName","doc":""},"Lean.mkCasesOnImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L11-L11","name":"Lean.mkCasesOnImp","docLink":"./Lean/Meta/Constructions.html#Lean.mkCasesOnImp","doc":""},"Lean.mkCasesOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L26-L26","name":"Lean.mkCasesOn","docLink":"./Lean/Meta/Constructions.html#Lean.mkCasesOn","doc":""},"Lean.mkCIdentFromRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L514-L515","name":"Lean.mkCIdentFromRef","docLink":"./Init/Meta.html#Lean.mkCIdentFromRef","doc":""},"Lean.mkCIdentFrom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L509-L512","name":"Lean.mkCIdentFrom","docLink":"./Init/Meta.html#Lean.mkCIdentFrom","doc":"Create an identifier referring to a constant `c` copying the position from `src`.\nThis variant of `mkIdentFrom` makes sure that the identifier cannot accidentally\nbe captured. "},"Lean.mkCIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L517-L518","name":"Lean.mkCIdent","docLink":"./Init/Meta.html#Lean.mkCIdent","doc":""},"Lean.mkBoolDataValueEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L24-L24","name":"Lean.mkBoolDataValueEx","docLink":"./Lean/Data/KVMap.html#Lean.mkBoolDataValueEx","doc":""},"Lean.mkBelowName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L20-L20","name":"Lean.mkBelowName","docLink":"./Lean/AuxRecursor.html#Lean.mkBelowName","doc":""},"Lean.mkBelowImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L14-L14","name":"Lean.mkBelowImp","docLink":"./Lean/Meta/Constructions.html#Lean.mkBelowImp","doc":""},"Lean.mkBelow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L29-L29","name":"Lean.mkBelow","docLink":"./Lean/Meta/Constructions.html#Lean.mkBelow","doc":""},"Lean.mkBVarEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L691-L691","name":"Lean.mkBVarEx","docLink":"./Lean/Expr.html#Lean.mkBVarEx","doc":""},"Lean.mkBVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L586-L587","name":"Lean.mkBVar","docLink":"./Lean/Expr.html#Lean.mkBVar","doc":"`.bvar idx` is now the preferred form. "},"Lean.mkBRecOnName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L18-L18","name":"Lean.mkBRecOnName","docLink":"./Lean/AuxRecursor.html#Lean.mkBRecOnName","doc":""},"Lean.mkBRecOnImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L16-L16","name":"Lean.mkBRecOnImp","docLink":"./Lean/Meta/Constructions.html#Lean.mkBRecOnImp","doc":""},"Lean.mkBRecOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L31-L31","name":"Lean.mkBRecOn","docLink":"./Lean/Meta/Constructions.html#Lean.mkBRecOn","doc":""},"Lean.mkBInductionOnName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L19-L19","name":"Lean.mkBInductionOnName","docLink":"./Lean/AuxRecursor.html#Lean.mkBInductionOnName","doc":""},"Lean.mkBInductionOnImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L17-L17","name":"Lean.mkBInductionOnImp","docLink":"./Lean/Meta/Constructions.html#Lean.mkBInductionOnImp","doc":""},"Lean.mkBInductionOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Constructions.lean#L32-L32","name":"Lean.mkBInductionOn","docLink":"./Lean/Meta/Constructions.html#Lean.mkBInductionOn","doc":""},"Lean.mkAxiomValEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L80-L85","name":"Lean.mkAxiomValEx","docLink":"./Lean/Declaration.html#Lean.mkAxiomValEx","doc":""},"Lean.mkAuxName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L89-L90","name":"Lean.mkAuxName","docLink":"./Lean/MonadEnv.html#Lean.mkAuxName","doc":""},"Lean.mkAuxFunDiscr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/AuxDiscr.lean#L20-L21","name":"Lean.mkAuxFunDiscr","docLink":"./Lean/Elab/AuxDiscr.html#Lean.mkAuxFunDiscr","doc":"Create an auxiliary identifier for expanding notation such as `fun (a, b) => ...`.\nThis kind of free variable is cleared before elaborating a `match` alternative rhs.\n"},"Lean.mkAuxDiscr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/AuxDiscr.lean#L13-L14","name":"Lean.mkAuxDiscr","docLink":"./Lean/Elab/AuxDiscr.html#Lean.mkAuxDiscr","doc":"Create an auxiliary identifier for storing non-atomic discriminants.\nThis kind of free variable is cleared before elaborating a `match` alternative rhs.\n"},"Lean.mkAttributeImplOfEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L351-L354","name":"Lean.mkAttributeImplOfEntry","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfEntry","doc":""},"Lean.mkAttributeImplOfConstantUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L340-L346","name":"Lean.mkAttributeImplOfConstantUnsafe","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfConstantUnsafe","doc":""},"Lean.mkAttributeImplOfConstant":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L349-L349","name":"Lean.mkAttributeImplOfConstant","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfConstant","doc":""},"Lean.mkAttributeImplOfBuilder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L319-L323","name":"Lean.mkAttributeImplOfBuilder","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfBuilder","doc":""},"Lean.mkAtomFrom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2674-L2675","name":"Lean.mkAtomFrom","docLink":"./Init/Prelude.html#Lean.mkAtomFrom","doc":""},"Lean.mkAtom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2671-L2672","name":"Lean.mkAtom","docLink":"./Init/Prelude.html#Lean.mkAtom","doc":""},"Lean.mkAppRev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L716-L717","name":"Lean.mkAppRev","docLink":"./Lean/Expr.html#Lean.mkAppRev","doc":"Same as `mkApp f args` but reversing `args`. "},"Lean.mkAppRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L712-L713","name":"Lean.mkAppRange","docLink":"./Lean/Expr.html#Lean.mkAppRange","doc":"`mkAppRange f i j #[a_1, ..., a_i, ..., a_j, ... ]` ==> the expression `f a_i ... a_{j-1}` "},"Lean.mkAppN":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L705-L706","name":"Lean.mkAppN","docLink":"./Lean/Expr.html#Lean.mkAppN","doc":"`mkAppN f #[a₀, ..., aₙ]` ==> `f a₀ a₁ .. aₙ`"},"Lean.mkAppEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L696-L696","name":"Lean.mkAppEx","docLink":"./Lean/Expr.html#Lean.mkAppEx","doc":""},"Lean.mkAppB":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L653-L653","name":"Lean.mkAppB","docLink":"./Lean/Expr.html#Lean.mkAppB","doc":""},"Lean.mkApp9":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L661-L661","name":"Lean.mkApp9","docLink":"./Lean/Expr.html#Lean.mkApp9","doc":""},"Lean.mkApp8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L660-L660","name":"Lean.mkApp8","docLink":"./Lean/Expr.html#Lean.mkApp8","doc":""},"Lean.mkApp7":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L659-L659","name":"Lean.mkApp7","docLink":"./Lean/Expr.html#Lean.mkApp7","doc":""},"Lean.mkApp6":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L658-L658","name":"Lean.mkApp6","docLink":"./Lean/Expr.html#Lean.mkApp6","doc":""},"Lean.mkApp5":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L657-L657","name":"Lean.mkApp5","docLink":"./Lean/Expr.html#Lean.mkApp5","doc":""},"Lean.mkApp4":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L656-L656","name":"Lean.mkApp4","docLink":"./Lean/Expr.html#Lean.mkApp4","doc":""},"Lean.mkApp3":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L655-L655","name":"Lean.mkApp3","docLink":"./Lean/Expr.html#Lean.mkApp3","doc":""},"Lean.mkApp2":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L654-L654","name":"Lean.mkApp2","docLink":"./Lean/Expr.html#Lean.mkApp2","doc":""},"Lean.mkApp10":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L662-L662","name":"Lean.mkApp10","docLink":"./Lean/Expr.html#Lean.mkApp10","doc":""},"Lean.mkApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L624-L625","name":"Lean.mkApp","docLink":"./Lean/Expr.html#Lean.mkApp","doc":"`.app f a` is now the preferred form.\n"},"Lean.mkAnnotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1631-L1632","name":"Lean.mkAnnotation","docLink":"./Lean/Expr.html#Lean.mkAnnotation","doc":"Annotate `e` with the given annotation name `kind`.\nIt uses metadata to store the annotation.\n"},"Lean.mkAnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1753-L1753","name":"Lean.mkAnd","docLink":"./Lean/Expr.html#Lean.mkAnd","doc":"Return `p ∧ q` "},"Lean.maxSmallNatFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Runtime.lean#L13-L13","name":"Lean.maxSmallNatFn","docLink":"./Lean/Runtime.html#Lean.maxSmallNatFn","doc":""},"Lean.maxSmallNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Runtime.lean#L18-L19","name":"Lean.maxSmallNat","docLink":"./Lean/Runtime.html#Lean.maxSmallNat","doc":""},"Lean.maxRecDepthErrorMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2890-L2891","name":"Lean.maxRecDepthErrorMessage","docLink":"./Init/Prelude.html#Lean.maxRecDepthErrorMessage","doc":""},"Lean.maxRecDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/RecDepth.lean#L10-L10","name":"Lean.maxRecDepth","docLink":"./Lean/Util/RecDepth.html#Lean.maxRecDepth","doc":""},"Lean.matchPatternAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchPatternAttr.lean#L10-L10","name":"Lean.matchPatternAttr","docLink":"./Lean/Meta/Match/MatchPatternAttr.html#Lean.matchPatternAttr","doc":""},"Lean.matchConstStruct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L121-L129","name":"Lean.matchConstStruct","docLink":"./Lean/MonadEnv.html#Lean.matchConstStruct","doc":""},"Lean.matchConstRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L73-L77","name":"Lean.matchConstRec","docLink":"./Lean/MonadEnv.html#Lean.matchConstRec","doc":""},"Lean.matchConstInduct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L61-L65","name":"Lean.matchConstInduct","docLink":"./Lean/MonadEnv.html#Lean.matchConstInduct","doc":""},"Lean.matchConstCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L67-L71","name":"Lean.matchConstCtor","docLink":"./Lean/MonadEnv.html#Lean.matchConstCtor","doc":""},"Lean.matchConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L53-L59","name":"Lean.matchConst","docLink":"./Lean/MonadEnv.html#Lean.matchConst","doc":""},"Lean.markNoConfusion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L53-L54","name":"Lean.markNoConfusion","docLink":"./Lean/AuxRecursor.html#Lean.markNoConfusion","doc":""},"Lean.markBorrowed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/BorrowedAnnotation.lean#L9-L10","name":"Lean.markBorrowed","docLink":"./Lean/Compiler/BorrowedAnnotation.html#Lean.markBorrowed","doc":""},"Lean.markAuxRecursor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L25-L26","name":"Lean.markAuxRecursor","docLink":"./Lean/AuxRecursor.html#Lean.markAuxRecursor","doc":""},"Lean.logWarningAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L74-L75","name":"Lean.logWarningAt","docLink":"./Lean/Log.html#Lean.logWarningAt","doc":"Log a new warning message using the given message data. The position is provided by `ref`. "},"Lean.logWarning":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L91-L92","name":"Lean.logWarning","docLink":"./Lean/Log.html#Lean.logWarning","doc":"Log a new warning message using the given message data. The position is provided by `getRef`. "},"Lean.logUnknownDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L103-L104","name":"Lean.logUnknownDecl","docLink":"./Lean/Log.html#Lean.logUnknownDecl","doc":"Log the error message \"unknown declaration\" "},"Lean.logTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L99-L100","name":"Lean.logTrace","docLink":"./Lean/Log.html#Lean.logTrace","doc":"Log a trace message into the message log. "},"Lean.logInfoAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L78-L79","name":"Lean.logInfoAt","docLink":"./Lean/Log.html#Lean.logInfoAt","doc":"Log a new information message using the given message data. The position is provided by `ref`. "},"Lean.logInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L95-L96","name":"Lean.logInfo","docLink":"./Lean/Log.html#Lean.logInfo","doc":"Log a new information message using the given message data. The position is provided by `getRef`. "},"Lean.logErrorAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L70-L71","name":"Lean.logErrorAt","docLink":"./Lean/Log.html#Lean.logErrorAt","doc":"Log a new error message using the given message data. The position is provided by `ref`. "},"Lean.logError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L87-L88","name":"Lean.logError","docLink":"./Lean/Log.html#Lean.logError","doc":"Log a new error message using the given message data. The position is provided by `getRef`. "},"Lean.logAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L59-L67","name":"Lean.logAt","docLink":"./Lean/Log.html#Lean.logAt","doc":"Log the message `msgData` at the position provided by `ref` with the given `severity`.\nIf `getRef` has position information but `ref` does not, we use `getRef`.\nWe use the `fileMap` to find the line and column numbers for the error message.\n"},"Lean.log":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L82-L84","name":"Lean.log","docLink":"./Lean/Log.html#Lean.log","doc":"Log a new error/warning/information message using the given message data and `severity`. The position is provided by `getRef`. "},"Lean.localDeclDependsOnPred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L722-L723","name":"Lean.localDeclDependsOnPred","docLink":"./Lean/MetavarContext.html#Lean.localDeclDependsOnPred","doc":"Return true iff the local declaration `localDecl` depends on a free variable `x` s.t. `pf x`, an unassigned metavariable `?m` s.t. `pm ?m` is true. "},"Lean.localDeclDependsOn'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L709-L715","name":"Lean.localDeclDependsOn'","docLink":"./Lean/MetavarContext.html#Lean.localDeclDependsOn'","doc":"Similar to `localDeclDependsOn`, but `x` can be a free variable or an unassigned metavariable. "},"Lean.localDeclDependsOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L696-L697","name":"Lean.localDeclDependsOn","docLink":"./Lean/MetavarContext.html#Lean.localDeclDependsOn","doc":"Return true iff `e` depends on the free variable `fvarId` "},"Lean.loadDynlib":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LoadDynlib.lean#L17-L17","name":"Lean.loadDynlib","docLink":"./Lean/LoadDynlib.html#Lean.loadDynlib","doc":"Dynamically loads a shared library so that its symbols can be used by\nthe Lean interpreter (e.g., for interpreting `@[extern]` declarations).\nEquivalent to passing `--load-dynlib=lib` to `lean`.\n\nNote that Lean never unloads libraries.\n"},"Lean.levelZero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L132-L133","name":"Lean.levelZero","docLink":"./Lean/Level.html#Lean.levelZero","doc":""},"Lean.levelOne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L150-L150","name":"Lean.levelOne","docLink":"./Lean/Level.html#Lean.levelOne","doc":""},"Lean.letFunAnnotation?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1653-L1654","name":"Lean.letFunAnnotation?","docLink":"./Lean/Expr.html#Lean.letFunAnnotation?","doc":"Return `some e'` if `e = mkLetFunAnnotation e'`\n"},"Lean.isTracingEnabledFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L67-L70","name":"Lean.isTracingEnabledFor","docLink":"./Lean/Util/Trace.html#Lean.isTracingEnabledFor","doc":""},"Lean.isSubobjectField?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L92-L96","name":"Lean.isSubobjectField?","docLink":"./Lean/Structure.html#Lean.isSubobjectField?","doc":"If `fieldName` represents the relation to a parent structure `S`, return `S` "},"Lean.isSubScriptAlnum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L82-L85","name":"Lean.isSubScriptAlnum","docLink":"./Init/Meta.html#Lean.isSubScriptAlnum","doc":""},"Lean.isStructureLike":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L196-L199","name":"Lean.isStructureLike","docLink":"./Lean/Structure.html#Lean.isStructureLike","doc":"Return true iff `constName` is the a non-recursive inductive datatype that has only one constructor. "},"Lean.isStructure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L148-L149","name":"Lean.isStructure","docLink":"./Lean/Structure.html#Lean.isStructure","doc":"Return true if `constName` is the name of an inductive datatype\n  created using the `structure` or `class` commands.\n\n  We perform the check by testing whether auxiliary projection functions\n  have been created. "},"Lean.isReducible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ReducibilityAttrs.lean#L51-L54","name":"Lean.isReducible","docLink":"./Lean/ReducibilityAttrs.html#Lean.isReducible","doc":"Return `true` if the given declaration has been marked as `[reducible]`. "},"Lean.isRecOnRecursor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L44-L45","name":"Lean.isRecOnRecursor","docLink":"./Lean/AuxRecursor.html#Lean.isRecOnRecursor","doc":""},"Lean.isRecCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L32-L35","name":"Lean.isRecCore","docLink":"./Lean/MonadEnv.html#Lean.isRecCore","doc":""},"Lean.isRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L37-L38","name":"Lean.isRec","docLink":"./Lean/MonadEnv.html#Lean.isRec","doc":""},"Lean.isProtected":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Modifiers.lean#L17-L18","name":"Lean.isProtected","docLink":"./Lean/Modifiers.html#Lean.isProtected","doc":""},"Lean.isProjectionFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ProjFns.lean#L58-L59","name":"Lean.isProjectionFn","docLink":"./Lean/ProjFns.html#Lean.isProjectionFn","doc":""},"Lean.isPrivateNameFromImportedModule":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Modifiers.lean#L54-L57","name":"Lean.isPrivateNameFromImportedModule","docLink":"./Lean/Modifiers.html#Lean.isPrivateNameFromImportedModule","doc":""},"Lean.isPrivateNameExport":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Modifiers.lean#L42-L43","name":"Lean.isPrivateNameExport","docLink":"./Lean/Modifiers.html#Lean.isPrivateNameExport","doc":""},"Lean.isPrivateName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Modifiers.lean#L36-L39","name":"Lean.isPrivateName","docLink":"./Lean/Modifiers.html#Lean.isPrivateName","doc":""},"Lean.isNumericSubscript":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L79-L80","name":"Lean.isNumericSubscript","docLink":"./Init/Meta.html#Lean.isNumericSubscript","doc":""},"Lean.isNoncomputable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/NoncomputableAttr.lean#L20-L21","name":"Lean.isNoncomputable","docLink":"./Lean/Compiler/NoncomputableAttr.html#Lean.isNoncomputable","doc":"Return true iff the user has declared the given declaration as `noncomputable`.\nRemark: we use this function only for introspection. It is currently not used by the code generator.\n"},"Lean.isNoConfusion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L57-L58","name":"Lean.isNoConfusion","docLink":"./Lean/AuxRecursor.html#Lean.isNoConfusion","doc":""},"Lean.isMarkedBorrowed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/BorrowedAnnotation.lean#L13-L14","name":"Lean.isMarkedBorrowed","docLink":"./Lean/Compiler/BorrowedAnnotation.html#Lean.isMarkedBorrowed","doc":""},"Lean.isMVarDelayedAssigned":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L358-L359","name":"Lean.isMVarDelayedAssigned","docLink":"./Lean/MetavarContext.html#Lean.isMVarDelayedAssigned","doc":""},"Lean.isLitKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L26-L27","name":"Lean.isLitKind","docLink":"./Lean/Syntax.html#Lean.isLitKind","doc":""},"Lean.isLevelMVarAssigned":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L343-L344","name":"Lean.isLevelMVarAssigned","docLink":"./Lean/MetavarContext.html#Lean.isLevelMVarAssigned","doc":""},"Lean.isLevelMVarAssignable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L361-L365","name":"Lean.isLevelMVarAssignable","docLink":"./Lean/MetavarContext.html#Lean.isLevelMVarAssignable","doc":""},"Lean.isLetterLike":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L71-L77","name":"Lean.isLetterLike","docLink":"./Init/Meta.html#Lean.isLetterLike","doc":""},"Lean.isLetFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1659-L1662","name":"Lean.isLetFun","docLink":"./Lean/Expr.html#Lean.isLetFun","doc":"Return true if `e = mkLetFunAnnotation e'`, and `e'` is of the form `(fun x : t => b) v`\n"},"Lean.isLHSGoal?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1718-L1725","name":"Lean.isLHSGoal?","docLink":"./Lean/Expr.html#Lean.isLHSGoal?","doc":"Return `some lhs` if `e = mkLHGoal e'`, where `e'` is of the form `lhs = rhs`. "},"Lean.isIrreducible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ReducibilityAttrs.lean#L57-L60","name":"Lean.isIrreducible","docLink":"./Lean/ReducibilityAttrs.html#Lean.isIrreducible","doc":"Return `true` if the given declaration has been marked as `[irreducible]` "},"Lean.isInitializerExecutionEnabled":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ImportingFlag.lean#L26-L27","name":"Lean.isInitializerExecutionEnabled","docLink":"./Lean/ImportingFlag.html#Lean.isInitializerExecutionEnabled","doc":""},"Lean.isInductive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L27-L30","name":"Lean.isInductive","docLink":"./Lean/MonadEnv.html#Lean.isInductive","doc":""},"Lean.isIdRest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L90-L91","name":"Lean.isIdRest","docLink":"./Init/Meta.html#Lean.isIdRest","doc":""},"Lean.isIdFirst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L87-L88","name":"Lean.isIdFirst","docLink":"./Init/Meta.html#Lean.isIdFirst","doc":""},"Lean.isIdEndEscape":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L96-L96","name":"Lean.isIdEndEscape","docLink":"./Init/Meta.html#Lean.isIdEndEscape","doc":""},"Lean.isIdBeginEscape":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L95-L95","name":"Lean.isIdBeginEscape","docLink":"./Init/Meta.html#Lean.isIdBeginEscape","doc":""},"Lean.isIOUnitRegularInitFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L107-L108","name":"Lean.isIOUnitRegularInitFn","docLink":"./Lean/Compiler/InitAttr.html#Lean.isIOUnitRegularInitFn","doc":""},"Lean.isIOUnitInitFnCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L101-L104","name":"Lean.isIOUnitInitFnCore","docLink":"./Lean/Compiler/InitAttr.html#Lean.isIOUnitInitFnCore","doc":""},"Lean.isIOUnitInitFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L114-L115","name":"Lean.isIOUnitInitFn","docLink":"./Lean/Compiler/InitAttr.html#Lean.isIOUnitInitFn","doc":""},"Lean.isIOUnitBuiltinInitFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L111-L112","name":"Lean.isIOUnitBuiltinInitFn","docLink":"./Lean/Compiler/InitAttr.html#Lean.isIOUnitBuiltinInitFn","doc":""},"Lean.isGreek":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L68-L69","name":"Lean.isGreek","docLink":"./Init/Meta.html#Lean.isGreek","doc":"Valid identifier names "},"Lean.isExternC":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L128-L131","name":"Lean.isExternC","docLink":"./Lean/Compiler/ExternAttr.html#Lean.isExternC","doc":"We say a Lean function marked as `[extern \"<c_fn_nane>\"]` is for all backends, and it is implemented using `extern \"C\"`.\nThus, there is no name mangling. "},"Lean.isExtern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L123-L124","name":"Lean.isExtern","docLink":"./Lean/Compiler/ExternAttr.html#Lean.isExtern","doc":""},"Lean.isExprMVarAssigned":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L351-L352","name":"Lean.isExprMVarAssigned","docLink":"./Lean/MetavarContext.html#Lean.isExprMVarAssigned","doc":""},"Lean.isExprMVarAssignable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L378-L379","name":"Lean.isExprMVarAssignable","docLink":"./Lean/MetavarContext.html#Lean.isExprMVarAssignable","doc":""},"Lean.isExport":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExportAttr.lean#L34-L37","name":"Lean.isExport","docLink":"./Lean/Compiler/ExportAttr.html#Lean.isExport","doc":""},"Lean.isEnumType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L188-L198","name":"Lean.isEnumType","docLink":"./Lean/MonadEnv.html#Lean.isEnumType","doc":""},"Lean.isDeprecated":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Deprecated.lean#L24-L25","name":"Lean.isDeprecated","docLink":"./Lean/Deprecated.html#Lean.isDeprecated","doc":""},"Lean.isClosedTermName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ClosedTermCache.lean#L25-L26","name":"Lean.isClosedTermName","docLink":"./Lean/Compiler/ClosedTermCache.html#Lean.isClosedTermName","doc":""},"Lean.isClass":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Class.lean#L64-L65","name":"Lean.isClass","docLink":"./Lean/Class.html#Lean.isClass","doc":"Return `true` if `n` is the name of type class in the given environment. "},"Lean.isCasesOnRecursor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L41-L42","name":"Lean.isCasesOnRecursor","docLink":"./Lean/AuxRecursor.html#Lean.isCasesOnRecursor","doc":""},"Lean.isBuiltinAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L384-L385","name":"Lean.isBuiltinAttribute","docLink":"./Lean/Attributes.html#Lean.isBuiltinAttribute","doc":"Return true iff `n` is the name of a registered attribute. "},"Lean.isBRecOnRecursor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L47-L48","name":"Lean.isBRecOnRecursor","docLink":"./Lean/AuxRecursor.html#Lean.isBRecOnRecursor","doc":""},"Lean.isAuxRecursorWithSuffix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L36-L39","name":"Lean.isAuxRecursorWithSuffix","docLink":"./Lean/AuxRecursor.html#Lean.isAuxRecursorWithSuffix","doc":""},"Lean.isAuxRecursor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L29-L34","name":"Lean.isAuxRecursor","docLink":"./Lean/AuxRecursor.html#Lean.isAuxRecursor","doc":""},"Lean.isAuxFunDiscrName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/AuxDiscr.lean#L30-L31","name":"Lean.isAuxFunDiscrName","docLink":"./Lean/Elab/AuxDiscr.html#Lean.isAuxFunDiscrName","doc":"Return true iff `n` is an auxiliary variable created by notation such as `fun (a, b) => ...`.\nThey are cleared before eliminating the `match` alternatives RHS "},"Lean.isAuxDiscrName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/AuxDiscr.lean#L24-L25","name":"Lean.isAuxDiscrName","docLink":"./Lean/Elab/AuxDiscr.html#Lean.isAuxDiscrName","doc":"Return true iff `n` is an auxiliary variable created by `expandNonAtomicDiscrs?` "},"Lean.isAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L402-L403","name":"Lean.isAttribute","docLink":"./Lean/Attributes.html#Lean.isAttribute","doc":""},"Lean.interpolatedStrLitKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2526-L2526","name":"Lean.interpolatedStrLitKind","docLink":"./Init/Prelude.html#Lean.interpolatedStrLitKind","doc":""},"Lean.interpolatedStrKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2527-L2527","name":"Lean.interpolatedStrKind","docLink":"./Init/Prelude.html#Lean.interpolatedStrKind","doc":""},"Lean.internalExceptionsRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/InternalExceptionId.lean#L13-L14","name":"Lean.internalExceptionsRef","docLink":"./Lean/InternalExceptionId.html#Lean.internalExceptionsRef","doc":"Internal exceptions registered in the system. "},"Lean.instantiateMVarsCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L562-L565","name":"Lean.instantiateMVarsCore","docLink":"./Lean/MetavarContext.html#Lean.instantiateMVarsCore","doc":""},"Lean.instantiateMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L567-L573","name":"Lean.instantiateMVars","docLink":"./Lean/MetavarContext.html#Lean.instantiateMVars","doc":""},"Lean.instantiateMVarDeclMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L586-L590","name":"Lean.instantiateMVarDeclMVars","docLink":"./Lean/MetavarContext.html#Lean.instantiateMVarDeclMVars","doc":""},"Lean.instantiateLocalDeclMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L592-L597","name":"Lean.instantiateLocalDeclMVars","docLink":"./Lean/MetavarContext.html#Lean.instantiateLocalDeclMVars","doc":""},"Lean.instantiateLevelMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L472-L485","name":"Lean.instantiateLevelMVars","docLink":"./Lean/MetavarContext.html#Lean.instantiateLevelMVars","doc":"Notes on artificial eta-expanded terms due to metavariables.\nWe try avoid synthetic terms such as `((fun x y => t) a b)` in the output produced by the elaborator.\nThis kind of term may be generated when instantiating metavariable assignments.\nThis module tries to avoid their generation because they often introduce unnecessary dependencies and\nmay affect automation.\n\nWhen elaborating terms, we use metavariables to represent \"holes\". Each hole has a context which includes\nall free variables that may be used to \"fill\" the hole. Suppose, we create a metavariable (hole) `?m : Nat` in a context\ncontaining `(x : Nat) (y : Nat) (b : Bool)`, then we can assign terms such as `x + y` to `?m` since `x` and `y`\nare in the context used to create `?m`. Now, suppose we have the term `?m + 1` and we want to create the lambda expression\n`fun x => ?m + 1`. This term is not correct since we may assign to `?m` a term containing `x`.\nWe address this issue by create a synthetic metavariable `?n : Nat → Nat` and adding the delayed assignment\n`?n #[x] := ?m`, and the term `fun x => ?n x + 1`. When we later assign a term `t[x]` to `?m`, `fun x => t[x]` is assigned to\n`?n`, and if we substitute it at `fun x => ?n x + 1`, we produce `fun x => ((fun x => t[x]) x) + 1`.\nTo avoid this term eta-expanded term, we apply beta-reduction when instantiating metavariable assignments in this module.\nThis operation is performed at `instantiateExprMVars`, `elimMVarDeps`, and `levelMVarToParam`.\n"},"Lean.instantiateLCtxMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L575-L584","name":"Lean.instantiateLCtxMVars","docLink":"./Lean/MetavarContext.html#Lean.instantiateLCtxMVars","doc":""},"Lean.instantiateExprMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L488-L556","name":"Lean.instantiateExprMVars","docLink":"./Lean/MetavarContext.html#Lean.instantiateExprMVars","doc":"instantiateExprMVars main function "},"Lean.instToStringRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L19-L20","name":"Lean.instToStringRat","docLink":"./Lean/Data/Rat.html#Lean.instToStringRat","doc":""},"Lean.instToStringOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L16-L16","name":"Lean.instToStringOptions","docLink":"./Lean/Data/Options.html#Lean.instToStringOptions","doc":""},"Lean.instToStringNamePart":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L14-L17","name":"Lean.instToStringNamePart","docLink":"./Lean/Data/NameTrie.html#Lean.instToStringNamePart","doc":""},"Lean.instToStringLOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LOption.lean#L16-L20","name":"Lean.instToStringLOption","docLink":"./Lean/Data/LOption.html#Lean.instToStringLOption","doc":""},"Lean.instToStringImport":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L32-L32","name":"Lean.instToStringImport","docLink":"./Lean/Environment.html#Lean.instToStringImport","doc":""},"Lean.instToStringDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L47-L47","name":"Lean.instToStringDataValue","docLink":"./Lean/Data/KVMap.html#Lean.instToStringDataValue","doc":""},"Lean.instToStringAttributeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L44-L48","name":"Lean.instToStringAttributeKind","docLink":"./Lean/Attributes.html#Lean.instToStringAttributeKind","doc":""},"Lean.instToMessageDataTSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L297-L297","name":"Lean.instToMessageDataTSyntax","docLink":"./Lean/Message.html#Lean.instToMessageDataTSyntax","doc":""},"Lean.instToMessageDataSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L296-L296","name":"Lean.instToMessageDataSyntax","docLink":"./Lean/Message.html#Lean.instToMessageDataSyntax","doc":""},"Lean.instToMessageDataSubarray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L303-L303","name":"Lean.instToMessageDataSubarray","docLink":"./Lean/Message.html#Lean.instToMessageDataSubarray","doc":""},"Lean.instToMessageDataString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L295-L295","name":"Lean.instToMessageDataString","docLink":"./Lean/Message.html#Lean.instToMessageDataString","doc":""},"Lean.instToMessageDataOptionExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L305-L305","name":"Lean.instToMessageDataOptionExpr","docLink":"./Lean/Message.html#Lean.instToMessageDataOptionExpr","doc":""},"Lean.instToMessageDataOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L304-L304","name":"Lean.instToMessageDataOption","docLink":"./Lean/Message.html#Lean.instToMessageDataOption","doc":""},"Lean.instToMessageDataName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L294-L294","name":"Lean.instToMessageDataName","docLink":"./Lean/Message.html#Lean.instToMessageDataName","doc":""},"Lean.instToMessageDataMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L300-L300","name":"Lean.instToMessageDataMessageData","docLink":"./Lean/Message.html#Lean.instToMessageDataMessageData","doc":""},"Lean.instToMessageDataMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L299-L299","name":"Lean.instToMessageDataMVarId","docLink":"./Lean/Message.html#Lean.instToMessageDataMVarId","doc":""},"Lean.instToMessageDataList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L301-L301","name":"Lean.instToMessageDataList","docLink":"./Lean/Message.html#Lean.instToMessageDataList","doc":""},"Lean.instToMessageDataLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L293-L293","name":"Lean.instToMessageDataLevel","docLink":"./Lean/Message.html#Lean.instToMessageDataLevel","doc":""},"Lean.instToMessageDataFormat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L298-L298","name":"Lean.instToMessageDataFormat","docLink":"./Lean/Message.html#Lean.instToMessageDataFormat","doc":""},"Lean.instToMessageDataExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L292-L292","name":"Lean.instToMessageDataExpr","docLink":"./Lean/Message.html#Lean.instToMessageDataExpr","doc":""},"Lean.instToMessageDataArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L302-L302","name":"Lean.instToMessageDataArray","docLink":"./Lean/Message.html#Lean.instToMessageDataArray","doc":""},"Lean.instToMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L291-L291","name":"Lean.instToMessageData","docLink":"./Lean/Message.html#Lean.instToMessageData","doc":""},"Lean.instToJsonUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L109-L110","name":"Lean.instToJsonUSize","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonUSize","doc":""},"Lean.instToJsonUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L119-L120","name":"Lean.instToJsonUInt64","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonUInt64","doc":""},"Lean.instToJsonString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L38-L38","name":"Lean.instToJsonString","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonString","doc":""},"Lean.instToJsonProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L75-L76","name":"Lean.instToJsonProd","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonProd","doc":""},"Lean.instToJsonOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L62-L65","name":"Lean.instToJsonOption","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonOption","doc":""},"Lean.instToJsonNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L34-L34","name":"Lean.instToJsonNat","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonNat","doc":""},"Lean.instToJsonName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L88-L89","name":"Lean.instToJsonName","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonName","doc":""},"Lean.instToJsonList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L54-L55","name":"Lean.instToJsonList","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonList","doc":""},"Lean.instToJsonLeanPaths":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Paths.lean#L20-L20","name":"Lean.instToJsonLeanPaths","docLink":"./Lean/Util/Paths.html#Lean.instToJsonLeanPaths","doc":""},"Lean.instToJsonJsonNumber":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L28-L28","name":"Lean.instToJsonJsonNumber","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonJsonNumber","doc":""},"Lean.instToJsonJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L25-L25","name":"Lean.instToJsonJson","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonJson","doc":""},"Lean.instToJsonInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L36-L36","name":"Lean.instToJsonInt","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonInt","doc":""},"Lean.instToJsonFilePath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L41-L41","name":"Lean.instToJsonFilePath","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonFilePath","doc":""},"Lean.instToJsonBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L32-L32","name":"Lean.instToJsonBool","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonBool","doc":""},"Lean.instToJsonArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L48-L49","name":"Lean.instToJsonArray","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instToJsonArray","doc":""},"Lean.instToFormatProdNameDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Format.lean#L59-L61","name":"Lean.instToFormatProdNameDataValue","docLink":"./Lean/Data/Format.html#Lean.instToFormatProdNameDataValue","doc":""},"Lean.instToFormatName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Format.lean#L47-L48","name":"Lean.instToFormatName","docLink":"./Lean/Data/Format.html#Lean.instToFormatName","doc":""},"Lean.instToFormatKVMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Format.lean#L69-L69","name":"Lean.instToFormatKVMap","docLink":"./Lean/Data/Format.html#Lean.instToFormatKVMap","doc":""},"Lean.instToFormatDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Format.lean#L50-L57","name":"Lean.instToFormatDataValue","docLink":"./Lean/Data/Format.html#Lean.instToFormatDataValue","doc":""},"Lean.instToExprUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ToExpr.lean#L43-L45","name":"Lean.instToExprUnit","docLink":"./Lean/ToExpr.html#Lean.instToExprUnit","doc":""},"Lean.instToExprString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ToExpr.lean#L39-L41","name":"Lean.instToExprString","docLink":"./Lean/ToExpr.html#Lean.instToExprString","doc":""},"Lean.instToExprProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ToExpr.lean#L79-L83","name":"Lean.instToExprProd","docLink":"./Lean/ToExpr.html#Lean.instToExprProd","doc":""},"Lean.instToExprOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ToExpr.lean#L56-L61","name":"Lean.instToExprOption","docLink":"./Lean/ToExpr.html#Lean.instToExprOption","doc":""},"Lean.instToExprNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ToExpr.lean#L27-L29","name":"Lean.instToExprNat","docLink":"./Lean/ToExpr.html#Lean.instToExprNat","doc":""},"Lean.instToExprName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ToExpr.lean#L52-L54","name":"Lean.instToExprName","docLink":"./Lean/ToExpr.html#Lean.instToExprName","doc":""},"Lean.instToExprList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ToExpr.lean#L67-L72","name":"Lean.instToExprList","docLink":"./Lean/ToExpr.html#Lean.instToExprList","doc":""},"Lean.instToExprDeclarationRanges":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L34-L36","name":"Lean.instToExprDeclarationRanges","docLink":"./Lean/DeclarationRange.html#Lean.instToExprDeclarationRanges","doc":""},"Lean.instToExprDeclarationRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L25-L27","name":"Lean.instToExprDeclarationRange","docLink":"./Lean/DeclarationRange.html#Lean.instToExprDeclarationRange","doc":""},"Lean.instToExprChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ToExpr.lean#L35-L37","name":"Lean.instToExprChar","docLink":"./Lean/ToExpr.html#Lean.instToExprChar","doc":""},"Lean.instToExprBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ToExpr.lean#L31-L33","name":"Lean.instToExprBool","docLink":"./Lean/ToExpr.html#Lean.instToExprBool","doc":""},"Lean.instToExprArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ToExpr.lean#L74-L77","name":"Lean.instToExprArray","docLink":"./Lean/ToExpr.html#Lean.instToExprArray","doc":""},"Lean.instSizeOfName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L72-L73","name":"Lean.instSizeOfName","docLink":"./Init/SizeOf.html#Lean.instSizeOfName","doc":""},"Lean.instReprStructureFieldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L20-L20","name":"Lean.instReprStructureFieldInfo","docLink":"./Lean/Structure.html#Lean.instReprStructureFieldInfo","doc":""},"Lean.instReprSMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L105-L106","name":"Lean.instReprSMap","docLink":"./Lean/Data/SMap.html#Lean.instReprSMap","doc":""},"Lean.instReprReducibilityStatus":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ReducibilityAttrs.lean#L15-L15","name":"Lean.instReprReducibilityStatus","docLink":"./Lean/ReducibilityAttrs.html#Lean.instReprReducibilityStatus","doc":""},"Lean.instReprRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L22-L23","name":"Lean.instReprRat","docLink":"./Lean/Data/Rat.html#Lean.instReprRat","doc":""},"Lean.instReprPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L14-L14","name":"Lean.instReprPosition","docLink":"./Lean/Data/Position.html#Lean.instReprPosition","doc":""},"Lean.instReprMetavarKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L247-L247","name":"Lean.instReprMetavarKind","docLink":"./Lean/MetavarContext.html#Lean.instReprMetavarKind","doc":""},"Lean.instReprMVarId_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L276-L277","name":"Lean.instReprMVarId_1","docLink":"./Lean/Expr.html#Lean.instReprMVarId_1","doc":""},"Lean.instReprMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L274-L274","name":"Lean.instReprMVarId","docLink":"./Lean/Expr.html#Lean.instReprMVarId","doc":""},"Lean.instReprLiteral":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L17-L17","name":"Lean.instReprLiteral","docLink":"./Lean/Expr.html#Lean.instReprLiteral","doc":""},"Lean.instReprLevelMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L67-L67","name":"Lean.instReprLevelMVarId","docLink":"./Lean/Level.html#Lean.instReprLevelMVarId","doc":""},"Lean.instReprLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L107-L107","name":"Lean.instReprLevel","docLink":"./Lean/Level.html#Lean.instReprLevel","doc":""},"Lean.instReprLMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L72-L73","name":"Lean.instReprLMVarId","docLink":"./Lean/Level.html#Lean.instReprLMVarId","doc":""},"Lean.instReprKVMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L66-L66","name":"Lean.instReprKVMap","docLink":"./Lean/Data/KVMap.html#Lean.instReprKVMap","doc":""},"Lean.instReprHeadIndex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/HeadIndex.lean#L32-L32","name":"Lean.instReprHeadIndex","docLink":"./Lean/HeadIndex.html#Lean.instReprHeadIndex","doc":""},"Lean.instReprFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L243-L244","name":"Lean.instReprFVarId","docLink":"./Lean/Expr.html#Lean.instReprFVarId","doc":""},"Lean.instReprExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L473-L473","name":"Lean.instReprExpr","docLink":"./Lean/Expr.html#Lean.instReprExpr","doc":""},"Lean.instReprDefinitionSafety":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L92-L92","name":"Lean.instReprDefinitionSafety","docLink":"./Lean/Declaration.html#Lean.instReprDefinitionSafety","doc":""},"Lean.instReprDeclarationRanges":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L32-L32","name":"Lean.instReprDeclarationRanges","docLink":"./Lean/DeclarationRange.html#Lean.instReprDeclarationRanges","doc":""},"Lean.instReprDeclarationRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L23-L23","name":"Lean.instReprDeclarationRange","docLink":"./Lean/DeclarationRange.html#Lean.instReprDeclarationRange","doc":""},"Lean.instReprData_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L214-L227","name":"Lean.instReprData_1","docLink":"./Lean/Expr.html#Lean.instReprData_1","doc":""},"Lean.instReprDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L18-L18","name":"Lean.instReprDataValue","docLink":"./Lean/Data/KVMap.html#Lean.instReprDataValue","doc":""},"Lean.instReprData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L51-L60","name":"Lean.instReprData","docLink":"./Lean/Level.html#Lean.instReprData","doc":""},"Lean.instReprBinderInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L87-L87","name":"Lean.instReprBinderInfo","docLink":"./Lean/Expr.html#Lean.instReprBinderInfo","doc":""},"Lean.instQuoteTermStrAnonymous":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L925-L925","name":"Lean.instQuoteTermStrAnonymous","docLink":"./Init/Meta.html#Lean.instQuoteTermStrAnonymous","doc":""},"Lean.instQuoteSubstringStrAnonymous":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L929-L929","name":"Lean.instQuoteSubstringStrAnonymous","docLink":"./Init/Meta.html#Lean.instQuoteSubstringStrAnonymous","doc":""},"Lean.instQuoteStringStrLitKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L927-L927","name":"Lean.instQuoteStringStrLitKind","docLink":"./Init/Meta.html#Lean.instQuoteStringStrLitKind","doc":""},"Lean.instQuoteProdStrAnonymous":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L949-L951","name":"Lean.instQuoteProdStrAnonymous","docLink":"./Init/Meta.html#Lean.instQuoteProdStrAnonymous","doc":""},"Lean.instQuoteNatNumLitKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L928-L928","name":"Lean.instQuoteNatNumLitKind","docLink":"./Init/Meta.html#Lean.instQuoteNatNumLitKind","doc":""},"Lean.instQuoteNameStrAnonymous":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L944-L947","name":"Lean.instQuoteNameStrAnonymous","docLink":"./Init/Meta.html#Lean.instQuoteNameStrAnonymous","doc":""},"Lean.instQuoteListStrAnonymous":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L957-L958","name":"Lean.instQuoteListStrAnonymous","docLink":"./Init/Meta.html#Lean.instQuoteListStrAnonymous","doc":""},"Lean.instQuoteBoolStrAnonymous":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L926-L926","name":"Lean.instQuoteBoolStrAnonymous","docLink":"./Init/Meta.html#Lean.instQuoteBoolStrAnonymous","doc":""},"Lean.instQuoteArrayStrAnonymous":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L960-L961","name":"Lean.instQuoteArrayStrAnonymous","docLink":"./Init/Meta.html#Lean.instQuoteArrayStrAnonymous","doc":""},"Lean.instQuote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L923-L923","name":"Lean.instQuote","docLink":"./Init/Meta.html#Lean.instQuote","doc":""},"Lean.instNonemptyKeyedDeclsAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L75-L76","name":"Lean.instNonemptyKeyedDeclsAttribute","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.instNonemptyKeyedDeclsAttribute","doc":""},"Lean.instNonemptyEnvExtensionEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L50-L50","name":"Lean.instNonemptyEnvExtensionEntry","docLink":"./Lean/Environment.html#Lean.instNonemptyEnvExtensionEntry","doc":""},"Lean.instMonadWithOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L107-L108","name":"Lean.instMonadWithOptions","docLink":"./Lean/Data/Options.html#Lean.instMonadWithOptions","doc":""},"Lean.instMonadTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L41-L43","name":"Lean.instMonadTrace","docLink":"./Lean/Util/Trace.html#Lean.instMonadTrace","doc":""},"Lean.instMonadResolveName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L177-L179","name":"Lean.instMonadResolveName","docLink":"./Lean/ResolveName.html#Lean.instMonadResolveName","doc":""},"Lean.instMonadRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2716-L2718","name":"Lean.instMonadRef","docLink":"./Init/Prelude.html#Lean.instMonadRef","doc":""},"Lean.instMonadRecDepthStateRefT'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L102-L103","name":"Lean.instMonadRecDepthStateRefT'","docLink":"./Lean/Exception.html#Lean.instMonadRecDepthStateRefT'","doc":""},"Lean.instMonadRecDepthReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L97-L100","name":"Lean.instMonadRecDepthReaderT","docLink":"./Lean/Exception.html#Lean.instMonadRecDepthReaderT","doc":""},"Lean.instMonadRecDepthMonadCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L105-L106","name":"Lean.instMonadRecDepthMonadCacheT","docLink":"./Lean/Exception.html#Lean.instMonadRecDepthMonadCacheT","doc":""},"Lean.instMonadQuotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2761-L2764","name":"Lean.instMonadQuotation","docLink":"./Init/Prelude.html#Lean.instMonadQuotation","doc":""},"Lean.instMonadOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L89-L90","name":"Lean.instMonadOptions","docLink":"./Lean/Data/Options.html#Lean.instMonadOptions","doc":""},"Lean.instMonadMCtxStateRefT'MetavarContextST":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L558-L560","name":"Lean.instMonadMCtxStateRefT'MetavarContextST","docLink":"./Lean/MetavarContext.html#Lean.instMonadMCtxStateRefT'MetavarContextST","doc":""},"Lean.instMonadMCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L311-L313","name":"Lean.instMonadMCtx","docLink":"./Lean/MetavarContext.html#Lean.instMonadMCtx","doc":""},"Lean.instMonadLog":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L25-L30","name":"Lean.instMonadLog","docLink":"./Lean/Log.html#Lean.instMonadLog","doc":""},"Lean.instMonadLiftImportMAttrM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L18-L19","name":"Lean.instMonadLiftImportMAttrM","docLink":"./Lean/Attributes.html#Lean.instMonadLiftImportMAttrM","doc":""},"Lean.instMonadLCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L423-L424","name":"Lean.instMonadLCtx","docLink":"./Lean/LocalContext.html#Lean.instMonadLCtx","doc":""},"Lean.instMonadEnv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L837-L839","name":"Lean.instMonadEnv","docLink":"./Lean/Environment.html#Lean.instMonadEnv","doc":""},"Lean.instMonadCacheReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L24-L26","name":"Lean.instMonadCacheReaderT","docLink":"./Lean/Util/MonadCache.html#Lean.instMonadCacheReaderT","doc":""},"Lean.instMonadCacheExceptT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L28-L30","name":"Lean.instMonadCacheExceptT","docLink":"./Lean/Util/MonadCache.html#Lean.instMonadCacheExceptT","doc":""},"Lean.instMonadBacktrackExceptT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadBacktrack.lean#L63-L65","name":"Lean.instMonadBacktrackExceptT","docLink":"./Lean/Util/MonadBacktrack.html#Lean.instMonadBacktrackExceptT","doc":""},"Lean.instMetaEval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Eval.lean#L20-L21","name":"Lean.instMetaEval","docLink":"./Lean/Eval.html#Lean.instMetaEval","doc":""},"Lean.instLTLiteral":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L35-L35","name":"Lean.instLTLiteral","docLink":"./Lean/Expr.html#Lean.instLTLiteral","doc":""},"Lean.instInhabitedTraceState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L22-L22","name":"Lean.instInhabitedTraceState","docLink":"./Lean/Util/Trace.html#Lean.instInhabitedTraceState","doc":""},"Lean.instInhabitedTraceElem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L17-L17","name":"Lean.instInhabitedTraceElem","docLink":"./Lean/Util/Trace.html#Lean.instInhabitedTraceElem","doc":""},"Lean.instInhabitedTheoremVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L122-L122","name":"Lean.instInhabitedTheoremVal","docLink":"./Lean/Declaration.html#Lean.instInhabitedTheoremVal","doc":""},"Lean.instInhabitedTagAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L139-L139","name":"Lean.instInhabitedTagAttribute","docLink":"./Lean/Attributes.html#Lean.instInhabitedTagAttribute","doc":""},"Lean.instInhabitedTSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2512-L2513","name":"Lean.instInhabitedTSyntax","docLink":"./Init/Prelude.html#Lean.instInhabitedTSyntax","doc":""},"Lean.instInhabitedSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2509-L2510","name":"Lean.instInhabitedSyntax","docLink":"./Init/Prelude.html#Lean.instInhabitedSyntax","doc":""},"Lean.instInhabitedSubExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L144-L144","name":"Lean.instInhabitedSubExpr","docLink":"./Lean/SubExpr.html#Lean.instInhabitedSubExpr","doc":""},"Lean.instInhabitedStructureState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L44-L44","name":"Lean.instInhabitedStructureState","docLink":"./Lean/Structure.html#Lean.instInhabitedStructureState","doc":""},"Lean.instInhabitedStructureInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L29-L29","name":"Lean.instInhabitedStructureInfo","docLink":"./Lean/Structure.html#Lean.instInhabitedStructureInfo","doc":""},"Lean.instInhabitedStructureFieldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L20-L20","name":"Lean.instInhabitedStructureFieldInfo","docLink":"./Lean/Structure.html#Lean.instInhabitedStructureFieldInfo","doc":""},"Lean.instInhabitedStructureDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L56-L56","name":"Lean.instInhabitedStructureDescr","docLink":"./Lean/Structure.html#Lean.instInhabitedStructureDescr","doc":""},"Lean.instInhabitedSourceInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2453-L2453","name":"Lean.instInhabitedSourceInfo","docLink":"./Init/Prelude.html#Lean.instInhabitedSourceInfo","doc":""},"Lean.instInhabitedScopedEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L102-L102","name":"Lean.instInhabitedScopedEnvExtension","docLink":"./Lean/ScopedEnvExtension.html#Lean.instInhabitedScopedEnvExtension","doc":""},"Lean.instInhabitedReducibilityStatus":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ReducibilityAttrs.lean#L15-L15","name":"Lean.instInhabitedReducibilityStatus","docLink":"./Lean/ReducibilityAttrs.html#Lean.instInhabitedReducibilityStatus","doc":""},"Lean.instInhabitedReducibilityHints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L37-L37","name":"Lean.instInhabitedReducibilityHints","docLink":"./Lean/Declaration.html#Lean.instInhabitedReducibilityHints","doc":""},"Lean.instInhabitedRecursorVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L325-L325","name":"Lean.instInhabitedRecursorVal","docLink":"./Lean/Declaration.html#Lean.instInhabitedRecursorVal","doc":""},"Lean.instInhabitedRecursorRule":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L299-L299","name":"Lean.instInhabitedRecursorRule","docLink":"./Lean/Declaration.html#Lean.instInhabitedRecursorRule","doc":""},"Lean.instInhabitedRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L17-L17","name":"Lean.instInhabitedRat","docLink":"./Lean/Data/Rat.html#Lean.instInhabitedRat","doc":""},"Lean.instInhabitedQuotVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L358-L358","name":"Lean.instInhabitedQuotVal","docLink":"./Lean/Declaration.html#Lean.instInhabitedQuotVal","doc":""},"Lean.instInhabitedQuotKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L354-L354","name":"Lean.instInhabitedQuotKind","docLink":"./Lean/Declaration.html#Lean.instInhabitedQuotKind","doc":""},"Lean.instInhabitedProjectionFunctionInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ProjFns.lean#L23-L23","name":"Lean.instInhabitedProjectionFunctionInfo","docLink":"./Lean/ProjFns.html#Lean.instInhabitedProjectionFunctionInfo","doc":""},"Lean.instInhabitedPrefixTreeNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L15-L16","name":"Lean.instInhabitedPrefixTreeNode","docLink":"./Lean/Data/PrefixTree.html#Lean.instInhabitedPrefixTreeNode","doc":""},"Lean.instInhabitedPrefixTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L81-L82","name":"Lean.instInhabitedPrefixTree","docLink":"./Lean/Data/PrefixTree.html#Lean.instInhabitedPrefixTree","doc":""},"Lean.instInhabitedPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L14-L14","name":"Lean.instInhabitedPosition","docLink":"./Lean/Data/Position.html#Lean.instInhabitedPosition","doc":""},"Lean.instInhabitedPersistentEnvExtensionState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L375-L376","name":"Lean.instInhabitedPersistentEnvExtensionState","docLink":"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtensionState","doc":""},"Lean.instInhabitedPersistentEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L378-L386","name":"Lean.instInhabitedPersistentEnvExtension","docLink":"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtension","doc":""},"Lean.instInhabitedParserDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2693-L2694","name":"Lean.instInhabitedParserDescr","docLink":"./Init/Prelude.html#Lean.instInhabitedParserDescr","doc":""},"Lean.instInhabitedParametricAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L188-L188","name":"Lean.instInhabitedParametricAttribute","docLink":"./Lean/Attributes.html#Lean.instInhabitedParametricAttribute","doc":""},"Lean.instInhabitedPPFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/PPExt.lean#L45-L45","name":"Lean.instInhabitedPPFns","docLink":"./Lean/Util/PPExt.html#Lean.instInhabitedPPFns","doc":""},"Lean.instInhabitedOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L14-L15","name":"Lean.instInhabitedOptions","docLink":"./Lean/Data/Options.html#Lean.instInhabitedOptions","doc":""},"Lean.instInhabitedOptionDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L27-L27","name":"Lean.instInhabitedOptionDecls","docLink":"./Lean/Data/Options.html#Lean.instInhabitedOptionDecls","doc":""},"Lean.instInhabitedOptionDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L23-L23","name":"Lean.instInhabitedOptionDecl","docLink":"./Lean/Data/Options.html#Lean.instInhabitedOptionDecl","doc":""},"Lean.instInhabitedOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L123-L123","name":"Lean.instInhabitedOption","docLink":"./Lean/Data/Options.html#Lean.instInhabitedOption","doc":""},"Lean.instInhabitedOpaqueVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L132-L132","name":"Lean.instInhabitedOpaqueVal","docLink":"./Lean/Declaration.html#Lean.instInhabitedOpaqueVal","doc":""},"Lean.instInhabitedOccurrences":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Occurrences.lean#L12-L12","name":"Lean.instInhabitedOccurrences","docLink":"./Lean/Data/Occurrences.html#Lean.instInhabitedOccurrences","doc":""},"Lean.instInhabitedNameTrie":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L47-L48","name":"Lean.instInhabitedNameTrie","docLink":"./Lean/Data/NameTrie.html#Lean.instInhabitedNameTrie","doc":""},"Lean.instInhabitedNameGenerator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L225-L225","name":"Lean.instInhabitedNameGenerator","docLink":"./Init/Meta.html#Lean.instInhabitedNameGenerator","doc":""},"Lean.instInhabitedName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2377-L2378","name":"Lean.instInhabitedName","docLink":"./Init/Prelude.html#Lean.instInhabitedName","doc":""},"Lean.instInhabitedModuleIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L24-L24","name":"Lean.instInhabitedModuleIdx","docLink":"./Lean/Environment.html#Lean.instInhabitedModuleIdx","doc":""},"Lean.instInhabitedModuleData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L58-L58","name":"Lean.instInhabitedModuleData","docLink":"./Lean/Environment.html#Lean.instInhabitedModuleData","doc":""},"Lean.instInhabitedMetavarKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L247-L247","name":"Lean.instInhabitedMetavarKind","docLink":"./Lean/MetavarContext.html#Lean.instInhabitedMetavarKind","doc":""},"Lean.instInhabitedMetavarDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L273-L273","name":"Lean.instInhabitedMetavarDecl","docLink":"./Lean/MetavarContext.html#Lean.instInhabitedMetavarDecl","doc":""},"Lean.instInhabitedMessageSeverity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L25-L25","name":"Lean.instInhabitedMessageSeverity","docLink":"./Lean/Message.html#Lean.instInhabitedMessageSeverity","doc":""},"Lean.instInhabitedMessageLog":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L216-L216","name":"Lean.instInhabitedMessageLog","docLink":"./Lean/Message.html#Lean.instInhabitedMessageLog","doc":""},"Lean.instInhabitedMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L58-L58","name":"Lean.instInhabitedMessageData","docLink":"./Lean/Message.html#Lean.instInhabitedMessageData","doc":""},"Lean.instInhabitedMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L195-L195","name":"Lean.instInhabitedMessage","docLink":"./Lean/Message.html#Lean.instInhabitedMessage","doc":""},"Lean.instInhabitedMacroScopesView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2822-L2823","name":"Lean.instInhabitedMacroScopesView","docLink":"./Init/Prelude.html#Lean.instInhabitedMacroScopesView","doc":""},"Lean.instInhabitedMVarIdMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L290-L291","name":"Lean.instInhabitedMVarIdMap","docLink":"./Lean/Expr.html#Lean.instInhabitedMVarIdMap","doc":""},"Lean.instInhabitedMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L274-L274","name":"Lean.instInhabitedMVarId","docLink":"./Lean/Expr.html#Lean.instInhabitedMVarId","doc":""},"Lean.instInhabitedLocalInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L230-L230","name":"Lean.instInhabitedLocalInstance","docLink":"./Lean/MetavarContext.html#Lean.instInhabitedLocalInstance","doc":""},"Lean.instInhabitedLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L23-L23","name":"Lean.instInhabitedLocalDecl","docLink":"./Lean/LocalContext.html#Lean.instInhabitedLocalDecl","doc":""},"Lean.instInhabitedLocalContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L117-L117","name":"Lean.instInhabitedLocalContext","docLink":"./Lean/LocalContext.html#Lean.instInhabitedLocalContext","doc":""},"Lean.instInhabitedLiteral":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L17-L17","name":"Lean.instInhabitedLiteral","docLink":"./Lean/Expr.html#Lean.instInhabitedLiteral","doc":""},"Lean.instInhabitedLevelMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L67-L67","name":"Lean.instInhabitedLevelMVarId","docLink":"./Lean/Level.html#Lean.instInhabitedLevelMVarId","doc":""},"Lean.instInhabitedLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L107-L107","name":"Lean.instInhabitedLevel","docLink":"./Lean/Level.html#Lean.instInhabitedLevel","doc":""},"Lean.instInhabitedLazyInitExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LazyInitExtension.lean#L14-L18","name":"Lean.instInhabitedLazyInitExtension","docLink":"./Lean/LazyInitExtension.html#Lean.instInhabitedLazyInitExtension","doc":""},"Lean.instInhabitedLOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LOption.lean#L14-L14","name":"Lean.instInhabitedLOption","docLink":"./Lean/Data/LOption.html#Lean.instInhabitedLOption","doc":""},"Lean.instInhabitedLMVarIdMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L86-L87","name":"Lean.instInhabitedLMVarIdMap","docLink":"./Lean/Level.html#Lean.instInhabitedLMVarIdMap","doc":""},"Lean.instInhabitedLBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LBool.lean#L13-L13","name":"Lean.instInhabitedLBool","docLink":"./Lean/Data/LBool.html#Lean.instInhabitedLBool","doc":""},"Lean.instInhabitedKVMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L66-L66","name":"Lean.instInhabitedKVMap","docLink":"./Lean/Data/KVMap.html#Lean.instInhabitedKVMap","doc":""},"Lean.instInhabitedJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L142-L142","name":"Lean.instInhabitedJson","docLink":"./Lean/Data/Json/Basic.html#Lean.instInhabitedJson","doc":""},"Lean.instInhabitedInternalExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/InternalExceptionId.lean#L11-L11","name":"Lean.instInhabitedInternalExceptionId","docLink":"./Lean/InternalExceptionId.html#Lean.instInhabitedInternalExceptionId","doc":""},"Lean.instInhabitedInductiveVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L240-L240","name":"Lean.instInhabitedInductiveVal","docLink":"./Lean/Declaration.html#Lean.instInhabitedInductiveVal","doc":""},"Lean.instInhabitedInductiveType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L151-L151","name":"Lean.instInhabitedInductiveType","docLink":"./Lean/Declaration.html#Lean.instInhabitedInductiveType","doc":""},"Lean.instInhabitedHeadIndex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/HeadIndex.lean#L32-L32","name":"Lean.instInhabitedHeadIndex","docLink":"./Lean/HeadIndex.html#Lean.instInhabitedHeadIndex","doc":""},"Lean.instInhabitedFileMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L36-L36","name":"Lean.instInhabitedFileMap","docLink":"./Lean/Data/Position.html#Lean.instInhabitedFileMap","doc":""},"Lean.instInhabitedFVarIdMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L268-L269","name":"Lean.instInhabitedFVarIdMap","docLink":"./Lean/Expr.html#Lean.instInhabitedFVarIdMap","doc":""},"Lean.instInhabitedFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L241-L241","name":"Lean.instInhabitedFVarId","docLink":"./Lean/Expr.html#Lean.instInhabitedFVarId","doc":""},"Lean.instInhabitedExternAttrData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L37-L37","name":"Lean.instInhabitedExternAttrData","docLink":"./Lean/Compiler/ExternAttr.html#Lean.instInhabitedExternAttrData","doc":""},"Lean.instInhabitedExprStructEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1192-L1192","name":"Lean.instInhabitedExprStructEq","docLink":"./Lean/Expr.html#Lean.instInhabitedExprStructEq","doc":""},"Lean.instInhabitedExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L473-L473","name":"Lean.instInhabitedExpr","docLink":"./Lean/Expr.html#Lean.instInhabitedExpr","doc":""},"Lean.instInhabitedException":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L36-L36","name":"Lean.instInhabitedException","docLink":"./Lean/Exception.html#Lean.instInhabitedException","doc":""},"Lean.instInhabitedEnvironmentHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L84-L84","name":"Lean.instInhabitedEnvironmentHeader","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvironmentHeader","doc":""},"Lean.instInhabitedEnvironment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L121-L121","name":"Lean.instInhabitedEnvironment","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvironment","doc":""},"Lean.instInhabitedEnvExtensionState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L19-L19","name":"Lean.instInhabitedEnvExtensionState","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvExtensionState","doc":""},"Lean.instInhabitedEnvExtensionInterface":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L209-L219","name":"Lean.instInhabitedEnvExtensionInterface","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvExtensionInterface","doc":""},"Lean.instInhabitedEnumAttributes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L251-L251","name":"Lean.instInhabitedEnumAttributes","docLink":"./Lean/Attributes.html#Lean.instInhabitedEnumAttributes","doc":""},"Lean.instInhabitedDefinitionVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L106-L106","name":"Lean.instInhabitedDefinitionVal","docLink":"./Lean/Declaration.html#Lean.instInhabitedDefinitionVal","doc":""},"Lean.instInhabitedDefinitionSafety":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L92-L92","name":"Lean.instInhabitedDefinitionSafety","docLink":"./Lean/Declaration.html#Lean.instInhabitedDefinitionSafety","doc":""},"Lean.instInhabitedDeclarationRanges":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L32-L32","name":"Lean.instInhabitedDeclarationRanges","docLink":"./Lean/DeclarationRange.html#Lean.instInhabitedDeclarationRanges","doc":""},"Lean.instInhabitedDeclarationRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L23-L23","name":"Lean.instInhabitedDeclarationRange","docLink":"./Lean/DeclarationRange.html#Lean.instInhabitedDeclarationRange","doc":""},"Lean.instInhabitedDeclaration":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L162-L162","name":"Lean.instInhabitedDeclaration","docLink":"./Lean/Declaration.html#Lean.instInhabitedDeclaration","doc":""},"Lean.instInhabitedData_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L146-L147","name":"Lean.instInhabitedData_1","docLink":"./Lean/Expr.html#Lean.instInhabitedData_1","doc":""},"Lean.instInhabitedDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L18-L18","name":"Lean.instInhabitedDataValue","docLink":"./Lean/Data/KVMap.html#Lean.instInhabitedDataValue","doc":""},"Lean.instInhabitedData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L27-L28","name":"Lean.instInhabitedData","docLink":"./Lean/Level.html#Lean.instInhabitedData","doc":""},"Lean.instInhabitedConstructorVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L275-L275","name":"Lean.instInhabitedConstructorVal","docLink":"./Lean/Declaration.html#Lean.instInhabitedConstructorVal","doc":""},"Lean.instInhabitedConstructor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L145-L145","name":"Lean.instInhabitedConstructor","docLink":"./Lean/Declaration.html#Lean.instInhabitedConstructor","doc":""},"Lean.instInhabitedConstantVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L73-L73","name":"Lean.instInhabitedConstantVal","docLink":"./Lean/Declaration.html#Lean.instInhabitedConstantVal","doc":""},"Lean.instInhabitedConstantInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L377-L377","name":"Lean.instInhabitedConstantInfo","docLink":"./Lean/Declaration.html#Lean.instInhabitedConstantInfo","doc":""},"Lean.instInhabitedClosedTermCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ClosedTermCache.lean#L13-L13","name":"Lean.instInhabitedClosedTermCache","docLink":"./Lean/Compiler/ClosedTermCache.html#Lean.instInhabitedClosedTermCache","doc":""},"Lean.instInhabitedClassState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Class.lean#L34-L34","name":"Lean.instInhabitedClassState","docLink":"./Lean/Class.html#Lean.instInhabitedClassState","doc":""},"Lean.instInhabitedBinderInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L87-L87","name":"Lean.instInhabitedBinderInfo","docLink":"./Lean/Expr.html#Lean.instInhabitedBinderInfo","doc":""},"Lean.instInhabitedAxiomVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L77-L77","name":"Lean.instInhabitedAxiomVal","docLink":"./Lean/Declaration.html#Lean.instInhabitedAxiomVal","doc":""},"Lean.instInhabitedAttributeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L42-L42","name":"Lean.instInhabitedAttributeKind","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeKind","doc":""},"Lean.instInhabitedAttributeImplCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L27-L27","name":"Lean.instInhabitedAttributeImplCore","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeImplCore","doc":""},"Lean.instInhabitedAttributeImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L54-L54","name":"Lean.instInhabitedAttributeImpl","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeImpl","doc":""},"Lean.instInhabitedAttributeExtensionState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L332-L332","name":"Lean.instInhabitedAttributeExtensionState","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeExtensionState","doc":""},"Lean.instInhabitedAttributeApplicationTime":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L14-L14","name":"Lean.instInhabitedAttributeApplicationTime","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeApplicationTime","doc":""},"Lean.instHashableName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2380-L2381","name":"Lean.instHashableName","docLink":"./Init/Prelude.html#Lean.instHashableName","doc":""},"Lean.instHashableMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L274-L274","name":"Lean.instHashableMVarId","docLink":"./Lean/Expr.html#Lean.instHashableMVarId","doc":""},"Lean.instHashableLiteral":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L23-L23","name":"Lean.instHashableLiteral","docLink":"./Lean/Expr.html#Lean.instHashableLiteral","doc":""},"Lean.instHashableLevelMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L67-L67","name":"Lean.instHashableLevelMVarId","docLink":"./Lean/Level.html#Lean.instHashableLevelMVarId","doc":""},"Lean.instHashableFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L241-L241","name":"Lean.instHashableFVarId","docLink":"./Lean/Expr.html#Lean.instHashableFVarId","doc":""},"Lean.instHashableBinderInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L106-L106","name":"Lean.instHashableBinderInfo","docLink":"./Lean/Expr.html#Lean.instHashableBinderInfo","doc":""},"Lean.instFromJsonUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L102-L107","name":"Lean.instFromJsonUSize","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonUSize","doc":""},"Lean.instFromJsonUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L112-L117","name":"Lean.instFromJsonUInt64","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonUInt64","doc":""},"Lean.instFromJsonString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L37-L37","name":"Lean.instFromJsonString","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonString","doc":""},"Lean.instFromJsonProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L67-L73","name":"Lean.instFromJsonProd","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonProd","doc":""},"Lean.instFromJsonOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L57-L60","name":"Lean.instFromJsonOption","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonOption","doc":""},"Lean.instFromJsonNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L33-L33","name":"Lean.instFromJsonNat","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonNat","doc":""},"Lean.instFromJsonName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L78-L86","name":"Lean.instFromJsonName","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonName","doc":""},"Lean.instFromJsonList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L51-L52","name":"Lean.instFromJsonList","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonList","doc":""},"Lean.instFromJsonLeanPaths":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Paths.lean#L20-L20","name":"Lean.instFromJsonLeanPaths","docLink":"./Lean/Util/Paths.html#Lean.instFromJsonLeanPaths","doc":""},"Lean.instFromJsonJsonNumber":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L27-L27","name":"Lean.instFromJsonJsonNumber","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonJsonNumber","doc":""},"Lean.instFromJsonJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L24-L24","name":"Lean.instFromJsonJson","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonJson","doc":""},"Lean.instFromJsonInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L35-L35","name":"Lean.instFromJsonInt","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonInt","doc":""},"Lean.instFromJsonFilePath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L40-L40","name":"Lean.instFromJsonFilePath","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonFilePath","doc":""},"Lean.instFromJsonBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L31-L31","name":"Lean.instFromJsonBool","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonBool","doc":""},"Lean.instFromJsonArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L43-L46","name":"Lean.instFromJsonArray","docLink":"./Lean/Data/Json/FromToJson.html#Lean.instFromJsonArray","doc":""},"Lean.instForInOptionsProdNameDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L17-L17","name":"Lean.instForInOptionsProdNameDataValue","docLink":"./Lean/Data/Options.html#Lean.instForInOptionsProdNameDataValue","doc":""},"Lean.instForInMVarIdSetMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L282-L282","name":"Lean.instForInMVarIdSetMVarId","docLink":"./Lean/Expr.html#Lean.instForInMVarIdSetMVarId","doc":""},"Lean.instForInMVarIdMapProdMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L288-L288","name":"Lean.instForInMVarIdMapProdMVarId","docLink":"./Lean/Expr.html#Lean.instForInMVarIdMapProdMVarId","doc":""},"Lean.instForInLoopUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L303-L304","name":"Lean.instForInLoopUnit","docLink":"./Init/NotationExtra.html#Lean.instForInLoopUnit","doc":""},"Lean.instForInLMVarIdSetLMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L78-L78","name":"Lean.instForInLMVarIdSetLMVarId","docLink":"./Lean/Level.html#Lean.instForInLMVarIdSetLMVarId","doc":""},"Lean.instForInLMVarIdMapProdLMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L84-L84","name":"Lean.instForInLMVarIdMapProdLMVarId","docLink":"./Lean/Level.html#Lean.instForInLMVarIdMapProdLMVarId","doc":""},"Lean.instForInFVarIdSetFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L252-L252","name":"Lean.instForInFVarIdSetFVarId","docLink":"./Lean/Expr.html#Lean.instForInFVarIdSetFVarId","doc":""},"Lean.instEval_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L678-L679","name":"Lean.instEval_1","docLink":"./Init/System/IO.html#Lean.instEval_1","doc":""},"Lean.instEvalUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L681-L682","name":"Lean.instEvalUnit","docLink":"./Init/System/IO.html#Lean.instEvalUnit","doc":""},"Lean.instEvalIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L684-L687","name":"Lean.instEvalIO","docLink":"./Init/System/IO.html#Lean.instEvalIO","doc":""},"Lean.instEval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L675-L676","name":"Lean.instEval","docLink":"./Init/System/IO.html#Lean.instEval","doc":""},"Lean.instEmptyCollectionPrefixTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L84-L85","name":"Lean.instEmptyCollectionPrefixTree","docLink":"./Lean/Data/PrefixTree.html#Lean.instEmptyCollectionPrefixTree","doc":""},"Lean.instEmptyCollectionNameTrie":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L50-L51","name":"Lean.instEmptyCollectionNameTrie","docLink":"./Lean/Data/NameTrie.html#Lean.instEmptyCollectionNameTrie","doc":""},"Lean.instEmptyCollectionMVarIdMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L286-L286","name":"Lean.instEmptyCollectionMVarIdMap","docLink":"./Lean/Expr.html#Lean.instEmptyCollectionMVarIdMap","doc":""},"Lean.instEmptyCollectionLMVarIdMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L82-L82","name":"Lean.instEmptyCollectionLMVarIdMap","docLink":"./Lean/Level.html#Lean.instEmptyCollectionLMVarIdMap","doc":""},"Lean.instEmptyCollectionFVarIdMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L266-L266","name":"Lean.instEmptyCollectionFVarIdMap","docLink":"./Lean/Expr.html#Lean.instEmptyCollectionFVarIdMap","doc":""},"Lean.instDecidableLtLiteralInstLTLiteral":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L37-L38","name":"Lean.instDecidableLtLiteralInstLTLiteral","docLink":"./Lean/Expr.html#Lean.instDecidableLtLiteralInstLTLiteral","doc":""},"Lean.instDecidableEqRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L17-L17","name":"Lean.instDecidableEqRat","docLink":"./Lean/Data/Rat.html#Lean.instDecidableEqRat","doc":""},"Lean.instDecidableEqPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L14-L14","name":"Lean.instDecidableEqPosition","docLink":"./Lean/Data/Position.html#Lean.instDecidableEqPosition","doc":""},"Lean.instDecidableEqJsonNumber":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L14-L14","name":"Lean.instDecidableEqJsonNumber","docLink":"./Lean/Data/Json/Basic.html#Lean.instDecidableEqJsonNumber","doc":""},"Lean.instDecidableEqDeclarationRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L23-L23","name":"Lean.instDecidableEqDeclarationRange","docLink":"./Lean/DeclarationRange.html#Lean.instDecidableEqDeclarationRange","doc":""},"Lean.instCoeSyntaxTSyntaxConsSyntaxNodeKindStrAnonymousNil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L312-L313","name":"Lean.instCoeSyntaxTSyntaxConsSyntaxNodeKindStrAnonymousNil","docLink":"./Init/Notation.html#Lean.instCoeSyntaxTSyntaxConsSyntaxNodeKindStrAnonymousNil","doc":""},"Lean.instCoeSyntaxNodeKindSyntaxNodeKinds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L96-L97","name":"Lean.instCoeSyntaxNodeKindSyntaxNodeKinds","docLink":"./Init/Notation.html#Lean.instCoeSyntaxNodeKindSyntaxNodeKinds","doc":""},"Lean.instCoeSyntaxDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L54-L54","name":"Lean.instCoeSyntaxDataValue","docLink":"./Lean/Data/KVMap.html#Lean.instCoeSyntaxDataValue","doc":""},"Lean.instCoeStringName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L12-L12","name":"Lean.instCoeStringName","docLink":"./Lean/Data/Name.html#Lean.instCoeStringName","doc":""},"Lean.instCoeStringDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L49-L49","name":"Lean.instCoeStringDataValue","docLink":"./Lean/Data/KVMap.html#Lean.instCoeStringDataValue","doc":""},"Lean.instCoeNatDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L52-L52","name":"Lean.instCoeNatDataValue","docLink":"./Lean/Data/KVMap.html#Lean.instCoeNatDataValue","doc":""},"Lean.instCoeNameDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L51-L51","name":"Lean.instCoeNameDataValue","docLink":"./Lean/Data/KVMap.html#Lean.instCoeNameDataValue","doc":""},"Lean.instCoeIntDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L53-L53","name":"Lean.instCoeIntDataValue","docLink":"./Lean/Data/KVMap.html#Lean.instCoeIntDataValue","doc":""},"Lean.instCoeHeadTSyntaxSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L93-L94","name":"Lean.instCoeHeadTSyntaxSyntax","docLink":"./Init/Notation.html#Lean.instCoeHeadTSyntaxSyntax","doc":""},"Lean.instCoeExprExprStructEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1194-L1194","name":"Lean.instCoeExprExprStructEq","docLink":"./Lean/Expr.html#Lean.instCoeExprExprStructEq","doc":""},"Lean.instCoeBoolDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L50-L50","name":"Lean.instCoeBoolDataValue","docLink":"./Lean/Data/KVMap.html#Lean.instCoeBoolDataValue","doc":""},"Lean.instBEqRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L17-L17","name":"Lean.instBEqRat","docLink":"./Lean/Data/Rat.html#Lean.instBEqRat","doc":""},"Lean.instBEqOccurrences":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Occurrences.lean#L12-L12","name":"Lean.instBEqOccurrences","docLink":"./Lean/Data/Occurrences.html#Lean.instBEqOccurrences","doc":""},"Lean.instBEqMessageSeverity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L25-L25","name":"Lean.instBEqMessageSeverity","docLink":"./Lean/Message.html#Lean.instBEqMessageSeverity","doc":""},"Lean.instBEqMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L274-L274","name":"Lean.instBEqMVarId","docLink":"./Lean/Expr.html#Lean.instBEqMVarId","doc":""},"Lean.instBEqLocalInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L234-L235","name":"Lean.instBEqLocalInstance","docLink":"./Lean/MetavarContext.html#Lean.instBEqLocalInstance","doc":""},"Lean.instBEqLiteral":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L17-L17","name":"Lean.instBEqLiteral","docLink":"./Lean/Expr.html#Lean.instBEqLiteral","doc":""},"Lean.instBEqLevelMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L67-L67","name":"Lean.instBEqLevelMVarId","docLink":"./Lean/Level.html#Lean.instBEqLevelMVarId","doc":""},"Lean.instBEqLOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LOption.lean#L14-L14","name":"Lean.instBEqLOption","docLink":"./Lean/Data/LOption.html#Lean.instBEqLOption","doc":""},"Lean.instBEqLBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LBool.lean#L13-L13","name":"Lean.instBEqLBool","docLink":"./Lean/Data/LBool.html#Lean.instBEqLBool","doc":""},"Lean.instBEqInternalExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/InternalExceptionId.lean#L11-L11","name":"Lean.instBEqInternalExceptionId","docLink":"./Lean/InternalExceptionId.html#Lean.instBEqInternalExceptionId","doc":""},"Lean.instBEqHeadIndex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/HeadIndex.lean#L32-L32","name":"Lean.instBEqHeadIndex","docLink":"./Lean/HeadIndex.html#Lean.instBEqHeadIndex","doc":""},"Lean.instBEqFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L241-L241","name":"Lean.instBEqFVarId","docLink":"./Lean/Expr.html#Lean.instBEqFVarId","doc":""},"Lean.instBEqDefinitionSafety":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L92-L92","name":"Lean.instBEqDefinitionSafety","docLink":"./Lean/Declaration.html#Lean.instBEqDefinitionSafety","doc":""},"Lean.instBEqData_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L152-L153","name":"Lean.instBEqData_1","docLink":"./Lean/Expr.html#Lean.instBEqData_1","doc":""},"Lean.instBEqDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L18-L18","name":"Lean.instBEqDataValue","docLink":"./Lean/Data/KVMap.html#Lean.instBEqDataValue","doc":""},"Lean.instBEqData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L33-L34","name":"Lean.instBEqData","docLink":"./Lean/Level.html#Lean.instBEqData","doc":""},"Lean.instBEqBinderInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L87-L87","name":"Lean.instBEqBinderInfo","docLink":"./Lean/Expr.html#Lean.instBEqBinderInfo","doc":""},"Lean.instBEqAttributeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L42-L42","name":"Lean.instBEqAttributeKind","docLink":"./Lean/Attributes.html#Lean.instBEqAttributeKind","doc":""},"Lean.instBEqAttributeApplicationTime":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L14-L14","name":"Lean.instBEqAttributeApplicationTime","docLink":"./Lean/Attributes.html#Lean.instBEqAttributeApplicationTime","doc":""},"Lean.instAddMessageContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L266-L267","name":"Lean.instAddMessageContext","docLink":"./Lean/Message.html#Lean.instAddMessageContext","doc":""},"Lean.instAddErrorMessageContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L45-L48","name":"Lean.instAddErrorMessageContext","docLink":"./Lean/Exception.html#Lean.instAddErrorMessageContext","doc":""},"Lean.initializing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ImportingFlag.lean#L33-L34","name":"Lean.initializing","docLink":"./Lean/ImportingFlag.html#Lean.initializing","doc":"We say Lean is \"initializing\" when it is executing `builtin_initialize` declarations or importing modules.\nRecall that Lean executes `initialize` declarations while importing modules.\n"},"Lean.initSrcSearchPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Paths.lean#L22-L29","name":"Lean.initSrcSearchPath","docLink":"./Lean/Util/Paths.html#Lean.initSrcSearchPath","doc":""},"Lean.initSearchPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L84-L86","name":"Lean.initSearchPath","docLink":"./Lean/Util/Path.html#Lean.initSearchPath","doc":"Initialize Lean's search path given Lean's system root and an initial search path.\nThe system root can be obtained via `getBuildDir` (for internal use) or\n`findSysroot` (for external users). "},"Lean.indentExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L258-L259","name":"Lean.indentExpr","docLink":"./Lean/Message.html#Lean.indentExpr","doc":""},"Lean.indentD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L255-L256","name":"Lean.indentD","docLink":"./Lean/Message.html#Lean.indentD","doc":""},"Lean.includeStr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L320-L323","name":"Lean.includeStr","docLink":"./Init/Notation.html#Lean.includeStr","doc":"When `parent_dir` contains the current Lean file, `include_str \"path\" / \"to\" / \"file\"` becomes\na string literal with the contents of the file at `\"parent_dir\" / \"path\" / \"to\" / \"file\"`. If this\nfile cannot be read, elaboration fails. "},"Lean.inaccessible?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1672-L1673","name":"Lean.inaccessible?","docLink":"./Lean/Expr.html#Lean.inaccessible?","doc":"Return `some e'` if `e = mkInaccessible e'`. "},"Lean.importModules.importMods":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L696-L713","name":"Lean.importModules.importMods","docLink":"./Lean/Environment.html#Lean.importModules.importMods","doc":""},"Lean.importModules":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L657-L713","name":"Lean.importModules","docLink":"./Lean/Environment.html#Lean.importModules","doc":""},"Lean.identKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2519-L2519","name":"Lean.identKind","docLink":"./Init/Prelude.html#Lean.identKind","doc":""},"Lean.idEndEscape":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L94-L94","name":"Lean.idEndEscape","docLink":"./Init/Meta.html#Lean.idEndEscape","doc":""},"Lean.idBeginEscape":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L93-L93","name":"Lean.idBeginEscape","docLink":"./Init/Meta.html#Lean.idBeginEscape","doc":""},"Lean.hasOutParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Class.lean#L73-L76","name":"Lean.hasOutParams","docLink":"./Lean/Class.html#Lean.hasOutParams","doc":"Return `true` if the given `declName` is a type class with output parameters. "},"Lean.hasNeverExtractAttribute.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/NeverExtractAttr.lean#L16-L16","name":"Lean.hasNeverExtractAttribute.visit","docLink":"./Lean/Compiler/NeverExtractAttr.html#Lean.hasNeverExtractAttribute.visit","doc":""},"Lean.hasNeverExtractAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/NeverExtractAttr.lean#L15-L17","name":"Lean.hasNeverExtractAttribute","docLink":"./Lean/Compiler/NeverExtractAttr.html#Lean.hasNeverExtractAttribute","doc":""},"Lean.hasMatchPatternAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchPatternAttr.lean#L14-L15","name":"Lean.hasMatchPatternAttribute","docLink":"./Lean/Meta/Match/MatchPatternAttr.html#Lean.hasMatchPatternAttribute","doc":""},"Lean.hasInitAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L117-L118","name":"Lean.hasInitAttr","docLink":"./Lean/Compiler/InitAttr.html#Lean.hasInitAttr","doc":""},"Lean.hasConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L79-L80","name":"Lean.hasConst","docLink":"./Lean/MonadEnv.html#Lean.hasConst","doc":""},"Lean.hasAssignedMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L391-L403","name":"Lean.hasAssignedMVar","docLink":"./Lean/MetavarContext.html#Lean.hasAssignedMVar","doc":"Return `true` iff expression contains assigned (level/expr) metavariables or delayed assigned mvars "},"Lean.hasAssignedLevelMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L382-L388","name":"Lean.hasAssignedLevelMVar","docLink":"./Lean/MetavarContext.html#Lean.hasAssignedLevelMVar","doc":"Return true iff the given level contains an assigned metavariable. "},"Lean.hasAssignableMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L415-L427","name":"Lean.hasAssignableMVar","docLink":"./Lean/MetavarContext.html#Lean.hasAssignableMVar","doc":"Return `true` iff expression contains a metavariable that can be assigned. "},"Lean.hasAssignableLevelMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L406-L412","name":"Lean.hasAssignableLevelMVar","docLink":"./Lean/MetavarContext.html#Lean.hasAssignableLevelMVar","doc":"Return true iff the given level contains a metavariable that can be assigned. "},"Lean.groupKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2518-L2518","name":"Lean.groupKind","docLink":"./Init/Prelude.html#Lean.groupKind","doc":""},"Lean.githash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L28-L28","name":"Lean.githash","docLink":"./Init/Meta.html#Lean.githash","doc":""},"Lean.getTraces":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L78-L80","name":"Lean.getTraces","docLink":"./Lean/Util/Trace.html#Lean.getTraces","doc":""},"Lean.getStructureLikeNumFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L202-L208","name":"Lean.getStructureLikeNumFields","docLink":"./Lean/Structure.html#Lean.getStructureLikeNumFields","doc":"Return number of fields for a structure-like type "},"Lean.getStructureInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L65-L68","name":"Lean.getStructureInfo?","docLink":"./Lean/Structure.html#Lean.getStructureInfo?","doc":""},"Lean.getStructureFieldsFlattened":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L139-L140","name":"Lean.getStructureFieldsFlattened","docLink":"./Lean/Structure.html#Lean.getStructureFieldsFlattened","doc":"Return field names for the given structure, including \"flattened\" fields from parent\nstructures. To omit `toParent` projections, set `includeSubobjectFields := false`.\n\nFor example, given `Bar` such that\n```lean\nstructure Foo where a : Nat\nstructure Bar extends Foo where b : Nat\n```\nreturn `#[toFoo,a,b]` or `#[a,b]` with subobject fields omitted. "},"Lean.getStructureFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L79-L83","name":"Lean.getStructureFields","docLink":"./Lean/Structure.html#Lean.getStructureFields","doc":"Get direct field names for the given structure. "},"Lean.getStructureCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L70-L76","name":"Lean.getStructureCtor","docLink":"./Lean/Structure.html#Lean.getStructureCtor","doc":""},"Lean.getSanitizeNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Hygiene.lean#L72-L72","name":"Lean.getSanitizeNames","docLink":"./Lean/Hygiene.html#Lean.getSanitizeNames","doc":""},"Lean.getRevAliases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L53-L54","name":"Lean.getRevAliases","docLink":"./Lean/ResolveName.html#Lean.getRevAliases","doc":""},"Lean.getRegularInitFnNameFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L94-L95","name":"Lean.getRegularInitFnNameFor?","docLink":"./Lean/Compiler/InitAttr.html#Lean.getRegularInitFnNameFor?","doc":""},"Lean.getRefPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L44-L46","name":"Lean.getRefPosition","docLink":"./Lean/Log.html#Lean.getRefPosition","doc":"Return the line and column numbers associated with the current reference syntax (i.e., the syntax object returned by `getRef`.)\n"},"Lean.getRefPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L37-L39","name":"Lean.getRefPos","docLink":"./Lean/Log.html#Lean.getRefPos","doc":"Return the position (as `String.pos`) associated with the current reference syntax (i.e., the syntax object returned by `getRef`.)\n"},"Lean.getReducibilityStatus":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ReducibilityAttrs.lean#L39-L40","name":"Lean.getReducibilityStatus","docLink":"./Lean/ReducibilityAttrs.html#Lean.getReducibilityStatus","doc":"Return the reducibility attribute for the given declaration. "},"Lean.getRecAppSyntax?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/RecAppSyntax.lean#L22-L28","name":"Lean.getRecAppSyntax?","docLink":"./Lean/Elab/RecAppSyntax.html#Lean.getRecAppSyntax?","doc":"Retrieve (if available) the syntax object attached to a recursive application.\n"},"Lean.getProjectionFnInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ProjFns.lean#L61-L62","name":"Lean.getProjectionFnInfo?","docLink":"./Lean/ProjFns.html#Lean.getProjectionFnInfo?","doc":""},"Lean.getProjFnInfoForField?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L157-L161","name":"Lean.getProjFnInfoForField?","docLink":"./Lean/Structure.html#Lean.getProjFnInfoForField?","doc":""},"Lean.getProjFnForField?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L151-L155","name":"Lean.getProjFnForField?","docLink":"./Lean/Structure.html#Lean.getProjFnForField?","doc":""},"Lean.getPathToBaseStructureAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L175-L186","name":"Lean.getPathToBaseStructureAux","docLink":"./Lean/Structure.html#Lean.getPathToBaseStructureAux","doc":""},"Lean.getPathToBaseStructure?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L192-L193","name":"Lean.getPathToBaseStructure?","docLink":"./Lean/Structure.html#Lean.getPathToBaseStructure?","doc":"If `baseStructName` is an ancestor structure for `structName`, then return a sequence of projection functions\nto go from `structName` to `baseStructName`.\n"},"Lean.getParentStructures":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L99-L104","name":"Lean.getParentStructures","docLink":"./Lean/Structure.html#Lean.getParentStructures","doc":"Return immediate parent structures "},"Lean.getPPUniverses":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L189-L189","name":"Lean.getPPUniverses","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPUniverses","doc":""},"Lean.getPPTagAppFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L188-L188","name":"Lean.getPPTagAppFns","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPTagAppFns","doc":""},"Lean.getPPStructureProjections":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L185-L185","name":"Lean.getPPStructureProjections","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPStructureProjections","doc":""},"Lean.getPPStructureInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L186-L186","name":"Lean.getPPStructureInstances","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPStructureInstances","doc":""},"Lean.getPPStructureInstanceType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L187-L187","name":"Lean.getPPStructureInstanceType","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPStructureInstanceType","doc":""},"Lean.getPPSafeShadowing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L193-L193","name":"Lean.getPPSafeShadowing","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPSafeShadowing","doc":""},"Lean.getPPProofsWithType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L195-L195","name":"Lean.getPPProofsWithType","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPProofsWithType","doc":""},"Lean.getPPProofs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L194-L194","name":"Lean.getPPProofs","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPProofs","doc":""},"Lean.getPPPrivateNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L191-L191","name":"Lean.getPPPrivateNames","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPPrivateNames","doc":""},"Lean.getPPPiBinderTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L179-L179","name":"Lean.getPPPiBinderTypes","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPPiBinderTypes","doc":""},"Lean.getPPNotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L183-L183","name":"Lean.getPPNotation","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPNotation","doc":""},"Lean.getPPMotivesPi":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L196-L196","name":"Lean.getPPMotivesPi","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPMotivesPi","doc":""},"Lean.getPPMotivesNonConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L197-L197","name":"Lean.getPPMotivesNonConst","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPMotivesNonConst","doc":""},"Lean.getPPMotivesAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L198-L198","name":"Lean.getPPMotivesAll","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPMotivesAll","doc":""},"Lean.getPPMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L184-L184","name":"Lean.getPPMatch","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPMatch","doc":""},"Lean.getPPLetVarTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L180-L180","name":"Lean.getPPLetVarTypes","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPLetVarTypes","doc":""},"Lean.getPPInstantiateMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L192-L192","name":"Lean.getPPInstantiateMVars","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPInstantiateMVars","doc":""},"Lean.getPPInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L199-L199","name":"Lean.getPPInstances","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPInstances","doc":""},"Lean.getPPInstanceTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L200-L200","name":"Lean.getPPInstanceTypes","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPInstanceTypes","doc":""},"Lean.getPPFunBinderTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L178-L178","name":"Lean.getPPFunBinderTypes","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPFunBinderTypes","doc":""},"Lean.getPPFullNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L190-L190","name":"Lean.getPPFullNames","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPFullNames","doc":""},"Lean.getPPExplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L182-L182","name":"Lean.getPPExplicit","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPExplicit","doc":""},"Lean.getPPCoercions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L181-L181","name":"Lean.getPPCoercions","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPCoercions","doc":""},"Lean.getPPAnalyzeTypeAscriptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L116-L116","name":"Lean.getPPAnalyzeTypeAscriptions","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyzeTypeAscriptions","doc":""},"Lean.getPPAnalyzeTrustSubtypeMk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L122-L122","name":"Lean.getPPAnalyzeTrustSubtypeMk","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyzeTrustSubtypeMk","doc":""},"Lean.getPPAnalyzeTrustSubst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L117-L117","name":"Lean.getPPAnalyzeTrustSubst","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyzeTrustSubst","doc":""},"Lean.getPPAnalyzeTrustOfScientific":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L119-L119","name":"Lean.getPPAnalyzeTrustOfScientific","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyzeTrustOfScientific","doc":""},"Lean.getPPAnalyzeTrustOfNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L118-L118","name":"Lean.getPPAnalyzeTrustOfNat","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyzeTrustOfNat","doc":""},"Lean.getPPAnalyzeTrustKnownFOType2TypeHOFuns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L123-L123","name":"Lean.getPPAnalyzeTrustKnownFOType2TypeHOFuns","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyzeTrustKnownFOType2TypeHOFuns","doc":""},"Lean.getPPAnalyzeTrustId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L120-L120","name":"Lean.getPPAnalyzeTrustId","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyzeTrustId","doc":""},"Lean.getPPAnalyzeTrustCoe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L121-L121","name":"Lean.getPPAnalyzeTrustCoe","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyzeTrustCoe","doc":""},"Lean.getPPAnalyzeOmitMax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L124-L124","name":"Lean.getPPAnalyzeOmitMax","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyzeOmitMax","doc":""},"Lean.getPPAnalyzeKnowsType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L125-L125","name":"Lean.getPPAnalyzeKnowsType","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyzeKnowsType","doc":""},"Lean.getPPAnalyzeExplicitHoles":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L126-L126","name":"Lean.getPPAnalyzeExplicitHoles","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyzeExplicitHoles","doc":""},"Lean.getPPAnalyzeCheckInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L115-L115","name":"Lean.getPPAnalyzeCheckInstances","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyzeCheckInstances","doc":""},"Lean.getPPAnalyze":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L114-L114","name":"Lean.getPPAnalyze","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalyze","doc":""},"Lean.getPPAnalysisSkip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L128-L128","name":"Lean.getPPAnalysisSkip","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalysisSkip","doc":""},"Lean.getPPAnalysisNeedsType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L132-L132","name":"Lean.getPPAnalysisNeedsType","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalysisNeedsType","doc":""},"Lean.getPPAnalysisNamedArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L130-L130","name":"Lean.getPPAnalysisNamedArg","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalysisNamedArg","doc":""},"Lean.getPPAnalysisLetVarType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L131-L131","name":"Lean.getPPAnalysisLetVarType","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalysisLetVarType","doc":""},"Lean.getPPAnalysisHole":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L129-L129","name":"Lean.getPPAnalysisHole","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalysisHole","doc":""},"Lean.getPPAnalysisBlockImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L133-L133","name":"Lean.getPPAnalysisBlockImplicit","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.getPPAnalysisBlockImplicit","doc":""},"Lean.getPPAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Options.lean#L177-L177","name":"Lean.getPPAll","docLink":"./Lean/PrettyPrinter/Delaborator/Options.html#Lean.getPPAll","doc":""},"Lean.getOutParamPositions?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Class.lean#L68-L69","name":"Lean.getOutParamPositions?","docLink":"./Lean/Class.html#Lean.getOutParamPositions?","doc":"If `declName` is a class, return the position of its `outParams`. "},"Lean.getOptionDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L58-L60","name":"Lean.getOptionDescr","docLink":"./Lean/Data/Options.html#Lean.getOptionDescr","doc":""},"Lean.getOptionDefaulValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L54-L56","name":"Lean.getOptionDefaulValue","docLink":"./Lean/Data/Options.html#Lean.getOptionDefaulValue","doc":""},"Lean.getOptionDeclsArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L43-L47","name":"Lean.getOptionDeclsArray","docLink":"./Lean/Data/Options.html#Lean.getOptionDeclsArray","doc":""},"Lean.getOptionDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L40-L40","name":"Lean.getOptionDecls","docLink":"./Lean/Data/Options.html#Lean.getOptionDecls","doc":""},"Lean.getOptionDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L49-L52","name":"Lean.getOptionDecl","docLink":"./Lean/Data/Options.html#Lean.getOptionDecl","doc":""},"Lean.getNumBuiltiAttributesImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L450-L451","name":"Lean.getNumBuiltiAttributesImpl","docLink":"./Lean/Attributes.html#Lean.getNumBuiltiAttributesImpl","doc":"`getNumBuiltinAttributes` implementation "},"Lean.getNumBuiltiAttributes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L623-L623","name":"Lean.getNumBuiltiAttributes","docLink":"./Lean/Environment.html#Lean.getNumBuiltiAttributes","doc":"\"Forward declaration\" for retrieving the number of builtin attributes. "},"Lean.getNatOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L98-L100","name":"Lean.getNatOption","docLink":"./Lean/Data/Options.html#Lean.getNatOption","doc":""},"Lean.getModuleDoc?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DocString.lean#L88-L89","name":"Lean.getModuleDoc?","docLink":"./Lean/DocString.html#Lean.getModuleDoc?","doc":""},"Lean.getMaxHeight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FoldConsts.lean#L71-L78","name":"Lean.getMaxHeight","docLink":"./Lean/Util/FoldConsts.html#Lean.getMaxHeight","doc":""},"Lean.getMainModuleDoc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DocString.lean#L85-L86","name":"Lean.getMainModuleDoc","docLink":"./Lean/DocString.html#Lean.getMainModuleDoc","doc":""},"Lean.getLibDir":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L64-L69","name":"Lean.getLibDir","docLink":"./Lean/Util/Path.html#Lean.getLibDir","doc":""},"Lean.getLevelMVarAssignment?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L318-L319","name":"Lean.getLevelMVarAssignment?","docLink":"./Lean/MetavarContext.html#Lean.getLevelMVarAssignment?","doc":""},"Lean.getInitFnNameForCore?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L83-L87","name":"Lean.getInitFnNameForCore?","docLink":"./Lean/Compiler/InitAttr.html#Lean.getInitFnNameForCore?","doc":""},"Lean.getInitFnNameFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L98-L99","name":"Lean.getInitFnNameFor?","docLink":"./Lean/Compiler/InitAttr.html#Lean.getInitFnNameFor?","doc":""},"Lean.getGithash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L27-L27","name":"Lean.getGithash","docLink":"./Init/Meta.html#Lean.getGithash","doc":""},"Lean.getFieldInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L85-L89","name":"Lean.getFieldInfo?","docLink":"./Lean/Structure.html#Lean.getFieldInfo?","doc":""},"Lean.getExternNameFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L133-L139","name":"Lean.getExternNameFor","docLink":"./Lean/Compiler/ExternAttr.html#Lean.getExternNameFor","doc":""},"Lean.getExternEntryForAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L113-L118","name":"Lean.getExternEntryForAux","docLink":"./Lean/Compiler/ExternAttr.html#Lean.getExternEntryForAux","doc":""},"Lean.getExternEntryFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L120-L121","name":"Lean.getExternEntryFor","docLink":"./Lean/Compiler/ExternAttr.html#Lean.getExternEntryFor","doc":""},"Lean.getExternConstArityExport":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L154-L160","name":"Lean.getExternConstArityExport","docLink":"./Lean/Compiler/ExternAttr.html#Lean.getExternConstArityExport","doc":""},"Lean.getExternAttrData?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L76-L77","name":"Lean.getExternAttrData?","docLink":"./Lean/Compiler/ExternAttr.html#Lean.getExternAttrData?","doc":""},"Lean.getExprMVarAssignment?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L324-L325","name":"Lean.getExprMVarAssignment?","docLink":"./Lean/MetavarContext.html#Lean.getExprMVarAssignment?","doc":""},"Lean.getExportNameFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExportAttr.lean#L31-L32","name":"Lean.getExportNameFor?","docLink":"./Lean/Compiler/ExportAttr.html#Lean.getExportNameFor?","doc":""},"Lean.getDocStringText":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DocString.lean#L91-L94","name":"Lean.getDocStringText","docLink":"./Lean/DocString.html#Lean.getDocStringText","doc":""},"Lean.getDeprecatedNewName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Deprecated.lean#L30-L33","name":"Lean.getDeprecatedNewName","docLink":"./Lean/Deprecated.html#Lean.getDeprecatedNewName","doc":""},"Lean.getDelayedMVarRoot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L338-L341","name":"Lean.getDelayedMVarRoot","docLink":"./Lean/MetavarContext.html#Lean.getDelayedMVarRoot","doc":"Given a sequence of delayed assignments\n```\nmvarId₁ := mvarId₂ ...;\n...\nmvarIdₙ := mvarId_root ...  -- where `mvarId_root` is not delayed assigned\n```\nin `mctx`, `getDelayedRoot mctx mvarId₁` return `mvarId_root`.\nIf `mvarId₁` is not delayed assigned then return `mvarId₁` "},"Lean.getDelayedMVarAssignment?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L327-L328","name":"Lean.getDelayedMVarAssignment?","docLink":"./Lean/MetavarContext.html#Lean.getDelayedMVarAssignment?","doc":""},"Lean.getDefaultFnForField?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L166-L173","name":"Lean.getDefaultFnForField?","docLink":"./Lean/Structure.html#Lean.getDefaultFnForField?","doc":""},"Lean.getConstInfoRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L116-L119","name":"Lean.getConstInfoRec","docLink":"./Lean/MonadEnv.html#Lean.getConstInfoRec","doc":""},"Lean.getConstInfoInduct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L106-L109","name":"Lean.getConstInfoInduct","docLink":"./Lean/MonadEnv.html#Lean.getConstInfoInduct","doc":""},"Lean.getConstInfoDefn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L101-L104","name":"Lean.getConstInfoDefn","docLink":"./Lean/MonadEnv.html#Lean.getConstInfoDefn","doc":""},"Lean.getConstInfoCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L111-L114","name":"Lean.getConstInfoCtor","docLink":"./Lean/MonadEnv.html#Lean.getConstInfoCtor","doc":""},"Lean.getConstInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L92-L95","name":"Lean.getConstInfo","docLink":"./Lean/MonadEnv.html#Lean.getConstInfo","doc":""},"Lean.getClosedTermName?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ClosedTermCache.lean#L22-L23","name":"Lean.getClosedTermName?","docLink":"./Lean/Compiler/ClosedTermCache.html#Lean.getClosedTermName?","doc":""},"Lean.getBuiltinSearchPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L71-L72","name":"Lean.getBuiltinSearchPath","docLink":"./Lean/Util/Path.html#Lean.getBuiltinSearchPath","doc":""},"Lean.getBuiltinInitFnNameFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L90-L91","name":"Lean.getBuiltinInitFnNameFor?","docLink":"./Lean/Compiler/InitAttr.html#Lean.getBuiltinInitFnNameFor?","doc":""},"Lean.getBuiltinAttributeNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L388-L389","name":"Lean.getBuiltinAttributeNames","docLink":"./Lean/Attributes.html#Lean.getBuiltinAttributeNames","doc":"Return the name of all registered attributes. "},"Lean.getBuiltinAttributeImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L391-L395","name":"Lean.getBuiltinAttributeImpl","docLink":"./Lean/Attributes.html#Lean.getBuiltinAttributeImpl","doc":""},"Lean.getBuiltinAttributeApplicationTime":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L398-L400","name":"Lean.getBuiltinAttributeApplicationTime","docLink":"./Lean/Attributes.html#Lean.getBuiltinAttributeApplicationTime","doc":""},"Lean.getBuildDir":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L60-L61","name":"Lean.getBuildDir","docLink":"./Lean/Util/Path.html#Lean.getBuildDir","doc":""},"Lean.getBoolOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L94-L96","name":"Lean.getBoolOption","docLink":"./Lean/Data/Options.html#Lean.getBoolOption","doc":""},"Lean.getAttributeNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L405-L407","name":"Lean.getAttributeNames","docLink":"./Lean/Attributes.html#Lean.getAttributeNames","doc":""},"Lean.getAttributeImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L409-L413","name":"Lean.getAttributeImpl","docLink":"./Lean/Attributes.html#Lean.getAttributeImpl","doc":""},"Lean.getAttrParamOptPrio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L114-L119","name":"Lean.getAttrParamOptPrio","docLink":"./Lean/Attributes.html#Lean.getAttrParamOptPrio","doc":""},"Lean.getAllParentStructures.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L110-L113","name":"Lean.getAllParentStructures.visit","docLink":"./Lean/Structure.html#Lean.getAllParentStructures.visit","doc":""},"Lean.getAllParentStructures":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L107-L113","name":"Lean.getAllParentStructures","docLink":"./Lean/Structure.html#Lean.getAllParentStructures","doc":"Return all parent structures "},"Lean.getAliases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L43-L50","name":"Lean.getAliases","docLink":"./Lean/ResolveName.html#Lean.getAliases","doc":"Retrieve aliases for `a`. If `skipProtected` is `true`, then the resulting list only includes\ndeclarations that are not marked as `proctected`.\n"},"Lean.getAliasState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L36-L37","name":"Lean.getAliasState","docLink":"./Lean/ResolveName.html#Lean.getAliasState","doc":""},"Lean.formatKVMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Format.lean#L66-L67","name":"Lean.formatKVMap","docLink":"./Lean/Data/Format.html#Lean.formatKVMap","doc":""},"Lean.firstFrontendMacroScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2708-L2708","name":"Lean.firstFrontendMacroScope","docLink":"./Init/Prelude.html#Lean.firstFrontendMacroScope","doc":"First macro scope available for our frontend "},"Lean.findSysroot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L146-L153","name":"Lean.findSysroot","docLink":"./Lean/Util/Path.html#Lean.findSysroot","doc":"Find the system root of the given `lean` command\nby calling `lean --print-prefix` and returning the path it prints.\nDefaults to trying the `lean` in `PATH`.\nIf set, the `LEAN_SYSROOT` environment variable takes precedence.\nNote that the called `lean` binary might not be part of the system root,\ne.g. in the case of `elan`'s proxy binary.\nUsers internal to Lean should use `Lean.getBuildDir` instead.\n"},"Lean.findOLean.maybeThisOne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L99-L105","name":"Lean.findOLean.maybeThisOne","docLink":"./Lean/Util/Path.html#Lean.findOLean.maybeThisOne","doc":""},"Lean.findOLean":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L92-L108","name":"Lean.findOLean","docLink":"./Lean/Util/Path.html#Lean.findOLean","doc":""},"Lean.findModuleOf?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L182-L186","name":"Lean.findModuleOf?","docLink":"./Lean/MonadEnv.html#Lean.findModuleOf?","doc":""},"Lean.findLocalDeclDependsOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L680-L686","name":"Lean.findLocalDeclDependsOn","docLink":"./Lean/MetavarContext.html#Lean.findLocalDeclDependsOn","doc":"Similar to `findExprDependsOn`, but checks the expressions in the given local declaration\ndepends on a free variable `x` s.t. `pf x` is `true` or an unassigned metavariable `?m` s.t. `pm ?m` is true. "},"Lean.findField?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L116-L120","name":"Lean.findField?","docLink":"./Lean/Structure.html#Lean.findField?","doc":"`findField? env S fname`. If `fname` is defined in a parent `S'` of `S`, return `S'` "},"Lean.findExprDependsOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L672-L675","name":"Lean.findExprDependsOn","docLink":"./Lean/MetavarContext.html#Lean.findExprDependsOn","doc":"Return `true` iff `e` depends on a free variable `x` s.t. `pf x` is `true`, or an unassigned metavariable `?m` s.t. `pm ?m` is true.\nFor each metavariable `?m` (that does not satisfy `pm` occurring in `x`\n1- If `?m := t`, then we visit `t` looking for `x`\n2- If `?m` is unassigned, then we consider the worst case and check whether `x` is in the local context of `?m`.\n   This case is a \"may dependency\". That is, we may assign a term `t` to `?m` s.t. `t` contains `x`. "},"Lean.findDocString?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DocString.lean#L62-L69","name":"Lean.findDocString?","docLink":"./Lean/DocString.html#Lean.findDocString?","doc":""},"Lean.findDeclarationRangesCore?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L47-L48","name":"Lean.findDeclarationRangesCore?","docLink":"./Lean/DeclarationRange.html#Lean.findDeclarationRangesCore?","doc":""},"Lean.findDeclarationRanges?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L50-L58","name":"Lean.findDeclarationRanges?","docLink":"./Lean/DeclarationRange.html#Lean.findDeclarationRanges?","doc":""},"Lean.fieldIdxKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2525-L2525","name":"Lean.fieldIdxKind","docLink":"./Init/Prelude.html#Lean.fieldIdxKind","doc":""},"Lean.extractMacroScopes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2863-L2866","name":"Lean.extractMacroScopes","docLink":"./Init/Prelude.html#Lean.extractMacroScopes","doc":"Revert all `addMacroScope` calls. `v = extractMacroScopes n → n = v.review`.\nThis operation is useful for analyzing/transforming the original identifiers, then adding back\nthe scopes (via `MacroScopesView.review`). "},"Lean.externAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L61-L61","name":"Lean.externAttr","docLink":"./Lean/Compiler/ExternAttr.html#Lean.externAttr","doc":""},"Lean.exprDependsOn'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L700-L706","name":"Lean.exprDependsOn'","docLink":"./Lean/MetavarContext.html#Lean.exprDependsOn'","doc":"Similar to `exprDependsOn`, but `x` can be a free variable or an unassigned metavariable. "},"Lean.exprDependsOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L688-L689","name":"Lean.exprDependsOn","docLink":"./Lean/MetavarContext.html#Lean.exprDependsOn","doc":""},"Lean.exportAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExportAttr.lean#L19-L19","name":"Lean.exportAttr","docLink":"./Lean/Compiler/ExportAttr.html#Lean.exportAttr","doc":""},"Lean.explicitBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L21-L21","name":"Lean.explicitBinders","docLink":"./Init/NotationExtra.html#Lean.explicitBinders","doc":""},"Lean.expandMacros":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L481-L492","name":"Lean.expandMacros","docLink":"./Init/Meta.html#Lean.expandMacros","doc":"Expand macros in the given syntax.\n  A node with kind `k` is visited only if `p k` is true.\n\n  Note that the default value for `p` returns false for `by ...` nodes.\n  This is a \"hack\". The tactic framework abuses the macro system to implement extensible tactics.\n  For example, one can define\n  ```lean\n  syntax \"my_trivial\" : tactic -- extensible tactic\n\n  macro_rules | `(tactic| my_trivial) => `(tactic| decide)\n  macro_rules | `(tactic| my_trivial) => `(tactic| assumption)\n  ```\n  When the tactic evaluator finds the tactic `my_trivial`, it tries to evaluate the `macro_rule` expansions\n  until one \"works\", i.e., the macro expansion is evaluated without producing an exception.\n  We say this solution is a bit hackish because the term elaborator may invoke `expandMacros` with `(p := fun _ => true)`,\n  and expand the tactic macros as just macros. In the example above, `my_trivial` would be replaced with `assumption`,\n  `decide` would not be tried if `assumption` fails at tactic evaluation time.\n\n  We are considering two possible solutions for this issue:\n  1- A proper extensible tactic feature that does not rely on the macro system.\n\n  2- Typed macros that know the syntax categories they're working in. Then, we would be able to select which\n     syntatic categories are expanded by `expandMacros`.\n"},"Lean.expandExternPatternAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L89-L99","name":"Lean.expandExternPatternAux","docLink":"./Lean/Compiler/ExternAttr.html#Lean.expandExternPatternAux","doc":""},"Lean.expandExternPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L101-L102","name":"Lean.expandExternPattern","docLink":"./Lean/Compiler/ExternAttr.html#Lean.expandExternPattern","doc":""},"Lean.expandExplicitBindersAux.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L25-L35","name":"Lean.expandExplicitBindersAux.loop","docLink":"./Init/NotationExtra.html#Lean.expandExplicitBindersAux.loop","doc":""},"Lean.expandExplicitBindersAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L24-L36","name":"Lean.expandExplicitBindersAux","docLink":"./Init/NotationExtra.html#Lean.expandExplicitBindersAux","doc":""},"Lean.expandExplicitBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L48-L58","name":"Lean.expandExplicitBinders","docLink":"./Init/NotationExtra.html#Lean.expandExplicitBinders","doc":""},"Lean.expandBrackedBindersAux.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L39-L45","name":"Lean.expandBrackedBindersAux.loop","docLink":"./Init/NotationExtra.html#Lean.expandBrackedBindersAux.loop","doc":""},"Lean.expandBrackedBindersAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L38-L46","name":"Lean.expandBrackedBindersAux","docLink":"./Init/NotationExtra.html#Lean.expandBrackedBindersAux","doc":""},"Lean.expandBrackedBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L60-L62","name":"Lean.expandBrackedBinders","docLink":"./Init/NotationExtra.html#Lean.expandBrackedBinders","doc":""},"Lean.evalPrio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L986-L991","name":"Lean.evalPrio","docLink":"./Init/Meta.html#Lean.evalPrio","doc":"Evaluator for `prio` DSL "},"Lean.evalPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L970-L975","name":"Lean.evalPrec","docLink":"./Init/Meta.html#Lean.evalPrec","doc":"Evaluator for `prec` DSL "},"Lean.evalOptPrio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1001-L1003","name":"Lean.evalOptPrio","docLink":"./Init/Meta.html#Lean.evalOptPrio","doc":""},"Lean.evalConstCheck":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L179-L180","name":"Lean.evalConstCheck","docLink":"./Lean/MonadEnv.html#Lean.evalConstCheck","doc":""},"Lean.evalConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L176-L177","name":"Lean.evalConst","docLink":"./Lean/MonadEnv.html#Lean.evalConst","doc":""},"Lean.enableTracing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L72-L76","name":"Lean.enableTracing","docLink":"./Lean/Util/Trace.html#Lean.enableTracing","doc":""},"Lean.enableInitializersExecution":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ImportingFlag.lean#L23-L24","name":"Lean.enableInitializersExecution","docLink":"./Lean/ImportingFlag.html#Lean.enableInitializersExecution","doc":"By default the `initialize` code is not executed when importing .olean files.\nWhen this flag is set to `true`, the initializers are executed.\nThis method is meant to be used by the Lean frontend only.\nRemark: it is not safe to run `initialize` code when using multiple threads.\nRemark: Any loaded native Lean code must match its imported version. In particular,\n  no two versions of the same module may be loaded when this flag is set.\n  No native code may be loaded after its module has been imported.\nRemark: The Lean frontend executes this method at startup time.\n"},"Lean.doElemWhile_Do_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L316-L316","name":"Lean.doElemWhile_Do_","docLink":"./Init/NotationExtra.html#Lean.doElemWhile_Do_","doc":""},"Lean.doElemRepeat_Until_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L321-L321","name":"Lean.doElemRepeat_Until_","docLink":"./Init/NotationExtra.html#Lean.doElemRepeat_Until_","doc":""},"Lean.doElemRepeat_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L306-L306","name":"Lean.doElemRepeat_","docLink":"./Init/NotationExtra.html#Lean.doElemRepeat_","doc":""},"Lean.deprecatedAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Deprecated.lean#L11-L11","name":"Lean.deprecatedAttr","docLink":"./Lean/Deprecated.html#Lean.deprecatedAttr","doc":""},"Lean.deprecated":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L318-L318","name":"Lean.deprecated","docLink":"./Init/Notation.html#Lean.deprecated","doc":""},"Lean.dependsOnPred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L718-L719","name":"Lean.dependsOnPred","docLink":"./Lean/MetavarContext.html#Lean.dependsOnPred","doc":"Return true iff `e` depends on a free variable `x` s.t. `pf x`, or an unassigned metavariable `?m` s.t. `pm ?m` is true. "},"Lean.dependsOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L692-L693","name":"Lean.dependsOn","docLink":"./Lean/MetavarContext.html#Lean.dependsOn","doc":"Return true iff `e` depends on the free variable `fvarId` "},"Lean.defaultMaxRecDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2888-L2888","name":"Lean.defaultMaxRecDepth","docLink":"./Init/Prelude.html#Lean.defaultMaxRecDepth","doc":""},"Lean.declareBuiltin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L123-L133","name":"Lean.declareBuiltin","docLink":"./Lean/Compiler/InitAttr.html#Lean.declareBuiltin","doc":""},"Lean.declRangeExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L39-L39","name":"Lean.declRangeExt","docLink":"./Lean/DeclarationRange.html#Lean.declRangeExt","doc":""},"Lean.compileDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L164-L170","name":"Lean.compileDecls","docLink":"./Lean/MonadEnv.html#Lean.compileDecls","doc":""},"Lean.compileDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L155-L162","name":"Lean.compileDecl","docLink":"./Lean/MonadEnv.html#Lean.compileDecl","doc":""},"Lean.commitWhenSome?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadBacktrack.lean#L16-L26","name":"Lean.commitWhenSome?","docLink":"./Lean/Util/MonadBacktrack.html#Lean.commitWhenSome?","doc":""},"Lean.commitWhen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadBacktrack.lean#L28-L38","name":"Lean.commitWhen","docLink":"./Lean/Util/MonadBacktrack.html#Lean.commitWhen","doc":""},"Lean.commitIfNoEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadBacktrack.lean#L40-L46","name":"Lean.commitIfNoEx","docLink":"./Lean/Util/MonadBacktrack.html#Lean.commitIfNoEx","doc":""},"Lean.collectLevelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectLevelParams.lean#L64-L65","name":"Lean.collectLevelParams","docLink":"./Lean/Util/CollectLevelParams.html#Lean.collectLevelParams","doc":""},"Lean.collectFVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectFVars.lean#L40-L41","name":"Lean.collectFVars","docLink":"./Lean/Util/CollectFVars.html#Lean.collectFVars","doc":""},"Lean.closureMaxArgsFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Runtime.lean#L10-L10","name":"Lean.closureMaxArgsFn","docLink":"./Lean/Runtime.html#Lean.closureMaxArgsFn","doc":""},"Lean.closureMaxArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Runtime.lean#L15-L16","name":"Lean.closureMaxArgs","docLink":"./Lean/Runtime.html#Lean.closureMaxArgs","doc":""},"Lean.closedTermCacheExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ClosedTermCache.lean#L15-L15","name":"Lean.closedTermCacheExt","docLink":"./Lean/Compiler/ClosedTermCache.html#Lean.closedTermCacheExt","doc":""},"Lean.classExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Class.lean#L51-L55","name":"Lean.classExtension","docLink":"./Lean/Class.html#Lean.classExtension","doc":"Type class environment extension\n"},"Lean.choiceKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2516-L2516","name":"Lean.choiceKind","docLink":"./Init/Prelude.html#Lean.choiceKind","doc":""},"Lean.checkTraceOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L60-L62","name":"Lean.checkTraceOption","docLink":"./Lean/Util/Trace.html#Lean.checkTraceOption","doc":""},"Lean.checkDeprecated":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Deprecated.lean#L35-L39","name":"Lean.checkDeprecated","docLink":"./Lean/Deprecated.html#Lean.checkDeprecated","doc":""},"Lean.checkCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L16-L22","name":"Lean.checkCache","docLink":"./Lean/Util/MonadCache.html#Lean.checkCache","doc":"If entry `a := b` is already in the cache, then return `b`.\nOtherwise, execute `b ← f ()`, store `a := b` in the cache and return `b`. "},"Lean.charLitKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2521-L2521","name":"Lean.charLitKind","docLink":"./Init/Prelude.html#Lean.charLitKind","doc":""},"Lean.catchInternalIds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L250-L255","name":"Lean.catchInternalIds","docLink":"./Lean/CoreM.html#Lean.catchInternalIds","doc":""},"Lean.catchInternalId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L243-L248","name":"Lean.catchInternalId","docLink":"./Lean/CoreM.html#Lean.catchInternalId","doc":""},"Lean.casesOnSuffix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L10-L10","name":"Lean.casesOnSuffix","docLink":"./Lean/AuxRecursor.html#Lean.casesOnSuffix","doc":""},"Lean.cacheClosedTermName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ClosedTermCache.lean#L18-L19","name":"Lean.cacheClosedTermName","docLink":"./Lean/Compiler/ClosedTermCache.html#Lean.cacheClosedTermName","doc":""},"Lean.builtinInitAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InitAttr.lean#L81-L81","name":"Lean.builtinInitAttr","docLink":"./Lean/Compiler/InitAttr.html#Lean.builtinInitAttr","doc":""},"Lean.builtinDeclRanges":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L38-L38","name":"Lean.builtinDeclRanges","docLink":"./Lean/DeclarationRange.html#Lean.builtinDeclRanges","doc":""},"Lean.brecOnSuffix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L12-L12","name":"Lean.brecOnSuffix","docLink":"./Lean/AuxRecursor.html#Lean.brecOnSuffix","doc":""},"Lean.bracketedExplicitBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L20-L20","name":"Lean.bracketedExplicitBinders","docLink":"./Init/NotationExtra.html#Lean.bracketedExplicitBinders","doc":""},"Lean.binductionOnSuffix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L13-L13","name":"Lean.binductionOnSuffix","docLink":"./Lean/AuxRecursor.html#Lean.binductionOnSuffix","doc":""},"Lean.binderIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L11-L11","name":"Lean.binderIdent","docLink":"./Init/Tactics.html#Lean.binderIdent","doc":""},"Lean.bignumToJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L99-L100","name":"Lean.bignumToJson","docLink":"./Lean/Data/Json/FromToJson.html#Lean.bignumToJson","doc":""},"Lean.bignumFromJson?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L93-L97","name":"Lean.bignumFromJson?","docLink":"./Lean/Data/Json/FromToJson.html#Lean.bignumFromJson?","doc":"Note that `USize`s and `UInt64`s are stored as strings because JavaScript\ncannot represent 64-bit numbers. "},"Lean.belowSuffix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L14-L14","name":"Lean.belowSuffix","docLink":"./Lean/AuxRecursor.html#Lean.belowSuffix","doc":""},"Lean.auxRecExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/AuxRecursor.lean#L22-L22","name":"Lean.auxRecExt","docLink":"./Lean/AuxRecursor.html#Lean.auxRecExt","doc":""},"Lean.attributeMapRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L58-L58","name":"Lean.attributeMapRef","docLink":"./Lean/Attributes.html#Lean.attributeMapRef","doc":""},"Lean.attributeImplBuilderTableRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L312-L312","name":"Lean.attributeImplBuilderTableRef","docLink":"./Lean/Attributes.html#Lean.attributeImplBuilderTableRef","doc":""},"Lean.attributeExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L372-L372","name":"Lean.attributeExtension","docLink":"./Lean/Attributes.html#Lean.attributeExtension","doc":""},"Lean.assignLevelMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L435-L436","name":"Lean.assignLevelMVar","docLink":"./Lean/MetavarContext.html#Lean.assignLevelMVar","doc":"Add `mvarId := u` to the universe metavariable assignment.\nThis method does not check whether `mvarId` is already assigned, nor it checks whether\na cycle is being introduced.\nThis is a low-level API, and it is safer to use `isLevelDefEq (mkLevelMVar mvarId) u`.\n"},"Lean.assignExprMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L448-L449","name":"Lean.assignExprMVar","docLink":"./Lean/MetavarContext.html#Lean.assignExprMVar","doc":""},"Lean.assignDelayedMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L451-L452","name":"Lean.assignDelayedMVar","docLink":"./Lean/MetavarContext.html#Lean.assignDelayedMVar","doc":""},"Lean.annotation?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1637-L1640","name":"Lean.annotation?","docLink":"./Lean/Expr.html#Lean.annotation?","doc":"Return `some e'` if `e = mkAnnotation kind e'`\n"},"Lean.aliasExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L25-L25","name":"Lean.aliasExtension","docLink":"./Lean/ResolveName.html#Lean.aliasExtension","doc":""},"Lean.addTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L115-L119","name":"Lean.addTrace","docLink":"./Lean/Util/Trace.html#Lean.addTrace","doc":""},"Lean.addSearchPathFromEnv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L74-L78","name":"Lean.addSearchPathFromEnv","docLink":"./Lean/Util/Path.html#Lean.addSearchPathFromEnv","doc":""},"Lean.addRawTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L109-L113","name":"Lean.addRawTrace","docLink":"./Lean/Util/Trace.html#Lean.addRawTrace","doc":""},"Lean.addProtected":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Modifiers.lean#L13-L14","name":"Lean.addProtected","docLink":"./Lean/Modifiers.html#Lean.addProtected","doc":""},"Lean.addProjectionFnInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ProjFns.lean#L35-L36","name":"Lean.addProjectionFnInfo","docLink":"./Lean/ProjFns.html#Lean.addProjectionFnInfo","doc":""},"Lean.addNoncomputable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/NoncomputableAttr.lean#L13-L14","name":"Lean.addNoncomputable","docLink":"./Lean/Compiler/NoncomputableAttr.html#Lean.addNoncomputable","doc":"Mark in the environment extension that the given declaration has been declared by the user as `noncomputable`. "},"Lean.addMessageContextPartial":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L269-L272","name":"Lean.addMessageContextPartial","docLink":"./Lean/Message.html#Lean.addMessageContextPartial","doc":""},"Lean.addMessageContextFull":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L274-L279","name":"Lean.addMessageContextFull","docLink":"./Lean/Message.html#Lean.addMessageContextFull","doc":""},"Lean.addMainModuleDoc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DocString.lean#L82-L83","name":"Lean.addMainModuleDoc","docLink":"./Lean/DocString.html#Lean.addMainModuleDoc","doc":""},"Lean.addMacroScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2868-L2881","name":"Lean.addMacroScope","docLink":"./Init/Prelude.html#Lean.addMacroScope","doc":""},"Lean.addExtern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L59-L59","name":"Lean.addExtern","docLink":"./Lean/Compiler/ExternAttr.html#Lean.addExtern","doc":""},"Lean.addDocString'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DocString.lean#L57-L60","name":"Lean.addDocString'","docLink":"./Lean/DocString.html#Lean.addDocString'","doc":""},"Lean.addDocString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DocString.lean#L54-L55","name":"Lean.addDocString","docLink":"./Lean/DocString.html#Lean.addDocString","doc":""},"Lean.addDeclarationRanges":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L44-L45","name":"Lean.addDeclarationRanges","docLink":"./Lean/DeclarationRange.html#Lean.addDeclarationRanges","doc":""},"Lean.addDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L131-L136","name":"Lean.addDecl","docLink":"./Lean/MonadEnv.html#Lean.addDecl","doc":""},"Lean.addClass":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Class.lean#L111-L119","name":"Lean.addClass","docLink":"./Lean/Class.html#Lean.addClass","doc":"Add a new type class with the given name to the environment.\n`declName` must not be the name of an existing type class,\nand it must be the name of constant in `env`.\n`declName` must be a inductive datatype or axiom.\nRecall that all structures are inductive datatypes.\n"},"Lean.addBuiltinDocString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DocString.lean#L51-L52","name":"Lean.addBuiltinDocString","docLink":"./Lean/DocString.html#Lean.addBuiltinDocString","doc":""},"Lean.addBuiltinDeclarationRanges":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L41-L42","name":"Lean.addBuiltinDeclarationRanges","docLink":"./Lean/DeclarationRange.html#Lean.addBuiltinDeclarationRanges","doc":""},"Lean.addAndCompile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MonadEnv.lean#L172-L174","name":"Lean.addAndCompile","docLink":"./Lean/MonadEnv.html#Lean.addAndCompile","doc":""},"Lean.addAliasEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L20-L23","name":"Lean.addAliasEntry","docLink":"./Lean/ResolveName.html#Lean.addAliasEntry","doc":""},"Lean.addAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L33-L34","name":"Lean.addAlias","docLink":"./Lean/ResolveName.html#Lean.addAlias","doc":"Add alias `a` for `e` "},"Lean.activateScoped":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L193-L195","name":"Lean.activateScoped","docLink":"./Lean/ScopedEnvExtension.html#Lean.activateScoped","doc":""},"Lean.Xml.parse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L483-L486","name":"Lean.Xml.parse","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.parse","doc":""},"Lean.Xml.instToStringElement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Basic.lean#L39-L39","name":"Lean.Xml.instToStringElement","docLink":"./Lean/Data/Xml/Basic.html#Lean.Xml.instToStringElement","doc":""},"Lean.Xml.instToStringContent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Basic.lean#L40-L40","name":"Lean.Xml.instToStringContent","docLink":"./Lean/Data/Xml/Basic.html#Lean.Xml.instToStringContent","doc":""},"Lean.Xml.instToStringAttributes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Basic.lean#L13-L13","name":"Lean.Xml.instToStringAttributes","docLink":"./Lean/Data/Xml/Basic.html#Lean.Xml.instToStringAttributes","doc":""},"Lean.Xml.instInhabitedContent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Basic.lean#L26-L26","name":"Lean.Xml.instInhabitedContent","docLink":"./Lean/Data/Xml/Basic.html#Lean.Xml.instInhabitedContent","doc":""},"Lean.Xml.Parser.seq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L192-L198","name":"Lean.Xml.Parser.seq","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.seq","doc":"https://www.w3.org/TR/xml/#NT-seq "},"Lean.Xml.Parser.quote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L26-L28","name":"Lean.Xml.Parser.quote","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.quote","doc":""},"Lean.Xml.Parser.prolog":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L396-L399","name":"Lean.Xml.Parser.prolog","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.prolog","doc":"https://www.w3.org/TR/xml/#NT-prolog "},"Lean.Xml.Parser.predefinedEntityToChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L262-L268","name":"Lean.Xml.Parser.predefinedEntityToChar","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.predefinedEntityToChar","doc":""},"Lean.Xml.Parser.markupDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L374-L375","name":"Lean.Xml.Parser.markupDecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.markupDecl","doc":"https://www.w3.org/TR/xml/#NT-markupdecl "},"Lean.Xml.Parser.intSubset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L382-L383","name":"Lean.Xml.Parser.intSubset","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.intSubset","doc":"https://www.w3.org/TR/xml/#NT-intSubset "},"Lean.Xml.Parser.hexDigitToNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L275-L278","name":"Lean.Xml.Parser.hexDigitToNat","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.hexDigitToNat","doc":""},"Lean.Xml.Parser.endl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L24-L24","name":"Lean.Xml.Parser.endl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.endl","doc":"consume a newline character sequence pretending, that we read '\\n'. As per spec:\nhttps://www.w3.org/TR/xml/#sec-line-ends "},"Lean.Xml.Parser.elementPrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L408-L413","name":"Lean.Xml.Parser.elementPrefix","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.elementPrefix","doc":""},"Lean.Xml.Parser.elementDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L210-L216","name":"Lean.Xml.Parser.elementDecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.elementDecl","doc":"https://www.w3.org/TR/xml/#NT-elementdecl "},"Lean.Xml.Parser.element":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L472-L474","name":"Lean.Xml.Parser.element","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.element","doc":"https://www.w3.org/TR/xml/#NT-element "},"Lean.Xml.Parser.document":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L479-L479","name":"Lean.Xml.Parser.document","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.document","doc":"https://www.w3.org/TR/xml/#NT-document "},"Lean.Xml.Parser.doctypedecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L386-L393","name":"Lean.Xml.Parser.doctypedecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.doctypedecl","doc":"https://www.w3.org/TR/xml/#NT-doctypedecl "},"Lean.Xml.Parser.digitsToNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L280-L281","name":"Lean.Xml.Parser.digitsToNat","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.digitsToNat","doc":""},"Lean.Xml.Parser.cp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L179-L180","name":"Lean.Xml.Parser.cp","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.cp","doc":"https://www.w3.org/TR/xml/#NT-cp "},"Lean.Xml.Parser.contentspec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L206-L207","name":"Lean.Xml.Parser.contentspec","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.contentspec","doc":"https://www.w3.org/TR/xml/#NT-contentspec "},"Lean.Xml.Parser.content":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L449-L469","name":"Lean.Xml.Parser.content","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.content","doc":"https://www.w3.org/TR/xml/#NT-content "},"Lean.Xml.Parser.choice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L183-L189","name":"Lean.Xml.Parser.choice","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.choice","doc":"https://www.w3.org/TR/xml/#NT-choice "},"Lean.Xml.Parser.children":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L202-L203","name":"Lean.Xml.Parser.children","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.children","doc":"https://www.w3.org/TR/xml/#NT-children "},"Lean.Xml.Parser.XMLdecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L110-L116","name":"Lean.Xml.Parser.XMLdecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.XMLdecl","doc":"https://www.w3.org/TR/xml/#NT-XMLDecl "},"Lean.Xml.Parser.VersionNum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L83-L84","name":"Lean.Xml.Parser.VersionNum","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.VersionNum","doc":"https://www.w3.org/TR/xml/#NT-VersionNum "},"Lean.Xml.Parser.VersionInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L87-L91","name":"Lean.Xml.Parser.VersionInfo","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.VersionInfo","doc":"https://www.w3.org/TR/xml/#NT-VersionInfo "},"Lean.Xml.Parser.TokenizedType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L223-L230","name":"Lean.Xml.Parser.TokenizedType","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.TokenizedType","doc":"https://www.w3.org/TR/xml/#NT-TokenizedType "},"Lean.Xml.Parser.SystemLiteral":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L144-L146","name":"Lean.Xml.Parser.SystemLiteral","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.SystemLiteral","doc":"https://www.w3.org/TR/xml/#NT-SystemLiteral "},"Lean.Xml.Parser.StringType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L219-L220","name":"Lean.Xml.Parser.StringType","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.StringType","doc":"https://www.w3.org/TR/xml/#NT-StringType "},"Lean.Xml.Parser.STag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L420-L421","name":"Lean.Xml.Parser.STag","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.STag","doc":"https://www.w3.org/TR/xml/#NT-STag "},"Lean.Xml.Parser.SDDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L106-L107","name":"Lean.Xml.Parser.SDDecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.SDDecl","doc":"https://www.w3.org/TR/xml/#NT-SDDecl "},"Lean.Xml.Parser.S":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L41-L42","name":"Lean.Xml.Parser.S","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.S","doc":"https://www.w3.org/TR/xml/#NT-S "},"Lean.Xml.Parser.Reference":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L293-L294","name":"Lean.Xml.Parser.Reference","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.Reference","doc":"https://www.w3.org/TR/xml/#NT-Reference "},"Lean.Xml.Parser.PublicID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L366-L367","name":"Lean.Xml.Parser.PublicID","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.PublicID","doc":"https://www.w3.org/TR/xml/#NT-PublicID "},"Lean.Xml.Parser.PubidLiteral":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L155-L159","name":"Lean.Xml.Parser.PubidLiteral","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.PubidLiteral","doc":"https://www.w3.org/TR/xml/#NT-PubidLiteral "},"Lean.Xml.Parser.PubidChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L149-L152","name":"Lean.Xml.Parser.PubidChar","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.PubidChar","doc":"https://www.w3.org/TR/xml/#NT-PubidChar "},"Lean.Xml.Parser.PITarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L129-L130","name":"Lean.Xml.Parser.PITarget","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.PITarget","doc":"https://www.w3.org/TR/xml/#NT-PITarget "},"Lean.Xml.Parser.PI":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L133-L137","name":"Lean.Xml.Parser.PI","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.PI","doc":"https://www.w3.org/TR/xml/#NT-PI "},"Lean.Xml.Parser.PEReference":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L324-L325","name":"Lean.Xml.Parser.PEReference","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.PEReference","doc":"https://www.w3.org/TR/xml/#NT-PEReference "},"Lean.Xml.Parser.PEDef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L354-L355","name":"Lean.Xml.Parser.PEDef","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.PEDef","doc":"https://www.w3.org/TR/xml/#NT-PEDef "},"Lean.Xml.Parser.PEDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L358-L359","name":"Lean.Xml.Parser.PEDecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.PEDecl","doc":"https://www.w3.org/TR/xml/#NT-PEDecl "},"Lean.Xml.Parser.NotationType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L233-L240","name":"Lean.Xml.Parser.NotationType","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.NotationType","doc":"https://www.w3.org/TR/xml/#NT-NotationType "},"Lean.Xml.Parser.NotationDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L370-L371","name":"Lean.Xml.Parser.NotationDecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.NotationDecl","doc":"https://www.w3.org/TR/xml/#NT-NotationDecl "},"Lean.Xml.Parser.Nmtoken":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L243-L244","name":"Lean.Xml.Parser.Nmtoken","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.Nmtoken","doc":"https://www.w3.org/TR/xml/#NT-Nmtoken "},"Lean.Xml.Parser.NameStartChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L63-L70","name":"Lean.Xml.Parser.NameStartChar","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.NameStartChar","doc":"https://www.w3.org/TR/xml/#NT-NameStartChar "},"Lean.Xml.Parser.NameChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L73-L75","name":"Lean.Xml.Parser.NameChar","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.NameChar","doc":"https://www.w3.org/TR/xml/#NT-NameChar "},"Lean.Xml.Parser.Name":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L78-L80","name":"Lean.Xml.Parser.Name","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.Name","doc":"https://www.w3.org/TR/xml/#NT-Name "},"Lean.Xml.Parser.NDataDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L342-L343","name":"Lean.Xml.Parser.NDataDecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.NDataDecl","doc":"https://www.w3.org/TR/xml/#NT-NDataDecl "},"Lean.Xml.Parser.Mixed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L167-L175","name":"Lean.Xml.Parser.Mixed","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.Mixed","doc":"https://www.w3.org/TR/xml/#NT-Mixed "},"Lean.Xml.Parser.Misc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L140-L141","name":"Lean.Xml.Parser.Misc","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.Misc","doc":"https://www.w3.org/TR/xml/#NT-Misc "},"Lean.Xml.Parser.LeanChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L20-L20","name":"Lean.Xml.Parser.LeanChar","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.LeanChar","doc":""},"Lean.Xml.Parser.GEDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L350-L351","name":"Lean.Xml.Parser.GEDecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.GEDecl","doc":"https://www.w3.org/TR/xml/#NT-GEDecl "},"Lean.Xml.Parser.ExternalID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L162-L164","name":"Lean.Xml.Parser.ExternalID","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.ExternalID","doc":"https://www.w3.org/TR/xml/#NT-ExternalID "},"Lean.Xml.Parser.Eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L45-L46","name":"Lean.Xml.Parser.Eq","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.Eq","doc":"https://www.w3.org/TR/xml/#NT-Eq "},"Lean.Xml.Parser.Enumeration":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L247-L252","name":"Lean.Xml.Parser.Enumeration","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.Enumeration","doc":"https://www.w3.org/TR/xml/#NT-Enumeration "},"Lean.Xml.Parser.EnumeratedType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L255-L256","name":"Lean.Xml.Parser.EnumeratedType","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.EnumeratedType","doc":"https://www.w3.org/TR/xml/#NT-EnumeratedType "},"Lean.Xml.Parser.EntityValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L328-L338","name":"Lean.Xml.Parser.EntityValue","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.EntityValue","doc":"https://www.w3.org/TR/xml/#NT-EntityValue "},"Lean.Xml.Parser.EntityRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L271-L272","name":"Lean.Xml.Parser.EntityRef","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.EntityRef","doc":"https://www.w3.org/TR/xml/#NT-EntityRef "},"Lean.Xml.Parser.EntityDef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L346-L347","name":"Lean.Xml.Parser.EntityDef","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.EntityDef","doc":"https://www.w3.org/TR/xml/#NT-EntityDef "},"Lean.Xml.Parser.EntityDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L362-L363","name":"Lean.Xml.Parser.EntityDecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.EntityDecl","doc":"https://www.w3.org/TR/xml/#NT-EntityDecl "},"Lean.Xml.Parser.EncodingDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L99-L103","name":"Lean.Xml.Parser.EncodingDecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.EncodingDecl","doc":"https://www.w3.org/TR/xml/#NT-EncodingDecl "},"Lean.Xml.Parser.EncName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L94-L96","name":"Lean.Xml.Parser.EncName","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.EncName","doc":"https://www.w3.org/TR/xml/#NT-EncName "},"Lean.Xml.Parser.EmptyElemTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L416-L417","name":"Lean.Xml.Parser.EmptyElemTag","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.EmptyElemTag","doc":"https://www.w3.org/TR/xml/#NT-EmptyElemTag "},"Lean.Xml.Parser.ETag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L424-L425","name":"Lean.Xml.Parser.ETag","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.ETag","doc":"https://www.w3.org/TR/xml/#NT-ETag "},"Lean.Xml.Parser.DefaultDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L310-L313","name":"Lean.Xml.Parser.DefaultDecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.DefaultDecl","doc":"https://www.w3.org/TR/xml/#NT-DefaultDecl "},"Lean.Xml.Parser.DeclSep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L378-L379","name":"Lean.Xml.Parser.DeclSep","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.DeclSep","doc":"https://www.w3.org/TR/xml/#NT-DeclSep "},"Lean.Xml.Parser.Comment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L119-L126","name":"Lean.Xml.Parser.Comment","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.Comment","doc":"https://www.w3.org/TR/xml/#NT-Comment "},"Lean.Xml.Parser.CharRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L284-L290","name":"Lean.Xml.Parser.CharRef","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.CharRef","doc":"https://www.w3.org/TR/xml/#NT-CharRef "},"Lean.Xml.Parser.CharData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L444-L445","name":"Lean.Xml.Parser.CharData","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.CharData","doc":"https://www.w3.org/TR/xml/#NT-CharData "},"Lean.Xml.Parser.Char":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L31-L38","name":"Lean.Xml.Parser.Char","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.Char","doc":"https://www.w3.org/TR/xml/#NT-Char "},"Lean.Xml.Parser.CData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L436-L437","name":"Lean.Xml.Parser.CData","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.CData","doc":"https://www.w3.org/TR/xml/#NT-CData "},"Lean.Xml.Parser.CDStart":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L428-L429","name":"Lean.Xml.Parser.CDStart","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.CDStart","doc":"https://www.w3.org/TR/xml/#NT-CDStart "},"Lean.Xml.Parser.CDSect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L440-L441","name":"Lean.Xml.Parser.CDSect","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.CDSect","doc":"https://www.w3.org/TR/xml/#NT-CDSect "},"Lean.Xml.Parser.CDEnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L432-L433","name":"Lean.Xml.Parser.CDEnd","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.CDEnd","doc":"https://www.w3.org/TR/xml/#NT-CDEnd "},"Lean.Xml.Parser.Attribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L402-L406","name":"Lean.Xml.Parser.Attribute","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.Attribute","doc":"https://www.w3.org/TR/xml/#NT-Attribute "},"Lean.Xml.Parser.AttlistDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L320-L321","name":"Lean.Xml.Parser.AttlistDecl","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.AttlistDecl","doc":"https://www.w3.org/TR/xml/#NT-AttlistDecl "},"Lean.Xml.Parser.AttValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L297-L307","name":"Lean.Xml.Parser.AttValue","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.AttValue","doc":"https://www.w3.org/TR/xml/#NT-AttValue "},"Lean.Xml.Parser.AttType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L259-L260","name":"Lean.Xml.Parser.AttType","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.AttType","doc":"https://www.w3.org/TR/xml/#NT-AttType "},"Lean.Xml.Parser.AttDef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Parser.lean#L316-L317","name":"Lean.Xml.Parser.AttDef","docLink":"./Lean/Data/Xml/Parser.html#Lean.Xml.Parser.AttDef","doc":"https://www.w3.org/TR/xml/#NT-AttDef "},"Lean.Xml.Element":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Basic.lean#L16-L20","name":"Lean.Xml.Element","docLink":"./Lean/Data/Xml/Basic.html#Lean.Xml.Element","doc":""},"Lean.Xml.Content":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Basic.lean#L22-L26","name":"Lean.Xml.Content","docLink":"./Lean/Data/Xml/Basic.html#Lean.Xml.Content","doc":""},"Lean.Xml.Attributes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Xml/Basic.lean#L12-L12","name":"Lean.Xml.Attributes","docLink":"./Lean/Data/Xml/Basic.html#Lean.Xml.Attributes","doc":""},"Lean.Widget.widgetSourceRegistry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L61-L61","name":"Lean.Widget.widgetSourceRegistry","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.widgetSourceRegistry","doc":""},"Lean.Widget.widgetInfosAt?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L115-L126","name":"Lean.Widget.widgetInfosAt?","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.widgetInfosAt?","doc":"Try to retrieve the `UserWidgetInfo` at a particular position.\n"},"Lean.Widget.widgetCmd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L176-L176","name":"Lean.Widget.widgetCmd","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.widgetCmd","doc":""},"Lean.Widget.userWidgetRegistry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L60-L60","name":"Lean.Widget.userWidgetRegistry","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.userWidgetRegistry","doc":""},"Lean.Widget.tagExprInfos.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveCode.lean#L40-L44","name":"Lean.Widget.tagExprInfos.go","docLink":"./Lean/Widget/InteractiveCode.html#Lean.Widget.tagExprInfos.go","doc":""},"Lean.Widget.tagExprInfos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveCode.lean#L36-L44","name":"Lean.Widget.tagExprInfos","docLink":"./Lean/Widget/InteractiveCode.html#Lean.Widget.tagExprInfos","doc":"Tags a pretty-printed `Expr` with infos from the delaborator. "},"Lean.Widget.saveWidgetInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L163-L169","name":"Lean.Widget.saveWidgetInfo","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.saveWidgetInfo","doc":"Save a user-widget instance to the infotree.\nThe given `widgetId` should be the declaration name of the widget definition. "},"Lean.Widget.ppExprTagged":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveCode.lean#L46-L65","name":"Lean.Widget.ppExprTagged","docLink":"./Lean/Widget/InteractiveCode.html#Lean.Widget.ppExprTagged","doc":""},"Lean.Widget.msgToInteractiveDiagnostic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L140-L168","name":"Lean.Widget.msgToInteractiveDiagnostic","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.msgToInteractiveDiagnostic","doc":"Transform a Lean Message concerning the given text into an LSP Diagnostic. "},"Lean.Widget.msgToInteractive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L116-L137","name":"Lean.Widget.msgToInteractive","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.msgToInteractive","doc":""},"Lean.Widget.makePopup":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L48-L67","name":"Lean.Widget.makePopup","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.makePopup","doc":"Given elaborator info for a particular subexpression. Produce the `InfoPopup`.\n\nThe intended usage of this is for the infoview to pass the `InfoWithCtx` which\nwas stored for a particular `SubexprInfo` tag in a `TaggedText` generated with `ppExprTagged`.\n "},"Lean.Widget.instToJsonWidgetSource":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L29-L29","name":"Lean.Widget.instToJsonWidgetSource","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instToJsonWidgetSource","doc":""},"Lean.Widget.instToJsonUserWidgetInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L134-L134","name":"Lean.Widget.instToJsonUserWidgetInstance","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instToJsonUserWidgetInstance","doc":""},"Lean.Widget.instToJsonUserWidgetDefinition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L46-L46","name":"Lean.Widget.instToJsonUserWidgetDefinition","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instToJsonUserWidgetDefinition","doc":""},"Lean.Widget.instToJsonUserWidget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L53-L53","name":"Lean.Widget.instToJsonUserWidget","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instToJsonUserWidget","doc":""},"Lean.Widget.instToJsonTaggedText":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L24-L24","name":"Lean.Widget.instToJsonTaggedText","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.instToJsonTaggedText","doc":""},"Lean.Widget.instToJsonRpcEncodingPacket_9":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L121-L121","name":"Lean.Widget.instToJsonRpcEncodingPacket_9","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instToJsonRpcEncodingPacket_9","doc":""},"Lean.Widget.instToJsonRpcEncodingPacket_8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L41-L41","name":"Lean.Widget.instToJsonRpcEncodingPacket_8","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instToJsonRpcEncodingPacket_8","doc":""},"Lean.Widget.instToJsonRpcEncodingPacket_7":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L23-L23","name":"Lean.Widget.instToJsonRpcEncodingPacket_7","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instToJsonRpcEncodingPacket_7","doc":""},"Lean.Widget.instToJsonRpcEncodingPacket_6":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L25-L25","name":"Lean.Widget.instToJsonRpcEncodingPacket_6","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instToJsonRpcEncodingPacket_6","doc":""},"Lean.Widget.instToJsonRpcEncodingPacket_5":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L18-L18","name":"Lean.Widget.instToJsonRpcEncodingPacket_5","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instToJsonRpcEncodingPacket_5","doc":""},"Lean.Widget.instToJsonRpcEncodingPacket_4":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L83-L83","name":"Lean.Widget.instToJsonRpcEncodingPacket_4","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instToJsonRpcEncodingPacket_4","doc":""},"Lean.Widget.instToJsonRpcEncodingPacket_3":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L72-L72","name":"Lean.Widget.instToJsonRpcEncodingPacket_3","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instToJsonRpcEncodingPacket_3","doc":""},"Lean.Widget.instToJsonRpcEncodingPacket_2":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L35-L35","name":"Lean.Widget.instToJsonRpcEncodingPacket_2","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instToJsonRpcEncodingPacket_2","doc":""},"Lean.Widget.instToJsonRpcEncodingPacket_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L24-L24","name":"Lean.Widget.instToJsonRpcEncodingPacket_1","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instToJsonRpcEncodingPacket_1","doc":""},"Lean.Widget.instToJsonRpcEncodingPacket":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveCode.lean#L27-L27","name":"Lean.Widget.instToJsonRpcEncodingPacket","docLink":"./Lean/Widget/InteractiveCode.html#Lean.Widget.instToJsonRpcEncodingPacket","doc":""},"Lean.Widget.instToJsonMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/Basic.lean#L26-L26","name":"Lean.Widget.instToJsonMVarId","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instToJsonMVarId","doc":""},"Lean.Widget.instToJsonGetWidgetsResponse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L139-L139","name":"Lean.Widget.instToJsonGetWidgetsResponse","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instToJsonGetWidgetsResponse","doc":""},"Lean.Widget.instToJsonGetWidgetSourceParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L96-L96","name":"Lean.Widget.instToJsonGetWidgetSourceParams","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instToJsonGetWidgetSourceParams","doc":""},"Lean.Widget.instToJsonGetInteractiveDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L94-L94","name":"Lean.Widget.instToJsonGetInteractiveDiagnosticsParams","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instToJsonGetInteractiveDiagnosticsParams","doc":""},"Lean.Widget.instToJsonFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/Basic.lean#L25-L25","name":"Lean.Widget.instToJsonFVarId","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instToJsonFVarId","doc":""},"Lean.Widget.instRpcEncodingWithRpcRefMessageDataRpcRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/Basic.lean#L23-L23","name":"Lean.Widget.instRpcEncodingWithRpcRefMessageDataRpcRef","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instRpcEncodingWithRpcRefMessageDataRpcRef","doc":""},"Lean.Widget.instRpcEncodingWithRpcRefInfoWithCtxRpcRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/Basic.lean#L21-L21","name":"Lean.Widget.instRpcEncodingWithRpcRefInfoWithCtxRpcRef","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instRpcEncodingWithRpcRefInfoWithCtxRpcRef","doc":""},"Lean.Widget.instRpcEncodingSubexprInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveCode.lean#L27-L27","name":"Lean.Widget.instRpcEncodingSubexprInfo","docLink":"./Lean/Widget/InteractiveCode.html#Lean.Widget.instRpcEncodingSubexprInfo","doc":""},"Lean.Widget.instRpcEncodingMsgToInteractive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L23-L23","name":"Lean.Widget.instRpcEncodingMsgToInteractive","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instRpcEncodingMsgToInteractive","doc":""},"Lean.Widget.instRpcEncodingMsgEmbed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L18-L18","name":"Lean.Widget.instRpcEncodingMsgEmbed","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instRpcEncodingMsgEmbed","doc":""},"Lean.Widget.instRpcEncodingInteractiveTermGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L72-L72","name":"Lean.Widget.instRpcEncodingInteractiveTermGoal","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instRpcEncodingInteractiveTermGoal","doc":""},"Lean.Widget.instRpcEncodingInteractiveHypothesisBundle":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L24-L24","name":"Lean.Widget.instRpcEncodingInteractiveHypothesisBundle","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instRpcEncodingInteractiveHypothesisBundle","doc":""},"Lean.Widget.instRpcEncodingInteractiveGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L83-L83","name":"Lean.Widget.instRpcEncodingInteractiveGoals","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instRpcEncodingInteractiveGoals","doc":""},"Lean.Widget.instRpcEncodingInteractiveGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L35-L35","name":"Lean.Widget.instRpcEncodingInteractiveGoal","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instRpcEncodingInteractiveGoal","doc":""},"Lean.Widget.instRpcEncodingInfoPopup":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L41-L41","name":"Lean.Widget.instRpcEncodingInfoPopup","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instRpcEncodingInfoPopup","doc":""},"Lean.Widget.instRpcEncodingGetGoToLocationParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L121-L121","name":"Lean.Widget.instRpcEncodingGetGoToLocationParams","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instRpcEncodingGetGoToLocationParams","doc":""},"Lean.Widget.instReprTaggedText":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L24-L24","name":"Lean.Widget.instReprTaggedText","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.instReprTaggedText","doc":""},"Lean.Widget.instInhabitedWidgetSource":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L29-L29","name":"Lean.Widget.instInhabitedWidgetSource","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instInhabitedWidgetSource","doc":""},"Lean.Widget.instInhabitedUserWidgetDefinition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L46-L46","name":"Lean.Widget.instInhabitedUserWidgetDefinition","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instInhabitedUserWidgetDefinition","doc":""},"Lean.Widget.instInhabitedUserWidget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L53-L53","name":"Lean.Widget.instInhabitedUserWidget","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instInhabitedUserWidget","doc":""},"Lean.Widget.instInhabitedTaggedText":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L24-L24","name":"Lean.Widget.instInhabitedTaggedText","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.instInhabitedTaggedText","doc":""},"Lean.Widget.instInhabitedSubexprInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveCode.lean#L27-L27","name":"Lean.Widget.instInhabitedSubexprInfo","docLink":"./Lean/Widget/InteractiveCode.html#Lean.Widget.instInhabitedSubexprInfo","doc":""},"Lean.Widget.instInhabitedMsgToInteractive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L23-L23","name":"Lean.Widget.instInhabitedMsgToInteractive","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instInhabitedMsgToInteractive","doc":""},"Lean.Widget.instInhabitedMsgEmbed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L18-L18","name":"Lean.Widget.instInhabitedMsgEmbed","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instInhabitedMsgEmbed","doc":""},"Lean.Widget.instInhabitedInteractiveTermGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L72-L72","name":"Lean.Widget.instInhabitedInteractiveTermGoal","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instInhabitedInteractiveTermGoal","doc":""},"Lean.Widget.instInhabitedInteractiveHypothesisBundle":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L24-L24","name":"Lean.Widget.instInhabitedInteractiveHypothesisBundle","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instInhabitedInteractiveHypothesisBundle","doc":""},"Lean.Widget.instInhabitedInteractiveGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L35-L35","name":"Lean.Widget.instInhabitedInteractiveGoal","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instInhabitedInteractiveGoal","doc":""},"Lean.Widget.instInhabitedInfoWithCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/Basic.lean#L21-L21","name":"Lean.Widget.instInhabitedInfoWithCtx","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instInhabitedInfoWithCtx","doc":""},"Lean.Widget.instInhabitedInfoPopup":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L41-L41","name":"Lean.Widget.instInhabitedInfoPopup","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instInhabitedInfoPopup","doc":""},"Lean.Widget.instInhabitedGetInteractiveDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L94-L94","name":"Lean.Widget.instInhabitedGetInteractiveDiagnosticsParams","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instInhabitedGetInteractiveDiagnosticsParams","doc":""},"Lean.Widget.instInhabitedEmbedFmt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L56-L56","name":"Lean.Widget.instInhabitedEmbedFmt","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instInhabitedEmbedFmt","doc":""},"Lean.Widget.instFromJsonWidgetSource":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L29-L29","name":"Lean.Widget.instFromJsonWidgetSource","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instFromJsonWidgetSource","doc":""},"Lean.Widget.instFromJsonUserWidgetInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L134-L134","name":"Lean.Widget.instFromJsonUserWidgetInstance","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instFromJsonUserWidgetInstance","doc":""},"Lean.Widget.instFromJsonUserWidgetDefinition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L46-L46","name":"Lean.Widget.instFromJsonUserWidgetDefinition","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instFromJsonUserWidgetDefinition","doc":""},"Lean.Widget.instFromJsonUserWidget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L53-L53","name":"Lean.Widget.instFromJsonUserWidget","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instFromJsonUserWidget","doc":""},"Lean.Widget.instFromJsonTaggedText":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L24-L24","name":"Lean.Widget.instFromJsonTaggedText","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.instFromJsonTaggedText","doc":""},"Lean.Widget.instFromJsonRpcEncodingPacket_9":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L121-L121","name":"Lean.Widget.instFromJsonRpcEncodingPacket_9","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instFromJsonRpcEncodingPacket_9","doc":""},"Lean.Widget.instFromJsonRpcEncodingPacket_8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L41-L41","name":"Lean.Widget.instFromJsonRpcEncodingPacket_8","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instFromJsonRpcEncodingPacket_8","doc":""},"Lean.Widget.instFromJsonRpcEncodingPacket_7":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L23-L23","name":"Lean.Widget.instFromJsonRpcEncodingPacket_7","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instFromJsonRpcEncodingPacket_7","doc":""},"Lean.Widget.instFromJsonRpcEncodingPacket_6":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L25-L25","name":"Lean.Widget.instFromJsonRpcEncodingPacket_6","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instFromJsonRpcEncodingPacket_6","doc":""},"Lean.Widget.instFromJsonRpcEncodingPacket_5":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L18-L18","name":"Lean.Widget.instFromJsonRpcEncodingPacket_5","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.instFromJsonRpcEncodingPacket_5","doc":""},"Lean.Widget.instFromJsonRpcEncodingPacket_4":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L83-L83","name":"Lean.Widget.instFromJsonRpcEncodingPacket_4","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instFromJsonRpcEncodingPacket_4","doc":""},"Lean.Widget.instFromJsonRpcEncodingPacket_3":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L72-L72","name":"Lean.Widget.instFromJsonRpcEncodingPacket_3","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instFromJsonRpcEncodingPacket_3","doc":""},"Lean.Widget.instFromJsonRpcEncodingPacket_2":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L35-L35","name":"Lean.Widget.instFromJsonRpcEncodingPacket_2","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instFromJsonRpcEncodingPacket_2","doc":""},"Lean.Widget.instFromJsonRpcEncodingPacket_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L24-L24","name":"Lean.Widget.instFromJsonRpcEncodingPacket_1","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.instFromJsonRpcEncodingPacket_1","doc":""},"Lean.Widget.instFromJsonRpcEncodingPacket":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveCode.lean#L27-L27","name":"Lean.Widget.instFromJsonRpcEncodingPacket","docLink":"./Lean/Widget/InteractiveCode.html#Lean.Widget.instFromJsonRpcEncodingPacket","doc":""},"Lean.Widget.instFromJsonMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/Basic.lean#L28-L28","name":"Lean.Widget.instFromJsonMVarId","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instFromJsonMVarId","doc":""},"Lean.Widget.instFromJsonGetWidgetsResponse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L139-L139","name":"Lean.Widget.instFromJsonGetWidgetsResponse","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instFromJsonGetWidgetsResponse","doc":""},"Lean.Widget.instFromJsonGetWidgetSourceParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L96-L96","name":"Lean.Widget.instFromJsonGetWidgetSourceParams","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.instFromJsonGetWidgetSourceParams","doc":""},"Lean.Widget.instFromJsonGetInteractiveDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L94-L94","name":"Lean.Widget.instFromJsonGetInteractiveDiagnosticsParams","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.instFromJsonGetInteractiveDiagnosticsParams","doc":""},"Lean.Widget.instFromJsonFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/Basic.lean#L27-L27","name":"Lean.Widget.instFromJsonFVarId","docLink":"./Lean/Widget/Basic.html#Lean.Widget.instFromJsonFVarId","doc":""},"Lean.Widget.instBEqTaggedText":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L24-L24","name":"Lean.Widget.instBEqTaggedText","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.instBEqTaggedText","doc":""},"Lean.Widget.goalToInteractive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L102-L165","name":"Lean.Widget.goalToInteractive","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.goalToInteractive","doc":"A variant of `Meta.ppGoal` which preserves subexpression information for interactivity. "},"Lean.Widget.getWidgets":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L144-L159","name":"Lean.Widget.getWidgets","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.getWidgets","doc":"Get the `UserWidget`s present at a particular position. "},"Lean.Widget.getWidgetSource":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L100-L108","name":"Lean.Widget.getWidgetSource","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.getWidgetSource","doc":""},"Lean.Widget.getInteractiveDiagnostics":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L97-L109","name":"Lean.Widget.getInteractiveDiagnostics","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.getInteractiveDiagnostics","doc":""},"Lean.Widget.elabWidgetCmd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L188-L192","name":"Lean.Widget.elabWidgetCmd","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.elabWidgetCmd","doc":"Use this to place a widget. Useful for debugging widgets. "},"Lean.Widget.addInteractiveHypothesisBundle":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L86-L98","name":"Lean.Widget.addInteractiveHypothesisBundle","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.addInteractiveHypothesisBundle","doc":""},"Lean.Widget.WidgetSource":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L26-L29","name":"Lean.Widget.WidgetSource","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.WidgetSource","doc":"A custom piece of code that is run on the editor client.\n\nThe editor can use the `Lean.Widget.getWidgetSource` RPC method to\nget this object.\n\nSee the [manual entry](doc/widgets.md) above this declaration for more information on\nhow to use the widgets system.\n\n"},"Lean.Widget.UserWidgetInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L129-L134","name":"Lean.Widget.UserWidgetInstance","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.UserWidgetInstance","doc":"UserWidget accompanied by component props. "},"Lean.Widget.UserWidgetDefinition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L41-L46","name":"Lean.Widget.UserWidgetDefinition","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.UserWidgetDefinition","doc":"Use this structure and the `@[widget]` attribute to define your own widgets.\n\n```lean\n@[widget]\ndef rubiks : UserWidgetDefinition :=\n  { name := \"Rubiks cube app\"\n    javascript := include_str ...\n  }\n```\n"},"Lean.Widget.UserWidget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L48-L53","name":"Lean.Widget.UserWidget","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.UserWidget","doc":""},"Lean.Widget.TaggedText.stripTags.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L95-L100","name":"Lean.Widget.TaggedText.stripTags.go","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText.stripTags.go","doc":""},"Lean.Widget.TaggedText.stripTags":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L93-L100","name":"Lean.Widget.TaggedText.stripTags","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText.stripTags","doc":"Remove tags, leaving just the pretty-printed string. "},"Lean.Widget.TaggedText.rewriteM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L61-L64","name":"Lean.Widget.TaggedText.rewriteM","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText.rewriteM","doc":"Like `mapM` but allows rewriting the whole subtree at `tag` nodes. "},"Lean.Widget.TaggedText.rewrite":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L54-L57","name":"Lean.Widget.TaggedText.rewrite","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText.rewrite","doc":""},"Lean.Widget.TaggedText.prettyTagged":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L89-L90","name":"Lean.Widget.TaggedText.prettyTagged","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText.prettyTagged","doc":"The output is tagged with `(tag, indent)` where `tag` is from the input `Format` and `indent`\nis the indentation level at this point. The latter is used to print sub-trees accurately by passing\nit again as the `indent` argument. "},"Lean.Widget.TaggedText.mapM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L48-L51","name":"Lean.Widget.TaggedText.mapM","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText.mapM","doc":""},"Lean.Widget.TaggedText.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L42-L45","name":"Lean.Widget.TaggedText.map","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText.map","doc":""},"Lean.Widget.TaggedText.instRpcEncodingTaggedText":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L66-L68","name":"Lean.Widget.TaggedText.instRpcEncodingTaggedText","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText.instRpcEncodingTaggedText","doc":""},"Lean.Widget.TaggedText.instMonadPrettyFormatStateMTaggedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L76-L84","name":"Lean.Widget.TaggedText.instMonadPrettyFormatStateMTaggedState","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText.instMonadPrettyFormatStateMTaggedState","doc":""},"Lean.Widget.TaggedText.instInhabitedTaggedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L74-L74","name":"Lean.Widget.TaggedText.instInhabitedTaggedState","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText.instInhabitedTaggedState","doc":""},"Lean.Widget.TaggedText.appendText":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L28-L33","name":"Lean.Widget.TaggedText.appendText","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText.appendText","doc":""},"Lean.Widget.TaggedText.appendTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L35-L39","name":"Lean.Widget.TaggedText.appendTag","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText.appendTag","doc":""},"Lean.Widget.TaggedText":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/TaggedText.lean#L16-L24","name":"Lean.Widget.TaggedText","docLink":"./Lean/Widget/TaggedText.html#Lean.Widget.TaggedText","doc":"The minimal structure needed to represent \"string with interesting (tagged) substrings\".\nMuch like Lean 3 [`sf`](https://github.com/leanprover-community/mathlib/blob/bfa6bbbce69149792cc009ab7f9bc146181dc051/src/tactic/interactive_expr.lean#L38),\nbut with indentation already stringified. "},"Lean.Widget.SubexprInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveCode.lean#L19-L27","name":"Lean.Widget.SubexprInfo","docLink":"./Lean/Widget/InteractiveCode.html#Lean.Widget.SubexprInfo","doc":"Information about a subexpression within delaborated code. "},"Lean.Widget.MsgToInteractive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L20-L23","name":"Lean.Widget.MsgToInteractive","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.MsgToInteractive","doc":""},"Lean.Widget.MsgEmbed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L14-L18","name":"Lean.Widget.MsgEmbed","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.MsgEmbed","doc":""},"Lean.Widget.InteractiveTermGoal.toInteractiveGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L76-L77","name":"Lean.Widget.InteractiveTermGoal.toInteractiveGoal","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveTermGoal.toInteractiveGoal","doc":""},"Lean.Widget.InteractiveTermGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L68-L72","name":"Lean.Widget.InteractiveTermGoal","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveTermGoal","doc":""},"Lean.Widget.InteractiveHypothesisBundle":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L15-L24","name":"Lean.Widget.InteractiveHypothesisBundle","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveHypothesisBundle","doc":""},"Lean.Widget.InteractiveGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L81-L83","name":"Lean.Widget.InteractiveGoals","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveGoals","doc":""},"Lean.Widget.InteractiveGoal.pretty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L42-L64","name":"Lean.Widget.InteractiveGoal.pretty","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveGoal.pretty","doc":""},"Lean.Widget.InteractiveGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveGoal.lean#L26-L35","name":"Lean.Widget.InteractiveGoal","docLink":"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveGoal","doc":""},"Lean.Widget.InteractiveDiagnostic.toDiagnostic.prettyTt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L33-L38","name":"Lean.Widget.InteractiveDiagnostic.toDiagnostic.prettyTt","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveDiagnostic.toDiagnostic.prettyTt","doc":""},"Lean.Widget.InteractiveDiagnostic.toDiagnostic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L30-L38","name":"Lean.Widget.InteractiveDiagnostic.toDiagnostic","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveDiagnostic.toDiagnostic","doc":""},"Lean.Widget.InteractiveDiagnostic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L23-L23","name":"Lean.Widget.InteractiveDiagnostic","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Widget.InteractiveDiagnostic","doc":"We embed objects in LSP diagnostics by storing them in the tag of an empty subtree (`text \"\"`).\nIn other words, we terminate the `MsgEmbed`-tagged tree at embedded objects and instead store\nthe pretty-printed embed (which can itself be a `TaggedText`) in the tag. "},"Lean.Widget.InfoWithCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/Basic.lean#L18-L21","name":"Lean.Widget.InfoWithCtx","docLink":"./Lean/Widget/Basic.html#Lean.Widget.InfoWithCtx","doc":"Elaborator information with elaborator context.\n\nThis is used to tag different parts of expressions in `ppExprTagged`.\nThis is the input to the RPC call `Lean.Widget.InteractiveDiagnostics.infoToInteractive`.\n\nThe purpose of `InfoWithCtx` is to carry over information about delaborated\n`Info` nodes in a `CodeWithInfos`, and the associated pretty-printing\nfunctionality is purpose-specific to showing the contents of infoview popups.\n"},"Lean.Widget.InfoPopup":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L35-L41","name":"Lean.Widget.InfoPopup","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.InfoPopup","doc":"The information that the infoview uses to render a popup\nfor when the user hovers over an expression.\n"},"Lean.Widget.GetWidgetsResponse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L137-L139","name":"Lean.Widget.GetWidgetsResponse","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.GetWidgetsResponse","doc":"Output of `getWidgets` RPC."},"Lean.Widget.GetWidgetSourceParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/UserWidget.lean#L92-L96","name":"Lean.Widget.GetWidgetSourceParams","docLink":"./Lean/Widget/UserWidget.html#Lean.Widget.GetWidgetSourceParams","doc":"Input for `getWidgetSource` RPC. "},"Lean.Widget.GetInteractiveDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L90-L94","name":"Lean.Widget.GetInteractiveDiagnosticsParams","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.GetInteractiveDiagnosticsParams","doc":""},"Lean.Widget.GetGoToLocationParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/WidgetRequests.lean#L118-L121","name":"Lean.Widget.GetGoToLocationParams","docLink":"./Lean/Server/FileWorker/WidgetRequests.html#Lean.Widget.GetGoToLocationParams","doc":""},"Lean.Widget.CodeWithInfos.pretty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveCode.lean#L32-L33","name":"Lean.Widget.CodeWithInfos.pretty","docLink":"./Lean/Widget/InteractiveCode.html#Lean.Widget.CodeWithInfos.pretty","doc":""},"Lean.Widget.CodeWithInfos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveCode.lean#L30-L30","name":"Lean.Widget.CodeWithInfos","docLink":"./Lean/Widget/InteractiveCode.html#Lean.Widget.CodeWithInfos","doc":"Pretty-printed syntax (usually but not necessarily an `Expr`) with embedded `Info`s. "},"Lean.Unhygienic.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Hygiene.lean#L42-L42","name":"Lean.Unhygienic.run","docLink":"./Lean/Hygiene.html#Lean.Unhygienic.run","doc":""},"Lean.Unhygienic.instMonadQuotationUnhygienic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Hygiene.lean#L33-L40","name":"Lean.Unhygienic.instMonadQuotationUnhygienic","docLink":"./Lean/Hygiene.html#Lean.Unhygienic.instMonadQuotationUnhygienic","doc":""},"Lean.Unhygienic.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Hygiene.lean#L13-L15","name":"Lean.Unhygienic.Context","docLink":"./Lean/Hygiene.html#Lean.Unhygienic.Context","doc":""},"Lean.Unhygienic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Hygiene.lean#L31-L31","name":"Lean.Unhygienic","docLink":"./Lean/Hygiene.html#Lean.Unhygienic","doc":"Simplistic MonadQuotation that does not guarantee globally fresh names, that\nis, between different runs of this or other MonadQuotation implementations.\nIt is only safe if the syntax quotations do not introduce bindings around\nantiquotations, and if references to globals are prefixed with `_root_.`\n(which is not allowed to refer to a local variable)\n`Unhygienic` can also be seen as a model implementation of `MonadQuotation`\n(since it is completely hygienic as long as it is \"run\" only once and can\nassume that there are no other implentations in use, as is the case for the\nelaboration monads that carry their macro scope state through the entire\nprocessing of a file). It uses the state monad to query and allocate the\nnext macro scope, and uses the reader monad to store the stack of scopes\ncorresponding to `withFreshMacroScope` calls.\n"},"Lean.TransformStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L10-L12","name":"Lean.TransformStep","docLink":"./Lean/Meta/Transform.html#Lean.TransformStep","doc":""},"Lean.TrailingParserDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2696-L2696","name":"Lean.TrailingParserDescr","docLink":"./Init/Prelude.html#Lean.TrailingParserDescr","doc":""},"Lean.TraceState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L19-L22","name":"Lean.TraceState","docLink":"./Lean/Util/Trace.html#Lean.TraceState","doc":""},"Lean.TraceElem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L14-L17","name":"Lean.TraceElem","docLink":"./Lean/Util/Trace.html#Lean.TraceElem","doc":""},"Lean.ToMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L281-L282","name":"Lean.ToMessageData","docLink":"./Lean/Message.html#Lean.ToMessageData","doc":""},"Lean.ToJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L19-L20","name":"Lean.ToJson","docLink":"./Lean/Data/Json/FromToJson.html#Lean.ToJson","doc":""},"Lean.ToExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ToExpr.lean#L19-L23","name":"Lean.ToExpr","docLink":"./Lean/ToExpr.html#Lean.ToExpr","doc":"We use the `ToExpr` type class to convert values of type `α` into\nexpressions that denote these values in Lean.\nExample:\n```\ntoExpr true = .const ``Bool.true []\n```\n"},"Lean.TheoremVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L116-L122","name":"Lean.TheoremVal","docLink":"./Lean/Declaration.html#Lean.TheoremVal","doc":""},"Lean.TagDeclarationExtension.tag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L502-L504","name":"Lean.TagDeclarationExtension.tag","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.tag","doc":""},"Lean.TagDeclarationExtension.isTagged":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L506-L509","name":"Lean.TagDeclarationExtension.isTagged","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.isTagged","doc":""},"Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L499-L500","name":"Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","doc":""},"Lean.TagDeclarationExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L487-L487","name":"Lean.TagDeclarationExtension","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension","doc":"Environment extension for tagging declarations.\nDeclarations must only be tagged in the module where they were declared. "},"Lean.TagAttribute.hasTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L172-L175","name":"Lean.TagAttribute.hasTag","docLink":"./Lean/Attributes.html#Lean.TagAttribute.hasTag","doc":""},"Lean.TagAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L136-L139","name":"Lean.TagAttribute","docLink":"./Lean/Attributes.html#Lean.TagAttribute","doc":"Tag attributes are simple and efficient. They are useful for marking declarations in the modules where\n  they were defined.\n\n  The startup cost for this kind of attribute is very small since `addImportedFn` is a constant function.\n\n  They provide the predicate `tagAttr.hasTag env decl` which returns true iff declaration `decl`\n  is tagged in the environment `env`. "},"Lean.TSyntaxArray.rawImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2656-L2656","name":"Lean.TSyntaxArray.rawImpl","docLink":"./Init/Prelude.html#Lean.TSyntaxArray.rawImpl","doc":""},"Lean.TSyntaxArray.raw":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2659-L2659","name":"Lean.TSyntaxArray.raw","docLink":"./Init/Prelude.html#Lean.TSyntaxArray.raw","doc":""},"Lean.TSyntaxArray.mkImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2661-L2661","name":"Lean.TSyntaxArray.mkImpl","docLink":"./Init/Prelude.html#Lean.TSyntaxArray.mkImpl","doc":""},"Lean.TSyntaxArray.mk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2664-L2664","name":"Lean.TSyntaxArray.mk","docLink":"./Init/Prelude.html#Lean.TSyntaxArray.mk","doc":""},"Lean.TSyntaxArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2654-L2654","name":"Lean.TSyntaxArray","docLink":"./Init/Prelude.html#Lean.TSyntaxArray","doc":""},"Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L278-L279","name":"Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKindNil","doc":""},"Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L281-L282","name":"Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKind","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeTSyntaxConsSyntaxNodeKind","doc":""},"Lean.TSyntax.instCoeStrLitTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L290-L291","name":"Lean.TSyntax.instCoeStrLitTerm","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeStrLitTerm","doc":""},"Lean.TSyntax.instCoeScientificLitTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L296-L297","name":"Lean.TSyntax.instCoeScientificLitTerm","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeScientificLitTerm","doc":""},"Lean.TSyntax.instCoeNumLitTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L299-L300","name":"Lean.TSyntax.instCoeNumLitTerm","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeNumLitTerm","doc":""},"Lean.TSyntax.instCoeNumLitPrio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L308-L309","name":"Lean.TSyntax.instCoeNumLitPrio","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeNumLitPrio","doc":""},"Lean.TSyntax.instCoeNumLitPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L311-L312","name":"Lean.TSyntax.instCoeNumLitPrec","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeNumLitPrec","doc":""},"Lean.TSyntax.instCoeNameLitTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L293-L294","name":"Lean.TSyntax.instCoeNameLitTerm","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeNameLitTerm","doc":""},"Lean.TSyntax.instCoeIdentTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L284-L285","name":"Lean.TSyntax.instCoeIdentTerm","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeIdentTerm","doc":""},"Lean.TSyntax.instCoeIdentLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L305-L306","name":"Lean.TSyntax.instCoeIdentLevel","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeIdentLevel","doc":""},"Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L287-L288","name":"Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeDepTermMkConsSyntaxNodeKindStrAnonymousNilIdentIdent","doc":""},"Lean.TSyntax.instCoeCharLitTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L302-L303","name":"Lean.TSyntax.instCoeCharLitTerm","docLink":"./Init/Meta.html#Lean.TSyntax.instCoeCharLitTerm","doc":""},"Lean.TSyntax.getString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L899-L900","name":"Lean.TSyntax.getString","docLink":"./Init/Meta.html#Lean.TSyntax.getString","doc":""},"Lean.TSyntax.getScientific":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L896-L897","name":"Lean.TSyntax.getScientific","docLink":"./Init/Meta.html#Lean.TSyntax.getScientific","doc":""},"Lean.TSyntax.getNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L890-L891","name":"Lean.TSyntax.getNat","docLink":"./Init/Meta.html#Lean.TSyntax.getNat","doc":""},"Lean.TSyntax.getName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L905-L906","name":"Lean.TSyntax.getName","docLink":"./Init/Meta.html#Lean.TSyntax.getName","doc":""},"Lean.TSyntax.getId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L893-L894","name":"Lean.TSyntax.getId","docLink":"./Init/Meta.html#Lean.TSyntax.getId","doc":""},"Lean.TSyntax.getChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L902-L903","name":"Lean.TSyntax.getChar","docLink":"./Init/Meta.html#Lean.TSyntax.getChar","doc":""},"Lean.TSyntax.expandInterpolatedStrChunks":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1149-L1161","name":"Lean.TSyntax.expandInterpolatedStrChunks","docLink":"./Init/Meta.html#Lean.TSyntax.expandInterpolatedStrChunks","doc":""},"Lean.TSyntax.expandInterpolatedStr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1164-L1166","name":"Lean.TSyntax.expandInterpolatedStr","docLink":"./Init/Meta.html#Lean.TSyntax.expandInterpolatedStr","doc":""},"Lean.TSyntax.Compat.instCoeTailSyntaxTSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L316-L317","name":"Lean.TSyntax.Compat.instCoeTailSyntaxTSyntax","docLink":"./Init/Meta.html#Lean.TSyntax.Compat.instCoeTailSyntaxTSyntax","doc":""},"Lean.TSyntax.Compat.instCoeTailArraySyntaxTSyntaxArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L319-L320","name":"Lean.TSyntax.Compat.instCoeTailArraySyntaxTSyntaxArray","docLink":"./Init/Meta.html#Lean.TSyntax.Compat.instCoeTailArraySyntaxTSyntaxArray","doc":""},"Lean.TSyntax.Compat.instCoeTailArraySyntaxTSepArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L910-L911","name":"Lean.TSyntax.Compat.instCoeTailArraySyntaxTSepArray","docLink":"./Init/Meta.html#Lean.TSyntax.Compat.instCoeTailArraySyntaxTSepArray","doc":""},"Lean.TSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2506-L2507","name":"Lean.TSyntax","docLink":"./Init/Prelude.html#Lean.TSyntax","doc":"A `Syntax` value of one of the given syntax kinds.\nNote that while syntax quotations produce/expect `TSyntax` values of the correct kinds,\nthis is not otherwise enforced and can easily be circumvented by direct use of the constructor.\nThe namespace `TSyntax.Compat` can be opened to expose a general coercion from `Syntax` to any\n`TSyntax ks` for porting older code. "},"Lean.SyntaxNodeKinds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2498-L2498","name":"Lean.SyntaxNodeKinds","docLink":"./Init/Prelude.html#Lean.SyntaxNodeKinds","doc":""},"Lean.SyntaxNodeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2465-L2465","name":"Lean.SyntaxNodeKind","docLink":"./Init/Prelude.html#Lean.SyntaxNodeKind","doc":""},"Lean.SyntaxNode.withArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L38-L43","name":"Lean.SyntaxNode.withArgs","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.withArgs","doc":""},"Lean.SyntaxNode.modifyArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L54-L59","name":"Lean.SyntaxNode.modifyArgs","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.modifyArgs","doc":""},"Lean.SyntaxNode.getNumArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L45-L46","name":"Lean.SyntaxNode.getNumArgs","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.getNumArgs","doc":""},"Lean.SyntaxNode.getKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L31-L36","name":"Lean.SyntaxNode.getKind","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.getKind","doc":""},"Lean.SyntaxNode.getIdAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L358-L359","name":"Lean.SyntaxNode.getIdAt","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.getIdAt","doc":""},"Lean.SyntaxNode.getArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L51-L52","name":"Lean.SyntaxNode.getArgs","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.getArgs","doc":""},"Lean.SyntaxNode.getArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L48-L49","name":"Lean.SyntaxNode.getArg","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.getArg","doc":""},"Lean.SyntaxNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L20-L20","name":"Lean.SyntaxNode","docLink":"./Lean/Syntax.html#Lean.SyntaxNode","doc":""},"Lean.Syntax.updateTrailing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L160-L170","name":"Lean.Syntax.updateTrailing","docLink":"./Lean/Syntax.html#Lean.Syntax.updateTrailing","doc":""},"Lean.Syntax.updateLeading":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L157-L158","name":"Lean.Syntax.updateLeading","docLink":"./Lean/Syntax.html#Lean.Syntax.updateLeading","doc":"Set `SourceInfo.leading` according to the trailing stop of the preceding token.\n    The result is a round-tripping syntax tree IF, in the input syntax tree,\n    * all leading stops, atom contents, and trailing starts are correct\n    * trailing stops are between the trailing start and the next leading stop.\n\n    Remark: after parsing, all `SourceInfo.leading` fields are empty.\n    The `Syntax` argument is the output produced by the parser for `source`.\n    This function \"fixes\" the `source.leading` field.\n\n    Additionally, we try to choose \"nicer\" splits between leading and trailing stops\n    according to some heuristics so that e.g. comments are associated to the (intuitively)\n    correct token.\n\n    Note that the `SourceInfo.trailing` fields must be correct.\n    The implementation of this Function relies on this property. "},"Lean.Syntax.unsetTrailing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L391-L394","name":"Lean.Syntax.unsetTrailing","docLink":"./Init/Meta.html#Lean.Syntax.unsetTrailing","doc":""},"Lean.Syntax.unescapeAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L411-L415","name":"Lean.Syntax.unescapeAntiquot","docLink":"./Lean/Syntax.html#Lean.Syntax.unescapeAntiquot","doc":""},"Lean.Syntax.topDown":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L231-L231","name":"Lean.Syntax.topDown","docLink":"./Lean/Syntax.html#Lean.Syntax.topDown","doc":"`for _ in stx.topDown` iterates through each node and leaf in `stx` top-down, left-to-right.\nIf `firstChoiceOnly` is `true`, only visit the first argument of each choice node.\n"},"Lean.Syntax.toNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L740-L743","name":"Lean.Syntax.toNat","docLink":"./Init/Meta.html#Lean.Syntax.toNat","doc":""},"Lean.Syntax.structEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L328-L333","name":"Lean.Syntax.structEq","docLink":"./Init/Meta.html#Lean.Syntax.structEq","doc":""},"Lean.Syntax.splitNameLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L828-L829","name":"Lean.Syntax.splitNameLit","docLink":"./Init/Meta.html#Lean.Syntax.splitNameLit","doc":"Split a name literal (without the backtick) into its dot-separated components. For example,\n`foo.bla.«bo.o»` ↦ `[\"foo\", \"bla\", \"«bo.o»\"]`. If the literal cannot be parsed, return `[]`. "},"Lean.Syntax.setTailInfoAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L377-L384","name":"Lean.Syntax.setTailInfoAux","docLink":"./Init/Meta.html#Lean.Syntax.setTailInfoAux","doc":""},"Lean.Syntax.setTailInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L386-L389","name":"Lean.Syntax.setTailInfo","docLink":"./Init/Meta.html#Lean.Syntax.setTailInfo","doc":""},"Lean.Syntax.setKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2541-L2544","name":"Lean.Syntax.setKind","docLink":"./Init/Prelude.html#Lean.Syntax.setKind","doc":""},"Lean.Syntax.setInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L419-L423","name":"Lean.Syntax.setInfo","docLink":"./Init/Meta.html#Lean.Syntax.setInfo","doc":""},"Lean.Syntax.setHeadInfoAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L405-L412","name":"Lean.Syntax.setHeadInfoAux","docLink":"./Init/Meta.html#Lean.Syntax.setHeadInfoAux","doc":""},"Lean.Syntax.setHeadInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L414-L417","name":"Lean.Syntax.setHeadInfo","docLink":"./Init/Meta.html#Lean.Syntax.setHeadInfo","doc":""},"Lean.Syntax.setAtomVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L69-L71","name":"Lean.Syntax.setAtomVal","docLink":"./Lean/Syntax.html#Lean.Syntax.setAtomVal","doc":""},"Lean.Syntax.setArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2590-L2593","name":"Lean.Syntax.setArgs","docLink":"./Init/Prelude.html#Lean.Syntax.setArgs","doc":""},"Lean.Syntax.setArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2595-L2598","name":"Lean.Syntax.setArg","docLink":"./Init/Prelude.html#Lean.Syntax.setArg","doc":""},"Lean.Syntax.rewriteBottomUpM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L109-L113","name":"Lean.Syntax.rewriteBottomUpM","docLink":"./Lean/Syntax.html#Lean.Syntax.rewriteBottomUpM","doc":""},"Lean.Syntax.rewriteBottomUp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L115-L116","name":"Lean.Syntax.rewriteBottomUp","docLink":"./Lean/Syntax.html#Lean.Syntax.rewriteBottomUp","doc":""},"Lean.Syntax.reprint.reprintLeaf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L270-L277","name":"Lean.Syntax.reprint.reprintLeaf","docLink":"./Lean/Syntax.html#Lean.Syntax.reprint.reprintLeaf","doc":""},"Lean.Syntax.reprint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L253-L277","name":"Lean.Syntax.reprint","docLink":"./Lean/Syntax.html#Lean.Syntax.reprint","doc":""},"Lean.Syntax.replaceM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L100-L107","name":"Lean.Syntax.replaceM","docLink":"./Lean/Syntax.html#Lean.Syntax.replaceM","doc":""},"Lean.Syntax.prettyPrint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L19-L22","name":"Lean.Syntax.prettyPrint","docLink":"./Lean/Elab/Util.html#Lean.Syntax.prettyPrint","doc":""},"Lean.Syntax.modifyArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L90-L93","name":"Lean.Syntax.modifyArgs","docLink":"./Lean/Syntax.html#Lean.Syntax.modifyArgs","doc":""},"Lean.Syntax.modifyArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L95-L98","name":"Lean.Syntax.modifyArg","docLink":"./Lean/Syntax.html#Lean.Syntax.modifyArg","doc":""},"Lean.Syntax.mkSynthetic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L437-L438","name":"Lean.Syntax.mkSynthetic","docLink":"./Init/Meta.html#Lean.Syntax.mkSynthetic","doc":"Ensure head position is synthetic. The server regards syntax as \"original\" only if both head and tail info are `original`. "},"Lean.Syntax.mkStrLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L579-L580","name":"Lean.Syntax.mkStrLit","docLink":"./Init/Meta.html#Lean.Syntax.mkStrLit","doc":""},"Lean.Syntax.mkSep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L551-L552","name":"Lean.Syntax.mkSep","docLink":"./Init/Meta.html#Lean.Syntax.mkSep","doc":""},"Lean.Syntax.mkScientificLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L585-L586","name":"Lean.Syntax.mkScientificLit","docLink":"./Init/Meta.html#Lean.Syntax.mkScientificLit","doc":""},"Lean.Syntax.mkNumLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L582-L583","name":"Lean.Syntax.mkNumLit","docLink":"./Init/Meta.html#Lean.Syntax.mkNumLit","doc":""},"Lean.Syntax.mkNameLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L588-L589","name":"Lean.Syntax.mkNameLit","docLink":"./Init/Meta.html#Lean.Syntax.mkNameLit","doc":""},"Lean.Syntax.mkLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L575-L577","name":"Lean.Syntax.mkLit","docLink":"./Init/Meta.html#Lean.Syntax.mkLit","doc":""},"Lean.Syntax.mkCApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L572-L573","name":"Lean.Syntax.mkCApp","docLink":"./Init/Meta.html#Lean.Syntax.mkCApp","doc":""},"Lean.Syntax.mkApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L568-L570","name":"Lean.Syntax.mkApp","docLink":"./Init/Meta.html#Lean.Syntax.mkApp","doc":"Create syntax representing a Lean term application, but avoid degenerate empty applications. "},"Lean.Syntax.mkAntiquotSuffixSpliceNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L474-L475","name":"Lean.Syntax.mkAntiquotSuffixSpliceNode","docLink":"./Lean/Syntax.html#Lean.Syntax.mkAntiquotSuffixSpliceNode","doc":""},"Lean.Syntax.mkAntiquotSpliceNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L458-L460","name":"Lean.Syntax.mkAntiquotSpliceNode","docLink":"./Lean/Syntax.html#Lean.Syntax.mkAntiquotSpliceNode","doc":""},"Lean.Syntax.mkAntiquotNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L395-L404","name":"Lean.Syntax.mkAntiquotNode","docLink":"./Lean/Syntax.html#Lean.Syntax.mkAntiquotNode","doc":""},"Lean.Syntax.matchesNull":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2895-L2896","name":"Lean.Syntax.matchesNull","docLink":"./Init/Prelude.html#Lean.Syntax.matchesNull","doc":""},"Lean.Syntax.matchesLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2909-L2914","name":"Lean.Syntax.matchesLit","docLink":"./Init/Prelude.html#Lean.Syntax.matchesLit","doc":""},"Lean.Syntax.matchesIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2906-L2907","name":"Lean.Syntax.matchesIdent","docLink":"./Init/Prelude.html#Lean.Syntax.matchesIdent","doc":"Function used for determining whether a syntax pattern `` `(id) `` is matched.\nThere are various conceivable notions of when two syntactic identifiers should be regarded as identical,\nbut semantic definitions like whether they refer to the same global name cannot be implemented without\ncontext information (i.e. `MonadResolveName`). Thus in patterns we default to the structural solution\nof comparing the identifiers' `Name` values, though we at least do so modulo macro scopes so that\nidentifiers that \"look\" the same match. This is particularly useful when dealing with identifiers that\ndo not actually refer to Lean bindings, e.g. in the `stx` pattern `` `(many($p)) ``. "},"Lean.Syntax.isTokenAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L477-L478","name":"Lean.Syntax.isTokenAntiquot","docLink":"./Lean/Syntax.html#Lean.Syntax.isTokenAntiquot","doc":""},"Lean.Syntax.isToken":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L863-L865","name":"Lean.Syntax.isToken","docLink":"./Init/Meta.html#Lean.Syntax.isToken","doc":""},"Lean.Syntax.isStrLit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L783-L786","name":"Lean.Syntax.isStrLit?","docLink":"./Init/Meta.html#Lean.Syntax.isStrLit?","doc":""},"Lean.Syntax.isScientificLit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L730-L733","name":"Lean.Syntax.isScientificLit?","docLink":"./Init/Meta.html#Lean.Syntax.isScientificLit?","doc":""},"Lean.Syntax.isQuot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L369-L372","name":"Lean.Syntax.isQuot","docLink":"./Lean/Syntax.html#Lean.Syntax.isQuot","doc":""},"Lean.Syntax.isOfKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2546-L2547","name":"Lean.Syntax.isOfKind","docLink":"./Init/Prelude.html#Lean.Syntax.isOfKind","doc":""},"Lean.Syntax.isNone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L867-L872","name":"Lean.Syntax.isNone","docLink":"./Init/Meta.html#Lean.Syntax.isNone","doc":""},"Lean.Syntax.isNodeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2578-L2579","name":"Lean.Syntax.isNodeOf","docLink":"./Init/Prelude.html#Lean.Syntax.isNodeOf","doc":""},"Lean.Syntax.isNatLit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L667-L668","name":"Lean.Syntax.isNatLit?","docLink":"./Init/Meta.html#Lean.Syntax.isNatLit?","doc":""},"Lean.Syntax.isNameLit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L850-L853","name":"Lean.Syntax.isNameLit?","docLink":"./Init/Meta.html#Lean.Syntax.isNameLit?","doc":""},"Lean.Syntax.isMissing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2574-L2576","name":"Lean.Syntax.isMissing","docLink":"./Init/Prelude.html#Lean.Syntax.isMissing","doc":""},"Lean.Syntax.isLit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L651-L660","name":"Lean.Syntax.isLit?","docLink":"./Init/Meta.html#Lean.Syntax.isLit?","doc":""},"Lean.Syntax.isInterpolatedStrLit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1137-L1140","name":"Lean.Syntax.isInterpolatedStrLit?","docLink":"./Init/Meta.html#Lean.Syntax.isInterpolatedStrLit?","doc":""},"Lean.Syntax.isIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2582-L2584","name":"Lean.Syntax.isIdent","docLink":"./Init/Prelude.html#Lean.Syntax.isIdent","doc":"`stx.isIdent` is `true` iff `stx` is an identifier. "},"Lean.Syntax.isIdOrAtom?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L735-L738","name":"Lean.Syntax.isIdOrAtom?","docLink":"./Init/Meta.html#Lean.Syntax.isIdOrAtom?","doc":""},"Lean.Syntax.isFieldIdx?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L670-L671","name":"Lean.Syntax.isFieldIdx?","docLink":"./Init/Meta.html#Lean.Syntax.isFieldIdx?","doc":""},"Lean.Syntax.isEscapedAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L407-L408","name":"Lean.Syntax.isEscapedAntiquot","docLink":"./Lean/Syntax.html#Lean.Syntax.isEscapedAntiquot","doc":""},"Lean.Syntax.isCharLit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L796-L799","name":"Lean.Syntax.isCharLit?","docLink":"./Init/Meta.html#Lean.Syntax.isCharLit?","doc":""},"Lean.Syntax.isAtom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L859-L861","name":"Lean.Syntax.isAtom","docLink":"./Init/Meta.html#Lean.Syntax.isAtom","doc":""},"Lean.Syntax.isAnyAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L480-L481","name":"Lean.Syntax.isAnyAntiquot","docLink":"./Lean/Syntax.html#Lean.Syntax.isAnyAntiquot","doc":""},"Lean.Syntax.isAntiquots":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L386-L387","name":"Lean.Syntax.isAntiquots","docLink":"./Lean/Syntax.html#Lean.Syntax.isAntiquots","doc":""},"Lean.Syntax.isAntiquotSuffixSplice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L467-L468","name":"Lean.Syntax.isAntiquotSuffixSplice","docLink":"./Lean/Syntax.html#Lean.Syntax.isAntiquotSuffixSplice","doc":""},"Lean.Syntax.isAntiquotSplice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L445-L446","name":"Lean.Syntax.isAntiquotSplice","docLink":"./Lean/Syntax.html#Lean.Syntax.isAntiquotSplice","doc":""},"Lean.Syntax.isAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L382-L384","name":"Lean.Syntax.isAntiquot","docLink":"./Lean/Syntax.html#Lean.Syntax.isAntiquot","doc":""},"Lean.Syntax.instToStringTSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Syntax.lean#L48-L48","name":"Lean.Syntax.instToStringTSyntax","docLink":"./Init/Data/Format/Syntax.html#Lean.Syntax.instToStringTSyntax","doc":""},"Lean.Syntax.instToStringSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Syntax.lean#L45-L45","name":"Lean.Syntax.instToStringSyntax","docLink":"./Init/Data/Format/Syntax.html#Lean.Syntax.instToStringSyntax","doc":""},"Lean.Syntax.instToFormatTSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Syntax.lean#L47-L47","name":"Lean.Syntax.instToFormatTSyntax","docLink":"./Init/Data/Format/Syntax.html#Lean.Syntax.instToFormatTSyntax","doc":""},"Lean.Syntax.instToFormatSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Syntax.lean#L44-L44","name":"Lean.Syntax.instToFormatSyntax","docLink":"./Init/Data/Format/Syntax.html#Lean.Syntax.instToFormatSyntax","doc":""},"Lean.Syntax.instGetElemSyntaxNatTrue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2554-L2555","name":"Lean.Syntax.instGetElemSyntaxNatTrue","docLink":"./Init/Prelude.html#Lean.Syntax.instGetElemSyntaxNatTrue","doc":""},"Lean.Syntax.instForInTopDownSyntax.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L235-L248","name":"Lean.Syntax.instForInTopDownSyntax.loop","docLink":"./Lean/Syntax.html#Lean.Syntax.instForInTopDownSyntax.loop","doc":""},"Lean.Syntax.instForInTopDownSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L233-L251","name":"Lean.Syntax.instForInTopDownSyntax","docLink":"./Lean/Syntax.html#Lean.Syntax.instForInTopDownSyntax","doc":""},"Lean.Syntax.instEmptyCollectionTSepArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1073-L1074","name":"Lean.Syntax.instEmptyCollectionTSepArray","docLink":"./Init/Meta.html#Lean.Syntax.instEmptyCollectionTSepArray","doc":""},"Lean.Syntax.instEmptyCollectionSepArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1070-L1071","name":"Lean.Syntax.instEmptyCollectionSepArray","docLink":"./Init/Meta.html#Lean.Syntax.instEmptyCollectionSepArray","doc":""},"Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindStrAnonymousNil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1096-L1097","name":"Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindStrAnonymousNil","docLink":"./Init/Meta.html#Lean.Syntax.instCoeTermTSyntaxConsSyntaxNodeKindStrAnonymousNil","doc":""},"Lean.Syntax.instCoeTailSepArrayArraySyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1081-L1082","name":"Lean.Syntax.instCoeTailSepArrayArraySyntax","docLink":"./Init/Meta.html#Lean.Syntax.instCoeTailSepArrayArraySyntax","doc":""},"Lean.Syntax.instCoeTSyntaxArrayTSepArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L564-L565","name":"Lean.Syntax.instCoeTSyntaxArrayTSepArray","docLink":"./Init/Meta.html#Lean.Syntax.instCoeTSyntaxArrayTSepArray","doc":""},"Lean.Syntax.instCoeTSyntaxArrayArraySyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1090-L1091","name":"Lean.Syntax.instCoeTSyntaxArrayArraySyntax","docLink":"./Init/Meta.html#Lean.Syntax.instCoeTSyntaxArrayArraySyntax","doc":""},"Lean.Syntax.instCoeTSyntaxArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1087-L1088","name":"Lean.Syntax.instCoeTSyntaxArray","docLink":"./Init/Meta.html#Lean.Syntax.instCoeTSyntaxArray","doc":""},"Lean.Syntax.instCoeTSepArrayTSyntaxArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1084-L1085","name":"Lean.Syntax.instCoeTSepArrayTSyntaxArray","docLink":"./Init/Meta.html#Lean.Syntax.instCoeTSepArrayTSyntaxArray","doc":""},"Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindStrAnonymousNil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1093-L1094","name":"Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindStrAnonymousNil","docLink":"./Init/Meta.html#Lean.Syntax.instCoeIdentTSyntaxConsSyntaxNodeKindStrAnonymousNil","doc":""},"Lean.Syntax.instCoeArraySyntaxSepArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L561-L562","name":"Lean.Syntax.instCoeArraySyntaxSepArray","docLink":"./Init/Meta.html#Lean.Syntax.instCoeArraySyntaxSepArray","doc":""},"Lean.Syntax.instBEqTSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L336-L336","name":"Lean.Syntax.instBEqTSyntax","docLink":"./Init/Meta.html#Lean.Syntax.instBEqTSyntax","doc":""},"Lean.Syntax.instBEqSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L335-L335","name":"Lean.Syntax.instBEqSyntax","docLink":"./Init/Meta.html#Lean.Syntax.instBEqSyntax","doc":""},"Lean.Syntax.ifNodeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L78-L81","name":"Lean.Syntax.ifNodeKind","docLink":"./Lean/Syntax.html#Lean.Syntax.ifNodeKind","doc":""},"Lean.Syntax.ifNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L73-L76","name":"Lean.Syntax.ifNode","docLink":"./Lean/Syntax.html#Lean.Syntax.ifNode","doc":""},"Lean.Syntax.identComponents.nameComps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L214-L221","name":"Lean.Syntax.identComponents.nameComps","docLink":"./Lean/Syntax.html#Lean.Syntax.identComponents.nameComps","doc":""},"Lean.Syntax.identComponents":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L184-L221","name":"Lean.Syntax.identComponents","docLink":"./Lean/Syntax.html#Lean.Syntax.identComponents","doc":"Split an `ident` into its dot-separated components while preserving source info.\nMacro scopes are first erased.  For example, `` `foo.bla.boo._@._hyg.4 `` ↦ `` [`foo, `bla, `boo] ``.\nIf `nFields` is set, we take that many fields from the end and keep the remaining components\nas one name. For example, `` `foo.bla.boo `` with `(nFields := 1)` ↦ `` [`foo.bla, `boo] ``. "},"Lean.Syntax.hasMissing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L279-L283","name":"Lean.Syntax.hasMissing","docLink":"./Lean/Syntax.html#Lean.Syntax.hasMissing","doc":""},"Lean.Syntax.hasArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L855-L857","name":"Lean.Syntax.hasArgs","docLink":"./Init/Meta.html#Lean.Syntax.hasArgs","doc":""},"Lean.Syntax.getTrailingSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L349-L352","name":"Lean.Syntax.getTrailingSize","docLink":"./Init/Meta.html#Lean.Syntax.getTrailingSize","doc":""},"Lean.Syntax.getTailWithPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L172-L177","name":"Lean.Syntax.getTailWithPos","docLink":"./Lean/Syntax.html#Lean.Syntax.getTailWithPos","doc":""},"Lean.Syntax.getTailPos?.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2633-L2638","name":"Lean.Syntax.getTailPos?.loop","docLink":"./Init/Prelude.html#Lean.Syntax.getTailPos?.loop","doc":""},"Lean.Syntax.getTailPos?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2624-L2640","name":"Lean.Syntax.getTailPos?","docLink":"./Init/Prelude.html#Lean.Syntax.getTailPos?","doc":""},"Lean.Syntax.getTailInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L338-L344","name":"Lean.Syntax.getTailInfo?","docLink":"./Init/Meta.html#Lean.Syntax.getTailInfo?","doc":""},"Lean.Syntax.getTailInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L346-L347","name":"Lean.Syntax.getTailInfo","docLink":"./Init/Meta.html#Lean.Syntax.getTailInfo","doc":""},"Lean.Syntax.getSubstring?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L357-L365","name":"Lean.Syntax.getSubstring?","docLink":"./Init/Meta.html#Lean.Syntax.getSubstring?","doc":"Return substring of original input covering `stx`.\nResult is meaningful only if all involved `SourceInfo.original`s refer to the same string (as is the case after parsing). "},"Lean.Syntax.getSepArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1142-L1143","name":"Lean.Syntax.getSepArgs","docLink":"./Init/Meta.html#Lean.Syntax.getSepArgs","doc":""},"Lean.Syntax.getRange?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L17-L20","name":"Lean.Syntax.getRange?","docLink":"./Lean/Server/InfoUtils.html#Lean.Syntax.getRange?","doc":""},"Lean.Syntax.getQuotContent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L374-L379","name":"Lean.Syntax.getQuotContent","docLink":"./Lean/Syntax.html#Lean.Syntax.getQuotContent","doc":""},"Lean.Syntax.getPos?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2621-L2622","name":"Lean.Syntax.getPos?","docLink":"./Init/Prelude.html#Lean.Syntax.getPos?","doc":""},"Lean.Syntax.getOptionalIdent?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L874-L877","name":"Lean.Syntax.getOptionalIdent?","docLink":"./Init/Meta.html#Lean.Syntax.getOptionalIdent?","doc":""},"Lean.Syntax.getOptional?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2567-L2572","name":"Lean.Syntax.getOptional?","docLink":"./Init/Prelude.html#Lean.Syntax.getOptional?","doc":""},"Lean.Syntax.getNumArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2562-L2565","name":"Lean.Syntax.getNumArgs","docLink":"./Init/Prelude.html#Lean.Syntax.getNumArgs","doc":""},"Lean.Syntax.getKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2531-L2539","name":"Lean.Syntax.getKind","docLink":"./Init/Prelude.html#Lean.Syntax.getKind","doc":""},"Lean.Syntax.getIdAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L87-L88","name":"Lean.Syntax.getIdAt","docLink":"./Lean/Syntax.html#Lean.Syntax.getIdAt","doc":""},"Lean.Syntax.getId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2586-L2588","name":"Lean.Syntax.getId","docLink":"./Init/Prelude.html#Lean.Syntax.getId","doc":""},"Lean.Syntax.getHeadInfo?.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2605-L2610","name":"Lean.Syntax.getHeadInfo?.loop","docLink":"./Init/Prelude.html#Lean.Syntax.getHeadInfo?.loop","doc":""},"Lean.Syntax.getHeadInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2601-L2613","name":"Lean.Syntax.getHeadInfo?","docLink":"./Init/Prelude.html#Lean.Syntax.getHeadInfo?","doc":"Retrieve the left-most node or leaf's info in the Syntax tree. "},"Lean.Syntax.getHeadInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2616-L2619","name":"Lean.Syntax.getHeadInfo","docLink":"./Init/Prelude.html#Lean.Syntax.getHeadInfo","doc":"Retrieve the left-most leaf's info in the Syntax tree, or `none` if there is no token. "},"Lean.Syntax.getHead?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L426-L431","name":"Lean.Syntax.getHead?","docLink":"./Init/Meta.html#Lean.Syntax.getHead?","doc":"Return the first atom/identifier that has position information "},"Lean.Syntax.getCanonicalAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L389-L393","name":"Lean.Syntax.getCanonicalAntiquot","docLink":"./Lean/Syntax.html#Lean.Syntax.getCanonicalAntiquot","doc":""},"Lean.Syntax.getAtomVal!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L65-L67","name":"Lean.Syntax.getAtomVal!","docLink":"./Lean/Syntax.html#Lean.Syntax.getAtomVal!","doc":""},"Lean.Syntax.getArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2557-L2560","name":"Lean.Syntax.getArgs","docLink":"./Init/Prelude.html#Lean.Syntax.getArgs","doc":""},"Lean.Syntax.getArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2549-L2552","name":"Lean.Syntax.getArg","docLink":"./Init/Prelude.html#Lean.Syntax.getArg","doc":""},"Lean.Syntax.getAntiquotTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L418-L424","name":"Lean.Syntax.getAntiquotTerm","docLink":"./Lean/Syntax.html#Lean.Syntax.getAntiquotTerm","doc":""},"Lean.Syntax.getAntiquotSuffixSpliceInner":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L471-L472","name":"Lean.Syntax.getAntiquotSuffixSpliceInner","docLink":"./Lean/Syntax.html#Lean.Syntax.getAntiquotSuffixSpliceInner","doc":""},"Lean.Syntax.getAntiquotSpliceSuffix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L452-L456","name":"Lean.Syntax.getAntiquotSpliceSuffix","docLink":"./Lean/Syntax.html#Lean.Syntax.getAntiquotSpliceSuffix","doc":""},"Lean.Syntax.getAntiquotSpliceContents":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L448-L449","name":"Lean.Syntax.getAntiquotSpliceContents","docLink":"./Lean/Syntax.html#Lean.Syntax.getAntiquotSpliceContents","doc":""},"Lean.Syntax.formatStxAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Syntax.lean#L22-L39","name":"Lean.Syntax.formatStxAux","docLink":"./Init/Data/Format/Syntax.html#Lean.Syntax.formatStxAux","doc":""},"Lean.Syntax.formatStx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Format/Syntax.lean#L41-L42","name":"Lean.Syntax.formatStx","docLink":"./Init/Data/Format/Syntax.html#Lean.Syntax.formatStx","doc":""},"Lean.Syntax.forArgsM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1948-L1949","name":"Lean.Syntax.forArgsM","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.forArgsM","doc":""},"Lean.Syntax.foldArgsM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1942-L1943","name":"Lean.Syntax.foldArgsM","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.foldArgsM","doc":""},"Lean.Syntax.foldArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1945-L1946","name":"Lean.Syntax.foldArgs","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.foldArgs","doc":""},"Lean.Syntax.findAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L879-L881","name":"Lean.Syntax.findAux","docLink":"./Init/Meta.html#Lean.Syntax.findAux","doc":""},"Lean.Syntax.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L883-L884","name":"Lean.Syntax.find?","docLink":"./Init/Meta.html#Lean.Syntax.find?","doc":""},"Lean.Syntax.decodeStrLitAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L767-L778","name":"Lean.Syntax.decodeStrLitAux","docLink":"./Init/Meta.html#Lean.Syntax.decodeStrLitAux","doc":""},"Lean.Syntax.decodeStrLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L780-L781","name":"Lean.Syntax.decodeStrLit","docLink":"./Init/Meta.html#Lean.Syntax.decodeStrLit","doc":""},"Lean.Syntax.decodeScientificLitVal?.decodeExp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L697-L702","name":"Lean.Syntax.decodeScientificLitVal?.decodeExp","docLink":"./Init/Meta.html#Lean.Syntax.decodeScientificLitVal?.decodeExp","doc":""},"Lean.Syntax.decodeScientificLitVal?.decodeAfterExp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L682-L695","name":"Lean.Syntax.decodeScientificLitVal?.decodeAfterExp","docLink":"./Init/Meta.html#Lean.Syntax.decodeScientificLitVal?.decodeAfterExp","doc":""},"Lean.Syntax.decodeScientificLitVal?.decodeAfterDot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L704-L714","name":"Lean.Syntax.decodeScientificLitVal?.decodeAfterDot","docLink":"./Init/Meta.html#Lean.Syntax.decodeScientificLitVal?.decodeAfterDot","doc":""},"Lean.Syntax.decodeScientificLitVal?.decode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L716-L728","name":"Lean.Syntax.decodeScientificLitVal?.decode","docLink":"./Init/Meta.html#Lean.Syntax.decodeScientificLitVal?.decode","doc":""},"Lean.Syntax.decodeScientificLitVal?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L673-L728","name":"Lean.Syntax.decodeScientificLitVal?","docLink":"./Init/Meta.html#Lean.Syntax.decodeScientificLitVal?","doc":""},"Lean.Syntax.decodeQuotedChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L745-L765","name":"Lean.Syntax.decodeQuotedChar","docLink":"./Init/Meta.html#Lean.Syntax.decodeQuotedChar","doc":""},"Lean.Syntax.decodeNatLitVal?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L634-L649","name":"Lean.Syntax.decodeNatLitVal?","docLink":"./Init/Meta.html#Lean.Syntax.decodeNatLitVal?","doc":""},"Lean.Syntax.decodeNameLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L831-L848","name":"Lean.Syntax.decodeNameLit","docLink":"./Init/Meta.html#Lean.Syntax.decodeNameLit","doc":""},"Lean.Syntax.decodeCharLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L788-L794","name":"Lean.Syntax.decodeCharLit","docLink":"./Init/Meta.html#Lean.Syntax.decodeCharLit","doc":""},"Lean.Syntax.copyHeadTailInfoFrom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L433-L434","name":"Lean.Syntax.copyHeadTailInfoFrom","docLink":"./Init/Meta.html#Lean.Syntax.copyHeadTailInfoFrom","doc":""},"Lean.Syntax.asNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L83-L85","name":"Lean.Syntax.asNode","docLink":"./Lean/Syntax.html#Lean.Syntax.asNode","doc":""},"Lean.Syntax.antiquotSuffixSplice?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L463-L465","name":"Lean.Syntax.antiquotSuffixSplice?","docLink":"./Lean/Syntax.html#Lean.Syntax.antiquotSuffixSplice?","doc":""},"Lean.Syntax.antiquotSpliceKind?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L441-L443","name":"Lean.Syntax.antiquotSpliceKind?","docLink":"./Lean/Syntax.html#Lean.Syntax.antiquotSpliceKind?","doc":""},"Lean.Syntax.antiquotKinds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L432-L438","name":"Lean.Syntax.antiquotKinds","docLink":"./Lean/Syntax.html#Lean.Syntax.antiquotKinds","doc":""},"Lean.Syntax.antiquotKind?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L427-L430","name":"Lean.Syntax.antiquotKind?","docLink":"./Lean/Syntax.html#Lean.Syntax.antiquotKind?","doc":"Return kind of parser expected at this antiquotation, and whether it is a \"pseudo\" kind (see `mkAntiquot`). "},"Lean.Syntax.Traverser.up":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L311-L316","name":"Lean.Syntax.Traverser.up","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.up","doc":"Advance to the parent of the current node, if any. "},"Lean.Syntax.Traverser.setCur":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L300-L301","name":"Lean.Syntax.Traverser.setCur","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.setCur","doc":""},"Lean.Syntax.Traverser.right":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L326-L330","name":"Lean.Syntax.Traverser.right","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.right","doc":"Advance to the right sibling of the current node, if any. "},"Lean.Syntax.Traverser.left":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L319-L323","name":"Lean.Syntax.Traverser.left","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.left","doc":"Advance to the left sibling of the current node, if any. "},"Lean.Syntax.Traverser.fromSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L297-L298","name":"Lean.Syntax.Traverser.fromSyntax","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.fromSyntax","doc":""},"Lean.Syntax.Traverser.down":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L304-L308","name":"Lean.Syntax.Traverser.down","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.down","doc":"Advance to the `idx`-th child of the current node. "},"Lean.Syntax.Traverser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L290-L293","name":"Lean.Syntax.Traverser","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser","doc":"Represents a cursor into a syntax tree that can be read, written, and advanced down/up/left/right.\nIndices are allowed to be out-of-bound, in which case `cur` is `Syntax.missing`.\nIf the `Traverser` is used linearly, updates are linear in the `Syntax` object as well.\n"},"Lean.Syntax.TopDown":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L223-L225","name":"Lean.Syntax.TopDown","docLink":"./Lean/Syntax.html#Lean.Syntax.TopDown","doc":""},"Lean.Syntax.Term":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L260-L260","name":"Lean.Syntax.Term","docLink":"./Init/Meta.html#Lean.Syntax.Term","doc":""},"Lean.Syntax.TSepArray.push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1064-L1068","name":"Lean.Syntax.TSepArray.push","docLink":"./Init/Meta.html#Lean.Syntax.TSepArray.push","doc":""},"Lean.Syntax.TSepArray.getElems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1061-L1062","name":"Lean.Syntax.TSepArray.getElems","docLink":"./Init/Meta.html#Lean.Syntax.TSepArray.getElems","doc":""},"Lean.Syntax.TSepArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2649-L2650","name":"Lean.Syntax.TSepArray","docLink":"./Init/Prelude.html#Lean.Syntax.TSepArray","doc":"A typed version of `SepArray`. "},"Lean.Syntax.StrLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L266-L266","name":"Lean.Syntax.StrLit","docLink":"./Init/Meta.html#Lean.Syntax.StrLit","doc":""},"Lean.Syntax.SepArray.ofElemsUsingRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L557-L559","name":"Lean.Syntax.SepArray.ofElemsUsingRef","docLink":"./Init/Meta.html#Lean.Syntax.SepArray.ofElemsUsingRef","doc":""},"Lean.Syntax.SepArray.ofElems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L554-L555","name":"Lean.Syntax.SepArray.ofElems","docLink":"./Init/Meta.html#Lean.Syntax.SepArray.ofElems","doc":""},"Lean.Syntax.SepArray.getElems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1058-L1059","name":"Lean.Syntax.SepArray.getElems","docLink":"./Init/Meta.html#Lean.Syntax.SepArray.getElems","doc":""},"Lean.Syntax.SepArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2645-L2646","name":"Lean.Syntax.SepArray","docLink":"./Init/Prelude.html#Lean.Syntax.SepArray","doc":"An array of syntax elements interspersed with separators. Can be coerced to/from `Array Syntax` to automatically\nremove/insert the separators. "},"Lean.Syntax.ScientificLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L269-L269","name":"Lean.Syntax.ScientificLit","docLink":"./Init/Meta.html#Lean.Syntax.ScientificLit","doc":""},"Lean.Syntax.Prio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L264-L264","name":"Lean.Syntax.Prio","docLink":"./Init/Meta.html#Lean.Syntax.Prio","doc":""},"Lean.Syntax.Prec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L263-L263","name":"Lean.Syntax.Prec","docLink":"./Init/Meta.html#Lean.Syntax.Prec","doc":""},"Lean.Syntax.NumLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L270-L270","name":"Lean.Syntax.NumLit","docLink":"./Init/Meta.html#Lean.Syntax.NumLit","doc":""},"Lean.Syntax.NameLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L268-L268","name":"Lean.Syntax.NameLit","docLink":"./Init/Meta.html#Lean.Syntax.NameLit","doc":""},"Lean.Syntax.MonadTraverser.setCur":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L343-L343","name":"Lean.Syntax.MonadTraverser.setCur","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.setCur","doc":""},"Lean.Syntax.MonadTraverser.goUp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L345-L345","name":"Lean.Syntax.MonadTraverser.goUp","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.goUp","doc":""},"Lean.Syntax.MonadTraverser.goRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L347-L347","name":"Lean.Syntax.MonadTraverser.goRight","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.goRight","doc":""},"Lean.Syntax.MonadTraverser.goLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L346-L346","name":"Lean.Syntax.MonadTraverser.goLeft","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.goLeft","doc":""},"Lean.Syntax.MonadTraverser.goDown":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L344-L344","name":"Lean.Syntax.MonadTraverser.goDown","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.goDown","doc":""},"Lean.Syntax.MonadTraverser.getIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L349-L351","name":"Lean.Syntax.MonadTraverser.getIdx","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.getIdx","doc":""},"Lean.Syntax.MonadTraverser.getCur":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L342-L342","name":"Lean.Syntax.MonadTraverser.getCur","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.getCur","doc":""},"Lean.Syntax.MonadTraverser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L335-L336","name":"Lean.Syntax.MonadTraverser","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser","doc":"Monad class that gives read/write access to a `Traverser`. "},"Lean.Syntax.Level":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L262-L262","name":"Lean.Syntax.Level","docLink":"./Init/Meta.html#Lean.Syntax.Level","doc":""},"Lean.Syntax.Ident":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L265-L265","name":"Lean.Syntax.Ident","docLink":"./Init/Meta.html#Lean.Syntax.Ident","doc":""},"Lean.Syntax.Command":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L261-L261","name":"Lean.Syntax.Command","docLink":"./Init/Meta.html#Lean.Syntax.Command","doc":""},"Lean.Syntax.CharLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L267-L267","name":"Lean.Syntax.CharLit","docLink":"./Init/Meta.html#Lean.Syntax.CharLit","doc":""},"Lean.Syntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2472-L2496","name":"Lean.Syntax","docLink":"./Init/Prelude.html#Lean.Syntax","doc":"Syntax objects used by the parser, macro expander, delaborator, etc.\n"},"Lean.SubExpr.mkRoot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L148-L148","name":"Lean.SubExpr.mkRoot","docLink":"./Lean/SubExpr.html#Lean.SubExpr.mkRoot","doc":""},"Lean.SubExpr.isRoot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L151-L151","name":"Lean.SubExpr.isRoot","docLink":"./Lean/SubExpr.html#Lean.SubExpr.isRoot","doc":"Returns true if the selected subexpression is the topmost one."},"Lean.SubExpr.Pos.typeCoord":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L23-L23","name":"Lean.SubExpr.Pos.typeCoord","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.typeCoord","doc":"The coordinate `3 = maxChildren - 1` is\nreserved to denote the type of the expression. "},"Lean.SubExpr.Pos.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L101-L105","name":"Lean.SubExpr.Pos.toString","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.toString","doc":""},"Lean.SubExpr.Pos.toArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L83-L84","name":"Lean.SubExpr.Pos.toArray","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.toArray","doc":"Decodes a subexpression `Pos` as a sequence of coordinates `cs : Array Nat`. See `Pos.fromArray` for details.\n`cs[0]` is the coordinate for the root expression. "},"Lean.SubExpr.Pos.tail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L39-L41","name":"Lean.SubExpr.Pos.tail","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.tail","doc":""},"Lean.SubExpr.Pos.root":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L28-L28","name":"Lean.SubExpr.Pos.root","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.root","doc":"The Pos representing the root subexpression. "},"Lean.SubExpr.Pos.pushProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L93-L93","name":"Lean.SubExpr.Pos.pushProj","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushProj","doc":""},"Lean.SubExpr.Pos.pushNaryFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L95-L96","name":"Lean.SubExpr.Pos.pushNaryFn","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNaryFn","doc":""},"Lean.SubExpr.Pos.pushNaryArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L98-L99","name":"Lean.SubExpr.Pos.pushNaryArg","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNaryArg","doc":""},"Lean.SubExpr.Pos.pushLetVarType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L88-L88","name":"Lean.SubExpr.Pos.pushLetVarType","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetVarType","doc":""},"Lean.SubExpr.Pos.pushLetValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L89-L89","name":"Lean.SubExpr.Pos.pushLetValue","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetValue","doc":""},"Lean.SubExpr.Pos.pushLetBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L90-L90","name":"Lean.SubExpr.Pos.pushLetBody","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetBody","doc":""},"Lean.SubExpr.Pos.pushBindingDomain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L86-L86","name":"Lean.SubExpr.Pos.pushBindingDomain","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushBindingDomain","doc":""},"Lean.SubExpr.Pos.pushBindingBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L87-L87","name":"Lean.SubExpr.Pos.pushBindingBody","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushBindingBody","doc":""},"Lean.SubExpr.Pos.pushAppFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L91-L91","name":"Lean.SubExpr.Pos.pushAppFn","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushAppFn","doc":""},"Lean.SubExpr.Pos.pushAppArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L92-L92","name":"Lean.SubExpr.Pos.pushAppArg","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushAppArg","doc":""},"Lean.SubExpr.Pos.push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L43-L45","name":"Lean.SubExpr.Pos.push","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.push","doc":""},"Lean.SubExpr.Pos.ofArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L78-L79","name":"Lean.SubExpr.Pos.ofArray","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.ofArray","doc":"Creates a subexpression `Pos` from an array of 'coordinates'.\nEach coordinate is a number {0,1,2} expressing which child subexpression should be explored.\nThe first coordinate in the array corresponds to the root of the expression tree.  "},"Lean.SubExpr.Pos.maxChildren":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L19-L19","name":"Lean.SubExpr.Pos.maxChildren","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.maxChildren","doc":""},"Lean.SubExpr.Pos.isRoot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L32-L32","name":"Lean.SubExpr.Pos.isRoot","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.isRoot","doc":""},"Lean.SubExpr.Pos.instToStringPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L122-L122","name":"Lean.SubExpr.Pos.instToStringPos","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instToStringPos","doc":""},"Lean.SubExpr.Pos.instToJsonPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L126-L126","name":"Lean.SubExpr.Pos.instToJsonPos","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instToJsonPos","doc":""},"Lean.SubExpr.Pos.instOrdPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L120-L120","name":"Lean.SubExpr.Pos.instOrdPos","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instOrdPos","doc":""},"Lean.SubExpr.Pos.instInhabitedPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L30-L30","name":"Lean.SubExpr.Pos.instInhabitedPos","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instInhabitedPos","doc":""},"Lean.SubExpr.Pos.instFromJsonPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L127-L127","name":"Lean.SubExpr.Pos.instFromJsonPos","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instFromJsonPos","doc":""},"Lean.SubExpr.Pos.instDecidableEqPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L121-L121","name":"Lean.SubExpr.Pos.instDecidableEqPos","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instDecidableEqPos","doc":""},"Lean.SubExpr.Pos.head":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L35-L37","name":"Lean.SubExpr.Pos.head","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.head","doc":"The coordinate deepest in the Pos. "},"Lean.SubExpr.Pos.fromString?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L113-L118","name":"Lean.SubExpr.Pos.fromString?","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.fromString?","doc":""},"Lean.SubExpr.Pos.foldrM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L63-L64","name":"Lean.SubExpr.Pos.foldrM","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldrM","doc":"monad-fold over the position starting at the leaf and finishing at the root. "},"Lean.SubExpr.Pos.foldr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L54-L55","name":"Lean.SubExpr.Pos.foldr","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldr","doc":"Fold over the position starting at the leaf and heading to the root"},"Lean.SubExpr.Pos.foldlM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L58-L60","name":"Lean.SubExpr.Pos.foldlM","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldlM","doc":"monad-fold over the position starting at the root and heading to the leaf "},"Lean.SubExpr.Pos.foldl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L50-L51","name":"Lean.SubExpr.Pos.foldl","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldl","doc":"Fold over the position starting at the root and heading to the leaf"},"Lean.SubExpr.Pos.depth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L66-L67","name":"Lean.SubExpr.Pos.depth","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.depth","doc":""},"Lean.SubExpr.Pos.asNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L25-L25","name":"Lean.SubExpr.Pos.asNat","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.asNat","doc":""},"Lean.SubExpr.Pos.append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L73-L73","name":"Lean.SubExpr.Pos.append","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.append","doc":""},"Lean.SubExpr.Pos.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L70-L71","name":"Lean.SubExpr.Pos.all","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.all","doc":"Returns true if `pred` is true for each coordinate in `p`."},"Lean.SubExpr.Pos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L15-L15","name":"Lean.SubExpr.Pos","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos","doc":"A position of a subexpression in an expression.\n\nSee docstring of `SubExpr` for more detail."},"Lean.SubExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L141-L144","name":"Lean.SubExpr","docLink":"./Lean/SubExpr.html#Lean.SubExpr","doc":"An expression and the position of a subexpression within this expression.\n\nSubexpressions are encoded as the current subexpression `e` and a\nposition `p : Pos` denoting `e`'s position with respect to the root expression.\n\nWe use a simple encoding scheme for expression positions `Pos`:\nevery `Expr` constructor has at most 3 direct expression children. Considering an expression's type\nto be one extra child as well, we can injectively map a path of `childIdxs` to a natural number\nby computing the value of the 4-ary representation `1 :: childIdxs`, since n-ary representations\nwithout leading zeros are unique. Note that `pos` is initialized to `1` (case `childIdxs == []`)."},"Lean.StructureInfo.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L31-L32","name":"Lean.StructureInfo.lt","docLink":"./Lean/Structure.html#Lean.StructureInfo.lt","doc":""},"Lean.StructureInfo.getProjFn?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L34-L39","name":"Lean.StructureInfo.getProjFn?","docLink":"./Lean/Structure.html#Lean.StructureInfo.getProjFn?","doc":""},"Lean.StructureInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L25-L29","name":"Lean.StructureInfo","docLink":"./Lean/Structure.html#Lean.StructureInfo","doc":""},"Lean.StructureFieldInfo.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L22-L23","name":"Lean.StructureFieldInfo.lt","docLink":"./Lean/Structure.html#Lean.StructureFieldInfo.lt","doc":""},"Lean.StructureFieldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L13-L20","name":"Lean.StructureFieldInfo","docLink":"./Lean/Structure.html#Lean.StructureFieldInfo","doc":""},"Lean.StructureDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Structure.lean#L53-L56","name":"Lean.StructureDescr","docLink":"./Lean/Structure.html#Lean.StructureDescr","doc":""},"Lean.SourceInfo.updateTrailing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L11-L13","name":"Lean.SourceInfo.updateTrailing","docLink":"./Lean/Syntax.html#Lean.SourceInfo.updateTrailing","doc":""},"Lean.SourceInfo.getPos?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2457-L2461","name":"Lean.SourceInfo.getPos?","docLink":"./Init/Prelude.html#Lean.SourceInfo.getPos?","doc":""},"Lean.SourceInfo.fromRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2666-L2669","name":"Lean.SourceInfo.fromRef","docLink":"./Init/Prelude.html#Lean.SourceInfo.fromRef","doc":""},"Lean.SourceInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2435-L2451","name":"Lean.SourceInfo","docLink":"./Init/Prelude.html#Lean.SourceInfo","doc":"Source information of tokens. "},"Lean.SimpleScopedEnvExtension.Descr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L199-L203","name":"Lean.SimpleScopedEnvExtension.Descr","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension.Descr","doc":""},"Lean.SimpleScopedEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L197-L197","name":"Lean.SimpleScopedEnvExtension","docLink":"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension","doc":""},"Lean.SimplePersistentEnvExtensionDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L449-L453","name":"Lean.SimplePersistentEnvExtensionDescr","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr","doc":""},"Lean.SimplePersistentEnvExtension.setState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L477-L478","name":"Lean.SimplePersistentEnvExtension.setState","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.setState","doc":""},"Lean.SimplePersistentEnvExtension.modifyState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L480-L481","name":"Lean.SimplePersistentEnvExtension.modifyState","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.modifyState","doc":""},"Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L468-L469","name":"Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","doc":""},"Lean.SimplePersistentEnvExtension.getState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L474-L475","name":"Lean.SimplePersistentEnvExtension.getState","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getState","doc":""},"Lean.SimplePersistentEnvExtension.getEntries":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L471-L472","name":"Lean.SimplePersistentEnvExtension.getEntries","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getEntries","doc":""},"Lean.SimplePersistentEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L444-L444","name":"Lean.SimplePersistentEnvExtension","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension","doc":"Simple `PersistentEnvExtension` that implements `exportEntriesFn` using a list of entries. "},"Lean.Server.wrapRpcProcedure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/RequestHandling.lean#L58-L96","name":"Lean.Server.wrapRpcProcedure","docLink":"./Lean/Server/Rpc/RequestHandling.html#Lean.Server.wrapRpcProcedure","doc":""},"Lean.Server.userRpcProcedures":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/RequestHandling.lean#L24-L24","name":"Lean.Server.userRpcProcedures","docLink":"./Lean/Server/Rpc/RequestHandling.html#Lean.Server.userRpcProcedures","doc":""},"Lean.Server.routeLspRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L243-L246","name":"Lean.Server.routeLspRequest","docLink":"./Lean/Server/Requests.html#Lean.Server.routeLspRequest","doc":""},"Lean.Server.requestHandlers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L182-L182","name":"Lean.Server.requestHandlers","docLink":"./Lean/Server/Requests.html#Lean.Server.requestHandlers","doc":""},"Lean.Server.replaceLspRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L102-L107","name":"Lean.Server.replaceLspRange","docLink":"./Lean/Server/Utils.html#Lean.Server.replaceLspRange","doc":""},"Lean.Server.registerRpcProcedure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/RequestHandling.lean#L112-L133","name":"Lean.Server.registerRpcProcedure","docLink":"./Lean/Server/Rpc/RequestHandling.html#Lean.Server.registerRpcProcedure","doc":""},"Lean.Server.registerLspRequestHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L197-L212","name":"Lean.Server.registerLspRequestHandler","docLink":"./Lean/Server/Requests.html#Lean.Server.registerLspRequestHandler","doc":"NB: This method may only be called in `initialize` blocks (user or builtin).\n\nA registration consists of:\n- a type of JSON-parsable request data `paramType`\n- a `FileSource` instance for it so the system knows where to route requests\n- a type of JSON-serializable response data `respType`\n- an actual `handler` which runs in the `RequestM` monad and is expected\n  to produce an asynchronous `RequestTask` which does any waiting/computation\n\nA handler task may be cancelled at any time, so it should check the cancellation token when possible\nto handle this cooperatively. Any exceptions thrown in a request handler will be reported to the client\nas LSP error responses. "},"Lean.Server.registerBuiltinRpcProcedure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/RequestHandling.lean#L98-L109","name":"Lean.Server.registerBuiltinRpcProcedure","docLink":"./Lean/Server/Rpc/RequestHandling.html#Lean.Server.registerBuiltinRpcProcedure","doc":""},"Lean.Server.publishProgressDone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L162-L163","name":"Lean.Server.publishProgressDone","docLink":"./Lean/Server/Utils.html#Lean.Server.publishProgressDone","doc":""},"Lean.Server.publishProgressAtPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L159-L160","name":"Lean.Server.publishProgressAtPos","docLink":"./Lean/Server/Utils.html#Lean.Server.publishProgressAtPos","doc":""},"Lean.Server.publishProgress":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L149-L157","name":"Lean.Server.publishProgress","docLink":"./Lean/Server/Utils.html#Lean.Server.publishProgress","doc":""},"Lean.Server.publishDiagnostics":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L138-L147","name":"Lean.Server.publishDiagnostics","docLink":"./Lean/Server/Utils.html#Lean.Server.publishDiagnostics","doc":""},"Lean.Server.parseRequestParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L52-L56","name":"Lean.Server.parseRequestParams","docLink":"./Lean/Server/Requests.html#Lean.Server.parseRequestParams","doc":""},"Lean.Server.maybeTee":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L113-L123","name":"Lean.Server.maybeTee","docLink":"./Lean/Server/Utils.html#Lean.Server.maybeTee","doc":"Duplicates an I/O stream to a log file `fName` in LEAN_SERVER_LOG_DIR\nif that envvar is set. "},"Lean.Server.lookupLspRequestHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L214-L215","name":"Lean.Server.lookupLspRequestHandler","docLink":"./Lean/Server/Requests.html#Lean.Server.lookupLspRequestHandler","doc":""},"Lean.Server.locationLinksFromDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/GoTo.lean#L28-L47","name":"Lean.Server.locationLinksFromDecl","docLink":"./Lean/Server/GoTo.html#Lean.Server.locationLinksFromDecl","doc":""},"Lean.Server.instToJsonIlean":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L112-L112","name":"Lean.Server.instToJsonIlean","docLink":"./Lean/Server/References.html#Lean.Server.instToJsonIlean","doc":""},"Lean.Server.instToJsonGoToKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/GoTo.lean#L17-L17","name":"Lean.Server.instToJsonGoToKind","docLink":"./Lean/Server/GoTo.html#Lean.Server.instToJsonGoToKind","doc":""},"Lean.Server.instRpcEncodingProd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L69-L77","name":"Lean.Server.instRpcEncodingProd","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodingProd","doc":""},"Lean.Server.instRpcEncodingOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L56-L62","name":"Lean.Server.instRpcEncodingOption","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodingOption","doc":""},"Lean.Server.instRpcEncodingArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L65-L67","name":"Lean.Server.instRpcEncodingArray","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncodingArray","doc":""},"Lean.Server.instRpcEncoding":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L52-L54","name":"Lean.Server.instRpcEncoding","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instRpcEncoding","doc":""},"Lean.Server.instNonemptyRpcEncoding":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L49-L50","name":"Lean.Server.instNonemptyRpcEncoding","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instNonemptyRpcEncoding","doc":""},"Lean.Server.instMonadRpcSession":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L27-L30","name":"Lean.Server.instMonadRpcSession","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instMonadRpcSession","doc":""},"Lean.Server.instMonadLiftIORequestM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L70-L74","name":"Lean.Server.instMonadLiftIORequestM","docLink":"./Lean/Server/Requests.html#Lean.Server.instMonadLiftIORequestM","doc":""},"Lean.Server.instMonadLiftEIOExceptionRequestM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L76-L80","name":"Lean.Server.instMonadLiftEIOExceptionRequestM","docLink":"./Lean/Server/Requests.html#Lean.Server.instMonadLiftEIOExceptionRequestM","doc":""},"Lean.Server.instInhabitedWithRpcRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L85-L85","name":"Lean.Server.instInhabitedWithRpcRef","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.instInhabitedWithRpcRef","doc":""},"Lean.Server.instInhabitedRpcProcedure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/RequestHandling.lean#L16-L16","name":"Lean.Server.instInhabitedRpcProcedure","docLink":"./Lean/Server/Rpc/RequestHandling.html#Lean.Server.instInhabitedRpcProcedure","doc":""},"Lean.Server.instInhabitedRequestError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L23-L23","name":"Lean.Server.instInhabitedRequestError","docLink":"./Lean/Server/Requests.html#Lean.Server.instInhabitedRequestError","doc":""},"Lean.Server.instInhabitedReference":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L23-L23","name":"Lean.Server.instInhabitedReference","docLink":"./Lean/Server/References.html#Lean.Server.instInhabitedReference","doc":""},"Lean.Server.instInhabitedDocumentMeta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L95-L95","name":"Lean.Server.instInhabitedDocumentMeta","docLink":"./Lean/Server/Utils.html#Lean.Server.instInhabitedDocumentMeta","doc":""},"Lean.Server.instFromJsonIlean":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L112-L112","name":"Lean.Server.instFromJsonIlean","docLink":"./Lean/Server/References.html#Lean.Server.instFromJsonIlean","doc":""},"Lean.Server.instFromJsonGoToKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/GoTo.lean#L17-L17","name":"Lean.Server.instFromJsonGoToKind","docLink":"./Lean/Server/GoTo.html#Lean.Server.instFromJsonGoToKind","doc":""},"Lean.Server.instBEqGoToKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/GoTo.lean#L17-L17","name":"Lean.Server.instBEqGoToKind","docLink":"./Lean/Server/GoTo.html#Lean.Server.instBEqGoToKind","doc":""},"Lean.Server.identOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L125-L131","name":"Lean.Server.identOf","docLink":"./Lean/Server/References.html#Lean.Server.identOf","doc":""},"Lean.Server.handleLspRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L248-L253","name":"Lean.Server.handleLspRequest","docLink":"./Lean/Server/Requests.html#Lean.Server.handleLspRequest","doc":""},"Lean.Server.foldDocumentChanges":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L135-L136","name":"Lean.Server.foldDocumentChanges","docLink":"./Lean/Server/Utils.html#Lean.Server.foldDocumentChanges","doc":"Returns the document contents with all changes applied. "},"Lean.Server.findReferences":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L133-L139","name":"Lean.Server.findReferences","docLink":"./Lean/Server/References.html#Lean.Server.findReferences","doc":""},"Lean.Server.findModuleRefs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L215-L225","name":"Lean.Server.findModuleRefs","docLink":"./Lean/Server/References.html#Lean.Server.findModuleRefs","doc":""},"Lean.Server.documentUriFromModule":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/GoTo.lean#L19-L25","name":"Lean.Server.documentUriFromModule","docLink":"./Lean/Server/GoTo.html#Lean.Server.documentUriFromModule","doc":""},"Lean.Server.dedupReferences":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L203-L213","name":"Lean.Server.dedupReferences","docLink":"./Lean/Server/References.html#Lean.Server.dedupReferences","doc":""},"Lean.Server.combineFvars.insertIdMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L196-L201","name":"Lean.Server.combineFvars.insertIdMap","docLink":"./Lean/Server/References.html#Lean.Server.combineFvars.insertIdMap","doc":""},"Lean.Server.combineFvars.findCanonicalBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L172-L175","name":"Lean.Server.combineFvars.findCanonicalBinder","docLink":"./Lean/Server/References.html#Lean.Server.combineFvars.findCanonicalBinder","doc":""},"Lean.Server.combineFvars.buildIdMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L181-L193","name":"Lean.Server.combineFvars.buildIdMap","docLink":"./Lean/Server/References.html#Lean.Server.combineFvars.buildIdMap","doc":""},"Lean.Server.combineFvars.applyIdMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L177-L179","name":"Lean.Server.combineFvars.applyIdMap","docLink":"./Lean/Server/References.html#Lean.Server.combineFvars.applyIdMap","doc":""},"Lean.Server.combineFvars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L151-L201","name":"Lean.Server.combineFvars","docLink":"./Lean/Server/References.html#Lean.Server.combineFvars","doc":"The `FVarId`s of a function parameter in the function's signature and body\ndiffer. However, they have `TermInfo` nodes with `binder := true` in the exact\nsame position. Moreover, macros such as do-reassignment `x := e` may create\nchains of variable definitions where a helper definition overlaps with a use\nof a variable.\n\nThis function changes every such group to use a single `FVarId` (the head of the\nchain/DAG) and gets rid of duplicate definitions.\n"},"Lean.Server.chainLspRequestHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L224-L241","name":"Lean.Server.chainLspRequestHandler","docLink":"./Lean/Server/Requests.html#Lean.Server.chainLspRequestHandler","doc":"NB: This method may only be called in `initialize` blocks (user or builtin).\n\nRegister another handler to invoke after the last one registered for a method.\nAt least one handler for the method must have already been registered to perform\nchaining.\n\nFor more details on the registration of a handler, see `registerLspRequestHandler`. "},"Lean.Server.builtinRpcProcedures":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/RequestHandling.lean#L21-L21","name":"Lean.Server.builtinRpcProcedures","docLink":"./Lean/Server/Rpc/RequestHandling.html#Lean.Server.builtinRpcProcedures","doc":""},"Lean.Server.applyDocumentChange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L128-L132","name":"Lean.Server.applyDocumentChange","docLink":"./Lean/Server/Utils.html#Lean.Server.applyDocumentChange","doc":"Returns the document contents with the change applied. "},"Lean.Server.WithRpcRef.encodeUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L94-L96","name":"Lean.Server.WithRpcRef.encodeUnsafe","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.encodeUnsafe","doc":"This is unsafe because we must ensure that:\n- the stored `NonScalar` is never used to access the value as a type other than `α`\n- the type `α` is not a scalar "},"Lean.Server.WithRpcRef.decodeUnsafeAs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L98-L104","name":"Lean.Server.WithRpcRef.decodeUnsafeAs","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef.decodeUnsafeAs","doc":""},"Lean.Server.WithRpcRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L83-L85","name":"Lean.Server.WithRpcRef","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.WithRpcRef","doc":"Marks fields to encode as opaque references in LSP packets. "},"Lean.Server.Watchdog.workerCfg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L77-L82","name":"Lean.Server.Watchdog.workerCfg","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.workerCfg","doc":""},"Lean.Server.Watchdog.watchdogMain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L777-L786","name":"Lean.Server.Watchdog.watchdogMain","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.watchdogMain","doc":""},"Lean.Server.Watchdog.updateFileWorkers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L189-L190","name":"Lean.Server.Watchdog.updateFileWorkers","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.updateFileWorkers","doc":""},"Lean.Server.Watchdog.tryWriteMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L328-L368","name":"Lean.Server.Watchdog.tryWriteMessage","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.tryWriteMessage","doc":"Tries to write a message, sets the state of the FileWorker to `crashed` if it does not succeed\nand restarts the file worker if the `crashed` flag was already set. Just logs an error if there\nis no FileWorker at this `uri`.\nMessages that couldn't be sent can be queued up via the queueFailedMessage flag and\nwill be discharged after the FileWorker is restarted. "},"Lean.Server.Watchdog.terminateFileWorker":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L306-L318","name":"Lean.Server.Watchdog.terminateFileWorker","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.terminateFileWorker","doc":""},"Lean.Server.Watchdog.startFileWorker":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L271-L304","name":"Lean.Server.Watchdog.startFileWorker","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.startFileWorker","doc":""},"Lean.Server.Watchdog.shutdown":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L562-L567","name":"Lean.Server.Watchdog.shutdown","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.shutdown","doc":""},"Lean.Server.Watchdog.runClientTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L574-L583","name":"Lean.Server.Watchdog.runClientTask","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.runClientTask","doc":""},"Lean.Server.Watchdog.parseParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L483-L486","name":"Lean.Server.Watchdog.parseParams","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.parseParams","doc":""},"Lean.Server.Watchdog.mkLeanServerCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L661-L690","name":"Lean.Server.Watchdog.mkLeanServerCapabilities","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.mkLeanServerCapabilities","doc":""},"Lean.Server.Watchdog.mainLoop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L585-L658","name":"Lean.Server.Watchdog.mainLoop","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.mainLoop","doc":""},"Lean.Server.Watchdog.log":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L207-L210","name":"Lean.Server.Watchdog.log","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.log","doc":""},"Lean.Server.Watchdog.loadReferences":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L716-L727","name":"Lean.Server.Watchdog.loadReferences","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.loadReferences","doc":""},"Lean.Server.Watchdog.initAndRunWatchdogAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L692-L706","name":"Lean.Server.Watchdog.initAndRunWatchdogAux","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.initAndRunWatchdogAux","doc":""},"Lean.Server.Watchdog.initAndRunWatchdog":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L729-L774","name":"Lean.Server.Watchdog.initAndRunWatchdog","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.initAndRunWatchdog","doc":""},"Lean.Server.Watchdog.handleWorkspaceSymbol":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L397-L413","name":"Lean.Server.Watchdog.handleWorkspaceSymbol","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.handleWorkspaceSymbol","doc":""},"Lean.Server.Watchdog.handleRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L515-L543","name":"Lean.Server.Watchdog.handleRequest","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.handleRequest","doc":""},"Lean.Server.Watchdog.handleReference":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L386-L395","name":"Lean.Server.Watchdog.handleReference","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.handleReference","doc":""},"Lean.Server.Watchdog.handleNotification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L545-L558","name":"Lean.Server.Watchdog.handleNotification","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.handleNotification","doc":""},"Lean.Server.Watchdog.handleIleanInfoUpdate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L212-L216","name":"Lean.Server.Watchdog.handleIleanInfoUpdate","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.handleIleanInfoUpdate","doc":""},"Lean.Server.Watchdog.handleIleanInfoFinal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L218-L222","name":"Lean.Server.Watchdog.handleIleanInfoFinal","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.handleIleanInfoFinal","doc":""},"Lean.Server.Watchdog.handleEdits":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L427-L450","name":"Lean.Server.Watchdog.handleEdits","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.handleEdits","doc":""},"Lean.Server.Watchdog.handleDidOpen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L418-L425","name":"Lean.Server.Watchdog.handleDidOpen","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.handleDidOpen","doc":""},"Lean.Server.Watchdog.handleDidClose":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L452-L453","name":"Lean.Server.Watchdog.handleDidClose","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.handleDidClose","doc":""},"Lean.Server.Watchdog.handleDidChangeWatchedFiles":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L455-L468","name":"Lean.Server.Watchdog.handleDidChangeWatchedFiles","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.handleDidChangeWatchedFiles","doc":""},"Lean.Server.Watchdog.handleCrash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L320-L321","name":"Lean.Server.Watchdog.handleCrash","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.handleCrash","doc":""},"Lean.Server.Watchdog.handleCancelRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L470-L476","name":"Lean.Server.Watchdog.handleCancelRequest","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.handleCancelRequest","doc":""},"Lean.Server.Watchdog.forwardRequestToWorker":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L488-L513","name":"Lean.Server.Watchdog.forwardRequestToWorker","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.forwardRequestToWorker","doc":""},"Lean.Server.Watchdog.forwardNotification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L478-L479","name":"Lean.Server.Watchdog.forwardNotification","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.forwardNotification","doc":""},"Lean.Server.Watchdog.findWorkerPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L708-L714","name":"Lean.Server.Watchdog.findWorkerPath","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.findWorkerPath","doc":""},"Lean.Server.Watchdog.findFileWorker?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L192-L193","name":"Lean.Server.Watchdog.findFileWorker?","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.findFileWorker?","doc":""},"Lean.Server.Watchdog.findFileWorker!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L195-L198","name":"Lean.Server.Watchdog.findFileWorker!","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.findFileWorker!","doc":""},"Lean.Server.Watchdog.findDefinitions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L375-L384","name":"Lean.Server.Watchdog.findDefinitions","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.findDefinitions","doc":""},"Lean.Server.Watchdog.eraseFileWorker":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L200-L205","name":"Lean.Server.Watchdog.eraseFileWorker","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.eraseFileWorker","doc":""},"Lean.Server.Watchdog.WorkerState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L92-L101","name":"Lean.Server.Watchdog.WorkerState","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.WorkerState","doc":""},"Lean.Server.Watchdog.WorkerEvent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L85-L90","name":"Lean.Server.Watchdog.WorkerEvent","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.WorkerEvent","doc":"Events that worker-specific tasks signal to the main thread. "},"Lean.Server.Watchdog.ServerM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L187-L187","name":"Lean.Server.Watchdog.ServerM","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.ServerM","doc":""},"Lean.Server.Watchdog.ServerEvent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L569-L572","name":"Lean.Server.Watchdog.ServerEvent","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.ServerEvent","doc":""},"Lean.Server.Watchdog.ServerContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L173-L185","name":"Lean.Server.Watchdog.ServerContext","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.ServerContext","doc":""},"Lean.Server.Watchdog.PendingRequestMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L103-L103","name":"Lean.Server.Watchdog.PendingRequestMap","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.PendingRequestMap","doc":""},"Lean.Server.Watchdog.OpenDocument":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L73-L75","name":"Lean.Server.Watchdog.OpenDocument","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.OpenDocument","doc":""},"Lean.Server.Watchdog.GroupedEdits":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L113-L120","name":"Lean.Server.Watchdog.GroupedEdits","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.GroupedEdits","doc":"A group of edits which will be processed at a future instant. "},"Lean.Server.Watchdog.FileWorkerMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L171-L171","name":"Lean.Server.Watchdog.FileWorkerMap","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.FileWorkerMap","doc":""},"Lean.Server.Watchdog.FileWorker.stdout":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L139-L140","name":"Lean.Server.Watchdog.FileWorker.stdout","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.FileWorker.stdout","doc":""},"Lean.Server.Watchdog.FileWorker.stdin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L136-L137","name":"Lean.Server.Watchdog.FileWorker.stdin","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.FileWorker.stdin","doc":""},"Lean.Server.Watchdog.FileWorker.runEditsSignalTask.loopAction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L152-L160","name":"Lean.Server.Watchdog.FileWorker.runEditsSignalTask.loopAction","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.FileWorker.runEditsSignalTask.loopAction","doc":""},"Lean.Server.Watchdog.FileWorker.runEditsSignalTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L150-L165","name":"Lean.Server.Watchdog.FileWorker.runEditsSignalTask","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.FileWorker.runEditsSignalTask","doc":""},"Lean.Server.Watchdog.FileWorker.errorPendingRequests":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L145-L148","name":"Lean.Server.Watchdog.FileWorker.errorPendingRequests","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.FileWorker.errorPendingRequests","doc":""},"Lean.Server.Watchdog.FileWorker.erasePendingRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L142-L143","name":"Lean.Server.Watchdog.FileWorker.erasePendingRequest","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.FileWorker.erasePendingRequest","doc":""},"Lean.Server.Watchdog.FileWorker":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Watchdog.lean#L122-L132","name":"Lean.Server.Watchdog.FileWorker","docLink":"./Lean/Server/Watchdog.html#Lean.Server.Watchdog.FileWorker","doc":""},"Lean.Server.Snapshots.server.stderrAsMessages":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L105-L105","name":"Lean.Server.Snapshots.server.stderrAsMessages","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.server.stderrAsMessages","doc":""},"Lean.Server.Snapshots.parseNextCmd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L97-L103","name":"Lean.Server.Snapshots.parseNextCmd","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.parseNextCmd","doc":"Parses the next command occurring after the given snapshot\nwithout elaborating it. "},"Lean.Server.Snapshots.instInhabitedSnapshot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L42-L50","name":"Lean.Server.Snapshots.instInhabitedSnapshot","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.instInhabitedSnapshot","doc":""},"Lean.Server.Snapshots.dummyTacticCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L24-L24","name":"Lean.Server.Snapshots.dummyTacticCache","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.dummyTacticCache","doc":""},"Lean.Server.Snapshots.compileNextCmd.withNewInteractiveDiags":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L176-L182","name":"Lean.Server.Snapshots.compileNextCmd.withNewInteractiveDiags","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.compileNextCmd.withNewInteractiveDiags","doc":"Compute the current interactive diagnostics log by finding a \"diff\" relative to the parent\nsnapshot. We need to do this because unlike the `MessageLog` itself, interactive diags are not\npart of the command state. "},"Lean.Server.Snapshots.compileNextCmd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L116-L182","name":"Lean.Server.Snapshots.compileNextCmd","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.compileNextCmd","doc":"Compiles the next command occurring after the given snapshot. If there is no next command\n(file ended), `Snapshot.isAtEnd` will hold of the return value. "},"Lean.Server.Snapshots.Snapshot.runTermElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L90-L91","name":"Lean.Server.Snapshots.Snapshot.runTermElabM","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot.runTermElabM","doc":"Run a `TermElabM` computation using the data in the given snapshot."},"Lean.Server.Snapshots.Snapshot.runCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L86-L87","name":"Lean.Server.Snapshots.Snapshot.runCoreM","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot.runCoreM","doc":"Run a `CoreM` computation using the data in the given snapshot."},"Lean.Server.Snapshots.Snapshot.runCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L76-L83","name":"Lean.Server.Snapshots.Snapshot.runCommandElabM","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot.runCommandElabM","doc":"Use the command state in the given snapshot to run a `CommandElabM`."},"Lean.Server.Snapshots.Snapshot.msgLog":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L60-L61","name":"Lean.Server.Snapshots.Snapshot.msgLog","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot.msgLog","doc":""},"Lean.Server.Snapshots.Snapshot.isAtEnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L71-L72","name":"Lean.Server.Snapshots.Snapshot.isAtEnd","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot.isAtEnd","doc":""},"Lean.Server.Snapshots.Snapshot.infoTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L66-L69","name":"Lean.Server.Snapshots.Snapshot.infoTree","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot.infoTree","doc":""},"Lean.Server.Snapshots.Snapshot.env":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L57-L58","name":"Lean.Server.Snapshots.Snapshot.env","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot.env","doc":""},"Lean.Server.Snapshots.Snapshot.endPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L54-L55","name":"Lean.Server.Snapshots.Snapshot.endPos","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot.endPos","doc":""},"Lean.Server.Snapshots.Snapshot.diagnostics":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L63-L64","name":"Lean.Server.Snapshots.Snapshot.diagnostics","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot.diagnostics","doc":""},"Lean.Server.Snapshots.Snapshot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Snapshots.lean#L27-L40","name":"Lean.Server.Snapshots.Snapshot","docLink":"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot","doc":"What Lean knows about the world after the header and each command. "},"Lean.Server.RpcEncoding.withFieldsFlattened":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Deriving.lean#L69-L72","name":"Lean.Server.RpcEncoding.withFieldsFlattened","docLink":"./Lean/Server/Rpc/Deriving.html#Lean.Server.RpcEncoding.withFieldsFlattened","doc":""},"Lean.Server.RpcEncoding.withFieldsAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Deriving.lean#L54-L62","name":"Lean.Server.RpcEncoding.withFieldsAux","docLink":"./Lean/Server/Rpc/Deriving.html#Lean.Server.RpcEncoding.withFieldsAux","doc":""},"Lean.Server.RpcEncoding.withFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Deriving.lean#L64-L67","name":"Lean.Server.RpcEncoding.withFields","docLink":"./Lean/Server/Rpc/Deriving.html#Lean.Server.RpcEncoding.withFields","doc":""},"Lean.Server.RpcEncoding.foldWithConstructors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Deriving.lean#L43-L52","name":"Lean.Server.RpcEncoding.foldWithConstructors","docLink":"./Lean/Server/Rpc/Deriving.html#Lean.Server.RpcEncoding.foldWithConstructors","doc":"Fold over the constructors of `indVal` using `k`. Every iteration is executed in an updated\nlocal context containing free variables for the arguments of the constructor. `k` is given the\nctor name, arguments, and output type. `params` is expected to contain free or meta variables\nfor the parameters of `indVal`. "},"Lean.Server.RpcEncoding.DerivingParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L79-L80","name":"Lean.Server.RpcEncoding.DerivingParams","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncoding.DerivingParams","doc":""},"Lean.Server.RpcEncoding":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L44-L46","name":"Lean.Server.RpcEncoding","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncoding","doc":"`RpcEncoding α β` means that `α` may participate in RPC calls with its on-the-wire LSP encoding\nbeing `β`. This is useful when `α` contains fields which must be marshalled in a special way. In\nparticular, we encode `WithRpcRef` fields as opaque references rather than send their content.\n\nStructures with `From/ToJson` use JSON as their `RpcEncoding`. Structures containing\nnon-JSON-serializable fields can be auto-encoded in two ways:\n- `deriving RpcEncoding` acts like `From/ToJson` but marshalls any `WithRpcRef` fields\n  as `Lsp.RpcRef`s.\n- `deriving RpcEncoding with { withRef := true }` generates an encoding for\n  `WithRpcRef TheType`. "},"Lean.Server.RequestTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L65-L65","name":"Lean.Server.RequestTask","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestTask","doc":""},"Lean.Server.RequestT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L66-L66","name":"Lean.Server.RequestT","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestT","doc":""},"Lean.Server.RequestM.withWaitFindSnapAtPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L136-L144","name":"Lean.Server.RequestM.withWaitFindSnapAtPos","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.withWaitFindSnapAtPos","doc":"Create a task which waits for the snapshot containing `lspPos` and executes `f` with it.\nIf no such snapshot exists, the request fails with an error. "},"Lean.Server.RequestM.withWaitFindSnap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L119-L124","name":"Lean.Server.RequestM.withWaitFindSnap","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.withWaitFindSnap","doc":"Create a task which waits for the first snapshot matching `p`, handles various errors,\nand if a matching snapshot was found executes `x` with it. If not found, the task executes\n`notFoundX`. "},"Lean.Server.RequestM.waitFindSnapAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L104-L114","name":"Lean.Server.RequestM.waitFindSnapAux","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.waitFindSnapAux","doc":""},"Lean.Server.RequestM.runTermElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L160-L164","name":"Lean.Server.RequestM.runTermElabM","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.runTermElabM","doc":""},"Lean.Server.RequestM.runCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L153-L157","name":"Lean.Server.RequestM.runCoreM","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.runCoreM","doc":""},"Lean.Server.RequestM.runCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L147-L151","name":"Lean.Server.RequestM.runCommandElabM","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.runCommandElabM","doc":""},"Lean.Server.RequestM.readDoc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L86-L88","name":"Lean.Server.RequestM.readDoc","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.readDoc","doc":""},"Lean.Server.RequestM.mapTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L95-L98","name":"Lean.Server.RequestM.mapTask","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.mapTask","doc":""},"Lean.Server.RequestM.bindWaitFindSnap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L127-L132","name":"Lean.Server.RequestM.bindWaitFindSnap","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.bindWaitFindSnap","doc":"See `withWaitFindSnap`. "},"Lean.Server.RequestM.bindTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L100-L102","name":"Lean.Server.RequestM.bindTask","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.bindTask","doc":""},"Lean.Server.RequestM.asTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L90-L93","name":"Lean.Server.RequestM.asTask","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.asTask","doc":""},"Lean.Server.RequestM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L68-L68","name":"Lean.Server.RequestM","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM","doc":"Workers execute request handlers in this monad. "},"Lean.Server.RequestHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L178-L180","name":"Lean.Server.RequestHandler","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestHandler","doc":""},"Lean.Server.RequestError.toLspResponseError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L45-L48","name":"Lean.Server.RequestError.toLspResponseError","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.toLspResponseError","doc":""},"Lean.Server.RequestError.ofIoError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L42-L43","name":"Lean.Server.RequestError.ofIoError","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.ofIoError","doc":""},"Lean.Server.RequestError.ofException":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L39-L40","name":"Lean.Server.RequestError.ofException","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.ofException","doc":""},"Lean.Server.RequestError.methodNotFound":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L32-L34","name":"Lean.Server.RequestError.methodNotFound","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.methodNotFound","doc":""},"Lean.Server.RequestError.internalError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L36-L37","name":"Lean.Server.RequestError.internalError","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.internalError","doc":""},"Lean.Server.RequestError.fileChanged":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L28-L30","name":"Lean.Server.RequestError.fileChanged","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.fileChanged","doc":""},"Lean.Server.RequestError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L20-L23","name":"Lean.Server.RequestError","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError","doc":""},"Lean.Server.RequestContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Requests.lean#L58-L63","name":"Lean.Server.RequestContext","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestContext","doc":""},"Lean.Server.References.updateWorkerRefs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L248-L257","name":"Lean.Server.References.updateWorkerRefs","docLink":"./Lean/Server/References.html#Lean.Server.References.updateWorkerRefs","doc":""},"Lean.Server.References.removeWorkerRefs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L265-L266","name":"Lean.Server.References.removeWorkerRefs","docLink":"./Lean/Server/References.html#Lean.Server.References.removeWorkerRefs","doc":""},"Lean.Server.References.removeIlean":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L242-L246","name":"Lean.Server.References.removeIlean","docLink":"./Lean/Server/References.html#Lean.Server.References.removeIlean","doc":""},"Lean.Server.References.referringTo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L277-L296","name":"Lean.Server.References.referringTo","docLink":"./Lean/Server/References.html#Lean.Server.References.referringTo","doc":""},"Lean.Server.References.findAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L272-L275","name":"Lean.Server.References.findAt","docLink":"./Lean/Server/References.html#Lean.Server.References.findAt","doc":""},"Lean.Server.References.finalizeWorkerRefs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L259-L263","name":"Lean.Server.References.finalizeWorkerRefs","docLink":"./Lean/Server/References.html#Lean.Server.References.finalizeWorkerRefs","doc":""},"Lean.Server.References.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L237-L237","name":"Lean.Server.References.empty","docLink":"./Lean/Server/References.html#Lean.Server.References.empty","doc":""},"Lean.Server.References.definitionsMatching":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L310-L323","name":"Lean.Server.References.definitionsMatching","docLink":"./Lean/Server/References.html#Lean.Server.References.definitionsMatching","doc":""},"Lean.Server.References.definitionOf?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L298-L308","name":"Lean.Server.References.definitionOf?","docLink":"./Lean/Server/References.html#Lean.Server.References.definitionOf?","doc":""},"Lean.Server.References.allRefs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L268-L270","name":"Lean.Server.References.allRefs","docLink":"./Lean/Server/References.html#Lean.Server.References.allRefs","doc":""},"Lean.Server.References.addIlean":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L239-L240","name":"Lean.Server.References.addIlean","docLink":"./Lean/Server/References.html#Lean.Server.References.addIlean","doc":""},"Lean.Server.References":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L229-L233","name":"Lean.Server.References","docLink":"./Lean/Server/References.html#Lean.Server.References","doc":""},"Lean.Server.Reference":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L14-L23","name":"Lean.Server.Reference","docLink":"./Lean/Server/References.html#Lean.Server.Reference","doc":""},"Lean.Server.RefInfo.instCoeRefInfoRefInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L40-L45","name":"Lean.Server.RefInfo.instCoeRefInfoRefInfo","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.instCoeRefInfoRefInfo","doc":""},"Lean.Server.RefInfo.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L31-L31","name":"Lean.Server.RefInfo.empty","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.empty","doc":""},"Lean.Server.RefInfo.addRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L33-L38","name":"Lean.Server.RefInfo.addRef","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.addRef","doc":""},"Lean.Server.RefInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L25-L27","name":"Lean.Server.RefInfo","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo","doc":""},"Lean.Server.MonadRpcSession":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Rpc/Basic.lean#L21-L24","name":"Lean.Server.MonadRpcSession","docLink":"./Lean/Server/Rpc/Basic.html#Lean.Server.MonadRpcSession","doc":"Monads with an RPC session in their state. "},"Lean.Server.ModuleRefs.instCoeModuleRefsModuleRefs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L57-L58","name":"Lean.Server.ModuleRefs.instCoeModuleRefsModuleRefs","docLink":"./Lean/Server/References.html#Lean.Server.ModuleRefs.instCoeModuleRefsModuleRefs","doc":""},"Lean.Server.ModuleRefs.addRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L53-L55","name":"Lean.Server.ModuleRefs.addRef","docLink":"./Lean/Server/References.html#Lean.Server.ModuleRefs.addRef","doc":""},"Lean.Server.ModuleRefs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L49-L49","name":"Lean.Server.ModuleRefs","docLink":"./Lean/Server/References.html#Lean.Server.ModuleRefs","doc":""},"Lean.Server.Ilean.load":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L116-L120","name":"Lean.Server.Ilean.load","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.load","doc":""},"Lean.Server.Ilean":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L108-L112","name":"Lean.Server.Ilean","docLink":"./Lean/Server/References.html#Lean.Server.Ilean","doc":"Content of individual `.ilean` files "},"Lean.Server.GoToKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/GoTo.lean#L15-L17","name":"Lean.Server.GoToKind","docLink":"./Lean/Server/GoTo.html#Lean.Server.GoToKind","doc":""},"Lean.Server.FileWorker.workerMain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L487-L500","name":"Lean.Server.FileWorker.workerMain","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.workerMain","doc":""},"Lean.Server.FileWorker.updatePendingRequests":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L270-L271","name":"Lean.Server.FileWorker.updatePendingRequests","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.updatePendingRequests","doc":""},"Lean.Server.FileWorker.updateDocument":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L274-L312","name":"Lean.Server.FileWorker.updateDocument","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.updateDocument","doc":"Given the new document, updates editable doc state. "},"Lean.Server.FileWorker.unfoldCmdSnaps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L125-L139","name":"Lean.Server.FileWorker.unfoldCmdSnaps","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.unfoldCmdSnaps","doc":"Elaborates all commands after the last snap (at least the header snap is assumed to exist), emitting the diagnostics into `hOut`. "},"Lean.Server.FileWorker.queueRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L382-L384","name":"Lean.Server.FileWorker.queueRequest","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.queueRequest","doc":""},"Lean.Server.FileWorker.parseParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L367-L370","name":"Lean.Server.FileWorker.parseParams","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.parseParams","doc":""},"Lean.Server.FileWorker.noHighlightKinds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L294-L302","name":"Lean.Server.FileWorker.noHighlightKinds","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.noHighlightKinds","doc":""},"Lean.Server.FileWorker.mainLoop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L426-L460","name":"Lean.Server.FileWorker.mainLoop","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.mainLoop","doc":""},"Lean.Server.FileWorker.logSnapContent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L17-L18","name":"Lean.Server.FileWorker.logSnapContent","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.logSnapContent","doc":""},"Lean.Server.FileWorker.locationLinksOfInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L62-L125","name":"Lean.Server.FileWorker.locationLinksOfInfo","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.locationLinksOfInfo","doc":""},"Lean.Server.FileWorker.lakeSetupSearchPath.processStderr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L170-L176","name":"Lean.Server.FileWorker.lakeSetupSearchPath.processStderr","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.lakeSetupSearchPath.processStderr","doc":""},"Lean.Server.FileWorker.lakeSetupSearchPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L159-L188","name":"Lean.Server.FileWorker.lakeSetupSearchPath","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.lakeSetupSearchPath","doc":"Use `lake print-paths` to compile dependencies on the fly and add them to `LEAN_PATH`.\nCompilation progress is reported to `hOut` via LSP notifications. Return the search path for\nsource files. "},"Lean.Server.FileWorker.instMonadRpcSession":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L109-L112","name":"Lean.Server.FileWorker.instMonadRpcSession","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.instMonadRpcSession","doc":""},"Lean.Server.FileWorker.instMonadLiftIOEIOElabTaskError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L27-L28","name":"Lean.Server.FileWorker.instMonadLiftIOEIOElabTaskError","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.instMonadLiftIOEIOElabTaskError","doc":""},"Lean.Server.FileWorker.instCoeErrorElabTaskError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L24-L25","name":"Lean.Server.FileWorker.instCoeErrorElabTaskError","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.instCoeErrorElabTaskError","doc":""},"Lean.Server.FileWorker.initializeWorker":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L245-L266","name":"Lean.Server.FileWorker.initializeWorker","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.initializeWorker","doc":""},"Lean.Server.FileWorker.initAndRunWorker":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L463-L484","name":"Lean.Server.FileWorker.initAndRunWorker","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.initAndRunWorker","doc":""},"Lean.Server.FileWorker.handleWaitForDiagnostics.waitLoop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L468-L474","name":"Lean.Server.FileWorker.handleWaitForDiagnostics.waitLoop","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleWaitForDiagnostics.waitLoop","doc":""},"Lean.Server.FileWorker.handleWaitForDiagnostics":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L466-L479","name":"Lean.Server.FileWorker.handleWaitForDiagnostics","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleWaitForDiagnostics","doc":""},"Lean.Server.FileWorker.handleSemanticTokensRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L392-L398","name":"Lean.Server.FileWorker.handleSemanticTokensRange","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleSemanticTokensRange","doc":""},"Lean.Server.FileWorker.handleSemanticTokensFull":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L388-L390","name":"Lean.Server.FileWorker.handleSemanticTokensFull","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleSemanticTokensFull","doc":""},"Lean.Server.FileWorker.handleSemanticTokens.highlightKeyword":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L366-L371","name":"Lean.Server.FileWorker.handleSemanticTokens.highlightKeyword","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleSemanticTokens.highlightKeyword","doc":""},"Lean.Server.FileWorker.handleSemanticTokens.highlightId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L341-L365","name":"Lean.Server.FileWorker.handleSemanticTokens.highlightId","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleSemanticTokens.highlightId","doc":""},"Lean.Server.FileWorker.handleSemanticTokens.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L328-L340","name":"Lean.Server.FileWorker.handleSemanticTokens.go","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleSemanticTokens.go","doc":""},"Lean.Server.FileWorker.handleSemanticTokens.addToken":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L372-L386","name":"Lean.Server.FileWorker.handleSemanticTokens.addToken","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleSemanticTokens.addToken","doc":""},"Lean.Server.FileWorker.handleSemanticTokens":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L314-L386","name":"Lean.Server.FileWorker.handleSemanticTokens","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleSemanticTokens","doc":""},"Lean.Server.FileWorker.handleRpcRelease":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L334-L344","name":"Lean.Server.FileWorker.handleRpcRelease","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.handleRpcRelease","doc":""},"Lean.Server.FileWorker.handleRpcKeepAlive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L346-L351","name":"Lean.Server.FileWorker.handleRpcKeepAlive","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.handleRpcKeepAlive","doc":""},"Lean.Server.FileWorker.handleRpcConnect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L358-L362","name":"Lean.Server.FileWorker.handleRpcConnect","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.handleRpcConnect","doc":""},"Lean.Server.FileWorker.handleRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L386-L422","name":"Lean.Server.FileWorker.handleRequest","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.handleRequest","doc":""},"Lean.Server.FileWorker.handlePlainTermGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L191-L197","name":"Lean.Server.FileWorker.handlePlainTermGoal","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handlePlainTermGoal","doc":""},"Lean.Server.FileWorker.handlePlainGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L158-L170","name":"Lean.Server.FileWorker.handlePlainGoal","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handlePlainGoal","doc":""},"Lean.Server.FileWorker.handleNotification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L372-L380","name":"Lean.Server.FileWorker.handleNotification","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.handleNotification","doc":""},"Lean.Server.FileWorker.handleHover":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L42-L59","name":"Lean.Server.FileWorker.handleHover","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleHover","doc":""},"Lean.Server.FileWorker.handleFoldingRange.isImport":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L409-L409","name":"Lean.Server.FileWorker.handleFoldingRange.isImport","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleFoldingRange.isImport","doc":""},"Lean.Server.FileWorker.handleFoldingRange.addRanges":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L411-L434","name":"Lean.Server.FileWorker.handleFoldingRange.addRanges","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleFoldingRange.addRanges","doc":""},"Lean.Server.FileWorker.handleFoldingRange.addRangeFromSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L454-L454","name":"Lean.Server.FileWorker.handleFoldingRange.addRangeFromSyntax","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleFoldingRange.addRangeFromSyntax","doc":""},"Lean.Server.FileWorker.handleFoldingRange.addRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L456-L464","name":"Lean.Server.FileWorker.handleFoldingRange.addRange","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleFoldingRange.addRange","doc":""},"Lean.Server.FileWorker.handleFoldingRange.addCommandRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L436-L452","name":"Lean.Server.FileWorker.handleFoldingRange.addCommandRange","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleFoldingRange.addCommandRange","doc":""},"Lean.Server.FileWorker.handleFoldingRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L400-L464","name":"Lean.Server.FileWorker.handleFoldingRange","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleFoldingRange","doc":""},"Lean.Server.FileWorker.handleDocumentSymbol.toDocumentSymbols":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L247-L275","name":"Lean.Server.FileWorker.handleDocumentSymbol.toDocumentSymbols","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleDocumentSymbol.toDocumentSymbols","doc":""},"Lean.Server.FileWorker.handleDocumentSymbol.sectionLikeToDocumentSymbols":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L277-L292","name":"Lean.Server.FileWorker.handleDocumentSymbol.sectionLikeToDocumentSymbols","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleDocumentSymbol.sectionLikeToDocumentSymbols","doc":""},"Lean.Server.FileWorker.handleDocumentSymbol":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L237-L292","name":"Lean.Server.FileWorker.handleDocumentSymbol","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleDocumentSymbol","doc":""},"Lean.Server.FileWorker.handleDocumentHighlight.highlightReturn?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L205-L212","name":"Lean.Server.FileWorker.handleDocumentHighlight.highlightReturn?","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleDocumentHighlight.highlightReturn?","doc":""},"Lean.Server.FileWorker.handleDocumentHighlight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L199-L234","name":"Lean.Server.FileWorker.handleDocumentHighlight","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleDocumentHighlight","doc":""},"Lean.Server.FileWorker.handleDidChange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L318-L329","name":"Lean.Server.FileWorker.handleDidChange","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.handleDidChange","doc":""},"Lean.Server.FileWorker.handleDefinition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L128-L138","name":"Lean.Server.FileWorker.handleDefinition","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleDefinition","doc":""},"Lean.Server.FileWorker.handleCompletion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L25-L39","name":"Lean.Server.FileWorker.handleCompletion","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.handleCompletion","doc":""},"Lean.Server.FileWorker.handleCancelRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L331-L332","name":"Lean.Server.FileWorker.handleCancelRequest","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.handleCancelRequest","doc":""},"Lean.Server.FileWorker.getInteractiveTermGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L172-L189","name":"Lean.Server.FileWorker.getInteractiveTermGoal","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.getInteractiveTermGoal","doc":""},"Lean.Server.FileWorker.getInteractiveGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L141-L155","name":"Lean.Server.FileWorker.getInteractiveGoals","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.getInteractiveGoals","doc":""},"Lean.Server.FileWorker.compileHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L190-L243","name":"Lean.Server.FileWorker.compileHeader","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.compileHeader","doc":""},"Lean.Server.FileWorker.WorkerState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L145-L150","name":"Lean.Server.FileWorker.WorkerState","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.WorkerState","doc":""},"Lean.Server.FileWorker.WorkerM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L152-L152","name":"Lean.Server.FileWorker.WorkerM","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.WorkerM","doc":""},"Lean.Server.FileWorker.WorkerContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L60-L66","name":"Lean.Server.FileWorker.WorkerContext","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.WorkerContext","doc":""},"Lean.Server.FileWorker.SemanticTokensState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L310-L312","name":"Lean.Server.FileWorker.SemanticTokensState","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.SemanticTokensState","doc":""},"Lean.Server.FileWorker.SemanticTokensContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/RequestHandling.lean#L304-L308","name":"Lean.Server.FileWorker.SemanticTokensContext","docLink":"./Lean/Server/FileWorker/RequestHandling.html#Lean.Server.FileWorker.SemanticTokensContext","doc":""},"Lean.Server.FileWorker.RpcSession.store":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L91-L95","name":"Lean.Server.FileWorker.RpcSession.store","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.RpcSession.store","doc":""},"Lean.Server.FileWorker.RpcSession.release":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L97-L99","name":"Lean.Server.FileWorker.RpcSession.release","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.RpcSession.release","doc":""},"Lean.Server.FileWorker.RpcSession.new":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L80-L89","name":"Lean.Server.FileWorker.RpcSession.new","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.RpcSession.new","doc":""},"Lean.Server.FileWorker.RpcSession.keptAlive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L101-L102","name":"Lean.Server.FileWorker.RpcSession.keptAlive","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.RpcSession.keptAlive","doc":""},"Lean.Server.FileWorker.RpcSession.keepAliveTimeMs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L77-L78","name":"Lean.Server.FileWorker.RpcSession.keepAliveTimeMs","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.RpcSession.keepAliveTimeMs","doc":""},"Lean.Server.FileWorker.RpcSession.hasExpired":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L104-L105","name":"Lean.Server.FileWorker.RpcSession.hasExpired","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.RpcSession.hasExpired","doc":""},"Lean.Server.FileWorker.RpcSession":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L61-L73","name":"Lean.Server.FileWorker.RpcSession","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.RpcSession","doc":""},"Lean.Server.FileWorker.PendingRequestMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L143-L143","name":"Lean.Server.FileWorker.PendingRequestMap","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.PendingRequestMap","doc":""},"Lean.Server.FileWorker.ElabTaskError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L20-L22","name":"Lean.Server.FileWorker.ElabTaskError","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.ElabTaskError","doc":""},"Lean.Server.FileWorker.EditableDocument":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L51-L55","name":"Lean.Server.FileWorker.EditableDocument","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument","doc":"A document editable in the sense that we track the environment\nand parser state after each command so that edits can be applied\nwithout recompiling code appearing earlier in the file. "},"Lean.Server.FileWorker.CancelToken.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L43-L44","name":"Lean.Server.FileWorker.CancelToken.set","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.CancelToken.set","doc":""},"Lean.Server.FileWorker.CancelToken.new":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L35-L36","name":"Lean.Server.FileWorker.CancelToken.new","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.CancelToken.new","doc":""},"Lean.Server.FileWorker.CancelToken.check":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L38-L41","name":"Lean.Server.FileWorker.CancelToken.check","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.CancelToken.check","doc":""},"Lean.Server.FileWorker.CancelToken":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker/Utils.lean#L30-L31","name":"Lean.Server.FileWorker.CancelToken","docLink":"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.CancelToken","doc":""},"Lean.Server.FileWorker.AsyncElabState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L71-L72","name":"Lean.Server.FileWorker.AsyncElabState","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.AsyncElabState","doc":""},"Lean.Server.FileWorker.AsyncElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileWorker.lean#L74-L74","name":"Lean.Server.FileWorker.AsyncElabM","docLink":"./Lean/Server/FileWorker.html#Lean.Server.FileWorker.AsyncElabM","doc":""},"Lean.Server.DocumentMeta.mkInputContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L97-L100","name":"Lean.Server.DocumentMeta.mkInputContext","docLink":"./Lean/Server/Utils.html#Lean.Server.DocumentMeta.mkInputContext","doc":""},"Lean.Server.DocumentMeta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L91-L95","name":"Lean.Server.DocumentMeta","docLink":"./Lean/Server/Utils.html#Lean.Server.DocumentMeta","doc":""},"Lean.Server.Completion.matchNamespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Completion.lean#L195-L205","name":"Lean.Server.Completion.matchNamespace","docLink":"./Lean/Server/Completion.html#Lean.Server.Completion.matchNamespace","doc":""},"Lean.Server.Completion.find?.choose":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Completion.lean#L454-L486","name":"Lean.Server.Completion.find?.choose","docLink":"./Lean/Server/Completion.html#Lean.Server.Completion.find?.choose","doc":""},"Lean.Server.Completion.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Completion.lean#L438-L486","name":"Lean.Server.Completion.find?","docLink":"./Lean/Server/Completion.html#Lean.Server.Completion.find?","doc":""},"Lean.Server.Completion.completionBlackListExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Completion.lean#L23-L23","name":"Lean.Server.Completion.completionBlackListExt","docLink":"./Lean/Server/Completion.html#Lean.Server.Completion.completionBlackListExt","doc":""},"Lean.Server.Completion.completeNamespaces.visitNamespaces":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Completion.lean#L224-L230","name":"Lean.Server.Completion.completeNamespaces.visitNamespaces","docLink":"./Lean/Server/Completion.html#Lean.Server.Completion.completeNamespaces.visitNamespaces","doc":""},"Lean.Server.Completion.completeNamespaces":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Completion.lean#L207-L231","name":"Lean.Server.Completion.completeNamespaces","docLink":"./Lean/Server/Completion.html#Lean.Server.Completion.completeNamespaces","doc":""},"Lean.Server.Completion.addToBlackList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Completion.lean#L26-L27","name":"Lean.Server.Completion.addToBlackList","docLink":"./Lean/Server/Completion.html#Lean.Server.Completion.addToBlackList","doc":""},"Lean.Server.Completion.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Completion.lean#L74-L76","name":"Lean.Server.Completion.State","docLink":"./Lean/Server/Completion.html#Lean.Server.Completion.State","doc":""},"Lean.Server.Completion.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Completion.lean#L78-L78","name":"Lean.Server.Completion.M","docLink":"./Lean/Server/Completion.html#Lean.Server.Completion.M","doc":""},"Lean.Server.Completion.HoverInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Completion.lean#L191-L193","name":"Lean.Server.Completion.HoverInfo","docLink":"./Lean/Server/Completion.html#Lean.Server.Completion.HoverInfo","doc":""},"Lean.SearchPath.findWithExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L35-L39","name":"Lean.SearchPath.findWithExt","docLink":"./Lean/Util/Path.html#Lean.SearchPath.findWithExt","doc":"If the package of `mod` can be found in `sp`, return the path with extension\n`ext` (`lean` or `olean`) corresponding to `mod`. Otherwise, return `none`. Does\nnot check whether the returned path exists. "},"Lean.SearchPath.findModuleWithExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L42-L46","name":"Lean.SearchPath.findModuleWithExt","docLink":"./Lean/Util/Path.html#Lean.SearchPath.findModuleWithExt","doc":"Like `findWithExt`, but ensures the returned path exists. "},"Lean.SearchPath.findAllWithExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L48-L53","name":"Lean.SearchPath.findAllWithExt","docLink":"./Lean/Util/Path.html#Lean.SearchPath.findAllWithExt","doc":""},"Lean.SearchPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Path.lean#L28-L28","name":"Lean.SearchPath","docLink":"./Lean/Util/Path.html#Lean.SearchPath","doc":"A `.olean' search path. "},"Lean.ScopedEnvExtension.pushScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L122-L126","name":"Lean.ScopedEnvExtension.pushScope","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.pushScope","doc":""},"Lean.ScopedEnvExtension.popScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L128-L132","name":"Lean.ScopedEnvExtension.popScope","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.popScope","doc":""},"Lean.ScopedEnvExtension.modifyState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L179-L183","name":"Lean.ScopedEnvExtension.modifyState","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.modifyState","doc":""},"Lean.ScopedEnvExtension.mkInitial":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L49-L50","name":"Lean.ScopedEnvExtension.mkInitial","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.mkInitial","doc":""},"Lean.ScopedEnvExtension.instInhabitedStateStack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L30-L30","name":"Lean.ScopedEnvExtension.instInhabitedStateStack","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedStateStack","doc":""},"Lean.ScopedEnvExtension.instInhabitedScopedEntries":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L24-L24","name":"Lean.ScopedEnvExtension.instInhabitedScopedEntries","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedScopedEntries","doc":""},"Lean.ScopedEnvExtension.instInhabitedDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L40-L47","name":"Lean.ScopedEnvExtension.instInhabitedDescr","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.instInhabitedDescr","doc":""},"Lean.ScopedEnvExtension.getState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L154-L157","name":"Lean.ScopedEnvExtension.getState","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.getState","doc":""},"Lean.ScopedEnvExtension.exportEntriesFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L92-L93","name":"Lean.ScopedEnvExtension.exportEntriesFn","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.exportEntriesFn","doc":""},"Lean.ScopedEnvExtension.addScopedEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L137-L138","name":"Lean.ScopedEnvExtension.addScopedEntry","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addScopedEntry","doc":""},"Lean.ScopedEnvExtension.addLocalEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L140-L146","name":"Lean.ScopedEnvExtension.addLocalEntry","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addLocalEntry","doc":""},"Lean.ScopedEnvExtension.addImportedFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L57-L70","name":"Lean.ScopedEnvExtension.addImportedFn","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addImportedFn","doc":""},"Lean.ScopedEnvExtension.addEntryFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L72-L90","name":"Lean.ScopedEnvExtension.addEntryFn","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addEntryFn","doc":""},"Lean.ScopedEnvExtension.addEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L134-L135","name":"Lean.ScopedEnvExtension.addEntry","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.addEntry","doc":""},"Lean.ScopedEnvExtension.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L148-L152","name":"Lean.ScopedEnvExtension.add","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.add","doc":""},"Lean.ScopedEnvExtension.activateScoped":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L159-L177","name":"Lean.ScopedEnvExtension.activateScoped","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.activateScoped","doc":""},"Lean.ScopedEnvExtension.StateStack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L26-L30","name":"Lean.ScopedEnvExtension.StateStack","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.StateStack","doc":""},"Lean.ScopedEnvExtension.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L18-L20","name":"Lean.ScopedEnvExtension.State","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.State","doc":""},"Lean.ScopedEnvExtension.ScopedEntries.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L52-L55","name":"Lean.ScopedEnvExtension.ScopedEntries.insert","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries.insert","doc":""},"Lean.ScopedEnvExtension.ScopedEntries":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L22-L24","name":"Lean.ScopedEnvExtension.ScopedEntries","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.ScopedEntries","doc":""},"Lean.ScopedEnvExtension.Entry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L14-L16","name":"Lean.ScopedEnvExtension.Entry","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Entry","doc":""},"Lean.ScopedEnvExtension.Descr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L32-L38","name":"Lean.ScopedEnvExtension.Descr","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension.Descr","doc":""},"Lean.ScopedEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ScopedEnvExtension.lean#L99-L102","name":"Lean.ScopedEnvExtension","docLink":"./Lean/ScopedEnvExtension.html#Lean.ScopedEnvExtension","doc":""},"Lean.SSet.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SSet.lean#L39-L40","name":"Lean.SSet.toList","docLink":"./Lean/Data/SSet.html#Lean.SSet.toList","doc":""},"Lean.SSet.switch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SSet.lean#L30-L31","name":"Lean.SSet.switch","docLink":"./Lean/Data/SSet.html#Lean.SSet.switch","doc":"Move from stage 1 into stage 2. "},"Lean.SSet.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SSet.lean#L36-L37","name":"Lean.SSet.size","docLink":"./Lean/Data/SSet.html#Lean.SSet.size","doc":""},"Lean.SSet.instInhabitedSSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SSet.lean#L16-L16","name":"Lean.SSet.instInhabitedSSet","docLink":"./Lean/Data/SSet.html#Lean.SSet.instInhabitedSSet","doc":""},"Lean.SSet.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SSet.lean#L20-L21","name":"Lean.SSet.insert","docLink":"./Lean/Data/SSet.html#Lean.SSet.insert","doc":""},"Lean.SSet.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SSet.lean#L26-L27","name":"Lean.SSet.forM","docLink":"./Lean/Data/SSet.html#Lean.SSet.forM","doc":""},"Lean.SSet.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SSet.lean#L33-L34","name":"Lean.SSet.fold","docLink":"./Lean/Data/SSet.html#Lean.SSet.fold","doc":""},"Lean.SSet.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SSet.lean#L18-L18","name":"Lean.SSet.empty","docLink":"./Lean/Data/SSet.html#Lean.SSet.empty","doc":""},"Lean.SSet.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SSet.lean#L23-L24","name":"Lean.SSet.contains","docLink":"./Lean/Data/SSet.html#Lean.SSet.contains","doc":""},"Lean.SSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SSet.lean#L11-L11","name":"Lean.SSet","docLink":"./Lean/Data/SSet.html#Lean.SSet","doc":"Staged set. It is just a simple wrapper on top of Staged maps. "},"Lean.SMap.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L97-L98","name":"Lean.SMap.toList","docLink":"./Lean/Data/SMap.html#Lean.SMap.toList","doc":""},"Lean.SMap.switch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L79-L80","name":"Lean.SMap.switch","docLink":"./Lean/Data/SMap.html#Lean.SMap.switch","doc":"Move from stage 1 into stage 2. "},"Lean.SMap.stageSizes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L91-L92","name":"Lean.SMap.stageSizes","docLink":"./Lean/Data/SMap.html#Lean.SMap.stageSizes","doc":""},"Lean.SMap.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L88-L89","name":"Lean.SMap.size","docLink":"./Lean/Data/SMap.html#Lean.SMap.size","doc":""},"Lean.SMap.numBuckets":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L94-L95","name":"Lean.SMap.numBuckets","docLink":"./Lean/Data/SMap.html#Lean.SMap.numBuckets","doc":""},"Lean.SMap.instInhabitedSMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L38-L38","name":"Lean.SMap.instInhabitedSMap","docLink":"./Lean/Data/SMap.html#Lean.SMap.instInhabitedSMap","doc":""},"Lean.SMap.insert'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L48-L50","name":"Lean.SMap.insert'","docLink":"./Lean/Data/SMap.html#Lean.SMap.insert'","doc":""},"Lean.SMap.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L44-L46","name":"Lean.SMap.insert","docLink":"./Lean/Data/SMap.html#Lean.SMap.insert","doc":""},"Lean.SMap.fromHashMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L41-L42","name":"Lean.SMap.fromHashMap","docLink":"./Lean/Data/SMap.html#Lean.SMap.fromHashMap","doc":""},"Lean.SMap.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L74-L76","name":"Lean.SMap.forM","docLink":"./Lean/Data/SMap.html#Lean.SMap.forM","doc":""},"Lean.SMap.foldStage2":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L82-L83","name":"Lean.SMap.foldStage2","docLink":"./Lean/Data/SMap.html#Lean.SMap.foldStage2","doc":""},"Lean.SMap.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L85-L86","name":"Lean.SMap.fold","docLink":"./Lean/Data/SMap.html#Lean.SMap.fold","doc":""},"Lean.SMap.findD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L56-L57","name":"Lean.SMap.findD","docLink":"./Lean/Data/SMap.html#Lean.SMap.findD","doc":""},"Lean.SMap.find?'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L70-L72","name":"Lean.SMap.find?'","docLink":"./Lean/Data/SMap.html#Lean.SMap.find?'","doc":"Similar to `find?`, but searches for result in the hashmap first.\nSo, the result is correct only if we never \"overwrite\" `map₁` entries using `map₂`. "},"Lean.SMap.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L52-L54","name":"Lean.SMap.find?","docLink":"./Lean/Data/SMap.html#Lean.SMap.find?","doc":""},"Lean.SMap.find!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L59-L62","name":"Lean.SMap.find!","docLink":"./Lean/Data/SMap.html#Lean.SMap.find!","doc":""},"Lean.SMap.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L39-L39","name":"Lean.SMap.empty","docLink":"./Lean/Data/SMap.html#Lean.SMap.empty","doc":""},"Lean.SMap.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L64-L66","name":"Lean.SMap.contains","docLink":"./Lean/Data/SMap.html#Lean.SMap.contains","doc":""},"Lean.SMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L30-L33","name":"Lean.SMap","docLink":"./Lean/Data/SMap.html#Lean.SMap","doc":"Staged map for implementing the Environment. The idea is to store\n   imported entries into a hashtable and local entries into a persistent hashtable.\n\n   Hypotheses:\n   - The number of entries (i.e., declarations) coming from imported files is much bigger than\n     the number of entries in the current file.\n   - HashMap is faster than PersistentHashMap.\n   - When we are reading imported files, we have exclusive access to the map, and efficient\n     destructive updates are performed.\n\n   Remarks:\n   - We never remove declarations from the Environment. In principle, we could support\n     deletion by using `(PHashMap α (Option β))` where the value `none` would indicate\n     that an entry was \"removed\" from the hashtable.\n   - We do not need additional bookkeeping for extracting the local entries.\n"},"Lean.SCC.scc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/SCC.lean#L101-L106","name":"Lean.SCC.scc","docLink":"./Lean/Util/SCC.html#Lean.SCC.scc","doc":""},"Lean.SCC.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/SCC.lean#L24-L28","name":"Lean.SCC.State","docLink":"./Lean/Util/SCC.html#Lean.SCC.State","doc":""},"Lean.SCC.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/SCC.lean#L30-L30","name":"Lean.SCC.M","docLink":"./Lean/Util/SCC.html#Lean.SCC.M","doc":""},"Lean.SCC.Data":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/SCC.lean#L19-L22","name":"Lean.SCC.Data","docLink":"./Lean/Util/SCC.html#Lean.SCC.Data","doc":""},"Lean.ResolveName.resolveNamespaceUsingScope?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L143-L146","name":"Lean.ResolveName.resolveNamespaceUsingScope?","docLink":"./Lean/ResolveName.html#Lean.ResolveName.resolveNamespaceUsingScope?","doc":""},"Lean.ResolveName.resolveNamespaceUsingOpenDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L148-L151","name":"Lean.ResolveName.resolveNamespaceUsingOpenDecls","docLink":"./Lean/ResolveName.html#Lean.ResolveName.resolveNamespaceUsingOpenDecls","doc":""},"Lean.ResolveName.resolveNamespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L164-L167","name":"Lean.ResolveName.resolveNamespace","docLink":"./Lean/ResolveName.html#Lean.ResolveName.resolveNamespace","doc":"Given a name `id` try to find namespaces it may refer to. The resolution procedure works as follows\n\n1- If `id` is in the scope of `namespace` commands the namespace `s_1. ... . s_n`,\n   then we include `s_1 . ... . s_i ++ n` in the result if it is the name of an existing namespace.\n   We search \"backwards\", and include at most one of the in the list of resulting namespaces.\n\n2- If `id` is the extact name of an existing namespace, then include `id`\n\n3- Finally, for each command `open N`, include in the result `N ++ n` if it is the name of an existing namespace.\n   We only consider simple `open` commands. "},"Lean.ResolveName.resolveGlobalName.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L119-L138","name":"Lean.ResolveName.resolveGlobalName.loop","docLink":"./Lean/ResolveName.html#Lean.ResolveName.resolveGlobalName.loop","doc":""},"Lean.ResolveName.resolveGlobalName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L116-L139","name":"Lean.ResolveName.resolveGlobalName","docLink":"./Lean/ResolveName.html#Lean.ResolveName.resolveGlobalName","doc":""},"Lean.ReducibilityStatus":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ReducibilityAttrs.lean#L13-L15","name":"Lean.ReducibilityStatus","docLink":"./Lean/ReducibilityAttrs.html#Lean.ReducibilityStatus","doc":"Reducibility status for a definition.\n"},"Lean.ReducibilityHints.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L51-L56","name":"Lean.ReducibilityHints.lt","docLink":"./Lean/Declaration.html#Lean.ReducibilityHints.lt","doc":""},"Lean.ReducibilityHints.isRegular":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L62-L64","name":"Lean.ReducibilityHints.isRegular","docLink":"./Lean/Declaration.html#Lean.ReducibilityHints.isRegular","doc":""},"Lean.ReducibilityHints.isAbbrev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L58-L60","name":"Lean.ReducibilityHints.isAbbrev","docLink":"./Lean/Declaration.html#Lean.ReducibilityHints.isAbbrev","doc":""},"Lean.ReducibilityHints.getHeightEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L44-L47","name":"Lean.ReducibilityHints.getHeightEx","docLink":"./Lean/Declaration.html#Lean.ReducibilityHints.getHeightEx","doc":""},"Lean.ReducibilityHints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L33-L37","name":"Lean.ReducibilityHints","docLink":"./Lean/Declaration.html#Lean.ReducibilityHints","doc":"Reducibility hints are used in the convertibility checker.\nWhen trying to solve a constraint such a\n\n           (f ...) =?= (g ...)\n\nwhere f and g are definitions, the checker has to decide which one will be unfolded.\n  If      f (g) is opaque,     then g (f) is unfolded if it is also not marked as opaque,\n  Else if f (g) is abbrev,     then f (g) is unfolded if g (f) is also not marked as abbrev,\n  Else if f and g are regular, then we unfold the one with the biggest definitional height.\n  Otherwise both are unfolded.\n\nThe arguments of the `regular` Constructor are: the definitional height and the flag `selfOpt`.\n\nThe definitional height is by default computed by the kernel. It only takes into account\nother regular definitions used in a definition. When creating declarations using meta-programming,\nwe can specify the definitional depth manually.\n\nRemark: the hint only affects performance. None of the hints prevent the kernel from unfolding a\ndeclaration during Type checking.\n\nRemark: the ReducibilityHints are not related to the attributes: reducible/irrelevance/semireducible.\nThese attributes are used by the Elaborator. The ReducibilityHints are used by the kernel (and Elaborator).\nMoreover, the ReducibilityHints cannot be changed after a declaration is added to the kernel. "},"Lean.RecursorVal.kEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L334-L334","name":"Lean.RecursorVal.kEx","docLink":"./Lean/Declaration.html#Lean.RecursorVal.kEx","doc":""},"Lean.RecursorVal.isUnsafeEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L335-L335","name":"Lean.RecursorVal.isUnsafeEx","docLink":"./Lean/Declaration.html#Lean.RecursorVal.isUnsafeEx","doc":""},"Lean.RecursorVal.getMajorIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L337-L338","name":"Lean.RecursorVal.getMajorIdx","docLink":"./Lean/Declaration.html#Lean.RecursorVal.getMajorIdx","doc":""},"Lean.RecursorVal.getInduct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L346-L347","name":"Lean.RecursorVal.getInduct","docLink":"./Lean/Declaration.html#Lean.RecursorVal.getInduct","doc":""},"Lean.RecursorVal.getFirstMinorIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L343-L344","name":"Lean.RecursorVal.getFirstMinorIdx","docLink":"./Lean/Declaration.html#Lean.RecursorVal.getFirstMinorIdx","doc":""},"Lean.RecursorVal.getFirstIndexIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L340-L341","name":"Lean.RecursorVal.getFirstIndexIdx","docLink":"./Lean/Declaration.html#Lean.RecursorVal.getFirstIndexIdx","doc":""},"Lean.RecursorVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L301-L325","name":"Lean.RecursorVal","docLink":"./Lean/Declaration.html#Lean.RecursorVal","doc":""},"Lean.RecursorRule":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L292-L299","name":"Lean.RecursorRule","docLink":"./Lean/Declaration.html#Lean.RecursorRule","doc":"Information for reducing a recursor "},"Lean.Rat.sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L78-L89","name":"Lean.Rat.sub","docLink":"./Lean/Data/Rat.html#Lean.Rat.sub","doc":""},"Lean.Rat.normalize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L25-L27","name":"Lean.Rat.normalize","docLink":"./Lean/Data/Rat.html#Lean.Rat.normalize","doc":""},"Lean.Rat.neg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L91-L92","name":"Lean.Rat.neg","docLink":"./Lean/Data/Rat.html#Lean.Rat.neg","doc":""},"Lean.Rat.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L48-L52","name":"Lean.Rat.mul","docLink":"./Lean/Data/Rat.html#Lean.Rat.mul","doc":""},"Lean.Rat.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L37-L46","name":"Lean.Rat.lt","docLink":"./Lean/Data/Rat.html#Lean.Rat.lt","doc":""},"Lean.Rat.isInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L34-L35","name":"Lean.Rat.isInt","docLink":"./Lean/Data/Rat.html#Lean.Rat.isInt","doc":""},"Lean.Rat.inv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L54-L60","name":"Lean.Rat.inv","docLink":"./Lean/Data/Rat.html#Lean.Rat.inv","doc":""},"Lean.Rat.instSubRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L123-L124","name":"Lean.Rat.instSubRat","docLink":"./Lean/Data/Rat.html#Lean.Rat.instSubRat","doc":""},"Lean.Rat.instOfNatRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L135-L136","name":"Lean.Rat.instOfNatRat","docLink":"./Lean/Data/Rat.html#Lean.Rat.instOfNatRat","doc":""},"Lean.Rat.instNegRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L126-L127","name":"Lean.Rat.instNegRat","docLink":"./Lean/Data/Rat.html#Lean.Rat.instNegRat","doc":""},"Lean.Rat.instMulRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L129-L130","name":"Lean.Rat.instMulRat","docLink":"./Lean/Data/Rat.html#Lean.Rat.instMulRat","doc":""},"Lean.Rat.instLTRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L108-L109","name":"Lean.Rat.instLTRat","docLink":"./Lean/Data/Rat.html#Lean.Rat.instLTRat","doc":""},"Lean.Rat.instLERat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L114-L115","name":"Lean.Rat.instLERat","docLink":"./Lean/Data/Rat.html#Lean.Rat.instLERat","doc":""},"Lean.Rat.instDivRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L132-L133","name":"Lean.Rat.instDivRat","docLink":"./Lean/Data/Rat.html#Lean.Rat.instDivRat","doc":""},"Lean.Rat.instDecidableLtRatInstLTRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L111-L112","name":"Lean.Rat.instDecidableLtRatInstLTRat","docLink":"./Lean/Data/Rat.html#Lean.Rat.instDecidableLtRatInstLTRat","doc":""},"Lean.Rat.instDecidableLeRatInstLERat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L117-L118","name":"Lean.Rat.instDecidableLeRatInstLERat","docLink":"./Lean/Data/Rat.html#Lean.Rat.instDecidableLeRatInstLERat","doc":""},"Lean.Rat.instCoeIntRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L138-L139","name":"Lean.Rat.instCoeIntRat","docLink":"./Lean/Data/Rat.html#Lean.Rat.instCoeIntRat","doc":""},"Lean.Rat.instAddRat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L120-L121","name":"Lean.Rat.instAddRat","docLink":"./Lean/Data/Rat.html#Lean.Rat.instAddRat","doc":""},"Lean.Rat.floor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L94-L99","name":"Lean.Rat.floor","docLink":"./Lean/Data/Rat.html#Lean.Rat.floor","doc":""},"Lean.Rat.div":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L62-L63","name":"Lean.Rat.div","docLink":"./Lean/Data/Rat.html#Lean.Rat.div","doc":""},"Lean.Rat.ceil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L101-L106","name":"Lean.Rat.ceil","docLink":"./Lean/Data/Rat.html#Lean.Rat.ceil","doc":""},"Lean.Rat.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L65-L76","name":"Lean.Rat.add","docLink":"./Lean/Data/Rat.html#Lean.Rat.add","doc":""},"Lean.Rat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Rat.lean#L13-L17","name":"Lean.Rat","docLink":"./Lean/Data/Rat.html#Lean.Rat","doc":""},"Lean.Quote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L918-L919","name":"Lean.Quote","docLink":"./Init/Meta.html#Lean.Quote","doc":"Reflect a runtime datum back to surface syntax (best-effort). "},"Lean.QuotVal.kindEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L365-L365","name":"Lean.QuotVal.kindEx","docLink":"./Lean/Declaration.html#Lean.QuotVal.kindEx","doc":""},"Lean.QuotVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L356-L358","name":"Lean.QuotVal","docLink":"./Lean/Declaration.html#Lean.QuotVal","doc":""},"Lean.QuotKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L349-L354","name":"Lean.QuotKind","docLink":"./Lean/Declaration.html#Lean.QuotKind","doc":""},"Lean.ProjectionFunctionInfo.fromClassEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ProjFns.lean#L29-L30","name":"Lean.ProjectionFunctionInfo.fromClassEx","docLink":"./Lean/ProjFns.html#Lean.ProjectionFunctionInfo.fromClassEx","doc":""},"Lean.ProjectionFunctionInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ProjFns.lean#L14-L23","name":"Lean.ProjectionFunctionInfo","docLink":"./Lean/ProjFns.html#Lean.ProjectionFunctionInfo","doc":"Given a structure `S`, Lean automatically creates an auxiliary definition (projection function)\nfor each field. This structure caches information about these auxiliary definitions.\n"},"Lean.PrettyPrinter.runForNodeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Basic.lean#L16-L26","name":"Lean.PrettyPrinter.runForNodeKind","docLink":"./Lean/PrettyPrinter/Basic.html#Lean.PrettyPrinter.runForNodeKind","doc":""},"Lean.PrettyPrinter.registerParserCompilers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L89-L91","name":"Lean.PrettyPrinter.registerParserCompilers","docLink":"./Lean/PrettyPrinter.html#Lean.PrettyPrinter.registerParserCompilers","doc":""},"Lean.PrettyPrinter.ppUsing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L30-L33","name":"Lean.PrettyPrinter.ppUsing","docLink":"./Lean/PrettyPrinter.html#Lean.PrettyPrinter.ppUsing","doc":""},"Lean.PrettyPrinter.ppTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L28-L28","name":"Lean.PrettyPrinter.ppTerm","docLink":"./Lean/PrettyPrinter.html#Lean.PrettyPrinter.ppTerm","doc":""},"Lean.PrettyPrinter.ppTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L55-L55","name":"Lean.PrettyPrinter.ppTactic","docLink":"./Lean/PrettyPrinter.html#Lean.PrettyPrinter.ppTactic","doc":""},"Lean.PrettyPrinter.ppModule":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L59-L60","name":"Lean.PrettyPrinter.ppModule","docLink":"./Lean/PrettyPrinter.html#Lean.PrettyPrinter.ppModule","doc":""},"Lean.PrettyPrinter.ppExprWithInfos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L40-L46","name":"Lean.PrettyPrinter.ppExprWithInfos","docLink":"./Lean/PrettyPrinter.html#Lean.PrettyPrinter.ppExprWithInfos","doc":"Return a `fmt` representing pretty-printed `e` together with a map from tags in `fmt`\nto `Elab.Info` nodes produced by the delaborator at various subexpressions of `e`. "},"Lean.PrettyPrinter.ppExprLegacy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L52-L53","name":"Lean.PrettyPrinter.ppExprLegacy","docLink":"./Lean/PrettyPrinter.html#Lean.PrettyPrinter.ppExprLegacy","doc":""},"Lean.PrettyPrinter.ppExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L35-L36","name":"Lean.PrettyPrinter.ppExpr","docLink":"./Lean/PrettyPrinter.html#Lean.PrettyPrinter.ppExpr","doc":""},"Lean.PrettyPrinter.ppConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L48-L49","name":"Lean.PrettyPrinter.ppConst","docLink":"./Lean/PrettyPrinter.html#Lean.PrettyPrinter.ppConst","doc":""},"Lean.PrettyPrinter.ppCommand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L57-L57","name":"Lean.PrettyPrinter.ppCommand","docLink":"./Lean/PrettyPrinter.html#Lean.PrettyPrinter.ppCommand","doc":""},"Lean.PrettyPrinter.ppCategory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L23-L26","name":"Lean.PrettyPrinter.ppCategory","docLink":"./Lean/PrettyPrinter.html#Lean.PrettyPrinter.ppCategory","doc":""},"Lean.PrettyPrinter.parenthesizerAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L130-L130","name":"Lean.PrettyPrinter.parenthesizerAttribute","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.parenthesizerAttribute","doc":""},"Lean.PrettyPrinter.parenthesizeTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L538-L538","name":"Lean.PrettyPrinter.parenthesizeTerm","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.parenthesizeTerm","doc":""},"Lean.PrettyPrinter.parenthesizeTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L539-L539","name":"Lean.PrettyPrinter.parenthesizeTactic","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.parenthesizeTactic","doc":""},"Lean.PrettyPrinter.parenthesizeCommand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L540-L540","name":"Lean.PrettyPrinter.parenthesizeCommand","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.parenthesizeCommand","doc":""},"Lean.PrettyPrinter.parenthesizeCategory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L536-L536","name":"Lean.PrettyPrinter.parenthesizeCategory","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.parenthesizeCategory","doc":""},"Lean.PrettyPrinter.parenthesize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L528-L534","name":"Lean.PrettyPrinter.parenthesize","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.parenthesize","doc":"Add necessary parentheses in `stx` parsed by `parser`. "},"Lean.PrettyPrinter.mkParenthesizerAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L114-L129","name":"Lean.PrettyPrinter.mkParenthesizerAttribute","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.mkParenthesizerAttribute","doc":""},"Lean.PrettyPrinter.mkFormatterAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L57-L72","name":"Lean.PrettyPrinter.mkFormatterAttribute","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.mkFormatterAttribute","doc":""},"Lean.PrettyPrinter.mkCombinatorParenthesizerAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L153-L161","name":"Lean.PrettyPrinter.mkCombinatorParenthesizerAttribute","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.mkCombinatorParenthesizerAttribute","doc":""},"Lean.PrettyPrinter.mkCombinatorFormatterAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L75-L83","name":"Lean.PrettyPrinter.mkCombinatorFormatterAttribute","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.mkCombinatorFormatterAttribute","doc":""},"Lean.PrettyPrinter.mkCategoryParenthesizerAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L134-L150","name":"Lean.PrettyPrinter.mkCategoryParenthesizerAttribute","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.mkCategoryParenthesizerAttribute","doc":""},"Lean.PrettyPrinter.instOrElseParenthesizerM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L112-L112","name":"Lean.PrettyPrinter.instOrElseParenthesizerM","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.instOrElseParenthesizerM","doc":""},"Lean.PrettyPrinter.instOrElseFormatterM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L53-L53","name":"Lean.PrettyPrinter.instOrElseFormatterM","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.instOrElseFormatterM","doc":""},"Lean.PrettyPrinter.instMonadQuotationUnexpandM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L3042-L3048","name":"Lean.PrettyPrinter.instMonadQuotationUnexpandM","docLink":"./Init/Prelude.html#Lean.PrettyPrinter.instMonadQuotationUnexpandM","doc":""},"Lean.PrettyPrinter.formatterAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L73-L73","name":"Lean.PrettyPrinter.formatterAttribute","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.formatterAttribute","doc":""},"Lean.PrettyPrinter.formatTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L535-L535","name":"Lean.PrettyPrinter.formatTerm","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.formatTerm","doc":""},"Lean.PrettyPrinter.formatTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L536-L536","name":"Lean.PrettyPrinter.formatTactic","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.formatTactic","doc":""},"Lean.PrettyPrinter.formatCommand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L537-L537","name":"Lean.PrettyPrinter.formatCommand","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.formatCommand","doc":""},"Lean.PrettyPrinter.formatCategory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L533-L533","name":"Lean.PrettyPrinter.formatCategory","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.formatCategory","doc":""},"Lean.PrettyPrinter.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L523-L531","name":"Lean.PrettyPrinter.format","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.format","doc":""},"Lean.PrettyPrinter.delabCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L277-L302","name":"Lean.PrettyPrinter.delabCore","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.delabCore","doc":""},"Lean.PrettyPrinter.delab":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L305-L307","name":"Lean.PrettyPrinter.delab","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.delab","doc":"\"Delaborate\" the given term into surface-level syntax using the default and given subterm-specific options. "},"Lean.PrettyPrinter.combinatorParenthesizerAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L162-L162","name":"Lean.PrettyPrinter.combinatorParenthesizerAttribute","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.combinatorParenthesizerAttribute","doc":""},"Lean.PrettyPrinter.combinatorFormatterAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L84-L84","name":"Lean.PrettyPrinter.combinatorFormatterAttribute","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.combinatorFormatterAttribute","doc":""},"Lean.PrettyPrinter.categoryParenthesizerAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L151-L151","name":"Lean.PrettyPrinter.categoryParenthesizerAttribute","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.categoryParenthesizerAttribute","doc":""},"Lean.PrettyPrinter.backtrackExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Basic.lean#L14-L14","name":"Lean.PrettyPrinter.backtrackExceptionId","docLink":"./Lean/PrettyPrinter/Basic.html#Lean.PrettyPrinter.backtrackExceptionId","doc":""},"Lean.PrettyPrinter.Unexpander":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L3040-L3040","name":"Lean.PrettyPrinter.Unexpander","docLink":"./Init/Prelude.html#Lean.PrettyPrinter.Unexpander","doc":"Function that tries to reverse macro expansions as a post-processing step of delaboration.\nWhile less general than an arbitrary delaborator, it can be declared without importing `Lean`.\nUsed by the `[appUnexpander]` attribute. "},"Lean.PrettyPrinter.UnexpandM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L3033-L3033","name":"Lean.PrettyPrinter.UnexpandM","docLink":"./Init/Prelude.html#Lean.PrettyPrinter.UnexpandM","doc":""},"Lean.PrettyPrinter.ParenthesizerM.orElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L106-L110","name":"Lean.PrettyPrinter.ParenthesizerM.orElse","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.ParenthesizerM.orElse","doc":""},"Lean.PrettyPrinter.ParenthesizerM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L103-L103","name":"Lean.PrettyPrinter.ParenthesizerM","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.ParenthesizerM","doc":""},"Lean.PrettyPrinter.Parenthesizer.withoutPosition.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L469-L469","name":"Lean.PrettyPrinter.Parenthesizer.withoutPosition.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.withoutPosition.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.withoutInfo.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L472-L472","name":"Lean.PrettyPrinter.Parenthesizer.withoutInfo.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.withoutInfo.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.withoutForbidden.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L471-L471","name":"Lean.PrettyPrinter.Parenthesizer.withoutForbidden.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.withoutForbidden.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.withPositionAfterLinebreak.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L466-L468","name":"Lean.PrettyPrinter.Parenthesizer.withPositionAfterLinebreak.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.withPositionAfterLinebreak.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.withPosition.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L462-L465","name":"Lean.PrettyPrinter.Parenthesizer.withPosition.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.withPosition.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.withOpenDecl.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L495-L495","name":"Lean.PrettyPrinter.Parenthesizer.withOpenDecl.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.withOpenDecl.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.withOpen.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L496-L496","name":"Lean.PrettyPrinter.Parenthesizer.withOpen.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.withOpen.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.withForbidden.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L470-L470","name":"Lean.PrettyPrinter.Parenthesizer.withForbidden.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.withForbidden.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.withAntiquotSuffixSplice.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L290-L294","name":"Lean.PrettyPrinter.Parenthesizer.withAntiquotSuffixSplice.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.withAntiquotSuffixSplice.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.withAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L281-L287","name":"Lean.PrettyPrinter.Parenthesizer.withAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.withAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.visitToken":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L247-L249","name":"Lean.PrettyPrinter.Parenthesizer.visitToken","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.visitToken","doc":"Adjust state and advance. "},"Lean.PrettyPrinter.Parenthesizer.visitArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L184-L188","name":"Lean.PrettyPrinter.Parenthesizer.visitArgs","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.visitArgs","doc":"Execute `x` at the right-most child of the current node, if any, then advance to the left. "},"Lean.PrettyPrinter.Parenthesizer.unicodeSymbolNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L420-L420","name":"Lean.PrettyPrinter.Parenthesizer.unicodeSymbolNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.unicodeSymbolNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.trailingNode.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L404-L415","name":"Lean.PrettyPrinter.Parenthesizer.trailingNode.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.trailingNode.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.tokenWithAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L297-L301","name":"Lean.PrettyPrinter.Parenthesizer.tokenWithAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.tokenWithAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.throwBacktrack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L169-L170","name":"Lean.PrettyPrinter.Parenthesizer.throwBacktrack","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.throwBacktrack","doc":""},"Lean.PrettyPrinter.Parenthesizer.term.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L336-L338","name":"Lean.PrettyPrinter.Parenthesizer.term.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.term.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.tactic.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L341-L343","name":"Lean.PrettyPrinter.Parenthesizer.tactic.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.tactic.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.symbolNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L419-L419","name":"Lean.PrettyPrinter.Parenthesizer.symbolNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.symbolNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.suppressInsideQuot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L478-L478","name":"Lean.PrettyPrinter.Parenthesizer.suppressInsideQuot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.suppressInsideQuot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.strLitNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L428-L428","name":"Lean.PrettyPrinter.Parenthesizer.strLitNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.strLitNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.strLit.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L65-L65","name":"Lean.PrettyPrinter.Parenthesizer.strLit.parenthesizer","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Parenthesizer.strLit.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.skip.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L491-L491","name":"Lean.PrettyPrinter.Parenthesizer.skip.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.skip.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.setExpected.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L474-L474","name":"Lean.PrettyPrinter.Parenthesizer.setExpected.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.setExpected.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.sepByNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L456-L458","name":"Lean.PrettyPrinter.Parenthesizer.sepByNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.sepByNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.sepBy1NoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L460-L460","name":"Lean.PrettyPrinter.Parenthesizer.sepBy1NoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.sepBy1NoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.scientificLitNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L431-L431","name":"Lean.PrettyPrinter.Parenthesizer.scientificLitNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.scientificLitNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.scientificLit.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L63-L63","name":"Lean.PrettyPrinter.Parenthesizer.scientificLit.parenthesizer","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Parenthesizer.scientificLit.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.registerAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L517-L518","name":"Lean.PrettyPrinter.Parenthesizer.registerAlias","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.registerAlias","doc":""},"Lean.PrettyPrinter.Parenthesizer.rawStx.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L351-L352","name":"Lean.PrettyPrinter.Parenthesizer.rawStx.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.rawStx.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.rawIdentNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L423-L423","name":"Lean.PrettyPrinter.Parenthesizer.rawIdentNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.rawIdentNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.rawCh.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L417-L417","name":"Lean.PrettyPrinter.Parenthesizer.rawCh.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.rawCh.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.pushNone.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L493-L493","name":"Lean.PrettyPrinter.Parenthesizer.pushNone.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.pushNone.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.parserOfStack.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L330-L333","name":"Lean.PrettyPrinter.Parenthesizer.parserOfStack.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.parserOfStack.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.parenthesizerForKindUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L270-L275","name":"Lean.PrettyPrinter.Parenthesizer.parenthesizerForKindUnsafe","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.parenthesizerForKindUnsafe","doc":""},"Lean.PrettyPrinter.Parenthesizer.parenthesizerForKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L278-L278","name":"Lean.PrettyPrinter.Parenthesizer.parenthesizerForKind","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.parenthesizerForKind","doc":""},"Lean.PrettyPrinter.Parenthesizer.parenthesizerAliasesRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L515-L515","name":"Lean.PrettyPrinter.Parenthesizer.parenthesizerAliasesRef","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.parenthesizerAliasesRef","doc":""},"Lean.PrettyPrinter.Parenthesizer.parenthesizeCategoryCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L303-L312","name":"Lean.PrettyPrinter.Parenthesizer.parenthesizeCategoryCore","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.parenthesizeCategoryCore","doc":""},"Lean.PrettyPrinter.Parenthesizer.orelse.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L251-L254","name":"Lean.PrettyPrinter.Parenthesizer.orelse.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.orelse.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.optionalNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L452-L453","name":"Lean.PrettyPrinter.Parenthesizer.optionalNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.optionalNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.numLitNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L430-L430","name":"Lean.PrettyPrinter.Parenthesizer.numLitNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.numLitNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.numLit.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L62-L62","name":"Lean.PrettyPrinter.Parenthesizer.numLit.parenthesizer","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Parenthesizer.numLit.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.notFollowedBy.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L371-L372","name":"Lean.PrettyPrinter.Parenthesizer.notFollowedBy.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.notFollowedBy.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.nonReservedSymbolNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L425-L425","name":"Lean.PrettyPrinter.Parenthesizer.nonReservedSymbolNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.nonReservedSymbolNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.node.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L386-L388","name":"Lean.PrettyPrinter.Parenthesizer.node.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.node.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.nameLitNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L429-L429","name":"Lean.PrettyPrinter.Parenthesizer.nameLitNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.nameLitNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.mkAntiquot.parenthesizer'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L261-L261","name":"Lean.PrettyPrinter.Parenthesizer.mkAntiquot.parenthesizer'","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.mkAntiquot.parenthesizer'","doc":""},"Lean.PrettyPrinter.Parenthesizer.mkAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L56-L57","name":"Lean.PrettyPrinter.Parenthesizer.mkAntiquot.parenthesizer","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Parenthesizer.mkAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.maybeParenthesize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L201-L244","name":"Lean.PrettyPrinter.Parenthesizer.maybeParenthesize","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.maybeParenthesize","doc":"Run `x` and parenthesize the result using `mkParen` if necessary.\nIf `canJuxtapose` is false, we assume the category does not have a token-less juxtaposition syntax a la function application and deactivate rule 2. "},"Lean.PrettyPrinter.Parenthesizer.manyNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L435-L437","name":"Lean.PrettyPrinter.Parenthesizer.manyNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.manyNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.many1Unbox.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L444-L449","name":"Lean.PrettyPrinter.Parenthesizer.many1Unbox.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.many1Unbox.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.many1NoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L440-L441","name":"Lean.PrettyPrinter.Parenthesizer.many1NoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.many1NoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.lookahead.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L367-L368","name":"Lean.PrettyPrinter.Parenthesizer.lookahead.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.lookahead.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.liftCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L263-L264","name":"Lean.PrettyPrinter.Parenthesizer.liftCoreM","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.liftCoreM","doc":""},"Lean.PrettyPrinter.Parenthesizer.level.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L346-L348","name":"Lean.PrettyPrinter.Parenthesizer.level.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.level.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.leadingNode.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L395-L401","name":"Lean.PrettyPrinter.Parenthesizer.leadingNode.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.leadingNode.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.ite":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L508-L509","name":"Lean.PrettyPrinter.Parenthesizer.ite","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.ite","doc":""},"Lean.PrettyPrinter.Parenthesizer.interpretParserDescr'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L268-L268","name":"Lean.PrettyPrinter.Parenthesizer.interpretParserDescr'","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.interpretParserDescr'","doc":""},"Lean.PrettyPrinter.Parenthesizer.interpretParserDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L70-L82","name":"Lean.PrettyPrinter.Parenthesizer.interpretParserDescr","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Parenthesizer.interpretParserDescr","doc":""},"Lean.PrettyPrinter.Parenthesizer.interpolatedStr.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L499-L504","name":"Lean.PrettyPrinter.Parenthesizer.interpolatedStr.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.interpolatedStr.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.instMonadTraverserParenthesizerM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L172-L176","name":"Lean.PrettyPrinter.Parenthesizer.instMonadTraverserParenthesizerM","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.instMonadTraverserParenthesizerM","doc":""},"Lean.PrettyPrinter.Parenthesizer.instMonadQuotationParenthesizerM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L192-L196","name":"Lean.PrettyPrinter.Parenthesizer.instMonadQuotationParenthesizerM","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.instMonadQuotationParenthesizerM","doc":""},"Lean.PrettyPrinter.Parenthesizer.instCoeParenthesizerParenthesizerAliasValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L520-L520","name":"Lean.PrettyPrinter.Parenthesizer.instCoeParenthesizerParenthesizerAliasValue","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.instCoeParenthesizerParenthesizerAliasValue","doc":""},"Lean.PrettyPrinter.Parenthesizer.instCoeForAllParenthesizerParenthesizerAliasValue_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L522-L522","name":"Lean.PrettyPrinter.Parenthesizer.instCoeForAllParenthesizerParenthesizerAliasValue_1","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.instCoeForAllParenthesizerParenthesizerAliasValue_1","doc":""},"Lean.PrettyPrinter.Parenthesizer.instCoeForAllParenthesizerParenthesizerAliasValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L521-L521","name":"Lean.PrettyPrinter.Parenthesizer.instCoeForAllParenthesizerParenthesizerAliasValue","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.instCoeForAllParenthesizerParenthesizerAliasValue","doc":""},"Lean.PrettyPrinter.Parenthesizer.incQuotDepth.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L476-L476","name":"Lean.PrettyPrinter.Parenthesizer.incQuotDepth.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.incQuotDepth.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.identNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L422-L422","name":"Lean.PrettyPrinter.Parenthesizer.identNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.identNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.identEq.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L424-L424","name":"Lean.PrettyPrinter.Parenthesizer.identEq.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.identEq.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.ident.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L61-L61","name":"Lean.PrettyPrinter.Parenthesizer.ident.parenthesizer","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Parenthesizer.ident.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.fieldIdx.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L432-L432","name":"Lean.PrettyPrinter.Parenthesizer.fieldIdx.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.fieldIdx.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.evalInsideQuot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L479-L479","name":"Lean.PrettyPrinter.Parenthesizer.evalInsideQuot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.evalInsideQuot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.errorAtSavedPos.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L359-L360","name":"Lean.PrettyPrinter.Parenthesizer.errorAtSavedPos.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.errorAtSavedPos.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.error.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L355-L356","name":"Lean.PrettyPrinter.Parenthesizer.error.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.error.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.eoi.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L489-L489","name":"Lean.PrettyPrinter.Parenthesizer.eoi.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.eoi.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.decQuotDepth.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L477-L477","name":"Lean.PrettyPrinter.Parenthesizer.decQuotDepth.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.decQuotDepth.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.dbgTraceState.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L506-L506","name":"Lean.PrettyPrinter.Parenthesizer.dbgTraceState.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.dbgTraceState.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.checkWsBefore.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L482-L482","name":"Lean.PrettyPrinter.Parenthesizer.checkWsBefore.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.checkWsBefore.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.checkTailWs.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L485-L485","name":"Lean.PrettyPrinter.Parenthesizer.checkTailWs.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.checkTailWs.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.checkStackTop.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L481-L481","name":"Lean.PrettyPrinter.Parenthesizer.checkStackTop.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.checkStackTop.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.checkPrec.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L391-L392","name":"Lean.PrettyPrinter.Parenthesizer.checkPrec.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.checkPrec.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.checkNoWsBefore.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L483-L483","name":"Lean.PrettyPrinter.Parenthesizer.checkNoWsBefore.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.checkNoWsBefore.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.checkNoImmediateColon.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L490-L490","name":"Lean.PrettyPrinter.Parenthesizer.checkNoImmediateColon.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.checkNoImmediateColon.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.checkLinebreakBefore.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L484-L484","name":"Lean.PrettyPrinter.Parenthesizer.checkLinebreakBefore.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.checkLinebreakBefore.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.checkLineEq.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L488-L488","name":"Lean.PrettyPrinter.Parenthesizer.checkLineEq.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.checkLineEq.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.checkKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L378-L383","name":"Lean.PrettyPrinter.Parenthesizer.checkKind","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.checkKind","doc":""},"Lean.PrettyPrinter.Parenthesizer.checkColGt.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L487-L487","name":"Lean.PrettyPrinter.Parenthesizer.checkColGt.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.checkColGt.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.checkColGe.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L486-L486","name":"Lean.PrettyPrinter.Parenthesizer.checkColGe.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.checkColGe.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.charLitNoAntiquot.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L427-L427","name":"Lean.PrettyPrinter.Parenthesizer.charLitNoAntiquot.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.charLitNoAntiquot.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.charLit.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L64-L64","name":"Lean.PrettyPrinter.Parenthesizer.charLit.parenthesizer","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Parenthesizer.charLit.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.categoryParserOfStack.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L324-L327","name":"Lean.PrettyPrinter.Parenthesizer.categoryParserOfStack.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.categoryParserOfStack.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.categoryParser.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L315-L321","name":"Lean.PrettyPrinter.Parenthesizer.categoryParser.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.categoryParser.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.atomic.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L363-L364","name":"Lean.PrettyPrinter.Parenthesizer.atomic.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.atomic.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.andthen.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L375-L376","name":"Lean.PrettyPrinter.Parenthesizer.andthen.parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.andthen.parenthesizer","doc":""},"Lean.PrettyPrinter.Parenthesizer.addPrecCheck":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L180-L181","name":"Lean.PrettyPrinter.Parenthesizer.addPrecCheck","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.addPrecCheck","doc":""},"Lean.PrettyPrinter.Parenthesizer.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L88-L99","name":"Lean.PrettyPrinter.Parenthesizer.State","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.State","doc":""},"Lean.PrettyPrinter.Parenthesizer.ParenthesizerAliasValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L513-L513","name":"Lean.PrettyPrinter.Parenthesizer.ParenthesizerAliasValue","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.ParenthesizerAliasValue","doc":""},"Lean.PrettyPrinter.Parenthesizer.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L84-L86","name":"Lean.PrettyPrinter.Parenthesizer.Context","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer.Context","doc":""},"Lean.PrettyPrinter.Parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L104-L104","name":"Lean.PrettyPrinter.Parenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer","doc":""},"Lean.PrettyPrinter.FormatterM.orElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L47-L51","name":"Lean.PrettyPrinter.FormatterM.orElse","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.FormatterM.orElse","doc":""},"Lean.PrettyPrinter.FormatterM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L45-L45","name":"Lean.PrettyPrinter.FormatterM","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.FormatterM","doc":""},"Lean.PrettyPrinter.Formatter.withoutPosition.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L458-L458","name":"Lean.PrettyPrinter.Formatter.withoutPosition.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.withoutPosition.formatter","doc":""},"Lean.PrettyPrinter.Formatter.withoutInfo.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L461-L461","name":"Lean.PrettyPrinter.Formatter.withoutInfo.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.withoutInfo.formatter","doc":""},"Lean.PrettyPrinter.Formatter.withoutForbidden.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L460-L460","name":"Lean.PrettyPrinter.Formatter.withoutForbidden.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.withoutForbidden.formatter","doc":""},"Lean.PrettyPrinter.Formatter.withPositionAfterLinebreak.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L457-L457","name":"Lean.PrettyPrinter.Formatter.withPositionAfterLinebreak.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.withPositionAfterLinebreak.formatter","doc":""},"Lean.PrettyPrinter.Formatter.withPosition.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L456-L456","name":"Lean.PrettyPrinter.Formatter.withPosition.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.withPosition.formatter","doc":""},"Lean.PrettyPrinter.Formatter.withOpenDecl.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L494-L494","name":"Lean.PrettyPrinter.Formatter.withOpenDecl.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.withOpenDecl.formatter","doc":""},"Lean.PrettyPrinter.Formatter.withOpen.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L495-L495","name":"Lean.PrettyPrinter.Formatter.withOpen.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.withOpen.formatter","doc":""},"Lean.PrettyPrinter.Formatter.withMaybeTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L164-L173","name":"Lean.PrettyPrinter.Formatter.withMaybeTag","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.withMaybeTag","doc":"If `pos?` has a position, run `x` and tag its results with that position,\nif they are not already tagged. Otherwise just run `x`. "},"Lean.PrettyPrinter.Formatter.withForbidden.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L459-L459","name":"Lean.PrettyPrinter.Formatter.withForbidden.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.withForbidden.formatter","doc":""},"Lean.PrettyPrinter.Formatter.withAntiquotSuffixSplice.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L220-L224","name":"Lean.PrettyPrinter.Formatter.withAntiquotSuffixSplice.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.withAntiquotSuffixSplice.formatter","doc":""},"Lean.PrettyPrinter.Formatter.withAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L214-L217","name":"Lean.PrettyPrinter.Formatter.withAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.withAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.visitAtom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L415-L422","name":"Lean.PrettyPrinter.Formatter.visitAtom","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.visitAtom","doc":""},"Lean.PrettyPrinter.Formatter.visitArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L124-L128","name":"Lean.PrettyPrinter.Formatter.visitArgs","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.visitArgs","doc":"Execute `x` at the right-most child of the current node, if any, then advance to the left. "},"Lean.PrettyPrinter.Formatter.unicodeSymbolNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L388-L395","name":"Lean.PrettyPrinter.Formatter.unicodeSymbolNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.unicodeSymbolNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.trailingNode.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L300-L305","name":"Lean.PrettyPrinter.Formatter.trailingNode.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.trailingNode.formatter","doc":""},"Lean.PrettyPrinter.Formatter.tokenWithAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L227-L231","name":"Lean.PrettyPrinter.Formatter.tokenWithAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.tokenWithAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.throwBacktrack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L91-L92","name":"Lean.PrettyPrinter.Formatter.throwBacktrack","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.throwBacktrack","doc":""},"Lean.PrettyPrinter.Formatter.symbolNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L373-L381","name":"Lean.PrettyPrinter.Formatter.symbolNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.symbolNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.suppressInsideQuot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L467-L467","name":"Lean.PrettyPrinter.Formatter.suppressInsideQuot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.suppressInsideQuot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.strLitNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L425-L425","name":"Lean.PrettyPrinter.Formatter.strLitNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.strLitNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.strLit.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L96-L96","name":"Lean.PrettyPrinter.Formatter.strLit.formatter","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Formatter.strLit.formatter","doc":""},"Lean.PrettyPrinter.Formatter.skip.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L490-L490","name":"Lean.PrettyPrinter.Formatter.skip.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.skip.formatter","doc":""},"Lean.PrettyPrinter.Formatter.setStack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L110-L111","name":"Lean.PrettyPrinter.Formatter.setStack","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.setStack","doc":""},"Lean.PrettyPrinter.Formatter.setLhsPrec.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L477-L477","name":"Lean.PrettyPrinter.Formatter.setLhsPrec.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.setLhsPrec.formatter","doc":""},"Lean.PrettyPrinter.Formatter.setExpected.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L463-L463","name":"Lean.PrettyPrinter.Formatter.setExpected.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.setExpected.formatter","doc":""},"Lean.PrettyPrinter.Formatter.sepByNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L450-L452","name":"Lean.PrettyPrinter.Formatter.sepByNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.sepByNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.sepBy1NoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L454-L454","name":"Lean.PrettyPrinter.Formatter.sepBy1NoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.sepBy1NoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.scientificLitNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L428-L428","name":"Lean.PrettyPrinter.Formatter.scientificLitNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.scientificLitNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.scientificLit.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L94-L94","name":"Lean.PrettyPrinter.Formatter.scientificLit.formatter","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Formatter.scientificLit.formatter","doc":""},"Lean.PrettyPrinter.Formatter.registerAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L513-L514","name":"Lean.PrettyPrinter.Formatter.registerAlias","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.registerAlias","doc":""},"Lean.PrettyPrinter.Formatter.rawIdentNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L406-L411","name":"Lean.PrettyPrinter.Formatter.rawIdentNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.rawIdentNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.rawCh.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L385-L385","name":"Lean.PrettyPrinter.Formatter.rawCh.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.rawCh.formatter","doc":""},"Lean.PrettyPrinter.Formatter.pushWhitespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L116-L118","name":"Lean.PrettyPrinter.Formatter.pushWhitespace","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.pushWhitespace","doc":""},"Lean.PrettyPrinter.Formatter.pushToken":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L318-L370","name":"Lean.PrettyPrinter.Formatter.pushToken","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.pushToken","doc":""},"Lean.PrettyPrinter.Formatter.pushNone.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L492-L492","name":"Lean.PrettyPrinter.Formatter.pushNone.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.pushNone.formatter","doc":""},"Lean.PrettyPrinter.Formatter.pushLine":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L120-L121","name":"Lean.PrettyPrinter.Formatter.pushLine","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.pushLine","doc":""},"Lean.PrettyPrinter.Formatter.parserOfStack.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L268-L271","name":"Lean.PrettyPrinter.Formatter.parserOfStack.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.parserOfStack.formatter","doc":""},"Lean.PrettyPrinter.Formatter.parseToken":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L307-L316","name":"Lean.PrettyPrinter.Formatter.parseToken","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.parseToken","doc":""},"Lean.PrettyPrinter.Formatter.orelse.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L175-L178","name":"Lean.PrettyPrinter.Formatter.orelse.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.orelse.formatter","doc":""},"Lean.PrettyPrinter.Formatter.optionalNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L439-L439","name":"Lean.PrettyPrinter.Formatter.optionalNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.optionalNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.numLitNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L427-L427","name":"Lean.PrettyPrinter.Formatter.numLitNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.numLitNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.numLit.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L93-L93","name":"Lean.PrettyPrinter.Formatter.numLit.formatter","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Formatter.numLit.formatter","doc":""},"Lean.PrettyPrinter.Formatter.notFollowedBy.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L283-L283","name":"Lean.PrettyPrinter.Formatter.notFollowedBy.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.notFollowedBy.formatter","doc":""},"Lean.PrettyPrinter.Formatter.nonReservedSymbolNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L383-L383","name":"Lean.PrettyPrinter.Formatter.nonReservedSymbolNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.nonReservedSymbolNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.node.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L295-L297","name":"Lean.PrettyPrinter.Formatter.node.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.node.formatter","doc":""},"Lean.PrettyPrinter.Formatter.nameLitNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L426-L426","name":"Lean.PrettyPrinter.Formatter.nameLitNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.nameLitNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.mkAntiquot.formatter'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L185-L185","name":"Lean.PrettyPrinter.Formatter.mkAntiquot.formatter'","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.mkAntiquot.formatter'","doc":""},"Lean.PrettyPrinter.Formatter.mkAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L89-L90","name":"Lean.PrettyPrinter.Formatter.mkAntiquot.formatter","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Formatter.mkAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.manyNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L432-L434","name":"Lean.PrettyPrinter.Formatter.manyNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.manyNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.many1Unbox.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L442-L447","name":"Lean.PrettyPrinter.Formatter.many1Unbox.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.many1Unbox.formatter","doc":""},"Lean.PrettyPrinter.Formatter.many1NoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L436-L436","name":"Lean.PrettyPrinter.Formatter.many1NoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.many1NoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.lookahead.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L280-L280","name":"Lean.PrettyPrinter.Formatter.lookahead.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.lookahead.formatter","doc":""},"Lean.PrettyPrinter.Formatter.ite":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L506-L507","name":"Lean.PrettyPrinter.Formatter.ite","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.ite","doc":""},"Lean.PrettyPrinter.Formatter.interpretParserDescr'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L189-L189","name":"Lean.PrettyPrinter.Formatter.interpretParserDescr'","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.interpretParserDescr'","doc":""},"Lean.PrettyPrinter.Formatter.interpretParserDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L101-L113","name":"Lean.PrettyPrinter.Formatter.interpretParserDescr","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Formatter.interpretParserDescr","doc":""},"Lean.PrettyPrinter.Formatter.interpolatedStr.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L498-L502","name":"Lean.PrettyPrinter.Formatter.interpolatedStr.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.interpolatedStr.formatter","doc":""},"Lean.PrettyPrinter.Formatter.instMonadTraverserFormatterM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L94-L98","name":"Lean.PrettyPrinter.Formatter.instMonadTraverserFormatterM","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.instMonadTraverserFormatterM","doc":""},"Lean.PrettyPrinter.Formatter.instCoeFormatterFormatterAliasValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L516-L516","name":"Lean.PrettyPrinter.Formatter.instCoeFormatterFormatterAliasValue","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.instCoeFormatterFormatterAliasValue","doc":""},"Lean.PrettyPrinter.Formatter.instCoeForAllFormatterFormatterAliasValue_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L518-L518","name":"Lean.PrettyPrinter.Formatter.instCoeForAllFormatterFormatterAliasValue_1","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.instCoeForAllFormatterFormatterAliasValue_1","doc":""},"Lean.PrettyPrinter.Formatter.instCoeForAllFormatterFormatterAliasValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L517-L517","name":"Lean.PrettyPrinter.Formatter.instCoeForAllFormatterFormatterAliasValue","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.instCoeForAllFormatterFormatterAliasValue","doc":""},"Lean.PrettyPrinter.Formatter.indent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L142-L146","name":"Lean.PrettyPrinter.Formatter.indent","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.indent","doc":""},"Lean.PrettyPrinter.Formatter.incQuotDepth.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L465-L465","name":"Lean.PrettyPrinter.Formatter.incQuotDepth.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.incQuotDepth.formatter","doc":""},"Lean.PrettyPrinter.Formatter.identNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L398-L404","name":"Lean.PrettyPrinter.Formatter.identNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.identNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.identEq.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L413-L413","name":"Lean.PrettyPrinter.Formatter.identEq.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.identEq.formatter","doc":""},"Lean.PrettyPrinter.Formatter.ident.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L92-L92","name":"Lean.PrettyPrinter.Formatter.ident.formatter","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Formatter.ident.formatter","doc":""},"Lean.PrettyPrinter.Formatter.group":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L155-L160","name":"Lean.PrettyPrinter.Formatter.group","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.group","doc":""},"Lean.PrettyPrinter.Formatter.getStackSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L106-L108","name":"Lean.PrettyPrinter.Formatter.getStackSize","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.getStackSize","doc":""},"Lean.PrettyPrinter.Formatter.getStack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L102-L104","name":"Lean.PrettyPrinter.Formatter.getStack","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.getStack","doc":""},"Lean.PrettyPrinter.Formatter.formatterForKindUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L201-L208","name":"Lean.PrettyPrinter.Formatter.formatterForKindUnsafe","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.formatterForKindUnsafe","doc":""},"Lean.PrettyPrinter.Formatter.formatterForKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L211-L211","name":"Lean.PrettyPrinter.Formatter.formatterForKind","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.formatterForKind","doc":""},"Lean.PrettyPrinter.Formatter.formatterAliasesRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L511-L511","name":"Lean.PrettyPrinter.Formatter.formatterAliasesRef","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.formatterAliasesRef","doc":""},"Lean.PrettyPrinter.Formatter.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L131-L136","name":"Lean.PrettyPrinter.Formatter.fold","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.fold","doc":"Execute `x`, pass array of generated Format objects to `fn`, and push result. "},"Lean.PrettyPrinter.Formatter.fill":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L148-L153","name":"Lean.PrettyPrinter.Formatter.fill","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.fill","doc":""},"Lean.PrettyPrinter.Formatter.fieldIdx.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L429-L429","name":"Lean.PrettyPrinter.Formatter.fieldIdx.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.fieldIdx.formatter","doc":""},"Lean.PrettyPrinter.Formatter.evalInsideQuot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L468-L468","name":"Lean.PrettyPrinter.Formatter.evalInsideQuot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.evalInsideQuot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.errorAtSavedPos.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L276-L276","name":"Lean.PrettyPrinter.Formatter.errorAtSavedPos.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.errorAtSavedPos.formatter","doc":""},"Lean.PrettyPrinter.Formatter.error.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L274-L274","name":"Lean.PrettyPrinter.Formatter.error.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.error.formatter","doc":""},"Lean.PrettyPrinter.Formatter.eoi.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L488-L488","name":"Lean.PrettyPrinter.Formatter.eoi.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.eoi.formatter","doc":""},"Lean.PrettyPrinter.Formatter.decQuotDepth.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L466-L466","name":"Lean.PrettyPrinter.Formatter.decQuotDepth.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.decQuotDepth.formatter","doc":""},"Lean.PrettyPrinter.Formatter.dbgTraceState.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L504-L504","name":"Lean.PrettyPrinter.Formatter.dbgTraceState.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.dbgTraceState.formatter","doc":""},"Lean.PrettyPrinter.Formatter.concat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L139-L140","name":"Lean.PrettyPrinter.Formatter.concat","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.concat","doc":"Execute `x` and concatenate generated Format objects. "},"Lean.PrettyPrinter.Formatter.checkWsBefore.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L470-L473","name":"Lean.PrettyPrinter.Formatter.checkWsBefore.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.checkWsBefore.formatter","doc":""},"Lean.PrettyPrinter.Formatter.checkTailWs.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L483-L483","name":"Lean.PrettyPrinter.Formatter.checkTailWs.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.checkTailWs.formatter","doc":""},"Lean.PrettyPrinter.Formatter.checkStackTop.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L478-L478","name":"Lean.PrettyPrinter.Formatter.checkStackTop.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.checkStackTop.formatter","doc":""},"Lean.PrettyPrinter.Formatter.checkPrec.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L475-L475","name":"Lean.PrettyPrinter.Formatter.checkPrec.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.checkPrec.formatter","doc":""},"Lean.PrettyPrinter.Formatter.checkNoWsBefore.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L479-L481","name":"Lean.PrettyPrinter.Formatter.checkNoWsBefore.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.checkNoWsBefore.formatter","doc":""},"Lean.PrettyPrinter.Formatter.checkNoImmediateColon.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L489-L489","name":"Lean.PrettyPrinter.Formatter.checkNoImmediateColon.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.checkNoImmediateColon.formatter","doc":""},"Lean.PrettyPrinter.Formatter.checkLinebreakBefore.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L482-L482","name":"Lean.PrettyPrinter.Formatter.checkLinebreakBefore.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.checkLinebreakBefore.formatter","doc":""},"Lean.PrettyPrinter.Formatter.checkLineEq.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L486-L486","name":"Lean.PrettyPrinter.Formatter.checkLineEq.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.checkLineEq.formatter","doc":""},"Lean.PrettyPrinter.Formatter.checkLhsPrec.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L476-L476","name":"Lean.PrettyPrinter.Formatter.checkLhsPrec.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.checkLhsPrec.formatter","doc":""},"Lean.PrettyPrinter.Formatter.checkKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L288-L292","name":"Lean.PrettyPrinter.Formatter.checkKind","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.checkKind","doc":""},"Lean.PrettyPrinter.Formatter.checkColGt.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L485-L485","name":"Lean.PrettyPrinter.Formatter.checkColGt.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.checkColGt.formatter","doc":""},"Lean.PrettyPrinter.Formatter.checkColGe.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L484-L484","name":"Lean.PrettyPrinter.Formatter.checkColGe.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.checkColGe.formatter","doc":""},"Lean.PrettyPrinter.Formatter.charLitNoAntiquot.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L424-L424","name":"Lean.PrettyPrinter.Formatter.charLitNoAntiquot.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.charLitNoAntiquot.formatter","doc":""},"Lean.PrettyPrinter.Formatter.charLit.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser.lean#L95-L95","name":"Lean.PrettyPrinter.Formatter.charLit.formatter","docLink":"./Lean/Parser.html#Lean.PrettyPrinter.Formatter.charLit.formatter","doc":""},"Lean.PrettyPrinter.Formatter.categoryParserOfStack.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L262-L265","name":"Lean.PrettyPrinter.Formatter.categoryParserOfStack.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.categoryParserOfStack.formatter","doc":""},"Lean.PrettyPrinter.Formatter.categoryParser.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L249-L256","name":"Lean.PrettyPrinter.Formatter.categoryParser.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.categoryParser.formatter","doc":""},"Lean.PrettyPrinter.Formatter.categoryFormatterCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L233-L246","name":"Lean.PrettyPrinter.Formatter.categoryFormatterCore","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.categoryFormatterCore","doc":""},"Lean.PrettyPrinter.Formatter.categoryFormatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L258-L259","name":"Lean.PrettyPrinter.Formatter.categoryFormatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.categoryFormatter","doc":""},"Lean.PrettyPrinter.Formatter.atomic.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L278-L278","name":"Lean.PrettyPrinter.Formatter.atomic.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.atomic.formatter","doc":""},"Lean.PrettyPrinter.Formatter.andthen.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L286-L286","name":"Lean.PrettyPrinter.Formatter.andthen.formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.andthen.formatter","doc":""},"Lean.PrettyPrinter.Formatter.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L29-L41","name":"Lean.PrettyPrinter.Formatter.State","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.State","doc":""},"Lean.PrettyPrinter.Formatter.FormatterAliasValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L509-L509","name":"Lean.PrettyPrinter.Formatter.FormatterAliasValue","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.FormatterAliasValue","doc":""},"Lean.PrettyPrinter.Formatter.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L25-L27","name":"Lean.PrettyPrinter.Formatter.Context","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter.Context","doc":""},"Lean.PrettyPrinter.Formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Formatter.lean#L55-L55","name":"Lean.PrettyPrinter.Formatter","docLink":"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter","doc":""},"Lean.PrettyPrinter.Delaborator.withOptionAtCurrPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L161-L167","name":"Lean.PrettyPrinter.Delaborator.withOptionAtCurrPos","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.withOptionAtCurrPos","doc":"Set the given option at the current position and execute `x` in this context. "},"Lean.PrettyPrinter.Delaborator.withMDatasOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L124-L125","name":"Lean.PrettyPrinter.Delaborator.withMDatasOptions","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.withMDatasOptions","doc":""},"Lean.PrettyPrinter.Delaborator.withMDataOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L112-L122","name":"Lean.PrettyPrinter.Delaborator.withMDataOptions","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.withMDataOptions","doc":""},"Lean.PrettyPrinter.Delaborator.withBindingBodyUnusedName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L196-L199","name":"Lean.PrettyPrinter.Delaborator.withBindingBodyUnusedName","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.withBindingBodyUnusedName","doc":""},"Lean.PrettyPrinter.Delaborator.whenPPOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L152-L154","name":"Lean.PrettyPrinter.Delaborator.whenPPOption","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.whenPPOption","doc":""},"Lean.PrettyPrinter.Delaborator.whenNotPPOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L156-L158","name":"Lean.PrettyPrinter.Delaborator.whenNotPPOption","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.whenNotPPOption","doc":""},"Lean.PrettyPrinter.Delaborator.unresolveNameGlobal.unresolveNameCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L76-L86","name":"Lean.PrettyPrinter.Delaborator.unresolveNameGlobal.unresolveNameCore","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.unresolveNameGlobal.unresolveNameCore","doc":""},"Lean.PrettyPrinter.Delaborator.unresolveNameGlobal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L62-L86","name":"Lean.PrettyPrinter.Delaborator.unresolveNameGlobal","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.unresolveNameGlobal","doc":""},"Lean.PrettyPrinter.Delaborator.unfoldMDatas":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L21-L23","name":"Lean.PrettyPrinter.Delaborator.unfoldMDatas","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.unfoldMDatas","doc":""},"Lean.PrettyPrinter.Delaborator.unexpandStructureInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L218-L240","name":"Lean.PrettyPrinter.Delaborator.unexpandStructureInstance","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.unexpandStructureInstance","doc":""},"Lean.PrettyPrinter.Delaborator.unexpandRegularApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L200-L207","name":"Lean.PrettyPrinter.Delaborator.unexpandRegularApp","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.unexpandRegularApp","doc":""},"Lean.PrettyPrinter.Delaborator.unexpandCoe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L211-L216","name":"Lean.PrettyPrinter.Delaborator.unexpandCoe","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.unexpandCoe","doc":""},"Lean.PrettyPrinter.Delaborator.topDownAnalyze":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L628-L640","name":"Lean.PrettyPrinter.Delaborator.topDownAnalyze","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.topDownAnalyze","doc":""},"Lean.PrettyPrinter.Delaborator.shouldShowMotive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L187-L190","name":"Lean.PrettyPrinter.Delaborator.shouldShowMotive","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.shouldShowMotive","doc":""},"Lean.PrettyPrinter.Delaborator.returnsPi":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L137-L138","name":"Lean.PrettyPrinter.Delaborator.returnsPi","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.returnsPi","doc":""},"Lean.PrettyPrinter.Delaborator.reifyName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L770-L774","name":"Lean.PrettyPrinter.Delaborator.reifyName","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.reifyName","doc":""},"Lean.PrettyPrinter.Delaborator.orElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L69-L70","name":"Lean.PrettyPrinter.Delaborator.orElse","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.orElse","doc":""},"Lean.PrettyPrinter.Delaborator.mkDelabAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L102-L115","name":"Lean.PrettyPrinter.Delaborator.mkDelabAttribute","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.mkDelabAttribute","doc":""},"Lean.PrettyPrinter.Delaborator.mkAppUnexpanderAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L258-L269","name":"Lean.PrettyPrinter.Delaborator.mkAppUnexpanderAttribute","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.mkAppUnexpanderAttribute","doc":""},"Lean.PrettyPrinter.Delaborator.maybeAddBlockImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L18-L19","name":"Lean.PrettyPrinter.Delaborator.maybeAddBlockImplicit","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.maybeAddBlockImplicit","doc":""},"Lean.PrettyPrinter.Delaborator.liftMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L201-L202","name":"Lean.PrettyPrinter.Delaborator.liftMetaM","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.liftMetaM","doc":""},"Lean.PrettyPrinter.Delaborator.isType2Type":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L148-L151","name":"Lean.PrettyPrinter.Delaborator.isType2Type","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.isType2Type","doc":""},"Lean.PrettyPrinter.Delaborator.isStructureInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L170-L173","name":"Lean.PrettyPrinter.Delaborator.isStructureInstance","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.isStructureInstance","doc":""},"Lean.PrettyPrinter.Delaborator.isSimpleHOFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L145-L146","name":"Lean.PrettyPrinter.Delaborator.isSimpleHOFun","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.isSimpleHOFun","doc":""},"Lean.PrettyPrinter.Delaborator.isRegularApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L192-L198","name":"Lean.PrettyPrinter.Delaborator.isRegularApp","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.isRegularApp","doc":""},"Lean.PrettyPrinter.Delaborator.isNonConstFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L140-L143","name":"Lean.PrettyPrinter.Delaborator.isNonConstFun","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.isNonConstFun","doc":""},"Lean.PrettyPrinter.Delaborator.isIdLike":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L157-L161","name":"Lean.PrettyPrinter.Delaborator.isIdLike","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.isIdLike","doc":""},"Lean.PrettyPrinter.Delaborator.isFOLike":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L153-L155","name":"Lean.PrettyPrinter.Delaborator.isFOLike","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.isFOLike","doc":""},"Lean.PrettyPrinter.Delaborator.isCoe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L163-L168","name":"Lean.PrettyPrinter.Delaborator.isCoe","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.isCoe","doc":""},"Lean.PrettyPrinter.Delaborator.instOrElseDelabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L80-L80","name":"Lean.PrettyPrinter.Delaborator.instOrElseDelabM","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instOrElseDelabM","doc":""},"Lean.PrettyPrinter.Delaborator.instMonadWithReaderOfSubExprDelabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L86-L87","name":"Lean.PrettyPrinter.Delaborator.instMonadWithReaderOfSubExprDelabM","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instMonadWithReaderOfSubExprDelabM","doc":""},"Lean.PrettyPrinter.Delaborator.instMonadStateOfHoleIteratorDelabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L89-L92","name":"Lean.PrettyPrinter.Delaborator.instMonadStateOfHoleIteratorDelabM","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instMonadStateOfHoleIteratorDelabM","doc":""},"Lean.PrettyPrinter.Delaborator.instMonadReaderOfSubExprDelabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L83-L84","name":"Lean.PrettyPrinter.Delaborator.instMonadReaderOfSubExprDelabM","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instMonadReaderOfSubExprDelabM","doc":""},"Lean.PrettyPrinter.Delaborator.instMonadQuotationDelabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L96-L100","name":"Lean.PrettyPrinter.Delaborator.instMonadQuotationDelabM","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instMonadQuotationDelabM","doc":""},"Lean.PrettyPrinter.Delaborator.instInhabitedDelabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L66-L67","name":"Lean.PrettyPrinter.Delaborator.instInhabitedDelabM","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instInhabitedDelabM","doc":""},"Lean.PrettyPrinter.Delaborator.instAlternativeDelabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L75-L77","name":"Lean.PrettyPrinter.Delaborator.instAlternativeDelabM","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.instAlternativeDelabM","doc":""},"Lean.PrettyPrinter.Delaborator.hasIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L467-L470","name":"Lean.PrettyPrinter.Delaborator.hasIdent","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.hasIdent","doc":"Check for a `Syntax.ident` of the given name anywhere in the tree.\nThis is usually a bad idea since it does not check for shadowing bindings,\nbut in the delaborator we assume that bindings are never shadowed.\n"},"Lean.PrettyPrinter.Delaborator.getUnusedName.bodyUsesSuggestion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L188-L194","name":"Lean.PrettyPrinter.Delaborator.getUnusedName.bodyUsesSuggestion","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getUnusedName.bodyUsesSuggestion","doc":""},"Lean.PrettyPrinter.Delaborator.getUnusedName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L175-L194","name":"Lean.PrettyPrinter.Delaborator.getUnusedName","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getUnusedName","doc":""},"Lean.PrettyPrinter.Delaborator.getParamKinds.forallTelescopeArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L153-L160","name":"Lean.PrettyPrinter.Delaborator.getParamKinds.forallTelescopeArgs","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.getParamKinds.forallTelescopeArgs","doc":""},"Lean.PrettyPrinter.Delaborator.getParamKinds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L143-L160","name":"Lean.PrettyPrinter.Delaborator.getParamKinds","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.getParamKinds","doc":"Return array with n-th element set to kind of n-th parameter of `e`. "},"Lean.PrettyPrinter.Delaborator.getPPOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L149-L150","name":"Lean.PrettyPrinter.Delaborator.getPPOption","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getPPOption","doc":"Evaluate option accessor, using subterm-specific options if set. "},"Lean.PrettyPrinter.Delaborator.getOptionsAtCurrPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L140-L146","name":"Lean.PrettyPrinter.Delaborator.getOptionsAtCurrPos","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getOptionsAtCurrPos","doc":""},"Lean.PrettyPrinter.Delaborator.getExprKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L118-L138","name":"Lean.PrettyPrinter.Delaborator.getExprKind","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.getExprKind","doc":""},"Lean.PrettyPrinter.Delaborator.failure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L72-L73","name":"Lean.PrettyPrinter.Delaborator.failure","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.failure","doc":""},"Lean.PrettyPrinter.Delaborator.delabSort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L52-L59","name":"Lean.PrettyPrinter.Delaborator.delabSort","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabSort","doc":""},"Lean.PrettyPrinter.Delaborator.delabSigmaCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L712-L723","name":"Lean.PrettyPrinter.Delaborator.delabSigmaCore","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabSigmaCore","doc":""},"Lean.PrettyPrinter.Delaborator.delabSigma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L726-L726","name":"Lean.PrettyPrinter.Delaborator.delabSigma","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabSigma","doc":""},"Lean.PrettyPrinter.Delaborator.delabProjectionApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L657-L672","name":"Lean.PrettyPrinter.Delaborator.delabProjectionApp","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabProjectionApp","doc":"Delaborate a call to a projection function such as `Prod.fst`. "},"Lean.PrettyPrinter.Delaborator.delabProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L646-L653","name":"Lean.PrettyPrinter.Delaborator.delabProj","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabProj","doc":"Delaborate a projection primitive. These do not usually occur in\nuser code, but are pretty-printed when e.g. `#print`ing a projection\nfunction.\n"},"Lean.PrettyPrinter.Delaborator.delabPSigma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L729-L729","name":"Lean.PrettyPrinter.Delaborator.delabPSigma","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabPSigma","doc":""},"Lean.PrettyPrinter.Delaborator.delabOfScientific":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L621-L638","name":"Lean.PrettyPrinter.Delaborator.delabOfScientific","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabOfScientific","doc":""},"Lean.PrettyPrinter.Delaborator.delabOfNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L615-L617","name":"Lean.PrettyPrinter.Delaborator.delabOfNat","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabOfNat","doc":""},"Lean.PrettyPrinter.Delaborator.delabNamedPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L700-L709","name":"Lean.PrettyPrinter.Delaborator.delabNamedPattern","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNamedPattern","doc":""},"Lean.PrettyPrinter.Delaborator.delabNameMkStr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L777-L780","name":"Lean.PrettyPrinter.Delaborator.delabNameMkStr","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNameMkStr","doc":""},"Lean.PrettyPrinter.Delaborator.delabNameMkNum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L783-L783","name":"Lean.PrettyPrinter.Delaborator.delabNameMkNum","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNameMkNum","doc":""},"Lean.PrettyPrinter.Delaborator.delabMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L42-L49","name":"Lean.PrettyPrinter.Delaborator.delabMVar","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabMVar","doc":""},"Lean.PrettyPrinter.Delaborator.delabMData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L448-L460","name":"Lean.PrettyPrinter.Delaborator.delabMData","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabMData","doc":""},"Lean.PrettyPrinter.Delaborator.delabLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L607-L611","name":"Lean.PrettyPrinter.Delaborator.delabLit","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabLit","doc":""},"Lean.PrettyPrinter.Delaborator.delabLetFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L435-L445","name":"Lean.PrettyPrinter.Delaborator.delabLetFun","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabLetFun","doc":"Delaborate applications of the form `(fun x => b) v` as `let_fun x := v; b`\n"},"Lean.PrettyPrinter.Delaborator.delabLetE":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L594-L604","name":"Lean.PrettyPrinter.Delaborator.delabLetE","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabLetE","doc":""},"Lean.PrettyPrinter.Delaborator.delabLam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L512-L561","name":"Lean.PrettyPrinter.Delaborator.delabLam","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabLam","doc":""},"Lean.PrettyPrinter.Delaborator.delabForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L564-L591","name":"Lean.PrettyPrinter.Delaborator.delabForall","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabForall","doc":""},"Lean.PrettyPrinter.Delaborator.delabFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L229-L237","name":"Lean.PrettyPrinter.Delaborator.delabFor","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.delabFor","doc":""},"Lean.PrettyPrinter.Delaborator.delabFailureId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L61-L61","name":"Lean.PrettyPrinter.Delaborator.delabFailureId","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.delabFailureId","doc":""},"Lean.PrettyPrinter.Delaborator.delabFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L26-L33","name":"Lean.PrettyPrinter.Delaborator.delabFVar","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabFVar","doc":""},"Lean.PrettyPrinter.Delaborator.delabDoElems.prependAndRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L761-L761","name":"Lean.PrettyPrinter.Delaborator.delabDoElems.prependAndRec","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDoElems.prependAndRec","doc":""},"Lean.PrettyPrinter.Delaborator.delabDoElems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L731-L761","name":"Lean.PrettyPrinter.Delaborator.delabDoElems","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDoElems","doc":""},"Lean.PrettyPrinter.Delaborator.delabDo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L764-L768","name":"Lean.PrettyPrinter.Delaborator.delabDo","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDo","doc":""},"Lean.PrettyPrinter.Delaborator.delabDIte.delabBranch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L683-L689","name":"Lean.PrettyPrinter.Delaborator.delabDIte.delabBranch","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDIte.delabBranch","doc":""},"Lean.PrettyPrinter.Delaborator.delabDIte":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L675-L689","name":"Lean.PrettyPrinter.Delaborator.delabDIte","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDIte","doc":""},"Lean.PrettyPrinter.Delaborator.delabConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L89-L110","name":"Lean.PrettyPrinter.Delaborator.delabConst","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabConst","doc":""},"Lean.PrettyPrinter.Delaborator.delabCond":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L692-L697","name":"Lean.PrettyPrinter.Delaborator.delabCond","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabCond","doc":""},"Lean.PrettyPrinter.Delaborator.delabBVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L37-L39","name":"Lean.PrettyPrinter.Delaborator.delabBVar","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabBVar","doc":""},"Lean.PrettyPrinter.Delaborator.delabAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L116-L116","name":"Lean.PrettyPrinter.Delaborator.delabAttribute","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.delabAttribute","doc":""},"Lean.PrettyPrinter.Delaborator.delabAppMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L373-L430","name":"Lean.PrettyPrinter.Delaborator.delabAppMatch","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppMatch","doc":"Delaborate applications of \"matchers\" such as\n```\nList.map.match_1 : {α : Type _} →\n  (motive : List α → Sort _) →\n    (x : List α) → (Unit → motive List.nil) → ((a : α) → (as : List α) → motive (a :: as)) → motive x\n```\n"},"Lean.PrettyPrinter.Delaborator.delabAppImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L243-L290","name":"Lean.PrettyPrinter.Delaborator.delabAppImplicit","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppImplicit","doc":""},"Lean.PrettyPrinter.Delaborator.delabAppFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L127-L131","name":"Lean.PrettyPrinter.Delaborator.delabAppFn","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppFn","doc":""},"Lean.PrettyPrinter.Delaborator.delabAppExplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L163-L185","name":"Lean.PrettyPrinter.Delaborator.delabAppExplicit","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppExplicit","doc":""},"Lean.PrettyPrinter.Delaborator.delab":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L239-L256","name":"Lean.PrettyPrinter.Delaborator.delab","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.delab","doc":""},"Lean.PrettyPrinter.Delaborator.appUnexpanderAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L270-L270","name":"Lean.PrettyPrinter.Delaborator.appUnexpanderAttribute","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.appUnexpanderAttribute","doc":""},"Lean.PrettyPrinter.Delaborator.annotatePos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L169-L170","name":"Lean.PrettyPrinter.Delaborator.annotatePos","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.annotatePos","doc":""},"Lean.PrettyPrinter.Delaborator.annotateCurPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L172-L173","name":"Lean.PrettyPrinter.Delaborator.annotateCurPos","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.annotateCurPos","doc":""},"Lean.PrettyPrinter.Delaborator.addTermInfo.mkTermInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L208-L215","name":"Lean.PrettyPrinter.Delaborator.addTermInfo.mkTermInfo","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addTermInfo.mkTermInfo","doc":""},"Lean.PrettyPrinter.Delaborator.addTermInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L204-L215","name":"Lean.PrettyPrinter.Delaborator.addTermInfo","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addTermInfo","doc":""},"Lean.PrettyPrinter.Delaborator.addFieldInfo.mkFieldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L221-L227","name":"Lean.PrettyPrinter.Delaborator.addFieldInfo.mkFieldInfo","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addFieldInfo.mkFieldInfo","doc":""},"Lean.PrettyPrinter.Delaborator.addFieldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L217-L227","name":"Lean.PrettyPrinter.Delaborator.addFieldInfo","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.addFieldInfo","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.withKnowing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L334-L335","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.withKnowing","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.withKnowing","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.tryUnify":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L276-L282","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.tryUnify","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.tryUnify","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.replaceLPsWithVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L211-L218","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.replaceLPsWithVars","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.replaceLPsWithVars","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.nameNotRoundtrippable.containsNum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L240-L243","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.nameNotRoundtrippable.containsNum","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.nameNotRoundtrippable.containsNum","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.nameNotRoundtrippable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L237-L243","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.nameNotRoundtrippable","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.nameNotRoundtrippable","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.mvarName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L245-L246","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.mvarName","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.mvarName","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isTrivialBottomUp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L304-L309","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isTrivialBottomUp","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isTrivialBottomUp","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isSubstLike":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L234-L235","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isSubstLike","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isSubstLike","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isHigherOrder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L228-L229","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isHigherOrder","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isHigherOrder","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isHBinOp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L195-L209","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isHBinOp","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isHBinOp","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isFunLike":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L231-L232","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isFunLike","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isFunLike","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isDefEqAssigning":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L220-L222","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isDefEqAssigning","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.isDefEqAssigning","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instMonadWithReaderOfSubExprAnalyzeM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L273-L274","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instMonadWithReaderOfSubExprAnalyzeM","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instMonadWithReaderOfSubExprAnalyzeM","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instMonadReaderOfSubExprAnalyzeM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L270-L271","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instMonadReaderOfSubExprAnalyzeM","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instMonadReaderOfSubExprAnalyzeM","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instInhabitedContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L262-L262","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instInhabitedContext","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.instInhabitedContext","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.inspectOutParams.inspectAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L291-L302","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.inspectOutParams.inspectAux","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.inspectOutParams.inspectAux","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.inspectOutParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L284-L302","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.inspectOutParams","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.inspectOutParams","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.hasMVarAtCurrDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L177-L182","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.hasMVarAtCurrDepth","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.hasMVarAtCurrDepth","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.hasLevelMVarAtCurrDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L184-L187","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.hasLevelMVarAtCurrDepth","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.hasLevelMVarAtCurrDepth","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.containsBadMax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L248-L252","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.containsBadMax","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.containsBadMax","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.checkpointDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L224-L226","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.checkpointDefEq","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.checkpointDefEq","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.checkKnowsType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L339-L341","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.checkKnowsType","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.checkKnowsType","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.canBottomUp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L311-L332","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.canBottomUp","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.canBottomUp","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.annotateBoolAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L343-L346","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.annotateBoolAt","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.annotateBoolAt","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.annotateBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L348-L349","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.annotateBool","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.annotateBool","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeFailureId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L337-L337","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeFailureId","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeFailureId","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.maybeSetExplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L612-L620","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.maybeSetExplicit","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.maybeSetExplicit","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.hBinOpHeuristic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L517-L520","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.hBinOpHeuristic","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.hBinOpHeuristic","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.collectTrivialBottomUps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L522-L530","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.collectTrivialBottomUps","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.collectTrivialBottomUps","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.collectHigherOrders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L504-L515","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.collectHigherOrders","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.collectHigherOrders","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.collectBottomUps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L490-L497","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.collectBottomUps","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.collectBottomUps","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.checkOutParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L499-L502","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.checkOutParams","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.checkOutParams","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.applyFunBinderHeuristic.core":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L535-L550","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.applyFunBinderHeuristic.core","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.applyFunBinderHeuristic.core","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.applyFunBinderHeuristic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L532-L555","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.applyFunBinderHeuristic","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.applyFunBinderHeuristic","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.annotateNamedArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L562-L564","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.annotateNamedArg","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.annotateNamedArg","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.analyzeFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L557-L560","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.analyzeFn","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.analyzeFn","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.analyzeArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L566-L610","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.analyzeArg","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore.analyzeArg","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L477-L620","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyzeAppStagedCore","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.maybeAddBlockImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L436-L441","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.maybeAddBlockImplicit","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.maybeAddBlockImplicit","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeSort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L472-L472","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeSort","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeSort","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L473-L473","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeProj","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeProj","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzePi":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L451-L453","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzePi","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzePi","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeMData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L475-L475","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeMData","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeMData","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L460-L470","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeLet","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeLet","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeLam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L455-L458","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeLam","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeLam","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L474-L474","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeFVar","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeFVar","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L443-L449","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeConst","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeConst","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeAppStaged":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L410-L434","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeAppStaged","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeAppStaged","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L395-L408","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeApp","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze.analyzeApp","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L370-L475","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.analyze","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L264-L266","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.State","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.State","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L256-L262","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.Context","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.Context","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.App.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L359-L364","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.App.State","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.App.State","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.App.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L351-L357","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.App.Context","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.App.Context","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.AnalyzeM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L268-L268","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.AnalyzeM","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.AnalyzeM","doc":""},"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.AnalyzeAppM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/TopDownAnalyze.lean#L366-L366","name":"Lean.PrettyPrinter.Delaborator.TopDownAnalyze.AnalyzeAppM","docLink":"./Lean/PrettyPrinter/Delaborator/TopDownAnalyze.html#Lean.PrettyPrinter.Delaborator.TopDownAnalyze.AnalyzeAppM","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L42-L43","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withType","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withType","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L58-L60","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withProj","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withProj","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withNaryFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L80-L83","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withNaryFn","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withNaryFn","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withNaryArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L85-L89","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withNaryArg","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withNaryArg","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withMDataExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L62-L64","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withMDataExpr","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withMDataExpr","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withLetVarType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L66-L68","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withLetVarType","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withLetVarType","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withLetValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L70-L72","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withLetValue","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withLetValue","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withLetBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L74-L78","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withLetBody","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withLetBody","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withBindingDomain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L51-L51","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withBindingDomain","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withBindingDomain","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withBindingBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L53-L56","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withBindingBody","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withBindingBody","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withAppFnArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L45-L49","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withAppFnArgs","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withAppFnArgs","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withAppFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L39-L39","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withAppFn","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withAppFn","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.withAppArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L40-L40","name":"Lean.PrettyPrinter.Delaborator.SubExpr.withAppArg","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.withAppArg","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.nextExtraPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L115-L119","name":"Lean.PrettyPrinter.Delaborator.SubExpr.nextExtraPos","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.nextExtraPos","doc":"The positioning scheme guarantees that there will be an infinite number of extra positions\nwhich are never used by `Expr`s. The `HoleIterator` always points at the next such \"hole\".\nWe use these to attach additional `Elab.Info`. "},"Lean.PrettyPrinter.Delaborator.SubExpr.instInhabitedHoleIterator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L96-L96","name":"Lean.PrettyPrinter.Delaborator.SubExpr.instInhabitedHoleIterator","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.instInhabitedHoleIterator","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.getPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L34-L34","name":"Lean.PrettyPrinter.Delaborator.SubExpr.getPos","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.getPos","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.getExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L33-L33","name":"Lean.PrettyPrinter.Delaborator.SubExpr.getExpr","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.getExpr","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.descend":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L36-L37","name":"Lean.PrettyPrinter.Delaborator.SubExpr.descend","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.descend","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator.toPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L104-L105","name":"Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator.toPos","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator.toPos","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator.next":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L107-L110","name":"Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator.next","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator.next","doc":""},"Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L93-L96","name":"Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.SubExpr.HoleIterator","doc":""},"Lean.PrettyPrinter.Delaborator.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L51-L57","name":"Lean.PrettyPrinter.Delaborator.State","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.State","doc":""},"Lean.PrettyPrinter.Delaborator.ParamKind.isRegularExplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L139-L140","name":"Lean.PrettyPrinter.Delaborator.ParamKind.isRegularExplicit","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.isRegularExplicit","doc":""},"Lean.PrettyPrinter.Delaborator.ParamKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L133-L137","name":"Lean.PrettyPrinter.Delaborator.ParamKind","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind","doc":""},"Lean.PrettyPrinter.Delaborator.OptionsPerPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/SubExpr.lean#L18-L18","name":"Lean.PrettyPrinter.Delaborator.OptionsPerPos","docLink":"./Lean/PrettyPrinter/Delaborator/SubExpr.html#Lean.PrettyPrinter.Delaborator.OptionsPerPos","doc":""},"Lean.PrettyPrinter.Delaborator.DelabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L63-L63","name":"Lean.PrettyPrinter.Delaborator.DelabM","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM","doc":""},"Lean.PrettyPrinter.Delaborator.Delab":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L64-L64","name":"Lean.PrettyPrinter.Delaborator.Delab","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab","doc":""},"Lean.PrettyPrinter.Delaborator.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Basic.lean#L43-L49","name":"Lean.PrettyPrinter.Delaborator.Context","docLink":"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Context","doc":""},"Lean.PrettyPrinter.Delaborator.AppMatchState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L293-L303","name":"Lean.PrettyPrinter.Delaborator.AppMatchState","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState","doc":"State for `delabAppMatch` and helpers. "},"Lean.PrettyPrinter.CategoryParenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter/Parenthesizer.lean#L132-L132","name":"Lean.PrettyPrinter.CategoryParenthesizer","docLink":"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.CategoryParenthesizer","doc":""},"Lean.PrefixTreeNode.insert.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L31-L38","name":"Lean.PrefixTreeNode.insert.loop","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTreeNode.insert.loop","doc":""},"Lean.PrefixTreeNode.insert.insertEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L25-L30","name":"Lean.PrefixTreeNode.insert.insertEmpty","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTreeNode.insert.insertEmpty","doc":""},"Lean.PrefixTreeNode.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L24-L39","name":"Lean.PrefixTreeNode.insert","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTreeNode.insert","doc":""},"Lean.PrefixTreeNode.foldMatchingM.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L53-L58","name":"Lean.PrefixTreeNode.foldMatchingM.fold","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTreeNode.foldMatchingM.fold","doc":""},"Lean.PrefixTreeNode.foldMatchingM.find":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L59-L64","name":"Lean.PrefixTreeNode.foldMatchingM.find","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTreeNode.foldMatchingM.find","doc":""},"Lean.PrefixTreeNode.foldMatchingM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L52-L65","name":"Lean.PrefixTreeNode.foldMatchingM","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTreeNode.foldMatchingM","doc":""},"Lean.PrefixTreeNode.find?.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L43-L48","name":"Lean.PrefixTreeNode.find?.loop","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTreeNode.find?.loop","doc":""},"Lean.PrefixTreeNode.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L42-L49","name":"Lean.PrefixTreeNode.find?","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTreeNode.find?","doc":""},"Lean.PrefixTreeNode.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L20-L21","name":"Lean.PrefixTreeNode.empty","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTreeNode.empty","doc":""},"Lean.PrefixTreeNode.WellFormed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L67-L69","name":"Lean.PrefixTreeNode.WellFormed","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTreeNode.WellFormed","doc":""},"Lean.PrefixTreeNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L12-L13","name":"Lean.PrefixTreeNode","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTreeNode","doc":""},"Lean.PrefixTree.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L88-L89","name":"Lean.PrefixTree.insert","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTree.insert","doc":""},"Lean.PrefixTree.forMatchingM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L104-L105","name":"Lean.PrefixTree.forMatchingM","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTree.forMatchingM","doc":""},"Lean.PrefixTree.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L108-L109","name":"Lean.PrefixTree.forM","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTree.forM","doc":""},"Lean.PrefixTree.foldMatchingM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L96-L97","name":"Lean.PrefixTree.foldMatchingM","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTree.foldMatchingM","doc":""},"Lean.PrefixTree.foldM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L100-L101","name":"Lean.PrefixTree.foldM","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTree.foldM","doc":""},"Lean.PrefixTree.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L92-L93","name":"Lean.PrefixTree.find?","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTree.find?","doc":""},"Lean.PrefixTree.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L78-L79","name":"Lean.PrefixTree.empty","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTree.empty","doc":""},"Lean.PrefixTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/PrefixTree.lean#L73-L74","name":"Lean.PrefixTree","docLink":"./Lean/Data/PrefixTree.html#Lean.PrefixTree","doc":""},"Lean.Position.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L17-L18","name":"Lean.Position.lt","docLink":"./Lean/Data/Position.html#Lean.Position.lt","doc":""},"Lean.Position.instToStringPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L23-L24","name":"Lean.Position.instToStringPosition","docLink":"./Lean/Data/Position.html#Lean.Position.instToStringPosition","doc":""},"Lean.Position.instToFormatPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L20-L21","name":"Lean.Position.instToFormatPosition","docLink":"./Lean/Data/Position.html#Lean.Position.instToFormatPosition","doc":""},"Lean.Position.instToExprPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L26-L28","name":"Lean.Position.instToExprPosition","docLink":"./Lean/Data/Position.html#Lean.Position.instToExprPosition","doc":""},"Lean.Position":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L11-L14","name":"Lean.Position","docLink":"./Lean/Data/Position.html#Lean.Position","doc":""},"Lean.PersistentLevelSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L606-L606","name":"Lean.PersistentLevelSet","docLink":"./Lean/Level.html#Lean.PersistentLevelSet","doc":""},"Lean.PersistentLevelMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L604-L604","name":"Lean.PersistentLevelMap","docLink":"./Lean/Level.html#Lean.PersistentLevelMap","doc":""},"Lean.PersistentExprStructMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1211-L1211","name":"Lean.PersistentExprStructMap","docLink":"./Lean/Expr.html#Lean.PersistentExprStructMap","doc":""},"Lean.PersistentExprSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1186-L1186","name":"Lean.PersistentExprSet","docLink":"./Lean/Expr.html#Lean.PersistentExprSet","doc":""},"Lean.PersistentExprMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1184-L1184","name":"Lean.PersistentExprMap","docLink":"./Lean/Expr.html#Lean.PersistentExprMap","doc":""},"Lean.PersistentEnvExtensionState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L341-L343","name":"Lean.PersistentEnvExtensionState","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState","doc":""},"Lean.PersistentEnvExtensionDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L411-L417","name":"Lean.PersistentEnvExtensionDescr","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr","doc":""},"Lean.PersistentEnvExtension.setState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L401-L402","name":"Lean.PersistentEnvExtension.setState","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.setState","doc":""},"Lean.PersistentEnvExtension.modifyState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L404-L405","name":"Lean.PersistentEnvExtension.modifyState","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.modifyState","doc":""},"Lean.PersistentEnvExtension.getState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L398-L399","name":"Lean.PersistentEnvExtension.getState","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.getState","doc":""},"Lean.PersistentEnvExtension.getModuleEntries":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L390-L391","name":"Lean.PersistentEnvExtension.getModuleEntries","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.getModuleEntries","doc":""},"Lean.PersistentEnvExtension.addEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L393-L396","name":"Lean.PersistentEnvExtension.addEntry","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.addEntry","doc":""},"Lean.PersistentEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L367-L373","name":"Lean.PersistentEnvExtension","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension","doc":"An environment extension with support for storing/retrieving entries from a .olean file.\n   - α is the type of the entries that are stored in .olean files.\n   - β is the type of values used to update the state.\n   - σ is the actual state.\n\n   Remark: for most extensions α and β coincide.\n\n   Note that `addEntryFn` is not in `IO`. This is intentional, and allows us to write simple functions such as\n   ```\n   def addAlias (env : Environment) (a : Name) (e : Name) : Environment :=\n   aliasExtension.addEntry env (a, e)\n   ```\n   without using `IO`. We have many functions like `addAlias`.\n\n   `α` and ‵β` do not coincide for extensions where the data used to update the state contains, for example,\n   closures which we currently cannot store in files. "},"Lean.ParserDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2679-L2691","name":"Lean.ParserDescr","docLink":"./Init/Prelude.html#Lean.ParserDescr","doc":""},"Lean.ParserCompiler.replaceParserTy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler.lean#L28-L32","name":"Lean.ParserCompiler.replaceParserTy","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.replaceParserTy","doc":""},"Lean.ParserCompiler.registerParserCompiler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler.lean#L143-L155","name":"Lean.ParserCompiler.registerParserCompiler","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.registerParserCompiler","doc":"Precondition: `α` must match `ctx.tyName`. "},"Lean.ParserCompiler.registerCombinatorAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler/Attribute.lean#L20-L37","name":"Lean.ParserCompiler.registerCombinatorAttribute","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.registerCombinatorAttribute","doc":""},"Lean.ParserCompiler.parserNodeKind?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler.lean#L36-L49","name":"Lean.ParserCompiler.parserNodeKind?","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.parserNodeKind?","doc":"Takes an expression of type `Parser`, and determines the syntax kind of the root node it produces. "},"Lean.ParserCompiler.instInhabitedCombinatorAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler/Attribute.lean#L17-L17","name":"Lean.ParserCompiler.instInhabitedCombinatorAttribute","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.instInhabitedCombinatorAttribute","doc":""},"Lean.ParserCompiler.compileParserExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler.lean#L58-L124","name":"Lean.ParserCompiler.compileParserExpr","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.compileParserExpr","doc":"Translate an expression of type `Parser` into one of type `tyName`, tagging intermediary constants with\n`ctx.combinatorAttr`. If `force` is `false`, refuse to do so for imported constants. "},"Lean.ParserCompiler.compileEmbeddedParsers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler.lean#L128-L140","name":"Lean.ParserCompiler.compileEmbeddedParsers","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.compileEmbeddedParsers","doc":""},"Lean.ParserCompiler.Context.tyName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler.lean#L25-L25","name":"Lean.ParserCompiler.Context.tyName","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.tyName","doc":""},"Lean.ParserCompiler.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler.lean#L20-L23","name":"Lean.ParserCompiler.Context","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context","doc":""},"Lean.ParserCompiler.CombinatorAttribute.setDeclFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler/Attribute.lean#L44-L45","name":"Lean.ParserCompiler.CombinatorAttribute.setDeclFor","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.setDeclFor","doc":""},"Lean.ParserCompiler.CombinatorAttribute.runDeclFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler/Attribute.lean#L47-L50","name":"Lean.ParserCompiler.CombinatorAttribute.runDeclFor","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.runDeclFor","doc":""},"Lean.ParserCompiler.CombinatorAttribute.getDeclFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler/Attribute.lean#L41-L42","name":"Lean.ParserCompiler.CombinatorAttribute.getDeclFor?","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute.getDeclFor?","doc":""},"Lean.ParserCompiler.CombinatorAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ParserCompiler/Attribute.lean#L14-L17","name":"Lean.ParserCompiler.CombinatorAttribute","docLink":"./Lean/ParserCompiler/Attribute.html#Lean.ParserCompiler.CombinatorAttribute","doc":""},"Lean.Parser.«termRegister_parser_alias(Kind:=_)____»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L172-L172","name":"Lean.Parser.«termRegister_parser_alias(Kind:=_)____»","docLink":"./Lean/Parser/Extra.html#Lean.Parser.«termRegister_parser_alias(Kind:=_)____»","doc":""},"Lean.Parser.withoutPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1520-L1523","name":"Lean.Parser.withoutPosition","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutPosition","doc":""},"Lean.Parser.withoutInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1782-L1783","name":"Lean.Parser.withoutInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutInfo","doc":""},"Lean.Parser.withoutForbidden":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1530-L1533","name":"Lean.Parser.withoutForbidden","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutForbidden","doc":""},"Lean.Parser.withResultOfInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L696-L699","name":"Lean.Parser.withResultOfInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOfInfo","doc":""},"Lean.Parser.withResultOfFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L689-L694","name":"Lean.Parser.withResultOfFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOfFn","doc":"Apply `f` to the syntax object produced by `p` "},"Lean.Parser.withResultOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L701-L704","name":"Lean.Parser.withResultOf","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOf","doc":""},"Lean.Parser.withPositionAfterLinebreak":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1512-L1518","name":"Lean.Parser.withPositionAfterLinebreak","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withPositionAfterLinebreak","doc":""},"Lean.Parser.withPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1506-L1510","name":"Lean.Parser.withPosition","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withPosition","doc":""},"Lean.Parser.withOpenFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L611-L619","name":"Lean.Parser.withOpenFn","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenFn","doc":"If the parsing stack is of the form `#[.., openCommand]`, we process the open command, and execute `p` "},"Lean.Parser.withOpenDeclFnCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L596-L608","name":"Lean.Parser.withOpenDeclFnCore","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFnCore","doc":""},"Lean.Parser.withOpenDeclFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L628-L633","name":"Lean.Parser.withOpenDeclFn","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFn","doc":"If the parsing stack is of the form `#[.., openDecl]`, we process the open declaration, and execute `p` "},"Lean.Parser.withOpenDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L635-L638","name":"Lean.Parser.withOpenDecl","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenDecl","doc":""},"Lean.Parser.withOpen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L622-L625","name":"Lean.Parser.withOpen","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpen","doc":""},"Lean.Parser.withForbidden":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1525-L1528","name":"Lean.Parser.withForbidden","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withForbidden","doc":""},"Lean.Parser.withAntiquotSuffixSplice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1803-L1811","name":"Lean.Parser.withAntiquotSuffixSplice","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotSuffixSplice","doc":"Parse `suffix` after an antiquotation, e.g. `$x,*`, and put both into a new node. "},"Lean.Parser.withAntiquotSpliceAndSuffix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1813-L1815","name":"Lean.Parser.withAntiquotSpliceAndSuffix","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotSpliceAndSuffix","doc":""},"Lean.Parser.withAntiquotFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1765-L1774","name":"Lean.Parser.withAntiquotFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotFn","doc":""},"Lean.Parser.withAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1777-L1780","name":"Lean.Parser.withAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquot","doc":"Optimized version of `mkAntiquot ... <|> p`. "},"Lean.Parser.whitespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L754-L777","name":"Lean.Parser.whitespace","docLink":"./Lean/Parser/Basic.html#Lean.Parser.whitespace","doc":"Consume whitespace and comments "},"Lean.Parser.unicodeSymbolNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1257-L1261","name":"Lean.Parser.unicodeSymbolNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolNoAntiquot","doc":""},"Lean.Parser.unicodeSymbolInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1249-L1252","name":"Lean.Parser.unicodeSymbolInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolInfo","doc":""},"Lean.Parser.unicodeSymbolFnAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1246-L1247","name":"Lean.Parser.unicodeSymbolFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolFnAux","doc":""},"Lean.Parser.unicodeSymbolFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1254-L1255","name":"Lean.Parser.unicodeSymbolFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolFn","doc":""},"Lean.Parser.unicodeSymbol":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1745-L1746","name":"Lean.Parser.unicodeSymbol","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbol","doc":""},"Lean.Parser.trailingNodeFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L374-L377","name":"Lean.Parser.trailingNodeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNodeFn","doc":""},"Lean.Parser.trailingNodeAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L466-L469","name":"Lean.Parser.trailingNodeAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNodeAux","doc":""},"Lean.Parser.trailingNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L471-L472","name":"Lean.Parser.trailingNode","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNode","doc":""},"Lean.Parser.trailingLoopStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1863-L1864","name":"Lean.Parser.trailingLoopStep","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingLoopStep","doc":""},"Lean.Parser.trailingLoop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1866-L1884","name":"Lean.Parser.trailingLoop","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingLoop","doc":""},"Lean.Parser.topLevelCommandParserFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L72-L73","name":"Lean.Parser.topLevelCommandParserFn","docLink":"./Lean/Parser/Module.html#Lean.Parser.topLevelCommandParserFn","doc":""},"Lean.Parser.tokenWithAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1727-L1735","name":"Lean.Parser.tokenWithAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenWithAntiquot","doc":""},"Lean.Parser.tokenFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1086-L1097","name":"Lean.Parser.tokenFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenFn","doc":""},"Lean.Parser.tokenAntiquotFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1717-L1725","name":"Lean.Parser.tokenAntiquotFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenAntiquotFn","doc":""},"Lean.Parser.throwUnknownParserCategory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L99-L100","name":"Lean.Parser.throwUnknownParserCategory","docLink":"./Lean/Parser/Extension.html#Lean.Parser.throwUnknownParserCategory","doc":""},"Lean.Parser.testParseModuleAux.parse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L119-L129","name":"Lean.Parser.testParseModuleAux.parse","docLink":"./Lean/Parser/Module.html#Lean.Parser.testParseModuleAux.parse","doc":""},"Lean.Parser.testParseModuleAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L118-L130","name":"Lean.Parser.testParseModuleAux","docLink":"./Lean/Parser/Module.html#Lean.Parser.testParseModuleAux","doc":""},"Lean.Parser.testParseModule":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L132-L137","name":"Lean.Parser.testParseModule","docLink":"./Lean/Parser/Module.html#Lean.Parser.testParseModule","doc":""},"Lean.Parser.testParseFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L139-L141","name":"Lean.Parser.testParseFile","docLink":"./Lean/Parser/Module.html#Lean.Parser.testParseFile","doc":""},"Lean.Parser.termParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1679-L1680","name":"Lean.Parser.termParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.termParser","doc":""},"Lean.Parser.takeWhileFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L721-L722","name":"Lean.Parser.takeWhileFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeWhileFn","doc":""},"Lean.Parser.takeWhile1Fn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L724-L725","name":"Lean.Parser.takeWhile1Fn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeWhile1Fn","doc":""},"Lean.Parser.takeUntilFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L715-L719","name":"Lean.Parser.takeUntilFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeUntilFn","doc":""},"Lean.Parser.tacticParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L26-L27","name":"Lean.Parser.tacticParser","docLink":"./Lean/Parser/Term.html#Lean.Parser.tacticParser","doc":""},"Lean.Parser.syntaxParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L23-L24","name":"Lean.Parser.syntaxParser","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.syntaxParser","doc":""},"Lean.Parser.symbolNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1144-L1147","name":"Lean.Parser.symbolNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolNoAntiquot","doc":""},"Lean.Parser.symbolInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1136-L1139","name":"Lean.Parser.symbolInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolInfo","doc":""},"Lean.Parser.symbolFnAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1133-L1134","name":"Lean.Parser.symbolFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolFnAux","doc":""},"Lean.Parser.symbolFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1141-L1142","name":"Lean.Parser.symbolFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolFn","doc":""},"Lean.Parser.symbol":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1737-L1738","name":"Lean.Parser.symbol","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbol","doc":""},"Lean.Parser.suppressInsideQuotFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L455-L456","name":"Lean.Parser.suppressInsideQuotFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.suppressInsideQuotFn","doc":""},"Lean.Parser.suppressInsideQuot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L458-L461","name":"Lean.Parser.suppressInsideQuot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.suppressInsideQuot","doc":""},"Lean.Parser.strLitNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1296-L1299","name":"Lean.Parser.strLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitNoAntiquot","doc":""},"Lean.Parser.strLitFnAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L869-L879","name":"Lean.Parser.strLitFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitFnAux","doc":""},"Lean.Parser.strLitFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1290-L1294","name":"Lean.Parser.strLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitFn","doc":""},"Lean.Parser.strLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L42-L43","name":"Lean.Parser.strLit","docLink":"./Lean/Parser/Extra.html#Lean.Parser.strLit","doc":""},"Lean.Parser.strAux.parse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1195-L1201","name":"Lean.Parser.strAux.parse","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strAux.parse","doc":""},"Lean.Parser.strAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1194-L1202","name":"Lean.Parser.strAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strAux","doc":""},"Lean.Parser.skip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1930-L1933","name":"Lean.Parser.skip","docLink":"./Lean/Parser/Basic.html#Lean.Parser.skip","doc":""},"Lean.Parser.setLhsPrecFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L433-L435","name":"Lean.Parser.setLhsPrecFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setLhsPrecFn","doc":""},"Lean.Parser.setLhsPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L437-L440","name":"Lean.Parser.setLhsPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setLhsPrec","doc":""},"Lean.Parser.setExpectedFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1702-L1705","name":"Lean.Parser.setExpectedFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setExpectedFn","doc":""},"Lean.Parser.setExpected":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1707-L1708","name":"Lean.Parser.setExpected","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setExpected","doc":""},"Lean.Parser.sepByNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L678-L681","name":"Lean.Parser.sepByNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByNoAntiquot","doc":""},"Lean.Parser.sepByInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L667-L670","name":"Lean.Parser.sepByInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByInfo","doc":""},"Lean.Parser.sepByIndent.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L70-L81","name":"Lean.Parser.sepByIndent.formatter","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepByIndent.formatter","doc":""},"Lean.Parser.sepByIndent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L60-L62","name":"Lean.Parser.sepByIndent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepByIndent","doc":""},"Lean.Parser.sepByFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L659-L661","name":"Lean.Parser.sepByFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByFn","doc":""},"Lean.Parser.sepByElemParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1824-L1825","name":"Lean.Parser.sepByElemParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByElemParser","doc":""},"Lean.Parser.sepBy1NoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L683-L686","name":"Lean.Parser.sepBy1NoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1NoAntiquot","doc":""},"Lean.Parser.sepBy1Info":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L672-L676","name":"Lean.Parser.sepBy1Info","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1Info","doc":""},"Lean.Parser.sepBy1Indent.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L83-L83","name":"Lean.Parser.sepBy1Indent.formatter","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepBy1Indent.formatter","doc":""},"Lean.Parser.sepBy1Indent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L64-L66","name":"Lean.Parser.sepBy1Indent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepBy1Indent","doc":""},"Lean.Parser.sepBy1Fn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L663-L665","name":"Lean.Parser.sepBy1Fn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1Fn","doc":""},"Lean.Parser.sepBy1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1830-L1831","name":"Lean.Parser.sepBy1","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1","doc":""},"Lean.Parser.sepBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1827-L1828","name":"Lean.Parser.sepBy","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy","doc":""},"Lean.Parser.semicolonOrLinebreak":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L50-L50","name":"Lean.Parser.semicolonOrLinebreak","docLink":"./Lean/Parser/Term.html#Lean.Parser.semicolonOrLinebreak","doc":""},"Lean.Parser.scientificLitNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1285-L1288","name":"Lean.Parser.scientificLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.scientificLitNoAntiquot","doc":""},"Lean.Parser.scientificLitFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1278-L1283","name":"Lean.Parser.scientificLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.scientificLitFn","doc":""},"Lean.Parser.scientificLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L39-L40","name":"Lean.Parser.scientificLit","docLink":"./Lean/Parser/Extra.html#Lean.Parser.scientificLit","doc":""},"Lean.Parser.satisfySymbolFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1122-L1131","name":"Lean.Parser.satisfySymbolFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.satisfySymbolFn","doc":""},"Lean.Parser.satisfyFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L709-L713","name":"Lean.Parser.satisfyFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.satisfyFn","doc":""},"Lean.Parser.runParserCategory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L463-L473","name":"Lean.Parser.runParserCategory","docLink":"./Lean/Parser/Extension.html#Lean.Parser.runParserCategory","doc":"convenience function for testing "},"Lean.Parser.runParserAttributeHooks":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L313-L315","name":"Lean.Parser.runParserAttributeHooks","docLink":"./Lean/Parser/Extension.html#Lean.Parser.runParserAttributeHooks","doc":""},"Lean.Parser.runLongestMatchParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1392-L1416","name":"Lean.Parser.runLongestMatchParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.runLongestMatchParser","doc":"Auxiliary function used to execute parsers provided to `longestMatchFn`.\n Push `left?` into the stack if it is not `none`, and execute `p`.\n\n Remark: `p` must produce exactly one syntax node.\n Remark: the `left?` is not none when we are processing trailing parsers. "},"Lean.Parser.registerParserCategory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L566-L569","name":"Lean.Parser.registerParserCategory","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerParserCategory","doc":""},"Lean.Parser.registerParserAttributeHook":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L310-L311","name":"Lean.Parser.registerParserAttributeHook","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerParserAttributeHook","doc":""},"Lean.Parser.registerBuiltinParserAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L513-L525","name":"Lean.Parser.registerBuiltinParserAttribute","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinParserAttribute","doc":"The parsing tables for builtin parsers are \"stored\" in the extracted source code.\n"},"Lean.Parser.registerBuiltinNodeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L24-L25","name":"Lean.Parser.registerBuiltinNodeKind","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinNodeKind","doc":""},"Lean.Parser.registerBuiltinDynamicParserAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L557-L558","name":"Lean.Parser.registerBuiltinDynamicParserAttribute","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinDynamicParserAttribute","doc":"A builtin parser attribute that can be extended by users. "},"Lean.Parser.registerAliasCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L182-L186","name":"Lean.Parser.registerAliasCore","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerAliasCore","doc":""},"Lean.Parser.registerAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L227-L231","name":"Lean.Parser.registerAlias","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerAlias","doc":""},"Lean.Parser.rawIdentNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1334-L1336","name":"Lean.Parser.rawIdentNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawIdentNoAntiquot","doc":""},"Lean.Parser.rawIdentFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1116-L1120","name":"Lean.Parser.rawIdentFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawIdentFn","doc":"Treat keywords as identifiers. "},"Lean.Parser.rawIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L33-L34","name":"Lean.Parser.rawIdent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.rawIdent","doc":""},"Lean.Parser.rawFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L799-L802","name":"Lean.Parser.rawFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawFn","doc":"Match an arbitrary Parser and return the consumed String in a `Syntax.atom`. "},"Lean.Parser.rawCh":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L807-L808","name":"Lean.Parser.rawCh","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawCh","doc":""},"Lean.Parser.quotedCharFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L838-L839","name":"Lean.Parser.quotedCharFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.quotedCharFn","doc":""},"Lean.Parser.quotedCharCoreFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L820-L833","name":"Lean.Parser.quotedCharCoreFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.quotedCharCoreFn","doc":""},"Lean.Parser.pushNone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1710-L1711","name":"Lean.Parser.pushNone","docLink":"./Lean/Parser/Basic.html#Lean.Parser.pushNone","doc":""},"Lean.Parser.priorityParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Attr.lean#L19-L20","name":"Lean.Parser.priorityParser","docLink":"./Lean/Parser/Attr.html#Lean.Parser.priorityParser","doc":""},"Lean.Parser.precedenceParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L20-L21","name":"Lean.Parser.precedenceParser","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.precedenceParser","doc":""},"Lean.Parser.precedence":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L26-L26","name":"Lean.Parser.precedence","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.precedence","doc":""},"Lean.Parser.prattParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1907-L1912","name":"Lean.Parser.prattParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.prattParser","doc":"Implements a variant of Pratt's algorithm. In Pratt's algorithms tokens have a right and left binding power.\n  In our implementation, parsers have precedence instead. This method selects a parser (or more, via\n  `longestMatchFn`) from `leadingTable` based on the current token. Note that the unindexed `leadingParsers` parsers\n  are also tried. We have the unidexed `leadingParsers` because some parsers do not have a \"first token\". Example:\n  ```\n  syntax term:51 \"≤\" ident \"<\" term \"|\" term : index\n  ```\n  Example, in principle, the set of first tokens for this parser is any token that can start a term, but this set\n  is always changing. Thus, this parsing rule is stored as an unindexed leading parser at `leadingParsers`.\n  After processing the leading parser, we chain with parsers from `trailingTable`/`trailingParsers` that have precedence\n  at least `c.prec` where `c` is the `ParsingContext`. Recall that `c.prec` is set by `categoryParser`.\n\n  Note that in the original Pratt's algorith, precedences are only checked before calling trailing parsers. In our\n  implementation, leading *and* trailing parsers check the precendece. We claim our algorithm is more flexible,\n  modular and easier to understand.\n\n  `antiquotParser` should be a `mkAntiquot` parser (or always fail) and is tried before all other parsers.\n  It should not be added to the regular leading parsers because it would heavily\n  overlap with antiquotation parsers nested inside them. "},"Lean.Parser.ppSpace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L93-L93","name":"Lean.Parser.ppSpace","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppSpace","doc":"No-op parser that advises the pretty printer to emit a space/soft line break. "},"Lean.Parser.ppRealGroup":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L99-L99","name":"Lean.Parser.ppRealGroup","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppRealGroup","doc":"No-op parser combinator that advises the pretty printer to emit a `Format.group` node. "},"Lean.Parser.ppRealFill":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L97-L97","name":"Lean.Parser.ppRealFill","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppRealFill","doc":"No-op parser combinator that advises the pretty printer to emit a `Format.fill` node. "},"Lean.Parser.ppLine":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L95-L95","name":"Lean.Parser.ppLine","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppLine","doc":"No-op parser that advises the pretty printer to emit a hard line break. "},"Lean.Parser.ppIndent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L101-L101","name":"Lean.Parser.ppIndent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppIndent","doc":"No-op parser combinator that advises the pretty printer to indent the given syntax without grouping it. "},"Lean.Parser.ppHardSpace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L91-L91","name":"Lean.Parser.ppHardSpace","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppHardSpace","doc":"No-op parser that advises the pretty printer to emit a non-breaking space. "},"Lean.Parser.ppHardLineUnlessUngrouped":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L133-L133","name":"Lean.Parser.ppHardLineUnlessUngrouped","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppHardLineUnlessUngrouped","doc":"No-op parser combinator that prints a line break.\nThe line break is soft if the combinator is followed\nby an ungrouped parser (see ppAllowUngrouped), otherwise hard. "},"Lean.Parser.ppGroup":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L105-L105","name":"Lean.Parser.ppGroup","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppGroup","doc":"No-op parser combinator that advises the pretty printer to group and indent the given syntax.\nBy default, only syntax categories are grouped. "},"Lean.Parser.ppDedentIfGrouped":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L127-L127","name":"Lean.Parser.ppDedentIfGrouped","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppDedentIfGrouped","doc":"No-op parser combinator that advises the pretty printer to dedent the given syntax,\nif it was grouped by the category parser.\nDedenting can in particular be used to counteract automatic indentation. "},"Lean.Parser.ppDedent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L109-L109","name":"Lean.Parser.ppDedent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppDedent","doc":"No-op parser combinator that advises the pretty printer to dedent the given syntax.\nDedenting can in particular be used to counteract automatic indentation. "},"Lean.Parser.ppAllowUngrouped":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L121-L121","name":"Lean.Parser.ppAllowUngrouped","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppAllowUngrouped","doc":"No-op parser combinator that allows the pretty printer to omit the group and\nindent operation in the enclosing category parser.\n```\nsyntax ppAllowUngrouped \"by \" tacticSeq : term\n-- allows a `by` after `:=` without linebreak in between:\ntheorem foo : True := by\n  trivial\n```\n"},"Lean.Parser.peekTokenAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1099-L1106","name":"Lean.Parser.peekTokenAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.peekTokenAux","doc":""},"Lean.Parser.peekToken":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1108-L1113","name":"Lean.Parser.peekToken","docLink":"./Lean/Parser/Basic.html#Lean.Parser.peekToken","doc":""},"Lean.Parser.parserOfStackFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L643-L663","name":"Lean.Parser.parserOfStackFn","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserOfStackFn","doc":""},"Lean.Parser.parserOfStack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L665-L666","name":"Lean.Parser.parserOfStack","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserOfStack","doc":""},"Lean.Parser.parserExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L343-L343","name":"Lean.Parser.parserExtension","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserExtension","doc":""},"Lean.Parser.parserAttributeHooks":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L308-L308","name":"Lean.Parser.parserAttributeHooks","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAttributeHooks","doc":""},"Lean.Parser.parserAliasesRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L219-L219","name":"Lean.Parser.parserAliasesRef","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAliasesRef","doc":""},"Lean.Parser.parserAliases2infoRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L221-L221","name":"Lean.Parser.parserAliases2infoRef","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAliases2infoRef","doc":""},"Lean.Parser.parserAlias2kindRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L220-L220","name":"Lean.Parser.parserAlias2kindRef","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAlias2kindRef","doc":""},"Lean.Parser.parseHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L40-L53","name":"Lean.Parser.parseHeader","docLink":"./Lean/Parser/Module.html#Lean.Parser.parseHeader","doc":""},"Lean.Parser.parseCommand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L75-L114","name":"Lean.Parser.parseCommand","docLink":"./Lean/Parser/Module.html#Lean.Parser.parseCommand","doc":""},"Lean.Parser.orelseInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L520-L524","name":"Lean.Parser.orelseInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseInfo","doc":""},"Lean.Parser.orelseFnCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L488-L515","name":"Lean.Parser.orelseFnCore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseFnCore","doc":""},"Lean.Parser.orelseFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L517-L518","name":"Lean.Parser.orelseFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseFn","doc":""},"Lean.Parser.orelse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L532-L535","name":"Lean.Parser.orelse","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelse","doc":"Run `p`, falling back to `q` if `p` failed without consuming any input.\n\n  NOTE: In order for the pretty printer to retrace an `orelse`, `p` must be a call to `node` or some other parser\n  producing a single node kind. Nested `orelse` calls are flattened for this, i.e. `(node k1 p1 <|> node k2 p2) <|> ...`\n  is fine as well. "},"Lean.Parser.optionalNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L569-L572","name":"Lean.Parser.optionalNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionalNoAntiquot","doc":""},"Lean.Parser.optionalFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L556-L561","name":"Lean.Parser.optionalFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionalFn","doc":""},"Lean.Parser.optional":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L20-L21","name":"Lean.Parser.optional","docLink":"./Lean/Parser/Extra.html#Lean.Parser.optional","doc":""},"Lean.Parser.optionaInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L563-L567","name":"Lean.Parser.optionaInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionaInfo","doc":""},"Lean.Parser.optPrecedence":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L27-L27","name":"Lean.Parser.optPrecedence","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.optPrecedence","doc":""},"Lean.Parser.octalNumberFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L926-L928","name":"Lean.Parser.octalNumberFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.octalNumberFn","doc":""},"Lean.Parser.numberFnAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L934-L954","name":"Lean.Parser.numberFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numberFnAux","doc":""},"Lean.Parser.numLitNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1273-L1276","name":"Lean.Parser.numLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numLitNoAntiquot","doc":""},"Lean.Parser.numLitFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1266-L1271","name":"Lean.Parser.numLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numLitFn","doc":""},"Lean.Parser.numLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L36-L37","name":"Lean.Parser.numLit","docLink":"./Lean/Parser/Extra.html#Lean.Parser.numLit","doc":""},"Lean.Parser.notSymbol":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L87-L88","name":"Lean.Parser.notSymbol","docLink":"./Lean/Parser/Extra.html#Lean.Parser.notSymbol","doc":""},"Lean.Parser.notFollowedByFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L585-L593","name":"Lean.Parser.notFollowedByFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.notFollowedByFn","doc":""},"Lean.Parser.notFollowedBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L595-L597","name":"Lean.Parser.notFollowedBy","docLink":"./Lean/Parser/Basic.html#Lean.Parser.notFollowedBy","doc":""},"Lean.Parser.nonReservedSymbolNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1189-L1192","name":"Lean.Parser.nonReservedSymbolNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolNoAntiquot","doc":""},"Lean.Parser.nonReservedSymbolInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1181-L1187","name":"Lean.Parser.nonReservedSymbolInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolInfo","doc":""},"Lean.Parser.nonReservedSymbolFnAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1161-L1176","name":"Lean.Parser.nonReservedSymbolFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolFnAux","doc":"Check if the following token is the symbol _or_ identifier `sym`. Useful for\n    parsing local tokens that have not been added to the token table (but may have\n    been so by some unrelated code).\n\n    For example, the universe `max` Function is parsed using this combinator so that\n    it can still be used as an identifier outside of universe (but registering it\n    as a token in a Term Syntax would not break the universe Parser). "},"Lean.Parser.nonReservedSymbolFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1178-L1179","name":"Lean.Parser.nonReservedSymbolFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolFn","doc":""},"Lean.Parser.nonReservedSymbol":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1742-L1743","name":"Lean.Parser.nonReservedSymbol","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbol","doc":""},"Lean.Parser.nodeWithAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1817-L1818","name":"Lean.Parser.nodeWithAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeWithAntiquot","doc":""},"Lean.Parser.nodeInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L379-L383","name":"Lean.Parser.nodeInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeInfo","doc":""},"Lean.Parser.nodeFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L369-L372","name":"Lean.Parser.nodeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeFn","doc":""},"Lean.Parser.node":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L385-L388","name":"Lean.Parser.node","docLink":"./Lean/Parser/Basic.html#Lean.Parser.node","doc":""},"Lean.Parser.noFirstTokenInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L540-L543","name":"Lean.Parser.noFirstTokenInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.noFirstTokenInfo","doc":""},"Lean.Parser.nameLitNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1318-L1321","name":"Lean.Parser.nameLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nameLitNoAntiquot","doc":""},"Lean.Parser.nameLitFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1312-L1316","name":"Lean.Parser.nameLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nameLitFn","doc":""},"Lean.Parser.nameLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L48-L49","name":"Lean.Parser.nameLit","docLink":"./Lean/Parser/Extra.html#Lean.Parser.nameLit","doc":""},"Lean.Parser.mkTokenAndFixPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L978-L993","name":"Lean.Parser.mkTokenAndFixPos","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkTokenAndFixPos","doc":""},"Lean.Parser.mkParserState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L459-L460","name":"Lean.Parser.mkParserState","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserState","doc":""},"Lean.Parser.mkParserOfConstantUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L254-L275","name":"Lean.Parser.mkParserOfConstantUnsafe","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantUnsafe","doc":""},"Lean.Parser.mkParserOfConstantAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L278-L278","name":"Lean.Parser.mkParserOfConstantAux","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantAux","doc":""},"Lean.Parser.mkParserOfConstant":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L301-L302","name":"Lean.Parser.mkParserOfConstant","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstant","doc":""},"Lean.Parser.mkParserContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L452-L457","name":"Lean.Parser.mkParserContext","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserContext","doc":""},"Lean.Parser.mkParserAttributeImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L549-L554","name":"Lean.Parser.mkParserAttributeImpl","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserAttributeImpl","doc":""},"Lean.Parser.mkNodeToken":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L842-L851","name":"Lean.Parser.mkNodeToken","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkNodeToken","doc":"Push `(Syntax.node tk <new-atom>)` into syntax stack "},"Lean.Parser.mkInputContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L446-L450","name":"Lean.Parser.mkInputContext","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkInputContext","doc":""},"Lean.Parser.mkIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L70-L71","name":"Lean.Parser.mkIdent","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkIdent","doc":""},"Lean.Parser.mkIdResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L995-L1008","name":"Lean.Parser.mkIdResult","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkIdResult","doc":""},"Lean.Parser.mkEmptySubstringAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L779-L780","name":"Lean.Parser.mkEmptySubstringAt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkEmptySubstringAt","doc":""},"Lean.Parser.mkCategoryAntiquotParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L406-L407","name":"Lean.Parser.mkCategoryAntiquotParser","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkCategoryAntiquotParser","doc":""},"Lean.Parser.mkAtomicInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1263-L1264","name":"Lean.Parser.mkAtomicInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAtomicInfo","doc":""},"Lean.Parser.mkAtom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L67-L68","name":"Lean.Parser.mkAtom","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAtom","doc":""},"Lean.Parser.mkAntiquotSplice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1786-L1792","name":"Lean.Parser.mkAntiquotSplice","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAntiquotSplice","doc":"Parse `$[p]suffix`, e.g. `$[p],*`. "},"Lean.Parser.mkAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1752-L1763","name":"Lean.Parser.mkAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAntiquot","doc":"Define parser for `$e` (if anonymous == true) and `$e:name`.\n`kind` is embedded in the antiquotation's kind, and checked at syntax `match` unless `isPseudoKind` is false.\nAntiquotations can be escaped as in `$$e`, which produces the syntax tree for `$e`. "},"Lean.Parser.minPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L85-L85","name":"Lean.Parser.minPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.minPrec","doc":""},"Lean.Parser.mergeOrElseErrors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L474-L479","name":"Lean.Parser.mergeOrElseErrors","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mergeOrElseErrors","doc":""},"Lean.Parser.maxPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L82-L82","name":"Lean.Parser.maxPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.maxPrec","doc":"Maximal (and function application) precedence.\n   In the standard lean language, no parser has precedence higher than `maxPrec`.\n\n   Note that nothing prevents users from using a higher precedence, but we strongly\n   discourage them from doing it. "},"Lean.Parser.manyNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L616-L619","name":"Lean.Parser.manyNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyNoAntiquot","doc":""},"Lean.Parser.manyIndent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L57-L58","name":"Lean.Parser.manyIndent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.manyIndent","doc":""},"Lean.Parser.manyFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L611-L614","name":"Lean.Parser.manyFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyFn","doc":""},"Lean.Parser.manyAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L599-L609","name":"Lean.Parser.manyAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyAux","doc":""},"Lean.Parser.many1Unbox":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L706-L707","name":"Lean.Parser.many1Unbox","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1Unbox","doc":""},"Lean.Parser.many1NoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L626-L629","name":"Lean.Parser.many1NoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1NoAntiquot","doc":""},"Lean.Parser.many1Indent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L54-L55","name":"Lean.Parser.many1Indent","docLink":"./Lean/Parser/Extra.html#Lean.Parser.many1Indent","doc":""},"Lean.Parser.many1Fn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L621-L624","name":"Lean.Parser.many1Fn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1Fn","doc":""},"Lean.Parser.many1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L26-L27","name":"Lean.Parser.many1","docLink":"./Lean/Parser/Extra.html#Lean.Parser.many1","doc":""},"Lean.Parser.many":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L23-L24","name":"Lean.Parser.many","docLink":"./Lean/Parser/Extra.html#Lean.Parser.many","doc":""},"Lean.Parser.lookaheadFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L574-L578","name":"Lean.Parser.lookaheadFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.lookaheadFn","doc":""},"Lean.Parser.lookahead":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L580-L583","name":"Lean.Parser.lookahead","docLink":"./Lean/Parser/Basic.html#Lean.Parser.lookahead","doc":""},"Lean.Parser.longestMatchStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1418-L1441","name":"Lean.Parser.longestMatchStep","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchStep","doc":""},"Lean.Parser.longestMatchMkResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1443-L1444","name":"Lean.Parser.longestMatchMkResult","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchMkResult","doc":""},"Lean.Parser.longestMatchFnAux.parse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1447-L1452","name":"Lean.Parser.longestMatchFnAux.parse","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFnAux.parse","doc":""},"Lean.Parser.longestMatchFnAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1446-L1453","name":"Lean.Parser.longestMatchFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFnAux","doc":""},"Lean.Parser.longestMatchFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1455-L1463","name":"Lean.Parser.longestMatchFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFn","doc":""},"Lean.Parser.levelParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Level.lean#L14-L15","name":"Lean.Parser.levelParser","docLink":"./Lean/Parser/Level.html#Lean.Parser.levelParser","doc":""},"Lean.Parser.leadingParserAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1849-L1858","name":"Lean.Parser.leadingParserAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingParserAux","doc":""},"Lean.Parser.leadingParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1860-L1861","name":"Lean.Parser.leadingParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingParser","doc":""},"Lean.Parser.leadingNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L463-L464","name":"Lean.Parser.leadingNode","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingNode","doc":""},"Lean.Parser.leadingIdentBehavior":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L361-L364","name":"Lean.Parser.leadingIdentBehavior","docLink":"./Lean/Parser/Extension.html#Lean.Parser.leadingIdentBehavior","doc":""},"Lean.Parser.leadPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L84-L84","name":"Lean.Parser.leadPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadPrec","doc":""},"Lean.Parser.isValidSyntaxNodeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L433-L437","name":"Lean.Parser.isValidSyntaxNodeKind","docLink":"./Lean/Parser/Extension.html#Lean.Parser.isValidSyntaxNodeKind","doc":""},"Lean.Parser.isQuotableCharForStrInterpolant":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/StrInterpolation.lean#L9-L10","name":"Lean.Parser.isQuotableCharForStrInterpolant","docLink":"./Lean/Parser/StrInterpolation.html#Lean.Parser.isQuotableCharForStrInterpolant","doc":""},"Lean.Parser.isQuotableCharDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L835-L836","name":"Lean.Parser.isQuotableCharDefault","docLink":"./Lean/Parser/Basic.html#Lean.Parser.isQuotableCharDefault","doc":""},"Lean.Parser.isParserCategory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L352-L353","name":"Lean.Parser.isParserCategory","docLink":"./Lean/Parser/Extension.html#Lean.Parser.isParserCategory","doc":""},"Lean.Parser.isParserAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L237-L240","name":"Lean.Parser.isParserAlias","docLink":"./Lean/Parser/Extension.html#Lean.Parser.isParserAlias","doc":""},"Lean.Parser.isIdCont":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L956-L967","name":"Lean.Parser.isIdCont","docLink":"./Lean/Parser/Basic.html#Lean.Parser.isIdCont","doc":""},"Lean.Parser.isExitCommand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L62-L63","name":"Lean.Parser.isExitCommand","docLink":"./Lean/Parser/Module.html#Lean.Parser.isExitCommand","doc":""},"Lean.Parser.isEOI":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L59-L60","name":"Lean.Parser.isEOI","docLink":"./Lean/Parser/Module.html#Lean.Parser.isEOI","doc":""},"Lean.Parser.invalidLongestMatchParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1383-L1384","name":"Lean.Parser.invalidLongestMatchParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.invalidLongestMatchParser","doc":""},"Lean.Parser.interpolatedStrNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/StrInterpolation.lean#L56-L59","name":"Lean.Parser.interpolatedStrNoAntiquot","docLink":"./Lean/Parser/StrInterpolation.html#Lean.Parser.interpolatedStrNoAntiquot","doc":""},"Lean.Parser.interpolatedStrFn.parse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/StrInterpolation.lean#L15-L44","name":"Lean.Parser.interpolatedStrFn.parse","docLink":"./Lean/Parser/StrInterpolation.html#Lean.Parser.interpolatedStrFn.parse","doc":""},"Lean.Parser.interpolatedStrFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/StrInterpolation.lean#L12-L54","name":"Lean.Parser.interpolatedStrFn","docLink":"./Lean/Parser/StrInterpolation.html#Lean.Parser.interpolatedStrFn","doc":""},"Lean.Parser.interpolatedStr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/StrInterpolation.lean#L61-L62","name":"Lean.Parser.interpolatedStr","docLink":"./Lean/Parser/StrInterpolation.html#Lean.Parser.interpolatedStr","doc":""},"Lean.Parser.internal.parseQuotWithCurrentStage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L378-L378","name":"Lean.Parser.internal.parseQuotWithCurrentStage","docLink":"./Lean/Parser/Extension.html#Lean.Parser.internal.parseQuotWithCurrentStage","doc":""},"Lean.Parser.instReprLeadingIdentBehavior":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1599-L1599","name":"Lean.Parser.instReprLeadingIdentBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instReprLeadingIdentBehavior","doc":""},"Lean.Parser.instOrElseParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L537-L538","name":"Lean.Parser.instOrElseParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instOrElseParser","doc":""},"Lean.Parser.instInhabitedPrattParsingTables":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1569-L1569","name":"Lean.Parser.instInhabitedPrattParsingTables","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedPrattParsingTables","doc":""},"Lean.Parser.instInhabitedParserInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L316-L316","name":"Lean.Parser.instInhabitedParserInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParserInfo","doc":""},"Lean.Parser.instInhabitedParserFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L271-L272","name":"Lean.Parser.instInhabitedParserFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParserFn","doc":""},"Lean.Parser.instInhabitedParserCategory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1632-L1632","name":"Lean.Parser.instInhabitedParserCategory","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParserCategory","doc":""},"Lean.Parser.instInhabitedParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L321-L321","name":"Lean.Parser.instInhabitedParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParser","doc":""},"Lean.Parser.instInhabitedModuleParserState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L34-L34","name":"Lean.Parser.instInhabitedModuleParserState","docLink":"./Lean/Parser/Module.html#Lean.Parser.instInhabitedModuleParserState","doc":""},"Lean.Parser.instInhabitedLeadingIdentBehavior":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1599-L1599","name":"Lean.Parser.instInhabitedLeadingIdentBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedLeadingIdentBehavior","doc":""},"Lean.Parser.instInhabitedInputContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L115-L115","name":"Lean.Parser.instInhabitedInputContext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedInputContext","doc":""},"Lean.Parser.instInhabitedFirstTokens":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L279-L279","name":"Lean.Parser.instInhabitedFirstTokens","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedFirstTokens","doc":""},"Lean.Parser.instInhabitedError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L137-L137","name":"Lean.Parser.instInhabitedError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedError","doc":""},"Lean.Parser.instCoeStringParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1740-L1740","name":"Lean.Parser.instCoeStringParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instCoeStringParser","doc":""},"Lean.Parser.instCoeParserParserAliasValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L233-L233","name":"Lean.Parser.instCoeParserParserAliasValue","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instCoeParserParserAliasValue","doc":""},"Lean.Parser.instCoeForAllParserParserAliasValue_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L235-L235","name":"Lean.Parser.instCoeForAllParserParserAliasValue_1","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instCoeForAllParserParserAliasValue_1","doc":""},"Lean.Parser.instCoeForAllParserParserAliasValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L234-L234","name":"Lean.Parser.instCoeForAllParserParserAliasValue","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instCoeForAllParserParserAliasValue","doc":""},"Lean.Parser.instBEqOrElseOnAntiquotBehavior":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L486-L486","name":"Lean.Parser.instBEqOrElseOnAntiquotBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqOrElseOnAntiquotBehavior","doc":""},"Lean.Parser.instBEqLeadingIdentBehavior":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1599-L1599","name":"Lean.Parser.instBEqLeadingIdentBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqLeadingIdentBehavior","doc":""},"Lean.Parser.instBEqError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L137-L137","name":"Lean.Parser.instBEqError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqError","doc":""},"Lean.Parser.instAndThenParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L366-L367","name":"Lean.Parser.instAndThenParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instAndThenParser","doc":""},"Lean.Parser.initCacheForInput":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L97-L99","name":"Lean.Parser.initCacheForInput","docLink":"./Lean/Parser/Basic.html#Lean.Parser.initCacheForInput","doc":""},"Lean.Parser.indexed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1636-L1663","name":"Lean.Parser.indexed","docLink":"./Lean/Parser/Basic.html#Lean.Parser.indexed","doc":""},"Lean.Parser.incQuotDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L445-L448","name":"Lean.Parser.incQuotDepth","docLink":"./Lean/Parser/Basic.html#Lean.Parser.incQuotDepth","doc":""},"Lean.Parser.identNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1329-L1332","name":"Lean.Parser.identNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identNoAntiquot","doc":""},"Lean.Parser.identFnAux.parse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1011-L1041","name":"Lean.Parser.identFnAux.parse","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFnAux.parse","doc":""},"Lean.Parser.identFnAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1010-L1042","name":"Lean.Parser.identFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFnAux","doc":""},"Lean.Parser.identFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1323-L1327","name":"Lean.Parser.identFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFn","doc":""},"Lean.Parser.identEqFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1338-L1346","name":"Lean.Parser.identEqFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identEqFn","doc":""},"Lean.Parser.identEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1348-L1351","name":"Lean.Parser.identEq","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identEq","doc":""},"Lean.Parser.ident":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L29-L30","name":"Lean.Parser.ident","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ident","doc":""},"Lean.Parser.hexNumberFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L930-L932","name":"Lean.Parser.hexNumberFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.hexNumberFn","doc":""},"Lean.Parser.hexDigitFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L810-L818","name":"Lean.Parser.hexDigitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.hexDigitFn","doc":""},"Lean.Parser.group":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L51-L52","name":"Lean.Parser.group","docLink":"./Lean/Parser/Extra.html#Lean.Parser.group","doc":""},"Lean.Parser.getUnaryAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L198-L202","name":"Lean.Parser.getUnaryAlias","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getUnaryAlias","doc":""},"Lean.Parser.getTokenTable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L443-L444","name":"Lean.Parser.getTokenTable","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getTokenTable","doc":""},"Lean.Parser.getSyntaxNodeKinds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L439-L441","name":"Lean.Parser.getSyntaxNodeKinds","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxNodeKinds","doc":""},"Lean.Parser.getSyntaxKindOfParserAlias?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L242-L243","name":"Lean.Parser.getSyntaxKindOfParserAlias?","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxKindOfParserAlias?","doc":""},"Lean.Parser.getParserPriority":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L485-L491","name":"Lean.Parser.getParserPriority","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getParserPriority","doc":""},"Lean.Parser.getParserAliasInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L223-L224","name":"Lean.Parser.getParserAliasInfo","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getParserAliasInfo","doc":""},"Lean.Parser.getNext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L74-L75","name":"Lean.Parser.getNext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.getNext","doc":"Return character after position `pos` "},"Lean.Parser.getConstAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L191-L196","name":"Lean.Parser.getConstAlias","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getConstAlias","doc":""},"Lean.Parser.getCategory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L102-L103","name":"Lean.Parser.getCategory","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getCategory","doc":""},"Lean.Parser.getBinaryAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L204-L208","name":"Lean.Parser.getBinaryAlias","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getBinaryAlias","doc":""},"Lean.Parser.getAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L188-L189","name":"Lean.Parser.getAlias","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getAlias","doc":""},"Lean.Parser.finishCommentBlock.eoi":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L751-L751","name":"Lean.Parser.finishCommentBlock.eoi","docLink":"./Lean/Parser/Basic.html#Lean.Parser.finishCommentBlock.eoi","doc":""},"Lean.Parser.finishCommentBlock":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L727-L751","name":"Lean.Parser.finishCommentBlock","docLink":"./Lean/Parser/Basic.html#Lean.Parser.finishCommentBlock","doc":""},"Lean.Parser.fieldIdxFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1914-L1922","name":"Lean.Parser.fieldIdxFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.fieldIdxFn","doc":""},"Lean.Parser.fieldIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1924-L1928","name":"Lean.Parser.fieldIdx","docLink":"./Lean/Parser/Basic.html#Lean.Parser.fieldIdx","doc":""},"Lean.Parser.evalParserConstUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L366-L373","name":"Lean.Parser.evalParserConstUnsafe","docLink":"./Lean/Parser/Extension.html#Lean.Parser.evalParserConstUnsafe","doc":""},"Lean.Parser.evalParserConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L376-L376","name":"Lean.Parser.evalParserConst","docLink":"./Lean/Parser/Extension.html#Lean.Parser.evalParserConst","doc":""},"Lean.Parser.evalInsideQuot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L385-L390","name":"Lean.Parser.evalInsideQuot","docLink":"./Lean/Parser/Extension.html#Lean.Parser.evalInsideQuot","doc":"Run `declName` if possible and inside a quotation, or else `p`. The `ParserInfo` will always be taken from `p`. "},"Lean.Parser.errorFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L390-L391","name":"Lean.Parser.errorFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorFn","doc":""},"Lean.Parser.errorAtSavedPosFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L398-L404","name":"Lean.Parser.errorAtSavedPosFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorAtSavedPosFn","doc":""},"Lean.Parser.errorAtSavedPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L409-L411","name":"Lean.Parser.errorAtSavedPos","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorAtSavedPos","doc":"Generate an error at the position saved with the `withPosition` combinator.\nIf `delta == true`, then it reports at saved position+1.\nThis useful to make sure a parser consumed at least one character.  "},"Lean.Parser.error":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L393-L396","name":"Lean.Parser.error","docLink":"./Lean/Parser/Basic.html#Lean.Parser.error","doc":""},"Lean.Parser.epsilonInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L339-L340","name":"Lean.Parser.epsilonInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.epsilonInfo","doc":""},"Lean.Parser.eoiFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1535-L1538","name":"Lean.Parser.eoiFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.eoiFn","doc":""},"Lean.Parser.eoi":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1540-L1541","name":"Lean.Parser.eoi","docLink":"./Lean/Parser/Basic.html#Lean.Parser.eoi","doc":""},"Lean.Parser.ensureUnaryParserAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L245-L246","name":"Lean.Parser.ensureUnaryParserAlias","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ensureUnaryParserAlias","doc":""},"Lean.Parser.ensureConstantParserAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L251-L252","name":"Lean.Parser.ensureConstantParserAlias","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ensureConstantParserAlias","doc":""},"Lean.Parser.ensureBinaryParserAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L248-L249","name":"Lean.Parser.ensureBinaryParserAlias","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ensureBinaryParserAlias","doc":""},"Lean.Parser.doElemParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L14-L15","name":"Lean.Parser.doElemParser","docLink":"./Lean/Parser/Do.html#Lean.Parser.doElemParser","doc":""},"Lean.Parser.declareTrailingBuiltinParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L482-L483","name":"Lean.Parser.declareTrailingBuiltinParser","docLink":"./Lean/Parser/Extension.html#Lean.Parser.declareTrailingBuiltinParser","doc":""},"Lean.Parser.declareLeadingBuiltinParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L479-L480","name":"Lean.Parser.declareLeadingBuiltinParser","docLink":"./Lean/Parser/Extension.html#Lean.Parser.declareLeadingBuiltinParser","doc":""},"Lean.Parser.declareBuiltinParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L475-L477","name":"Lean.Parser.declareBuiltinParser","docLink":"./Lean/Parser/Extension.html#Lean.Parser.declareBuiltinParser","doc":""},"Lean.Parser.decimalNumberFn.parseOptExp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L907-L920","name":"Lean.Parser.decimalNumberFn.parseOptExp","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn.parseOptExp","doc":""},"Lean.Parser.decimalNumberFn.parseOptDot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L893-L905","name":"Lean.Parser.decimalNumberFn.parseOptDot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn.parseOptDot","doc":""},"Lean.Parser.decimalNumberFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L881-L920","name":"Lean.Parser.decimalNumberFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn","doc":""},"Lean.Parser.decQuotDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L450-L453","name":"Lean.Parser.decQuotDepth","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decQuotDepth","doc":""},"Lean.Parser.dbgTraceStateFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L325-L333","name":"Lean.Parser.dbgTraceStateFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.dbgTraceStateFn","doc":""},"Lean.Parser.dbgTraceState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L335-L337","name":"Lean.Parser.dbgTraceState","docLink":"./Lean/Parser/Basic.html#Lean.Parser.dbgTraceState","doc":""},"Lean.Parser.darrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L49-L49","name":"Lean.Parser.darrow","docLink":"./Lean/Parser/Term.html#Lean.Parser.darrow","doc":""},"Lean.Parser.convParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L29-L30","name":"Lean.Parser.convParser","docLink":"./Lean/Parser/Term.html#Lean.Parser.convParser","doc":""},"Lean.Parser.compileParserDescr.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L281-L298","name":"Lean.Parser.compileParserDescr.visit","docLink":"./Lean/Parser/Extension.html#Lean.Parser.compileParserDescr.visit","doc":""},"Lean.Parser.compileParserDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L280-L299","name":"Lean.Parser.compileParserDescr","docLink":"./Lean/Parser/Extension.html#Lean.Parser.compileParserDescr","doc":""},"Lean.Parser.commandParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L582-L583","name":"Lean.Parser.commandParser","docLink":"./Lean/Parser/Extension.html#Lean.Parser.commandParser","doc":""},"Lean.Parser.checkWsBeforeFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1209-L1211","name":"Lean.Parser.checkWsBeforeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkWsBeforeFn","doc":""},"Lean.Parser.checkWsBefore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1213-L1216","name":"Lean.Parser.checkWsBefore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkWsBefore","doc":""},"Lean.Parser.checkTailWs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1204-L1207","name":"Lean.Parser.checkTailWs","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailWs","doc":""},"Lean.Parser.checkTailNoWs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1149-L1152","name":"Lean.Parser.checkTailNoWs","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailNoWs","doc":""},"Lean.Parser.checkTailLinebreak":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1218-L1221","name":"Lean.Parser.checkTailLinebreak","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailLinebreak","doc":""},"Lean.Parser.checkStackTopFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L342-L344","name":"Lean.Parser.checkStackTopFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkStackTopFn","doc":""},"Lean.Parser.checkStackTop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L346-L349","name":"Lean.Parser.checkStackTop","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkStackTop","doc":""},"Lean.Parser.checkPrecFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L414-L416","name":"Lean.Parser.checkPrecFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkPrecFn","doc":"Succeeds if `c.prec <= prec` "},"Lean.Parser.checkPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L418-L421","name":"Lean.Parser.checkPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkPrec","doc":""},"Lean.Parser.checkNoWsBeforeFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1237-L1239","name":"Lean.Parser.checkNoWsBeforeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoWsBeforeFn","doc":""},"Lean.Parser.checkNoWsBefore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1241-L1244","name":"Lean.Parser.checkNoWsBefore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoWsBefore","doc":""},"Lean.Parser.checkNoImmediateColon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1687-L1700","name":"Lean.Parser.checkNoImmediateColon","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoImmediateColon","doc":"Fail if previous token is immediately followed by ':'. "},"Lean.Parser.checkLinebreakBeforeFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1223-L1225","name":"Lean.Parser.checkLinebreakBeforeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLinebreakBeforeFn","doc":""},"Lean.Parser.checkLinebreakBefore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1227-L1230","name":"Lean.Parser.checkLinebreakBefore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLinebreakBefore","doc":""},"Lean.Parser.checkLineEqFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1494-L1501","name":"Lean.Parser.checkLineEqFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLineEqFn","doc":""},"Lean.Parser.checkLineEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1503-L1504","name":"Lean.Parser.checkLineEq","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLineEq","doc":""},"Lean.Parser.checkLhsPrecFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L424-L426","name":"Lean.Parser.checkLhsPrecFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLhsPrecFn","doc":"Succeeds if `c.lhsPrec >= prec` "},"Lean.Parser.checkLhsPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L428-L431","name":"Lean.Parser.checkLhsPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLhsPrec","doc":""},"Lean.Parser.checkColGtFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1482-L1489","name":"Lean.Parser.checkColGtFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGtFn","doc":""},"Lean.Parser.checkColGt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1491-L1492","name":"Lean.Parser.checkColGt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGt","doc":""},"Lean.Parser.checkColGeFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1470-L1477","name":"Lean.Parser.checkColGeFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGeFn","doc":""},"Lean.Parser.checkColGe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1479-L1480","name":"Lean.Parser.checkColGe","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGe","doc":""},"Lean.Parser.charLitNoAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1307-L1310","name":"Lean.Parser.charLitNoAntiquot","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitNoAntiquot","doc":""},"Lean.Parser.charLitFnAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L853-L867","name":"Lean.Parser.charLitFnAux","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitFnAux","doc":""},"Lean.Parser.charLitFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1301-L1305","name":"Lean.Parser.charLitFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitFn","doc":""},"Lean.Parser.charLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extra.lean#L45-L46","name":"Lean.Parser.charLit","docLink":"./Lean/Parser/Extra.html#Lean.Parser.charLit","doc":""},"Lean.Parser.chFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L804-L805","name":"Lean.Parser.chFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.chFn","doc":""},"Lean.Parser.categoryParserOfStackFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1833-L1840","name":"Lean.Parser.categoryParserOfStackFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserOfStackFn","doc":""},"Lean.Parser.categoryParserOfStack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1842-L1843","name":"Lean.Parser.categoryParserOfStack","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserOfStack","doc":""},"Lean.Parser.categoryParserFnRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1667-L1667","name":"Lean.Parser.categoryParserFnRef","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFnRef","doc":""},"Lean.Parser.categoryParserFnImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L413-L419","name":"Lean.Parser.categoryParserFnImpl","docLink":"./Lean/Parser/Extension.html#Lean.Parser.categoryParserFnImpl","doc":""},"Lean.Parser.categoryParserFnExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1669-L1669","name":"Lean.Parser.categoryParserFnExtension","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFnExtension","doc":""},"Lean.Parser.categoryParserFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1671-L1672","name":"Lean.Parser.categoryParserFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFn","doc":""},"Lean.Parser.categoryParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1674-L1676","name":"Lean.Parser.categoryParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParser","doc":""},"Lean.Parser.builtinTokenTable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L19-L19","name":"Lean.Parser.builtinTokenTable","docLink":"./Lean/Parser/Extension.html#Lean.Parser.builtinTokenTable","doc":""},"Lean.Parser.builtinSyntaxNodeKindSetRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L22-L22","name":"Lean.Parser.builtinSyntaxNodeKindSetRef","docLink":"./Lean/Parser/Extension.html#Lean.Parser.builtinSyntaxNodeKindSetRef","doc":""},"Lean.Parser.builtinParserCategoriesRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L36-L36","name":"Lean.Parser.builtinParserCategoriesRef","docLink":"./Lean/Parser/Extension.html#Lean.Parser.builtinParserCategoriesRef","doc":""},"Lean.Parser.binNumberFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L922-L924","name":"Lean.Parser.binNumberFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.binNumberFn","doc":""},"Lean.Parser.attrParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Attr.lean#L22-L23","name":"Lean.Parser.attrParser","docLink":"./Lean/Parser/Attr.html#Lean.Parser.attrParser","doc":""},"Lean.Parser.atomicFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L545-L549","name":"Lean.Parser.atomicFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.atomicFn","doc":""},"Lean.Parser.atomic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L551-L554","name":"Lean.Parser.atomic","docLink":"./Lean/Parser/Basic.html#Lean.Parser.atomic","doc":""},"Lean.Parser.argPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L83-L83","name":"Lean.Parser.argPrec","docLink":"./Lean/Parser/Basic.html#Lean.Parser.argPrec","doc":""},"Lean.Parser.anyOfFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1465-L1468","name":"Lean.Parser.anyOfFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.anyOfFn","doc":""},"Lean.Parser.antiquotNestedExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1714-L1714","name":"Lean.Parser.antiquotNestedExpr","docLink":"./Lean/Parser/Basic.html#Lean.Parser.antiquotNestedExpr","doc":""},"Lean.Parser.antiquotExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1715-L1715","name":"Lean.Parser.antiquotExpr","docLink":"./Lean/Parser/Basic.html#Lean.Parser.antiquotExpr","doc":""},"Lean.Parser.andthenInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L355-L359","name":"Lean.Parser.andthenInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthenInfo","doc":""},"Lean.Parser.andthenFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L351-L353","name":"Lean.Parser.andthenFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthenFn","doc":""},"Lean.Parser.andthen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L361-L364","name":"Lean.Parser.andthen","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthen","doc":""},"Lean.Parser.addTrailingParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L133-L139","name":"Lean.Parser.addTrailingParser","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addTrailingParser","doc":""},"Lean.Parser.addToken":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L424-L428","name":"Lean.Parser.addToken","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addToken","doc":""},"Lean.Parser.addSyntaxNodeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L430-L431","name":"Lean.Parser.addSyntaxNodeKind","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addSyntaxNodeKind","doc":""},"Lean.Parser.addParserTokens":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L147-L149","name":"Lean.Parser.addParserTokens","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addParserTokens","doc":""},"Lean.Parser.addParserCategory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L355-L359","name":"Lean.Parser.addParserCategory","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addParserCategory","doc":""},"Lean.Parser.addParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L141-L145","name":"Lean.Parser.addParser","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addParser","doc":""},"Lean.Parser.addLeadingParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L105-L121","name":"Lean.Parser.addLeadingParser","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addLeadingParser","doc":""},"Lean.Parser.addBuiltinTrailingParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L403-L404","name":"Lean.Parser.addBuiltinTrailingParser","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinTrailingParser","doc":""},"Lean.Parser.addBuiltinParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L392-L398","name":"Lean.Parser.addBuiltinParser","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinParser","doc":""},"Lean.Parser.addBuiltinLeadingParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L400-L401","name":"Lean.Parser.addBuiltinLeadingParser","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinLeadingParser","doc":""},"Lean.Parser.Trie.matchPrefix.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L90-L100","name":"Lean.Parser.Trie.matchPrefix.loop","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.matchPrefix.loop","doc":""},"Lean.Parser.Trie.matchPrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L89-L101","name":"Lean.Parser.Trie.matchPrefix","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.matchPrefix","doc":""},"Lean.Parser.Trie.instToStringTrie":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L107-L108","name":"Lean.Parser.Trie.instToStringTrie","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.instToStringTrie","doc":""},"Lean.Parser.Trie.instInhabitedTrie":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L27-L28","name":"Lean.Parser.Trie.instInhabitedTrie","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.instInhabitedTrie","doc":""},"Lean.Parser.Trie.instEmptyCollectionTrie":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L24-L25","name":"Lean.Parser.Trie.instEmptyCollectionTrie","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.instEmptyCollectionTrie","doc":""},"Lean.Parser.Trie.insert.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L38-L48","name":"Lean.Parser.Trie.insert.loop","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.insert.loop","doc":""},"Lean.Parser.Trie.insert.insertEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L31-L37","name":"Lean.Parser.Trie.insert.insertEmpty","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.insert.insertEmpty","doc":""},"Lean.Parser.Trie.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L30-L49","name":"Lean.Parser.Trie.insert","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.insert","doc":""},"Lean.Parser.Trie.findPrefix.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L68-L76","name":"Lean.Parser.Trie.findPrefix.go","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.findPrefix.go","doc":""},"Lean.Parser.Trie.findPrefix.collect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L78-L82","name":"Lean.Parser.Trie.findPrefix.collect","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.findPrefix.collect","doc":""},"Lean.Parser.Trie.findPrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L65-L82","name":"Lean.Parser.Trie.findPrefix","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.findPrefix","doc":"Return values that match the given `prefix` "},"Lean.Parser.Trie.find?.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L52-L61","name":"Lean.Parser.Trie.find?.loop","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.find?.loop","doc":""},"Lean.Parser.Trie.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L51-L62","name":"Lean.Parser.Trie.find?","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.find?","doc":""},"Lean.Parser.Trie.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L21-L22","name":"Lean.Parser.Trie.empty","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie.empty","doc":""},"Lean.Parser.Trie":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Trie.lean#L15-L16","name":"Lean.Parser.Trie","docLink":"./Lean/Data/Trie.html#Lean.Parser.Trie","doc":""},"Lean.Parser.TrailingParser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L323-L323","name":"Lean.Parser.TrailingParser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TrailingParser","doc":""},"Lean.Parser.TokenTable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L101-L101","name":"Lean.Parser.TokenTable","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenTable","doc":""},"Lean.Parser.TokenMap.instInhabitedTokenMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1555-L1555","name":"Lean.Parser.TokenMap.instInhabitedTokenMap","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instInhabitedTokenMap","doc":""},"Lean.Parser.TokenMap.instForInTokenMapProdNameList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1559-L1559","name":"Lean.Parser.TokenMap.instForInTokenMapProdNameList","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instForInTokenMapProdNameList","doc":""},"Lean.Parser.TokenMap.instEmptyCollectionTokenMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1557-L1557","name":"Lean.Parser.TokenMap.instEmptyCollectionTokenMap","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instEmptyCollectionTokenMap","doc":""},"Lean.Parser.TokenMap.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1550-L1553","name":"Lean.Parser.TokenMap.insert","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.insert","doc":""},"Lean.Parser.TokenMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1546-L1546","name":"Lean.Parser.TokenMap","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap","doc":"A multimap indexed by tokens. Used for indexing parsers by their leading token. "},"Lean.Parser.TokenCacheEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L89-L92","name":"Lean.Parser.TokenCacheEntry","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenCacheEntry","doc":""},"Lean.Parser.Token":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L87-L87","name":"Lean.Parser.Token","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Token","doc":""},"Lean.Parser.Term.withDeclName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L276-L276","name":"Lean.Parser.Term.withDeclName","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.withDeclName","doc":""},"Lean.Parser.Term.withAnonymousAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L172-L172","name":"Lean.Parser.Term.withAnonymousAntiquot","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.withAnonymousAntiquot","doc":""},"Lean.Parser.Term.whereDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L259-L259","name":"Lean.Parser.Term.whereDecls","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.whereDecls","doc":""},"Lean.Parser.Term.waitIfTypeMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L283-L283","name":"Lean.Parser.Term.waitIfTypeMVar","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.waitIfTypeMVar","doc":""},"Lean.Parser.Term.waitIfTypeContainsMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L284-L284","name":"Lean.Parser.Term.waitIfTypeContainsMVar","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.waitIfTypeContainsMVar","doc":""},"Lean.Parser.Term.waitIfContainsMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L285-L285","name":"Lean.Parser.Term.waitIfContainsMVar","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.waitIfContainsMVar","doc":""},"Lean.Parser.Term.unreachable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L330-L330","name":"Lean.Parser.Term.unreachable","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.unreachable","doc":""},"Lean.Parser.Term.typeSpec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L102-L102","name":"Lean.Parser.Term.typeSpec","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.typeSpec","doc":""},"Lean.Parser.Term.typeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L277-L277","name":"Lean.Parser.Term.typeOf","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.typeOf","doc":""},"Lean.Parser.Term.typeAscription":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L82-L82","name":"Lean.Parser.Term.typeAscription","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.typeAscription","doc":""},"Lean.Parser.Term.type":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L75-L75","name":"Lean.Parser.Term.type","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.type","doc":""},"Lean.Parser.Term.tupleTail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L83-L83","name":"Lean.Parser.Term.tupleTail","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.tupleTail","doc":""},"Lean.Parser.Term.trueVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L155-L155","name":"Lean.Parser.Term.trueVal","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.trueVal","doc":""},"Lean.Parser.Term.trailing_parser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L174-L174","name":"Lean.Parser.Term.trailing_parser","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.trailing_parser","doc":""},"Lean.Parser.Term.termUnless":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L131-L131","name":"Lean.Parser.Term.termUnless","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termUnless","doc":""},"Lean.Parser.Term.termTry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L133-L133","name":"Lean.Parser.Term.termTry","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termTry","doc":""},"Lean.Parser.Term.termReturn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L134-L134","name":"Lean.Parser.Term.termReturn","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termReturn","doc":""},"Lean.Parser.Term.termFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L132-L132","name":"Lean.Parser.Term.termFor","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termFor","doc":""},"Lean.Parser.Term.termBeforeDo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L25-L25","name":"Lean.Parser.Term.termBeforeDo","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.termBeforeDo","doc":""},"Lean.Parser.Term.syntheticHole":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L79-L79","name":"Lean.Parser.Term.syntheticHole","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.syntheticHole","doc":""},"Lean.Parser.Term.sufficesDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L90-L90","name":"Lean.Parser.Term.sufficesDecl","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.sufficesDecl","doc":""},"Lean.Parser.Term.suffices":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L91-L91","name":"Lean.Parser.Term.suffices","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.suffices","doc":""},"Lean.Parser.Term.subst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L320-L320","name":"Lean.Parser.Term.subst","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.subst","doc":""},"Lean.Parser.Term.stx.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L45-L45","name":"Lean.Parser.Term.stx.quot","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Term.stx.quot","doc":""},"Lean.Parser.Term.structInstLVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L94-L94","name":"Lean.Parser.Term.structInstLVal","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.structInstLVal","doc":""},"Lean.Parser.Term.structInstFieldAbbrev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L96-L96","name":"Lean.Parser.Term.structInstFieldAbbrev","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.structInstFieldAbbrev","doc":""},"Lean.Parser.Term.structInstField":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L95-L95","name":"Lean.Parser.Term.structInstField","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.structInstField","doc":""},"Lean.Parser.Term.structInstArrayRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L93-L93","name":"Lean.Parser.Term.structInstArrayRef","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.structInstArrayRef","doc":""},"Lean.Parser.Term.structInst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L98-L101","name":"Lean.Parser.Term.structInst","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.structInst","doc":""},"Lean.Parser.Term.strictImplicitRightBracket":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L113-L113","name":"Lean.Parser.Term.strictImplicitRightBracket","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.strictImplicitRightBracket","doc":""},"Lean.Parser.Term.strictImplicitLeftBracket":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L112-L112","name":"Lean.Parser.Term.strictImplicitLeftBracket","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.strictImplicitLeftBracket","doc":""},"Lean.Parser.Term.strictImplicitBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L114-L114","name":"Lean.Parser.Term.strictImplicitBinder","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.strictImplicitBinder","doc":""},"Lean.Parser.Term.str":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L73-L73","name":"Lean.Parser.Term.str","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.str","doc":""},"Lean.Parser.Term.stateRefT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L340-L340","name":"Lean.Parser.Term.stateRefT","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.stateRefT","doc":""},"Lean.Parser.Term.sort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L76-L76","name":"Lean.Parser.Term.sort","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.sort","doc":""},"Lean.Parser.Term.sorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L80-L80","name":"Lean.Parser.Term.sorry","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.sorry","doc":""},"Lean.Parser.Term.showRhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L89-L89","name":"Lean.Parser.Term.showRhs","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.showRhs","doc":""},"Lean.Parser.Term.show":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L92-L92","name":"Lean.Parser.Term.show","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.show","doc":""},"Lean.Parser.Term.set_option":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L184-L185","name":"Lean.Parser.Term.set_option","docLink":"./Lean/Parser/Command.html#Lean.Parser.Term.set_option","doc":"`set_option opt val in e` is like `set_option opt val` but scoped to a single term. "},"Lean.Parser.Term.scoped":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L247-L247","name":"Lean.Parser.Term.scoped","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.scoped","doc":""},"Lean.Parser.Term.scientific":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L72-L72","name":"Lean.Parser.Term.scientific","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.scientific","doc":""},"Lean.Parser.Term.quotedName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L177-L177","name":"Lean.Parser.Term.quotedName","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.quotedName","doc":""},"Lean.Parser.Term.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L13-L13","name":"Lean.Parser.Term.quot","docLink":"./Lean/Parser/Command.html#Lean.Parser.Term.quot","doc":"Syntax quotation for terms. "},"Lean.Parser.Term.prop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L77-L77","name":"Lean.Parser.Term.prop","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.prop","doc":""},"Lean.Parser.Term.proj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L306-L306","name":"Lean.Parser.Term.proj","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.proj","doc":""},"Lean.Parser.Term.prio.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L47-L47","name":"Lean.Parser.Term.prio.quot","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Term.prio.quot","doc":""},"Lean.Parser.Term.precheckedQuot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L14-L14","name":"Lean.Parser.Term.precheckedQuot","docLink":"./Lean/Parser/Command.html#Lean.Parser.Term.precheckedQuot","doc":""},"Lean.Parser.Term.prec.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L46-L46","name":"Lean.Parser.Term.prec.quot","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Term.prec.quot","doc":""},"Lean.Parser.Term.pipeProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L317-L317","name":"Lean.Parser.Term.pipeProj","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.pipeProj","doc":""},"Lean.Parser.Term.pipeCompletion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L318-L318","name":"Lean.Parser.Term.pipeCompletion","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.pipeCompletion","doc":""},"Lean.Parser.Term.parenSpecial":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L84-L84","name":"Lean.Parser.Term.parenSpecial","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.parenSpecial","doc":""},"Lean.Parser.Term.paren":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L85-L85","name":"Lean.Parser.Term.paren","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.paren","doc":""},"Lean.Parser.Term.panic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L329-L329","name":"Lean.Parser.Term.panic","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.panic","doc":""},"Lean.Parser.Term.optType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L103-L103","name":"Lean.Parser.Term.optType","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.optType","doc":""},"Lean.Parser.Term.optSemicolon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L67-L67","name":"Lean.Parser.Term.optSemicolon","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.optSemicolon","doc":""},"Lean.Parser.Term.optIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L87-L87","name":"Lean.Parser.Term.optIdent","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.optIdent","doc":""},"Lean.Parser.Term.optExprPrecedence":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L171-L171","name":"Lean.Parser.Term.optExprPrecedence","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.optExprPrecedence","doc":""},"Lean.Parser.Term.optEllipsis":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L97-L97","name":"Lean.Parser.Term.optEllipsis","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.optEllipsis","doc":""},"Lean.Parser.Term.open":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L180-L181","name":"Lean.Parser.Term.open","docLink":"./Lean/Parser/Command.html#Lean.Parser.Term.open","doc":"`open Foo in e` is like `open Foo` but scoped to a single term. "},"Lean.Parser.Term.num":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L71-L71","name":"Lean.Parser.Term.num","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.num","doc":""},"Lean.Parser.Term.notFollowedByRedefinedTermToken":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L33-L36","name":"Lean.Parser.Term.notFollowedByRedefinedTermToken","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.notFollowedByRedefinedTermToken","doc":""},"Lean.Parser.Term.nomatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L162-L162","name":"Lean.Parser.Term.nomatch","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.nomatch","doc":""},"Lean.Parser.Term.noindex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L264-L264","name":"Lean.Parser.Term.noindex","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.noindex","doc":""},"Lean.Parser.Term.noImplicitLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L280-L280","name":"Lean.Parser.Term.noImplicitLambda","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.noImplicitLambda","doc":""},"Lean.Parser.Term.noErrorIfUnused":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L293-L293","name":"Lean.Parser.Term.noErrorIfUnused","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.noErrorIfUnused","doc":"Helper parser for marking `match`-alternatives that should not trigger errors if unused.\nWe use them to implement `macro_rules` and `elab_rules`\n"},"Lean.Parser.Term.namedPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L315-L315","name":"Lean.Parser.Term.namedPattern","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.namedPattern","doc":""},"Lean.Parser.Term.namedArgument":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L295-L295","name":"Lean.Parser.Term.namedArgument","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.namedArgument","doc":""},"Lean.Parser.Term.motive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L159-L159","name":"Lean.Parser.Term.motive","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.motive","doc":""},"Lean.Parser.Term.matchDiscr.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L326-L326","name":"Lean.Parser.Term.matchDiscr.quot","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.matchDiscr.quot","doc":""},"Lean.Parser.Term.matchDiscr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L153-L153","name":"Lean.Parser.Term.matchDiscr","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.matchDiscr","doc":""},"Lean.Parser.Term.matchAltsWhereDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L262-L262","name":"Lean.Parser.Term.matchAltsWhereDecls","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.matchAltsWhereDecls","doc":""},"Lean.Parser.Term.matchAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L150-L151","name":"Lean.Parser.Term.matchAlts","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.matchAlts","doc":""},"Lean.Parser.Term.matchAltExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L145-L145","name":"Lean.Parser.Term.matchAltExpr","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.matchAltExpr","doc":"Useful for syntax quotations. Note that generic patterns such as `` `(matchAltExpr| | ... => $rhs) `` should also\nwork with other `rhsParser`s (of arity 1). "},"Lean.Parser.Term.matchAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L139-L141","name":"Lean.Parser.Term.matchAlt","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.matchAlt","doc":""},"Lean.Parser.Term.match":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L161-L161","name":"Lean.Parser.Term.match","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.match","doc":""},"Lean.Parser.Term.macroLastArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L337-L337","name":"Lean.Parser.Term.macroLastArg","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.macroLastArg","doc":""},"Lean.Parser.Term.macroDollarArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L336-L336","name":"Lean.Parser.Term.macroDollarArg","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.macroDollarArg","doc":""},"Lean.Parser.Term.macroArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L335-L335","name":"Lean.Parser.Term.macroArg","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.macroArg","doc":""},"Lean.Parser.Term.local":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L248-L248","name":"Lean.Parser.Term.local","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.local","doc":""},"Lean.Parser.Term.liftMethod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L19-L19","name":"Lean.Parser.Term.liftMethod","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.liftMethod","doc":""},"Lean.Parser.Term.letrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L256-L256","name":"Lean.Parser.Term.letrec","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.letrec","doc":""},"Lean.Parser.Term.let_tmp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L235-L235","name":"Lean.Parser.Term.let_tmp","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.let_tmp","doc":"`let`-declaration that is only included in the elaborated term if variable is still there.\nIt is often used when building macros.\n"},"Lean.Parser.Term.let_fun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L226-L226","name":"Lean.Parser.Term.let_fun","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.let_fun","doc":"`let_fun x := v; b` is syntax sugar for `(fun x => b) v`. It is very similar to `let x := v; b`, but they are not equivalent.\nIn `let_fun`, the value `v` has been abstracted away and cannot be accessed in `b`.\n"},"Lean.Parser.Term.let_delayed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L230-L230","name":"Lean.Parser.Term.let_delayed","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.let_delayed","doc":"`let_delayed x := v; b` is similar to `let x := v; b`, but `b` is elaborated before `v`.\n"},"Lean.Parser.Term.letRecDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L254-L254","name":"Lean.Parser.Term.letRecDecls","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.letRecDecls","doc":""},"Lean.Parser.Term.letRecDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L253-L253","name":"Lean.Parser.Term.letRecDecl","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.letRecDecl","doc":""},"Lean.Parser.Term.letPatDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L186-L186","name":"Lean.Parser.Term.letPatDecl","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.letPatDecl","doc":""},"Lean.Parser.Term.letMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L282-L282","name":"Lean.Parser.Term.letMVar","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.letMVar","doc":""},"Lean.Parser.Term.letIdLhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L184-L184","name":"Lean.Parser.Term.letIdLhs","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.letIdLhs","doc":"Remark: we use `checkWsBefore` to ensure `let x[i] := e; b` is not parsed as `let x [i] := e; b` where `[i]` is an `instBinder`. "},"Lean.Parser.Term.letIdDeclNoBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L48-L48","name":"Lean.Parser.Term.letIdDeclNoBinders","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.letIdDeclNoBinders","doc":""},"Lean.Parser.Term.letIdDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L185-L185","name":"Lean.Parser.Term.letIdDecl","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.letIdDecl","doc":""},"Lean.Parser.Term.letIdBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L182-L182","name":"Lean.Parser.Term.letIdBinder","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.letIdBinder","doc":""},"Lean.Parser.Term.letEqnsDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L199-L199","name":"Lean.Parser.Term.letEqnsDecl","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.letEqnsDecl","doc":"Remark: the following `(\" := \" <|> matchAlts)` is a hack we use to produce a better error message at `letDecl`.\nConsider this following example\n```\ndef myFun (n : Nat) : IO Nat :=\n  let q ← (10 : Nat)\n  n + q\n```\nWithout the hack, we get the error `expected '|'` at `←`. Reason: at `letDecl`, we use the parser `(letIdDecl <|> letPatDecl <|> letEqnsDecl)`,\n`letIdDecl` and `letEqnsDecl` have the same prefix `letIdLhs`, but `letIdDecl` uses `atomic`.\nNote that the hack relies on the fact that the parser `\":=\"` never succeeds at `(\" := \" <|> matchAlts)`. It is there just to make sure we produce the error `expected ':=' or '|'`\n"},"Lean.Parser.Term.letDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L201-L201","name":"Lean.Parser.Term.letDecl","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.letDecl","doc":""},"Lean.Parser.Term.let":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L221-L221","name":"Lean.Parser.Term.let","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.let","doc":"`let` is used to declare a local definition. Example:\n```\nlet x := 1\nlet y := x + 1\nx + y\n```\nSince functions are first class citizens in Lean, you can use `let` to declare local functions too.\n```\nlet double := fun x => 2*x\ndouble (double 3)\n```\nFor recursive definitions, you should use `let rec`.\nYou can also perform pattern matching using `let`. For example, assume `p` has type `Nat × Nat`, then you can write\n```\nlet (x, y) := p\nx + y\n```\n"},"Lean.Parser.Term.leftArrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L18-L18","name":"Lean.Parser.Term.leftArrow","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.leftArrow","doc":""},"Lean.Parser.Term.leading_parser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L173-L173","name":"Lean.Parser.Term.leading_parser","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.leading_parser","doc":""},"Lean.Parser.Term.isIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L310-L312","name":"Lean.Parser.Term.isIdent","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.isIdent","doc":""},"Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L237-L238","name":"Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil_1","doc":""},"Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L147-L148","name":"Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.instCoeTSyntaxConsSyntaxNodeKindStrAnonymousNil","doc":""},"Lean.Parser.Term.instBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L115-L115","name":"Lean.Parser.Term.instBinder","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.instBinder","doc":""},"Lean.Parser.Term.inaccessible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L105-L105","name":"Lean.Parser.Term.inaccessible","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.inaccessible","doc":""},"Lean.Parser.Term.implicitBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L111-L111","name":"Lean.Parser.Term.implicitBinder","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.implicitBinder","doc":""},"Lean.Parser.Term.ident":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L70-L70","name":"Lean.Parser.Term.ident","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.ident","doc":""},"Lean.Parser.Term.hole":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L78-L78","name":"Lean.Parser.Term.hole","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.hole","doc":""},"Lean.Parser.Term.haveIdLhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L241-L241","name":"Lean.Parser.Term.haveIdLhs","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.haveIdLhs","doc":"like `let_fun` but with optional name "},"Lean.Parser.Term.haveIdDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L242-L242","name":"Lean.Parser.Term.haveIdDecl","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.haveIdDecl","doc":""},"Lean.Parser.Term.haveEqnsDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L243-L243","name":"Lean.Parser.Term.haveEqnsDecl","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.haveEqnsDecl","doc":""},"Lean.Parser.Term.haveDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L244-L244","name":"Lean.Parser.Term.haveDecl","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.haveDecl","doc":""},"Lean.Parser.Term.have":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L245-L245","name":"Lean.Parser.Term.have","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.have","doc":""},"Lean.Parser.Term.generalizingParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L157-L157","name":"Lean.Parser.Term.generalizingParam","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.generalizingParam","doc":""},"Lean.Parser.Term.funStrictImplicitBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L165-L165","name":"Lean.Parser.Term.funStrictImplicitBinder","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.funStrictImplicitBinder","doc":""},"Lean.Parser.Term.funImplicitBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L164-L164","name":"Lean.Parser.Term.funImplicitBinder","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.funImplicitBinder","doc":""},"Lean.Parser.Term.funBinder.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L323-L323","name":"Lean.Parser.Term.funBinder.quot","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.funBinder.quot","doc":""},"Lean.Parser.Term.funBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L166-L166","name":"Lean.Parser.Term.funBinder","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.funBinder","doc":""},"Lean.Parser.Term.fun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L169-L169","name":"Lean.Parser.Term.fun","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.fun","doc":""},"Lean.Parser.Term.fromTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L88-L88","name":"Lean.Parser.Term.fromTerm","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.fromTerm","doc":""},"Lean.Parser.Term.forall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L137-L137","name":"Lean.Parser.Term.forall","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.forall","doc":""},"Lean.Parser.Term.forInMacro'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L273-L273","name":"Lean.Parser.Term.forInMacro'","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.forInMacro'","doc":""},"Lean.Parser.Term.forInMacro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L272-L272","name":"Lean.Parser.Term.forInMacro","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.forInMacro","doc":""},"Lean.Parser.Term.falseVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L156-L156","name":"Lean.Parser.Term.falseVal","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.falseVal","doc":""},"Lean.Parser.Term.explicitUniv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L314-L314","name":"Lean.Parser.Term.explicitUniv","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.explicitUniv","doc":""},"Lean.Parser.Term.explicitBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L110-L110","name":"Lean.Parser.Term.explicitBinder","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.explicitBinder","doc":""},"Lean.Parser.Term.explicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L104-L104","name":"Lean.Parser.Term.explicit","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.explicit","doc":""},"Lean.Parser.Term.ensureTypeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L278-L278","name":"Lean.Parser.Term.ensureTypeOf","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.ensureTypeOf","doc":""},"Lean.Parser.Term.ensureExpectedType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L279-L279","name":"Lean.Parser.Term.ensureExpectedType","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.ensureExpectedType","doc":""},"Lean.Parser.Term.elseIf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L82-L82","name":"Lean.Parser.Term.elseIf","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.elseIf","doc":"In `do` blocks, we support `if` without an `else`. Thus, we use indentation to prevent examples such as\n```\nif c_1 then\n  if c_2 then\n    action_1\nelse\n  action_2\n```\nfrom being parsed as\n```\nif c_1 then {\n  if c_2 then {\n    action_1\n  } else {\n    action_2\n  }\n}\n```\nWe also have special support for `else if` because we don't want to write\n```\nif c_1 then\n  action_1\nelse if c_2 then\n       action_2\n     else\n       action_3\n```\n"},"Lean.Parser.Term.ellipsis":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L296-L296","name":"Lean.Parser.Term.ellipsis","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.ellipsis","doc":""},"Lean.Parser.Term.dynamicQuot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L342-L342","name":"Lean.Parser.Term.dynamicQuot","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.dynamicQuot","doc":""},"Lean.Parser.Term.doubleQuotedName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L180-L180","name":"Lean.Parser.Term.doubleQuotedName","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.doubleQuotedName","doc":""},"Lean.Parser.Term.dotIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L344-L344","name":"Lean.Parser.Term.dotIdent","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.dotIdent","doc":""},"Lean.Parser.Term.doUnless":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L93-L93","name":"Lean.Parser.Term.doUnless","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doUnless","doc":""},"Lean.Parser.Term.doTry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L103-L103","name":"Lean.Parser.Term.doTry","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doTry","doc":""},"Lean.Parser.Term.doSeqItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L21-L21","name":"Lean.Parser.Term.doSeqItem","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doSeqItem","doc":""},"Lean.Parser.Term.doSeqIndent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L22-L22","name":"Lean.Parser.Term.doSeqIndent","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doSeqIndent","doc":""},"Lean.Parser.Term.doSeqBracketed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L23-L23","name":"Lean.Parser.Term.doSeqBracketed","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doSeqBracketed","doc":""},"Lean.Parser.Term.doSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L24-L24","name":"Lean.Parser.Term.doSeq","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doSeq","doc":""},"Lean.Parser.Term.doReturn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L107-L107","name":"Lean.Parser.Term.doReturn","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doReturn","doc":""},"Lean.Parser.Term.doReassignArrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L51-L51","name":"Lean.Parser.Term.doReassignArrow","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doReassignArrow","doc":""},"Lean.Parser.Term.doReassign":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L50-L50","name":"Lean.Parser.Term.doReassign","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doReassign","doc":""},"Lean.Parser.Term.doPatDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L43-L43","name":"Lean.Parser.Term.doPatDecl","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doPatDecl","doc":""},"Lean.Parser.Term.doNested":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L124-L124","name":"Lean.Parser.Term.doNested","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doNested","doc":""},"Lean.Parser.Term.doMatchAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L97-L97","name":"Lean.Parser.Term.doMatchAlts","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doMatchAlts","doc":""},"Lean.Parser.Term.doMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L98-L98","name":"Lean.Parser.Term.doMatch","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doMatch","doc":""},"Lean.Parser.Term.doLetRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L41-L41","name":"Lean.Parser.Term.doLetRec","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doLetRec","doc":""},"Lean.Parser.Term.doLetElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L39-L39","name":"Lean.Parser.Term.doLetElse","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doLetElse","doc":""},"Lean.Parser.Term.doLetArrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L44-L44","name":"Lean.Parser.Term.doLetArrow","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doLetArrow","doc":""},"Lean.Parser.Term.doLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L38-L38","name":"Lean.Parser.Term.doLet","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doLet","doc":""},"Lean.Parser.Term.doIfProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L87-L87","name":"Lean.Parser.Term.doIfProp","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfProp","doc":""},"Lean.Parser.Term.doIfLetPure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L84-L84","name":"Lean.Parser.Term.doIfLetPure","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfLetPure","doc":""},"Lean.Parser.Term.doIfLetBind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L85-L85","name":"Lean.Parser.Term.doIfLetBind","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfLetBind","doc":""},"Lean.Parser.Term.doIfLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L86-L86","name":"Lean.Parser.Term.doIfLet","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfLet","doc":""},"Lean.Parser.Term.doIfCond":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L88-L88","name":"Lean.Parser.Term.doIfCond","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIfCond","doc":""},"Lean.Parser.Term.doIf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L89-L92","name":"Lean.Parser.Term.doIf","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIf","doc":""},"Lean.Parser.Term.doIdDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L42-L42","name":"Lean.Parser.Term.doIdDecl","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doIdDecl","doc":""},"Lean.Parser.Term.doHave":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L52-L52","name":"Lean.Parser.Term.doHave","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doHave","doc":""},"Lean.Parser.Term.doForDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L94-L94","name":"Lean.Parser.Term.doForDecl","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doForDecl","doc":""},"Lean.Parser.Term.doFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L95-L95","name":"Lean.Parser.Term.doFor","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doFor","doc":""},"Lean.Parser.Term.doFinally":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L102-L102","name":"Lean.Parser.Term.doFinally","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doFinally","doc":""},"Lean.Parser.Term.doExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L123-L123","name":"Lean.Parser.Term.doExpr","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doExpr","doc":"We use `notFollowedBy` to avoid counterintuitive behavior.\n\nFor example, the `if`-term parser\ndoesn't enforce indentation restrictions, but we don't want it to be used when `doIf` fails.\nNote that parser priorities would not solve this problem since the `doIf` parser is failing while the `if`\nparser is succeeding. The first `notFollowedBy` prevents this problem.\n\nConsider the `doElem` `x := (a, b⟩` it contains an error since we are using `⟩` instead of `)`. Thus, `doReassign` parser fails.\nHowever, `doExpr` would succeed consuming just `x`, and cryptic error message is generated after that.\nThe second `notFollowedBy` prevents this problem.\n"},"Lean.Parser.Term.doElem.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L128-L128","name":"Lean.Parser.Term.doElem.quot","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doElem.quot","doc":""},"Lean.Parser.Term.doDbgTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L108-L108","name":"Lean.Parser.Term.doDbgTrace","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doDbgTrace","doc":""},"Lean.Parser.Term.doContinue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L106-L106","name":"Lean.Parser.Term.doContinue","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doContinue","doc":""},"Lean.Parser.Term.doCatchMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L101-L101","name":"Lean.Parser.Term.doCatchMatch","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doCatchMatch","doc":""},"Lean.Parser.Term.doCatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L100-L100","name":"Lean.Parser.Term.doCatch","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doCatch","doc":""},"Lean.Parser.Term.doBreak":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L105-L105","name":"Lean.Parser.Term.doBreak","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doBreak","doc":""},"Lean.Parser.Term.doAssert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L109-L109","name":"Lean.Parser.Term.doAssert","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.doAssert","doc":""},"Lean.Parser.Term.do":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Do.lean#L126-L126","name":"Lean.Parser.Term.do","docLink":"./Lean/Parser/Do.html#Lean.Parser.Term.do","doc":""},"Lean.Parser.Term.depArrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L134-L134","name":"Lean.Parser.Term.depArrow","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.depArrow","doc":"It is feasible to support dependent arrows such as `{α} → α → α` without sacrificing the quality of the error messages for the longer case.\n`{α} → α → α` would be short for `{α : Type} → α → α`\nHere is the encoding:\n```\ndef implicitShortBinder := node `Lean.Parser.Term.implicitBinder $ \"{\" >> many1 binderIdent >> pushNone >> \"}\"\ndef depArrowShortPrefix := try (implicitShortBinder >> unicodeSymbol \" → \" \" -> \")\ndef depArrowLongPrefix  := bracketedBinder true >> unicodeSymbol \" → \" \" -> \"\ndef depArrowPrefix      := depArrowShortPrefix <|> depArrowLongPrefix\n@[builtinTermParser] def depArrow := leading_parser depArrowPrefix >> termParser\n```\nNote that no changes in the elaborator are needed.\nWe decided to not use it because terms such as `{α} → α → α` may look too cryptic.\nNote that we did not add a `explicitShortBinder` parser since `(α) → α → α` is really cryptic as a short for `(α : Type) → α → α`.\n"},"Lean.Parser.Term.defaultOrOfNonempty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L287-L287","name":"Lean.Parser.Term.defaultOrOfNonempty","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.defaultOrOfNonempty","doc":""},"Lean.Parser.Term.declName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L275-L275","name":"Lean.Parser.Term.declName","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.declName","doc":""},"Lean.Parser.Term.dbgTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L331-L331","name":"Lean.Parser.Term.dbgTrace","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.dbgTrace","doc":""},"Lean.Parser.Term.completion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L307-L307","name":"Lean.Parser.Term.completion","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.completion","doc":""},"Lean.Parser.Term.char":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L74-L74","name":"Lean.Parser.Term.char","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.char","doc":""},"Lean.Parser.Term.cdot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L81-L81","name":"Lean.Parser.Term.cdot","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.cdot","doc":""},"Lean.Parser.Term.byTactic'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L64-L64","name":"Lean.Parser.Term.byTactic'","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.byTactic'","doc":"This is the same as `byTactic`, but it uses a different syntax kind. This is\nused by `show` and `suffices` instead of `byTactic` because these syntaxes don't\nsupport arbitrary terms where `byTactic` is accepted. Mathport uses this to e.g.\nsafely find-replace `by exact $e` by `$e` in any context without causing\nincorrect syntax when the full expression is `show $T by exact $e`. "},"Lean.Parser.Term.byTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L56-L56","name":"Lean.Parser.Term.byTactic","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.byTactic","doc":""},"Lean.Parser.Term.bracketedBinderF":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L324-L324","name":"Lean.Parser.Term.bracketedBinderF","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.bracketedBinderF","doc":""},"Lean.Parser.Term.bracketedBinder.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L325-L325","name":"Lean.Parser.Term.bracketedBinder.quot","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.bracketedBinder.quot","doc":""},"Lean.Parser.Term.bracketedBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L116-L117","name":"Lean.Parser.Term.bracketedBinder","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.bracketedBinder","doc":""},"Lean.Parser.Term.borrowed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L176-L176","name":"Lean.Parser.Term.borrowed","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.borrowed","doc":""},"Lean.Parser.Term.binrel_no_prop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L268-L268","name":"Lean.Parser.Term.binrel_no_prop","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.binrel_no_prop","doc":"Similar to `binrel`, but coerse `Prop` arguments into `Bool`. "},"Lean.Parser.Term.binrel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L266-L266","name":"Lean.Parser.Term.binrel","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.binrel","doc":""},"Lean.Parser.Term.binop_lazy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L270-L270","name":"Lean.Parser.Term.binop_lazy","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.binop_lazy","doc":""},"Lean.Parser.Term.binop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L269-L269","name":"Lean.Parser.Term.binop","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.binop","doc":""},"Lean.Parser.Term.binderType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L107-L107","name":"Lean.Parser.Term.binderType","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.binderType","doc":""},"Lean.Parser.Term.binderTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L108-L108","name":"Lean.Parser.Term.binderTactic","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.binderTactic","doc":""},"Lean.Parser.Term.binderIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L106-L106","name":"Lean.Parser.Term.binderIdent","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.binderIdent","doc":""},"Lean.Parser.Term.binderDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L109-L109","name":"Lean.Parser.Term.binderDefault","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.binderDefault","doc":""},"Lean.Parser.Term.basicFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L168-L168","name":"Lean.Parser.Term.basicFun","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.basicFun","doc":""},"Lean.Parser.Term.attributes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L252-L252","name":"Lean.Parser.Term.attributes","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.attributes","doc":""},"Lean.Parser.Term.attrKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L249-L249","name":"Lean.Parser.Term.attrKind","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.attrKind","doc":""},"Lean.Parser.Term.attrInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L250-L250","name":"Lean.Parser.Term.attrInstance","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.attrInstance","doc":""},"Lean.Parser.Term.attr.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L327-L327","name":"Lean.Parser.Term.attr.quot","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.attr.quot","doc":""},"Lean.Parser.Term.assert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L332-L332","name":"Lean.Parser.Term.assert","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.assert","doc":""},"Lean.Parser.Term.arrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L308-L308","name":"Lean.Parser.Term.arrow","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.arrow","doc":""},"Lean.Parser.Term.argument":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L297-L300","name":"Lean.Parser.Term.argument","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.argument","doc":""},"Lean.Parser.Term.app":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L304-L304","name":"Lean.Parser.Term.app","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.app","doc":""},"Lean.Parser.Term.anonymousCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L86-L86","name":"Lean.Parser.Term.anonymousCtor","docLink":"./Lean/Parser/Term.html#Lean.Parser.Term.anonymousCtor","doc":""},"Lean.Parser.Tactic.«tactic_<;>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L163-L164","name":"Lean.Parser.Tactic.«tactic_<;>_»","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.«tactic_<;>_»","doc":"`tac <;> tac'` runs `tac` on the main goal and `tac'` on each produced goal, concatenating all goals produced by `tac'`. "},"Lean.Parser.Tactic.«tacticNext_=>_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L116-L119","name":"Lean.Parser.Tactic.«tacticNext_=>_»","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.«tacticNext_=>_»","doc":"`next => tac` focuses on the next goal solves it using `tac`, or else fails.\n`next x₁ ... xₙ => tac` additionally renames the `n` most recent hypotheses with inaccessible names to the given names. "},"Lean.Parser.Tactic.«tacticHave_:=_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L318-L321","name":"Lean.Parser.Tactic.«tacticHave_:=_»","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.«tacticHave_:=_»","doc":"`have h := e` adds the hypothesis `h : t` if `e : t`.\n"},"Lean.Parser.Tactic.«tacticHave'_:=_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L352-L353","name":"Lean.Parser.Tactic.«tacticHave'_:=_»","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.«tacticHave'_:=_»","doc":"Similar to `have`, but using `refine'` "},"Lean.Parser.Tactic.«tacticExists_,,»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L492-L494","name":"Lean.Parser.Tactic.«tacticExists_,,»","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.«tacticExists_,,»","doc":"`exists e₁, e₂, ...` is shorthand for `refine ⟨e₁, e₂, ...⟩; try trivial`. It is useful for existential goals. "},"Lean.Parser.Tactic.withUnfoldingAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L149-L151","name":"Lean.Parser.Tactic.withUnfoldingAll","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.withUnfoldingAll","doc":"`with_unfolding_all tacs` excutes `tacs` using the `.all` transparency setting.\nIn this setting all definitions that are not opaque are unfolded. "},"Lean.Parser.Tactic.withReducibleAndInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L146-L148","name":"Lean.Parser.Tactic.withReducibleAndInstances","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.withReducibleAndInstances","doc":"`with_reducible_and_instances tacs` excutes `tacs` using the `.instances` transparency setting.\nIn this setting only definitions tagged as `[reducible]` or type class instances are unfolded. "},"Lean.Parser.Tactic.withReducible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L143-L145","name":"Lean.Parser.Tactic.withReducible","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.withReducible","doc":"`with_reducible tacs` excutes `tacs` using the reducible transparency setting.\nIn this setting only definitions tagged as `[reducible]` are unfolded. "},"Lean.Parser.Tactic.withAnnotateState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L14-L15","name":"Lean.Parser.Tactic.withAnnotateState","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.withAnnotateState","doc":"`with_annotate_state stx t` annotates the lexical range of `stx : Syntax` with the initial and final state of running tactic `t`. "},"Lean.Parser.Tactic.unknown":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Tactic.lean#L21-L21","name":"Lean.Parser.Tactic.unknown","docLink":"./Lean/Parser/Tactic.html#Lean.Parser.Tactic.unknown","doc":"This is a fallback tactic parser for any identifier which exists only\nto improve syntax error messages.\n```\nexample : True := by foo -- unknown tactic\n```\n"},"Lean.Parser.Tactic.unfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L300-L304","name":"Lean.Parser.Tactic.unfold","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.unfold","doc":"`unfold id,+` unfolds definition `id`. For non-recursive definitions, this tactic is identical to `delta`.\nFor recursive definitions, it hides the encoding tricks used by the Lean frontend to convince the\nkernel that the definition terminates. "},"Lean.Parser.Tactic.traceState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L133-L134","name":"Lean.Parser.Tactic.traceState","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.traceState","doc":"`trace_state` displays the current state in the info view. "},"Lean.Parser.Tactic.traceMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L135-L136","name":"Lean.Parser.Tactic.traceMessage","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.traceMessage","doc":"`trace msg` displays `msg` in the info view. "},"Lean.Parser.Tactic.tacticUnhygienic_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L452-L463","name":"Lean.Parser.Tactic.tacticUnhygienic_","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticUnhygienic_","doc":"`unhygienic tacs` runs `tacs` with name hygiene disabled.\nThis means that tactics that would normally create inaccessible names will instead\nmake regular variables. **Warning**: Tactics may change their variable naming\nstrategies at any time, so code that depends on autogenerated names is brittle.\nUsers should try not to use `unhygienic` if possible.\n```\nexample : ∀ x : Nat, x = x := by unhygienic\n  intro            -- x would normally be intro'd as inaccessible\n  exact Eq.refl x  -- refer to x\n```\n"},"Lean.Parser.Tactic.tacticTry_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L161-L162","name":"Lean.Parser.Tactic.tacticTry_","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticTry_","doc":"`try tac` runs `tac` and succeeds even if `tac` failed. "},"Lean.Parser.Tactic.tacticTrivial":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L407-L414","name":"Lean.Parser.Tactic.tacticTrivial","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticTrivial","doc":"`trivial` tries different simple tactics (e.g., `rfl`, `contradiction`, ...) to close the current goal.\nYou can use the command `macro_rules` to extend the set of tactics used. Example:\n```\nmacro_rules | `(tactic| trivial) => `(tactic| simp)\n```\n"},"Lean.Parser.Tactic.tacticSuffices_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L322-L329","name":"Lean.Parser.Tactic.tacticSuffices_","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticSuffices_","doc":"Given a main goal `ctx |- t`, `suffices h : t' from e` replaces the main goal with `ctx |- t'`,\n`e` must have type `t` in the context `ctx, h : t'`.\n\nThe variant `suffices h : t' by tac` is a shorthand for `suffices h : t' from by tac`.\nIf `h :` is omitted, the name `this` is used.\n "},"Lean.Parser.Tactic.tacticStop_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L433-L435","name":"Lean.Parser.Tactic.tacticStop_","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticStop_","doc":"`stop` is a helper tactic for \"discarding\" the rest of a proof. It is useful when working on the middle of a complex proofs,\nand less messy than commenting the remainder of the proof. "},"Lean.Parser.Tactic.tacticSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L198-L199","name":"Lean.Parser.Tactic.tacticSorry","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticSorry","doc":"The `sorry` tactic is a shorthand for `exact sorry`. "},"Lean.Parser.Tactic.tacticShow_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L337-L341","name":"Lean.Parser.Tactic.tacticShow_","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticShow_","doc":"`show t` finds the first goal whose target unifies with `t`. It makes that the main goal,\nperforms the unification, and replaces the target with the unified version of `t`.\n"},"Lean.Parser.Tactic.tacticSeqBracketed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L38-L39","name":"Lean.Parser.Tactic.tacticSeqBracketed","docLink":"./Lean/Parser/Term.html#Lean.Parser.Tactic.tacticSeqBracketed","doc":"The syntax `{ tacs }` is an alternative syntax for `· tacs`.\nIt runs the tactics in sequence, and fails if the goal is not solved. "},"Lean.Parser.Tactic.tacticSeq1Indented":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L34-L35","name":"Lean.Parser.Tactic.tacticSeq1Indented","docLink":"./Lean/Parser/Term.html#Lean.Parser.Tactic.tacticSeq1Indented","doc":""},"Lean.Parser.Tactic.tacticSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L40-L41","name":"Lean.Parser.Tactic.tacticSeq","docLink":"./Lean/Parser/Term.html#Lean.Parser.Tactic.tacticSeq","doc":""},"Lean.Parser.Tactic.tacticRfl'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L181-L184","name":"Lean.Parser.Tactic.tacticRfl'","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticRfl'","doc":"`rfl'` is similar to `rfl`, but disables smart unfolding and unfolds all kinds of definitions,\ntheorems included (relevant for declarations defined by well-founded recursion). "},"Lean.Parser.Tactic.tacticRfl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L174-L179","name":"Lean.Parser.Tactic.tacticRfl","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticRfl","doc":"`rfl` tries to close the current goal using reflexivity.\nThis is supposed to be an extensible tactic and users can add their own support\nfor new reflexive relations.\n"},"Lean.Parser.Tactic.tacticRepeat_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L399-L403","name":"Lean.Parser.Tactic.tacticRepeat_","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticRepeat_","doc":"`repeat tac` applies `tac` to main goal. If the application succeeds,\nthe tactic is applied recursively to the generated subgoals until it eventually fails.\n"},"Lean.Parser.Tactic.tacticRefine_lift_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L306-L308","name":"Lean.Parser.Tactic.tacticRefine_lift_","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticRefine_lift_","doc":"Auxiliary macro for lifting have/suffices/let/...\nIt makes sure the \"continuation\" `?_` is the main goal after refining. "},"Lean.Parser.Tactic.tacticRefine_lift'_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L348-L349","name":"Lean.Parser.Tactic.tacticRefine_lift'_","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticRefine_lift'_","doc":"Similar to `refine_lift`, but using `refine'` "},"Lean.Parser.Tactic.tacticLet_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L330-L336","name":"Lean.Parser.Tactic.tacticLet_","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticLet_","doc":"`let h : t := e` adds the hypothesis `h : t := e` to the current goal if `e` a term of type `t`.\nIf `t` is omitted, it will be inferred.\nThe variant `let pattern := e` is equivalent to `match e with | pattern => _`, and it is convenient for types that have only applicable constructor.\nExample: given `h : p ∧ q ∧ r`, `let ⟨h₁, h₂, h₃⟩ := h` produces the hypotheses `h₁ : p`, `h₂ : q`, and `h₃ : r`.\n"},"Lean.Parser.Tactic.tacticLet'_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L354-L355","name":"Lean.Parser.Tactic.tacticLet'_","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticLet'_","doc":"Similar to `let`, but using `refine'` "},"Lean.Parser.Tactic.tacticInfer_instance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L200-L201","name":"Lean.Parser.Tactic.tacticInfer_instance","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticInfer_instance","doc":"`infer_instance` is an abbreviation for `exact inferInstance` "},"Lean.Parser.Tactic.tacticHave_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L310-L316","name":"Lean.Parser.Tactic.tacticHave_","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticHave_","doc":"`have h : t := e` adds the hypothesis `h : t` to the current goal if `e` a term of type `t`. If `t` is omitted, it will be inferred.\nIf `h` is omitted, the name `this` is used.\nThe variant `have pattern := e` is equivalent to `match e with | pattern => _`, and it is convenient for types that have only applicable constructor.\nExample: given `h : p ∧ q ∧ r`, `have ⟨h₁, h₂, h₃⟩ := h` produces the hypotheses `h₁ : p`, `h₂ : q`, and `h₃ : r`.\n"},"Lean.Parser.Tactic.tacticHave'_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L350-L351","name":"Lean.Parser.Tactic.tacticHave'_","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticHave'_","doc":"Similar to `have`, but using `refine'` "},"Lean.Parser.Tactic.tacticErw__":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1255-L1258","name":"Lean.Parser.Tactic.tacticErw__","docLink":"./Init/Meta.html#Lean.Parser.Tactic.tacticErw__","doc":"`erw [rules]` is a shorthand for `rw (config := { transparency := .default }) [rules]`.\nThis does rewriting up to unfolding of regular definitions (by comparison to regular `rw`\nwhich only unfolds `@[reducible]` definitions). "},"Lean.Parser.Tactic.tacticAdmit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L196-L197","name":"Lean.Parser.Tactic.tacticAdmit","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.tacticAdmit","doc":"`admit` is a shorthand for `exact sorry`. "},"Lean.Parser.Tactic.substVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L50-L53","name":"Lean.Parser.Tactic.substVars","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.substVars","doc":"Apply `subst` to all hypotheses of the form `h : x = t` or `h : t = x`.\n"},"Lean.Parser.Tactic.subst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L46-L49","name":"Lean.Parser.Tactic.subst","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.subst","doc":"`subst x...` substitutes each `x` with `e` in the goal if there is a hypothesis of type `x = e` or `e = x`.\nIf `x` is itself a hypothesis of type `y = e` or `e = y`, `y` is substituted instead. "},"Lean.Parser.Tactic.split":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L416-L420","name":"Lean.Parser.Tactic.split","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.split","doc":"The `split` tactic is useful for breaking nested if-then-else and match expressions in cases.\nFor a `match` expression with `n` cases, the `split` tactic generates at most `n` subgoals\n"},"Lean.Parser.Tactic.specialize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L437-L443","name":"Lean.Parser.Tactic.specialize","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.specialize","doc":"The tactic `specialize h a₁ ... aₙ` works on local hypothesis `h`.\nThe premises of this hypothesis, either universal quantifications or non-dependent implications,\nare instantiated by concrete terms coming either from arguments `a₁` ... `aₙ`.\nThe tactic adds a new hypothesis with the same name `h := h a₁ ... aₙ` and tries to clear the previous one.\n"},"Lean.Parser.Tactic.sleep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L489-L490","name":"Lean.Parser.Tactic.sleep","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.sleep","doc":"The tactic `sleep ms` sleeps for `ms` milliseconds and does nothing. It is used for debugging purposes only. "},"Lean.Parser.Tactic.skip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L129-L130","name":"Lean.Parser.Tactic.skip","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.skip","doc":"`skip` does nothing. "},"Lean.Parser.Tactic.simpStar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L270-L270","name":"Lean.Parser.Tactic.simpStar","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.simpStar","doc":""},"Lean.Parser.Tactic.simpPre":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L266-L266","name":"Lean.Parser.Tactic.simpPre","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.simpPre","doc":""},"Lean.Parser.Tactic.simpPost":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L267-L267","name":"Lean.Parser.Tactic.simpPost","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.simpPost","doc":""},"Lean.Parser.Tactic.simpLemma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L268-L268","name":"Lean.Parser.Tactic.simpLemma","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.simpLemma","doc":""},"Lean.Parser.Tactic.simpErase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L269-L269","name":"Lean.Parser.Tactic.simpErase","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.simpErase","doc":""},"Lean.Parser.Tactic.simpAutoUnfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1282-L1285","name":"Lean.Parser.Tactic.simpAutoUnfold","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpAutoUnfold","doc":"`simp!` is shorthand for `simp` with `autoUnfold := true`.\nThis will rewrite with all equation lemmas, which can be used to\npartially evaluate many definitions. "},"Lean.Parser.Tactic.simpArithAutoUnfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1291-L1294","name":"Lean.Parser.Tactic.simpArithAutoUnfold","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpArithAutoUnfold","doc":"`simp_arith!` is shorthand for `simp_arith` with `autoUnfold := true`.\nThis will rewrite with all equation lemmas, which can be used to\npartially evaluate many definitions. "},"Lean.Parser.Tactic.simpArith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1287-L1289","name":"Lean.Parser.Tactic.simpArith","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpArith","doc":"`simp_arith` is shorthand for `simp` with `arith := true`.\nThis enables the use of normalization by linear arithmetic. "},"Lean.Parser.Tactic.simpAllKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1261-L1261","name":"Lean.Parser.Tactic.simpAllKind","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpAllKind","doc":""},"Lean.Parser.Tactic.simpAllAutoUnfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1296-L1299","name":"Lean.Parser.Tactic.simpAllAutoUnfold","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpAllAutoUnfold","doc":"`simp_all!` is shorthand for `simp_all` with `autoUnfold := true`.\nThis will rewrite with all equation lemmas, which can be used to\npartially evaluate many definitions. "},"Lean.Parser.Tactic.simpAllArithAutoUnfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1304-L1305","name":"Lean.Parser.Tactic.simpAllArithAutoUnfold","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpAllArithAutoUnfold","doc":"`simp_all_arith!` combines the effects of `simp_all`, `simp_arith` and `simp!`. "},"Lean.Parser.Tactic.simpAllArith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1301-L1302","name":"Lean.Parser.Tactic.simpAllArith","docLink":"./Init/Meta.html#Lean.Parser.Tactic.simpAllArith","doc":"`simp_all_arith` combines the effects of `simp_all` and `simp_arith`. "},"Lean.Parser.Tactic.simpAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L283-L288","name":"Lean.Parser.Tactic.simpAll","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.simpAll","doc":"`simp_all` is a stronger version of `simp [*] at *` where the hypotheses and target are simplified\nmultiple times until no simplication is applicable.\nOnly non-dependent propositional hypotheses are considered.\n"},"Lean.Parser.Tactic.simp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L271-L282","name":"Lean.Parser.Tactic.simp","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.simp","doc":"The `simp` tactic uses lemmas and hypotheses to simplify the main goal target or non-dependent hypotheses. It has many variants.\n- `simp` simplifies the main goal target using lemmas tagged with the attribute `[simp]`.\n- `simp [h₁, h₂, ..., hₙ]` simplifies the main goal target using the lemmas tagged with the attribute `[simp]` and the given `hᵢ`'s, where the `hᵢ`'s are expressions. If an `hᵢ` is a defined constant `f`, then the equational lemmas associated with `f` are used. This provides a convenient way to unfold `f`.\n- `simp [*]` simplifies the main goal target using the lemmas tagged with the attribute `[simp]` and all hypotheses.\n- `simp only [h₁, h₂, ..., hₙ]` is like `simp [h₁, h₂, ..., hₙ]` but does not use `[simp]` lemmas\n- `simp [-id₁, ..., -idₙ]` simplifies the main goal target using the lemmas tagged with the attribute `[simp]`, but removes the ones named `idᵢ`.\n- `simp at h₁ h₂ ... hₙ` simplifies the hypotheses `h₁ : T₁` ... `hₙ : Tₙ`. If the target or another hypothesis depends on `hᵢ`, a new simplified hypothesis `hᵢ` is introduced, but the old one remains in the local context.\n- `simp at *` simplifies all the hypotheses and the target.\n- `simp [*] at *` simplifies target and all (propositional) hypotheses using the other hypotheses.\n"},"Lean.Parser.Tactic.set_option":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L196-L197","name":"Lean.Parser.Tactic.set_option","docLink":"./Lean/Parser/Command.html#Lean.Parser.Tactic.set_option","doc":"`set_option opt val in tacs` (the tactic) acts like `set_option opt val` at command level,\nbut it sets the option only within the tactics `tacs`. "},"Lean.Parser.Tactic.seq1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L44-L45","name":"Lean.Parser.Tactic.seq1","docLink":"./Lean/Parser/Term.html#Lean.Parser.Tactic.seq1","doc":"Raw sequence for quotation and grouping "},"Lean.Parser.Tactic.save":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L479-L487","name":"Lean.Parser.Tactic.save","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.save","doc":"`save` is defined to be the same as `skip`, but the elaborator has\nspecial handling for occurrences of `save` in tactic scripts and will transform\n`by tac1; save; tac2` to `by (checkpoint tac1); tac2`, meaning that the effect of `tac1`\nwill be cached and replayed. This is useful for improving responsiveness\nwhen working on a long tactic proof, by using `save` after expensive tactics.\n\n(TODO: do this automatically and transparently so that users don't have to use\nthis combinator explicitly.) "},"Lean.Parser.Tactic.rwSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L237-L240","name":"Lean.Parser.Tactic.rwSeq","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.rwSeq","doc":"`rw` is like `rewrite`, but also tries to close the goal by \"cheap\" (reducible) `rfl` afterwards.\n"},"Lean.Parser.Tactic.rwRuleSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L226-L226","name":"Lean.Parser.Tactic.rwRuleSeq","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.rwRuleSeq","doc":""},"Lean.Parser.Tactic.rwRule":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L225-L225","name":"Lean.Parser.Tactic.rwRule","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.rwRule","doc":""},"Lean.Parser.Tactic.rotateRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L158-L160","name":"Lean.Parser.Tactic.rotateRight","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.rotateRight","doc":"Rotate the goals to the right by `n`. That is, take the goal at the back\nand push it to the front `n` times. If `n` is omitted, it defaults to `1`. "},"Lean.Parser.Tactic.rotateLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L154-L157","name":"Lean.Parser.Tactic.rotateLeft","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.rotateLeft","doc":"`rotate_left n` rotates goals to the left by `n`. That is, `rotate_left 1`\ntakes the main goal and puts it to the back of the subgoal list.\nIf `n` is omitted, it defaults to `1`. "},"Lean.Parser.Tactic.rewriteSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L228-L235","name":"Lean.Parser.Tactic.rewriteSeq","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.rewriteSeq","doc":"`rewrite [e]` applies identity `e` as a rewrite rule to the target of the main goal.\nIf `e` is preceded by left arrow (`←` or `<-`), the rewrite is applied in the reverse direction.\nIf `e` is a defined constant, then the equational theorems associated with `e` are used. This provides a convenient way to unfold `e`.\n- `rewrite [e₁, ..., eₙ]` applies the given rules sequentially.\n- `rewrite [e] at l` rewrites `e` at location(s) `l`, where `l` is either `*` or a list of hypotheses in the local context. In the latter case, a turnstile `⊢` or `|-` can also be used, to signify the target of the goal.\n"},"Lean.Parser.Tactic.revert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L42-L43","name":"Lean.Parser.Tactic.revert","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.revert","doc":"`revert x...` is the inverse of `intro x...`: it moves the given hypotheses into the main goal's target type. "},"Lean.Parser.Tactic.renameI":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L396-L397","name":"Lean.Parser.Tactic.renameI","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.renameI","doc":"`rename_i x_1 ... x_n` renames the last `n` inaccessible names using the given names. "},"Lean.Parser.Tactic.rename":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L38-L41","name":"Lean.Parser.Tactic.rename","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.rename","doc":"`rename t => x` renames the most recent hypothesis whose type matches `t` (which may contain placeholders) to `x`,\nor fails if no such hypothesis could be found. "},"Lean.Parser.Tactic.refl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L171-L172","name":"Lean.Parser.Tactic.refl","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.refl","doc":"`eq_refl` is equivalent to `exact rfl`, but has a few optimizations. "},"Lean.Parser.Tactic.refine'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L101-L102","name":"Lean.Parser.Tactic.refine'","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.refine'","doc":"`refine' e` behaves like `refine e`, except that unsolved placeholders (`_`) and implicit parameters are also converted into new goals. "},"Lean.Parser.Tactic.refine":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L96-L100","name":"Lean.Parser.Tactic.refine","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.refine","doc":"`refine e` behaves like `exact e`, except that named (`?x`) or unnamed (`?_`) holes in `e` that are not solved\nby unification with the main goal's target type are converted into new goals, using the hole's name, if any, as the goal case name.\n"},"Lean.Parser.Tactic.quotSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L349-L349","name":"Lean.Parser.Tactic.quotSeq","docLink":"./Lean/Parser/Term.html#Lean.Parser.Tactic.quotSeq","doc":""},"Lean.Parser.Tactic.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L348-L348","name":"Lean.Parser.Tactic.quot","docLink":"./Lean/Parser/Term.html#Lean.Parser.Tactic.quot","doc":""},"Lean.Parser.Tactic.paren":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L139-L142","name":"Lean.Parser.Tactic.paren","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.paren","doc":"`(tacs)` executes a list of tactics in sequence, without requiring that\nthe goal be closed at the end like `· tacs`. Like `by` itself, the tactics\ncan be either separated by newlines or `;`. "},"Lean.Parser.Tactic.open":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L191-L192","name":"Lean.Parser.Tactic.open","docLink":"./Lean/Parser/Command.html#Lean.Parser.Tactic.open","doc":"`open Foo in tacs` (the tactic) acts like `open Foo` at command level,\nbut it opens a namespace only within the tactics `tacs`. "},"Lean.Parser.Tactic.nestedTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Tactic.lean#L23-L23","name":"Lean.Parser.Tactic.nestedTactic","docLink":"./Lean/Parser/Tactic.html#Lean.Parser.Tactic.nestedTactic","doc":""},"Lean.Parser.Tactic.nativeDecide":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Tactic.lean#L85-L85","name":"Lean.Parser.Tactic.nativeDecide","docLink":"./Lean/Parser/Tactic.html#Lean.Parser.Tactic.nativeDecide","doc":"`native_decide` will attempt to prove a goal of type `p` by synthesizing an instance\nof `Decidable p` and then evaluating it to `isTrue ..`. Unlike `decide`, this\nuses `#eval` to evaluate the decidability instance.\n\nThis should be used with care because it adds the entire lean compiler to the trusted\npart, and the axiom `ofReduceBool` will show up in `#print axioms` for theorems using\nthis method or anything that transitively depends on them. Nevertheless, because it is\ncompiled, this can be significantly more efficient than using `decide`, and for very\nlarge computations this is one way to run external programs and trust the result.\n```\nexample : (List.range 1000).length = 1000 := by native_decide\n```\n"},"Lean.Parser.Tactic.matchRhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Tactic.lean#L25-L25","name":"Lean.Parser.Tactic.matchRhs","docLink":"./Lean/Parser/Tactic.html#Lean.Parser.Tactic.matchRhs","doc":""},"Lean.Parser.Tactic.matchAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Tactic.lean#L26-L26","name":"Lean.Parser.Tactic.matchAlts","docLink":"./Lean/Parser/Tactic.html#Lean.Parser.Tactic.matchAlts","doc":""},"Lean.Parser.Tactic.match":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Tactic.lean#L41-L41","name":"Lean.Parser.Tactic.match","docLink":"./Lean/Parser/Tactic.html#Lean.Parser.Tactic.match","doc":"`match` performs case analysis on one or more expressions.\nSee [Induction and Recursion][tpil4].\nThe syntax for the `match` tactic is the same as term-mode `match`, except that\nthe match arms are tactics instead of expressions.\n```\nexample (n : Nat) : n = n := by\n  match n with\n  | 0 => rfl\n  | i+1 => simp\n```\n\n[tpil4]: https://leanprover.github.io/theorem_proving_in_lean4/induction_and_recursion.html\n"},"Lean.Parser.Tactic.locationWildcard":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L206-L206","name":"Lean.Parser.Tactic.locationWildcard","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.locationWildcard","doc":""},"Lean.Parser.Tactic.locationHyp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L207-L207","name":"Lean.Parser.Tactic.locationHyp","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.locationHyp","doc":""},"Lean.Parser.Tactic.location":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L208-L208","name":"Lean.Parser.Tactic.location","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.location","doc":""},"Lean.Parser.Tactic.letrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L342-L344","name":"Lean.Parser.Tactic.letrec","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.letrec","doc":"`let rec f : t := e` adds a recursive definition `f` to the current goal.\nThe syntax is the same as term-mode `let rec`. "},"Lean.Parser.Tactic.intros":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L36-L37","name":"Lean.Parser.Tactic.intros","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.intros","doc":"`intros x...` behaves like `intro x...`, but then keeps introducing (anonymous) hypotheses until goal is not of a function type. "},"Lean.Parser.Tactic.introMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Tactic.lean#L60-L60","name":"Lean.Parser.Tactic.introMatch","docLink":"./Lean/Parser/Tactic.html#Lean.Parser.Tactic.introMatch","doc":"The tactic\n```\nintro\n| pat1 => tac1\n| pat2 => tac2\n```\nis the same as:\n```\nintro x\nmatch x with\n| pat1 => tac1\n| pat2 => tac2\n```\nThat is, `intro` can be followed by match arms and it introduces the values while\ndoing a pattern match. This is equivalent to `fun` with match arms in term mode.\n"},"Lean.Parser.Tactic.intro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L17-L35","name":"Lean.Parser.Tactic.intro","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.intro","doc":"Introduce one or more hypotheses, optionally naming and/or pattern-matching them.\nFor each hypothesis to be introduced, the remaining main goal's target type must be a `let` or function type.\n* `intro` by itself introduces one anonymous hypothesis, which can be accessed by e.g. `assumption`.\n* `intro x y` introduces two hypotheses and names them. Individual hypotheses can be anonymized via `_`,\n  or matched against a pattern:\n  ```lean\n  -- ... ⊢ α × β → ...\n  intro (a, b)\n  -- ..., a : α, b : β ⊢ ...\n  ```\n* Alternatively, `intro` can be combined with pattern matching much like `fun`:\n  ```lean\n  intro\n  | n + 1, 0 => tac\n  | ...\n  ```\n"},"Lean.Parser.Tactic.injections":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L258-L262","name":"Lean.Parser.Tactic.injections","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.injections","doc":"`injections` applies `injection` to all hypotheses recursively\n(since `injection` can produce new hypotheses). Useful for destructing nested\nconstructor equalities like `(a::b::c) = (d::e::f)`. "},"Lean.Parser.Tactic.injection":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L247-L256","name":"Lean.Parser.Tactic.injection","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.injection","doc":"The `injection` tactic is based on the fact that constructors of inductive data types are injections.\nThat means that if `c` is a constructor of an inductive datatype, and if `(c t₁)` and `(c t₂)` are two terms that are equal then  `t₁` and `t₂` are equal too.\nIf `q` is a proof of a statement of conclusion `t₁ = t₂`, then injection applies injectivity to derive the equality of all arguments of `t₁` and `t₂`\nplaced in the same positions. For example, from `(a::b) = (c::d)` we derive `a=c` and `b=d`. To use this tactic `t₁` and `t₂`\nshould be constructor applications of the same constructor.\nGiven `h : a::b = c::d`, the tactic `injection h` adds two new hypothesis with types `a = c` and `b = d` to the main goal.\nThe tactic `injection h with h₁ h₂` uses the names `h₁` and `h₂` to name the new hypotheses.\n"},"Lean.Parser.Tactic.inductionAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L359-L359","name":"Lean.Parser.Tactic.inductionAlts","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.inductionAlts","doc":""},"Lean.Parser.Tactic.inductionAltLHS":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L357-L357","name":"Lean.Parser.Tactic.inductionAltLHS","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.inductionAltLHS","doc":""},"Lean.Parser.Tactic.inductionAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L358-L358","name":"Lean.Parser.Tactic.inductionAlt","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.inductionAlt","doc":""},"Lean.Parser.Tactic.induction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L360-L374","name":"Lean.Parser.Tactic.induction","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.induction","doc":"Assuming `x` is a variable in the local context with an inductive type, `induction x` applies induction on `x` to the main goal,\nproducing one goal for each constructor of the inductive type, in which the target is replaced by a general instance of that constructor\nand an inductive hypothesis is added for each recursive argument to the constructor.\nIf the type of an element in the local context depends on `x`, that element is reverted and reintroduced afterward,\nso that the inductive hypothesis incorporates that hypothesis as well.\nFor example, given `n : Nat` and a goal with a hypothesis `h : P n` and target `Q n`, `induction n` produces one goal\nwith hypothesis `h : P 0` and target `Q 0`, and one goal with hypotheses `h : P (Nat.succ a)` and `ih₁ : P a → Q a` and target `Q (Nat.succ a)`.\nHere the names `a` and `ih₁` are chosen automatically and are not accessible. You can use `with` to provide the variables names for each constructor.\n- `induction e`, where `e` is an expression instead of a variable, generalizes `e` in the goal, and then performs induction on the resulting variable.\n- `induction e using r` allows the user to specify the principle of induction that should be used. Here `r` should be a theorem whose result type must be of the form `C t`, where `C` is a bound variable and `t` is a (possibly empty) sequence of bound variables\n- `induction e generalizing z₁ ... zₙ`, where `z₁ ... zₙ` are variables in the local context, generalizes over `z₁ ... zₙ` before applying the induction but then introduces them in each goal. In other words, the net effect is that each inductive hypothesis is generalized.\n- Given `x : Nat`, `induction x with | zero => tac₁ | succ x' ih => tac₂` uses tactic `tac₁` for the `zero` case, and `tac₂` for the `succ` case.\n"},"Lean.Parser.Tactic.generalizeArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L376-L376","name":"Lean.Parser.Tactic.generalizeArg","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.generalizeArg","doc":""},"Lean.Parser.Tactic.generalize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L377-L380","name":"Lean.Parser.Tactic.generalize","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.generalize","doc":"`generalize ([h :] e = x),+` replaces all occurrences `e`s in the main goal with a fresh hypothesis `x`s.\nIf `h` is given, `h : e = x` is introduced as well. "},"Lean.Parser.Tactic.focus":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L125-L128","name":"Lean.Parser.Tactic.focus","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.focus","doc":"`focus tac` focuses on the main goal, suppressing all other goals, and runs `tac` on it.\nUsually `· tac`, which enforces that the goal is closed by `tac`, should be preferred. "},"Lean.Parser.Tactic.first":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L152-L153","name":"Lean.Parser.Tactic.first","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.first","doc":"`first | tac | ...` runs each `tac` until one succeeds, or else fails. "},"Lean.Parser.Tactic.failIfSuccess":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L137-L138","name":"Lean.Parser.Tactic.failIfSuccess","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.failIfSuccess","doc":"`fail_if_success t` fails if the tactic `t` succeeds. "},"Lean.Parser.Tactic.fail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L465-L466","name":"Lean.Parser.Tactic.fail","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.fail","doc":"`fail msg` is a tactic that always fail and produces an error using the given message. "},"Lean.Parser.Tactic.exact":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L92-L95","name":"Lean.Parser.Tactic.exact","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.exact","doc":"`exact e` closes the main goal if its target type matches that of `e`.\n"},"Lean.Parser.Tactic.dsimpKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1262-L1262","name":"Lean.Parser.Tactic.dsimpKind","docLink":"./Init/Meta.html#Lean.Parser.Tactic.dsimpKind","doc":""},"Lean.Parser.Tactic.dsimpAutoUnfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1307-L1310","name":"Lean.Parser.Tactic.dsimpAutoUnfold","docLink":"./Init/Meta.html#Lean.Parser.Tactic.dsimpAutoUnfold","doc":"`dsimp!` is shorthand for `dsimp` with `autoUnfold := true`.\nThis will rewrite with all equation lemmas, which can be used to\npartially evaluate many definitions. "},"Lean.Parser.Tactic.dsimp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L290-L294","name":"Lean.Parser.Tactic.dsimp","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.dsimp","doc":"The `dsimp` tactic is the definitional simplifier. It is similar to `simp` but only applies theorems that hold by\nreflexivity. Thus, the result is guaranteed to be definitionally equal to the input.\n"},"Lean.Parser.Tactic.done":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L131-L132","name":"Lean.Parser.Tactic.done","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.done","doc":"`done` succeeds iff there are no remaining goals. "},"Lean.Parser.Tactic.discharger":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L264-L264","name":"Lean.Parser.Tactic.discharger","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.discharger","doc":""},"Lean.Parser.Tactic.delta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L296-L299","name":"Lean.Parser.Tactic.delta","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.delta","doc":"`delta id` delta-expands the definition `id`.\nThis is a low-level tactic, it will expose how recursive definitions have been compiled by Lean. "},"Lean.Parser.Tactic.declareSimpLikeTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1264-L1264","name":"Lean.Parser.Tactic.declareSimpLikeTactic","docLink":"./Init/Meta.html#Lean.Parser.Tactic.declareSimpLikeTactic","doc":""},"Lean.Parser.Tactic.decide":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Tactic.lean#L70-L70","name":"Lean.Parser.Tactic.decide","docLink":"./Lean/Parser/Tactic.html#Lean.Parser.Tactic.decide","doc":"`decide` will attempt to prove a goal of type `p` by synthesizing an instance\nof `Decidable p` and then evaluating it to `isTrue ..`. Because this uses kernel\ncomputation to evaluate the term, it may not work in the presence of definitions\nby well founded recursion, since this requires reducing proofs.\n```\nexample : 2 + 2 ≠ 5 := by decide\n```\n"},"Lean.Parser.Tactic.dbgTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L422-L431","name":"Lean.Parser.Tactic.dbgTrace","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.dbgTrace","doc":"`dbg_trace \"foo\"` prints `foo` when elaborated.\nUseful for debugging tactic control flow:\n```\nexample : False ∨ True := by\n  first\n  | apply Or.inl; trivial; dbg_trace \"left\"\n  | apply Or.inr; trivial; dbg_trace \"right\"\n```\n"},"Lean.Parser.Tactic.contradiction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L59-L82","name":"Lean.Parser.Tactic.contradiction","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.contradiction","doc":"`contradiction` closes the main goal if its hypotheses are \"trivially contradictory\".\n- Inductive type/family with no applicable constructors\n```lean\nexample (h : False) : p := by contradiction\n```\n- Injectivity of constructors\n```lean\nexample (h : none = some true) : p := by contradiction  --\n```\n- Decidable false proposition\n```lean\nexample (h : 2 + 2 = 3) : p := by contradiction\n```\n- Contradictory hypotheses\n```lean\nexample (h : p) (h' : ¬ p) : q := by contradiction\n```\n- Other simple contradictions such as\n```lean\nexample (x : Nat) (h : x ≠ x) : p := by contradiction\n```\n"},"Lean.Parser.Tactic.constructor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L103-L104","name":"Lean.Parser.Tactic.constructor","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.constructor","doc":"If the main goal's target type is an inductive type, `constructor` solves it with the first matching constructor, or else fails. "},"Lean.Parser.Tactic.congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L496-L503","name":"Lean.Parser.Tactic.congr","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.congr","doc":"Apply congruence (recursively) to goals of the form `⊢ f as = f bs` and `⊢ HEq (f as) (f bs)`.\nThe optional parameter is the depth of the recursive applications. This is useful when `congr` is too aggressive\nin breaking down the goal.\nFor example, given `⊢ f (g (x + y)) = f (g (y + x))`, `congr` produces the goals `⊢ x = y` and `⊢ y = x`,\nwhile `congr 2` produces the intended `⊢ x + y = y + x`.\n"},"Lean.Parser.Tactic.config":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L203-L204","name":"Lean.Parser.Tactic.config","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.config","doc":"Optional configuration option for tactics "},"Lean.Parser.Tactic.clear":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L44-L45","name":"Lean.Parser.Tactic.clear","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.clear","doc":"`clear x...` removes the given hypotheses, or fails if there are remaining references to a hypothesis. "},"Lean.Parser.Tactic.checkpoint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L468-L477","name":"Lean.Parser.Tactic.checkpoint","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.checkpoint","doc":"`checkpoint tac` acts the same as `tac`, but it caches the input and output of `tac`,\nand if the file is re-elaborated and the input matches, the tactic is not re-run and\nits effects are reapplied to the state. This is useful for improving responsiveness\nwhen working on a long tactic proof, by wrapping expensive tactics with `checkpoint`.\n\nSee the `save` tactic, which may be more convenient to use.\n\n(TODO: do this automatically and transparently so that users don't have to use\nthis combinator explicitly.) "},"Lean.Parser.Tactic.changeWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L218-L223","name":"Lean.Parser.Tactic.changeWith","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.changeWith","doc":"* `change a with b` will change occurrences of `a` to `b` in the goal,\n  assuming `a` and `b` are are definitionally equal.\n* `change a with b at h` similarly changes `a` to `b` in the type of hypothesis `h`.\n"},"Lean.Parser.Tactic.change":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L210-L216","name":"Lean.Parser.Tactic.change","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.change","doc":"* `change tgt'` will change the goal from `tgt` to `tgt'`,\n  assuming these are definitionally equal.\n* `change t' at h` will change hypothesis `h : t` to have type `t'`, assuming\n  assuming `t` and `t'` are definitionally equal.\n"},"Lean.Parser.Tactic.casesTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L382-L382","name":"Lean.Parser.Tactic.casesTarget","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.casesTarget","doc":""},"Lean.Parser.Tactic.cases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L383-L394","name":"Lean.Parser.Tactic.cases","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.cases","doc":"Assuming `x` is a variable in the local context with an inductive type, `cases x` splits the main goal,\nproducing one goal for each constructor of the inductive type, in which the target is replaced by a general instance of that constructor.\nIf the type of an element in the local context depends on `x`, that element is reverted and reintroduced afterward,\nso that the case split affects that hypothesis as well. `cases` detects unreachable cases and closes them automatically.\nFor example, given `n : Nat` and a goal with a hypothesis `h : P n` and target `Q n`, `cases n` produces one goal with hypothesis `h : P 0` and target `Q 0`,\nand one goal with hypothesis `h : P (Nat.succ a)` and target `Q (Nat.succ a)`. Here the name `a` is chosen automatically and are not accessible. You can use `with` to provide the variables names for each constructor.\n- `cases e`, where `e` is an expression instead of a variable, generalizes `e` in the goal, and then cases on the resulting variable.\n- Given `as : List α`, `cases as with | nil => tac₁ | cons a as' => tac₂`, uses tactic `tac₁` for the `nil` case, and `tac₂` for the `cons` case, and `a` and `as'` are used as names for the new variables introduced.\n- `cases h : e`, where `e` is a variable or an expression, performs cases on `e` as above, but also adds a hypothesis `h : e = ...` to each hypothesis, where `...` is the constructor instance for that particular case.\n"},"Lean.Parser.Tactic.case'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L109-L114","name":"Lean.Parser.Tactic.case'","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.case'","doc":"`case'` is similar to the `case tag => tac` tactic, but does not ensure the goal has been solved after applying `tac`, nor\nadmits the goal if `tac` failed. Recall that `case` closes the goal using `sorry` when `tac` fails, and\nthe tactic execution is not interrupted.\n"},"Lean.Parser.Tactic.case":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L105-L108","name":"Lean.Parser.Tactic.case","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.case","doc":"`case tag => tac` focuses on the goal with case name `tag` and solves it using `tac`, or else fails.\n`case tag x₁ ... xₙ => tac` additionally renames the `n` most recent hypotheses with inaccessible names to the given names. "},"Lean.Parser.Tactic.assumption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L55-L58","name":"Lean.Parser.Tactic.assumption","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.assumption","doc":"`assumption` tries to solve the main goal using a hypothesis of compatible type, or else fails.\nNote also the `‹t›` term notation, which is a shorthand for `show t by assumption`. "},"Lean.Parser.Tactic.apply":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L83-L91","name":"Lean.Parser.Tactic.apply","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.apply","doc":"`apply e` tries to match the current goal against the conclusion of `e`'s type.\nIf it succeeds, then the tactic returns as many subgoals as the number of premises that\nhave not been fixed by type inference or type class resolution.\nNon-dependent premises are added before dependent ones.\n\nThe `apply` tactic uses higher-order pattern matching, type class resolution, and first-order unification with dependent types.\n"},"Lean.Parser.Tactic.anyGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L123-L124","name":"Lean.Parser.Tactic.anyGoals","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.anyGoals","doc":"`any_goals tac` applies the tactic `tac` to every goal, and succeeds if at least one application succeeds.  "},"Lean.Parser.Tactic.allGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L121-L122","name":"Lean.Parser.Tactic.allGoals","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.allGoals","doc":"`all_goals tac` runs `tac` on each goal, concatenating the resulting goals, if any. "},"Lean.Parser.Tactic.acRfl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L186-L194","name":"Lean.Parser.Tactic.acRfl","docLink":"./Init/Tactics.html#Lean.Parser.Tactic.acRfl","doc":"`ac_rfl` proves equalities up to application of an associative and commutative operator.\n```\ninstance : IsAssociative (α := Nat) (.+.) := ⟨Nat.add_assoc⟩\ninstance : IsCommutative (α := Nat) (.+.) := ⟨Nat.add_comm⟩\n\nexample (a b c d : Nat) : a + b + c + d = d + (b + c) + a := by ac_rfl\n```\n"},"Lean.Parser.Tactic.Conv.«conv·._»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L131-L132","name":"Lean.Parser.Tactic.Conv.«conv·._»","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.«conv·._»","doc":"`· conv` focuses on the main conv goal and tries to solve it using `s` "},"Lean.Parser.Tactic.Conv.«convEnter[__]»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L154-L161","name":"Lean.Parser.Tactic.Conv.«convEnter[__]»","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.«convEnter[__]»","doc":"`enter [arg, ...]` is a compact way to describe a path to a subterm.\nIt is a shorthand for other conv tactics as follows:\n* `enter [i]` is equivalent to `arg i`.\n* `enter [@i]` is equivalent to `arg @i`.\n* `enter [x]` (where `x` is an identifier) is equivalent to `ext x`.\nFor example, given the target `f (g a (fun x => x b))`, `enter [1, 2, x, 1]`\nwill traverse to the subterm `b`. "},"Lean.Parser.Tactic.Conv.zeta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L55-L56","name":"Lean.Parser.Tactic.Conv.zeta","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.zeta","doc":"Expand let-declarations and let-variables. "},"Lean.Parser.Tactic.Conv.whnf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L50-L53","name":"Lean.Parser.Tactic.Conv.whnf","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.whnf","doc":"Reduces the target to Weak Head Normal Form. This reduces definitions\nin \"head position\" until a constructor is exposed. For example, `List.map f [a, b, c]`\nweak head normalizes to `f a :: List.map f [b, c]`. "},"Lean.Parser.Tactic.Conv.unfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L87-L91","name":"Lean.Parser.Tactic.Conv.unfold","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.unfold","doc":"`unfold foo` unfolds all occurrences of `foo` in the target.\nLike the `unfold` tactic, this uses equational lemmas for the chosen definition\nto rewrite the target. For recursive definitions,\nonly one layer of unfolding is performed. "},"Lean.Parser.Tactic.Conv.skip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L39-L40","name":"Lean.Parser.Tactic.Conv.skip","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.skip","doc":"`skip` does nothing. "},"Lean.Parser.Tactic.Conv.simpMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L103-L110","name":"Lean.Parser.Tactic.Conv.simpMatch","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.simpMatch","doc":"`simp_match` simplifies match expressions. For example,\n```\nmatch [a, b] with\n| [] => 0\n| hd :: tl => hd\n```\nsimplifies to `a`. "},"Lean.Parser.Tactic.Conv.simp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L99-L101","name":"Lean.Parser.Tactic.Conv.simp","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.simp","doc":"`simp [thm]` performs simplification using `thm` and marked `@[simp]` lemmas.\nSee the `simp` tactic for more information. "},"Lean.Parser.Tactic.Conv.rhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L46-L48","name":"Lean.Parser.Tactic.Conv.rhs","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.rhs","doc":"Traverses into the right subterm of a binary operator.\n(In general, for an `n`-ary operator, it traverses into the last argument.) "},"Lean.Parser.Tactic.Conv.rewrite":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L96-L97","name":"Lean.Parser.Tactic.Conv.rewrite","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.rewrite","doc":"`rw [thm]` rewrites the target using `thm`. See the `rw` tactic for more information. "},"Lean.Parser.Tactic.Conv.reduce":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L58-L59","name":"Lean.Parser.Tactic.Conv.reduce","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.reduce","doc":"Put term in normal form, this tactic is ment for debugging purposes only "},"Lean.Parser.Tactic.Conv.pattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L93-L94","name":"Lean.Parser.Tactic.Conv.pattern","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.pattern","doc":"`pattern pat` traverses to the first subterm of the target that matches `pat`. "},"Lean.Parser.Tactic.Conv.paren":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L123-L125","name":"Lean.Parser.Tactic.Conv.paren","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.paren","doc":"`(convs)` runs the `convs` in sequence on the current list of targets.\nThis is pure grouping with no added effects. "},"Lean.Parser.Tactic.Conv.nestedTacticCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L113-L114","name":"Lean.Parser.Tactic.Conv.nestedTacticCore","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.nestedTacticCore","doc":"Execute the given tactic block without converting `conv` goal into a regular goal "},"Lean.Parser.Tactic.Conv.nestedTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L116-L117","name":"Lean.Parser.Tactic.Conv.nestedTactic","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.nestedTactic","doc":"Focus, convert the `conv` goal `⊢ lhs` into a regular goal `⊢ lhs = rhs`, and then execute the given tactic block. "},"Lean.Parser.Tactic.Conv.nestedConv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L119-L121","name":"Lean.Parser.Tactic.Conv.nestedConv","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.nestedConv","doc":"`{ convs }` runs the list of `convs` on the current target, and any subgoals that\nremain are trivially closed by `skip`. "},"Lean.Parser.Tactic.Conv.lhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L42-L44","name":"Lean.Parser.Tactic.Conv.lhs","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.lhs","doc":"Traverses into the left subterm of a binary operator.\n(In general, for an `n`-ary operator, it traverses into the second to last argument.) "},"Lean.Parser.Tactic.Conv.first":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L184-L185","name":"Lean.Parser.Tactic.Conv.first","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.first","doc":"`first | conv | ...` runs each `conv` until one succeeds, or else fails. "},"Lean.Parser.Tactic.Conv.ext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L73-L75","name":"Lean.Parser.Tactic.Conv.ext","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.ext","doc":"`ext x` traverses into a binder (a `fun x => e` or `∀ x, e` expression)\nto target `e`, introducing name `x` in the process. "},"Lean.Parser.Tactic.Conv.enterArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L152-L152","name":"Lean.Parser.Tactic.Conv.enterArg","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.enterArg","doc":""},"Lean.Parser.Tactic.Conv.delta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L81-L85","name":"Lean.Parser.Tactic.Conv.delta","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.delta","doc":"`delta foo` unfolds all occurrences of `foo` in the target.\nLike the `delta` tactic, this ignores any definitional equations and uses\nprimitive delta-reduction instead, which may result in leaking implementation details.\nUsers should prefer `unfold` for unfolding definitions. "},"Lean.Parser.Tactic.Conv.convTrace_state":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L175-L176","name":"Lean.Parser.Tactic.Conv.convTrace_state","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convTrace_state","doc":"`trace_state` prints the current goal state. "},"Lean.Parser.Tactic.Conv.convSeqBracketed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L21-L21","name":"Lean.Parser.Tactic.Conv.convSeqBracketed","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convSeqBracketed","doc":""},"Lean.Parser.Tactic.Conv.convSeq1Indented":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L20-L20","name":"Lean.Parser.Tactic.Conv.convSeq1Indented","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convSeq1Indented","doc":""},"Lean.Parser.Tactic.Conv.convSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L24-L24","name":"Lean.Parser.Tactic.Conv.convSeq","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convSeq","doc":""},"Lean.Parser.Tactic.Conv.convRw__":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L134-L136","name":"Lean.Parser.Tactic.Conv.convRw__","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convRw__","doc":"`rw [rules]` applies the given list of rewrite rules to the target.\nSee the `rw` tactic for more information. "},"Lean.Parser.Tactic.Conv.convRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L147-L148","name":"Lean.Parser.Tactic.Conv.convRight","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convRight","doc":"`right` traverses into the right argument. Synonym for `rhs`. "},"Lean.Parser.Tactic.Conv.convRfl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L168-L170","name":"Lean.Parser.Tactic.Conv.convRfl","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convRfl","doc":"`rfl` closes one conv goal \"trivially\", by using reflexivity\n(that is, no rewriting). "},"Lean.Parser.Tactic.Conv.convRepeat_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L187-L188","name":"Lean.Parser.Tactic.Conv.convRepeat_","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convRepeat_","doc":"`repeat convs` runs the sequence `convs` repeatedly until it fails to apply. "},"Lean.Parser.Tactic.Conv.convLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L145-L146","name":"Lean.Parser.Tactic.Conv.convLeft","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convLeft","doc":"`left` traverses into the left argument. Synonym for `lhs`. "},"Lean.Parser.Tactic.Conv.convIntro__":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L149-L150","name":"Lean.Parser.Tactic.Conv.convIntro__","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convIntro__","doc":"`intro` traverses into binders. Synonym for `ext`. "},"Lean.Parser.Tactic.Conv.convErw_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L138-L141","name":"Lean.Parser.Tactic.Conv.convErw_","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convErw_","doc":"`erw [rules]` is a shorthand for `rw (config := { transparency := .default }) [rules]`.\nThis does rewriting up to unfolding of regular definitions (by comparison to regular `rw`\nwhich only unfolds `@[reducible]` definitions). "},"Lean.Parser.Tactic.Conv.convDone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L172-L173","name":"Lean.Parser.Tactic.Conv.convDone","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convDone","doc":"`done` succeeds iff there are no goals remaining. "},"Lean.Parser.Tactic.Conv.convConvSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L127-L129","name":"Lean.Parser.Tactic.Conv.convConvSeq","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convConvSeq","doc":"`conv => cs` runs `cs` in sequence on the target `t`,\nresulting in `t'`, which becomes the new target subgoal. "},"Lean.Parser.Tactic.Conv.convArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L143-L144","name":"Lean.Parser.Tactic.Conv.convArgs","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convArgs","doc":"`args` traverses into all arguments. Synonym for `congr`. "},"Lean.Parser.Tactic.Conv.convApply_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L178-L182","name":"Lean.Parser.Tactic.Conv.convApply_","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.convApply_","doc":"The `apply thm` conv tactic is the same as `apply thm` the tactic.\nThere are no restrictions on `thm`, but strange results may occur if `thm`\ncannot be reasonably interpreted as proving one equality from a list of others. "},"Lean.Parser.Tactic.Conv.conv.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L13-L18","name":"Lean.Parser.Tactic.Conv.conv.quot","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.conv.quot","doc":""},"Lean.Parser.Tactic.Conv.conv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L26-L37","name":"Lean.Parser.Tactic.Conv.conv","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.conv","doc":"`conv => ...` allows the user to perform targeted rewriting on a goal or hypothesis,\nby focusing on particular subexpressions.\n\nSee <https://leanprover.github.io/theorem_proving_in_lean4/conv.html> for more details.\n\nBasic forms:\n* `conv => cs` will rewrite the goal with conv tactics `cs`.\n* `conv at h => cs` will rewrite hypothesis `h`.\n* `conv in pat => cs` will rewrite the first subexpression matching `pat`.\n"},"Lean.Parser.Tactic.Conv.congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L61-L64","name":"Lean.Parser.Tactic.Conv.congr","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.congr","doc":"Performs one step of \"congruence\", which takes a term and produces\nsubgoals for all the function arguments. For example, if the target is `f x y` then\n`congr` produces two subgoals, one for `x` and one for `y`. "},"Lean.Parser.Tactic.Conv.change":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L77-L79","name":"Lean.Parser.Tactic.Conv.change","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.change","doc":"`change t'` replaces the target `t` with `t'`,\nassuming `t` and `t'` are definitionally equal. "},"Lean.Parser.Tactic.Conv.arg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L66-L71","name":"Lean.Parser.Tactic.Conv.arg","docLink":"./Init/Conv.html#Lean.Parser.Tactic.Conv.arg","doc":"* `arg i` traverses into the `i`'th argument of the target. For example if the\n  target is `f a b c d` then `arg 1` traverses to `a` and `arg 3` traverses to `c`.\n* `arg @i` is the same as `arg i` but it counts all arguments instead of just the\n  explicit arguments. "},"Lean.Parser.SyntaxNodeKindSet.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L105-L106","name":"Lean.Parser.SyntaxNodeKindSet.insert","docLink":"./Lean/Parser/Basic.html#Lean.Parser.SyntaxNodeKindSet.insert","doc":""},"Lean.Parser.SyntaxNodeKindSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L103-L103","name":"Lean.Parser.SyntaxNodeKindSet","docLink":"./Lean/Parser/Basic.html#Lean.Parser.SyntaxNodeKindSet","doc":""},"Lean.Parser.Syntax.unary":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L34-L34","name":"Lean.Parser.Syntax.unary","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Syntax.unary","doc":""},"Lean.Parser.Syntax.subPrio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L87-L87","name":"Lean.Parser.Syntax.subPrio","docLink":"./Init/Notation.html#Lean.Parser.Syntax.subPrio","doc":""},"Lean.Parser.Syntax.subPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L84-L84","name":"Lean.Parser.Syntax.subPrec","docLink":"./Init/Notation.html#Lean.Parser.Syntax.subPrec","doc":""},"Lean.Parser.Syntax.sepBy1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L37-L37","name":"Lean.Parser.Syntax.sepBy1","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Syntax.sepBy1","doc":""},"Lean.Parser.Syntax.sepBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L36-L36","name":"Lean.Parser.Syntax.sepBy","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Syntax.sepBy","doc":""},"Lean.Parser.Syntax.paren":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L32-L32","name":"Lean.Parser.Syntax.paren","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Syntax.paren","doc":""},"Lean.Parser.Syntax.numPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L30-L30","name":"Lean.Parser.Syntax.numPrec","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Syntax.numPrec","doc":""},"Lean.Parser.Syntax.nonReserved":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L39-L39","name":"Lean.Parser.Syntax.nonReserved","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Syntax.nonReserved","doc":""},"Lean.Parser.Syntax.cat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L33-L33","name":"Lean.Parser.Syntax.cat","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Syntax.cat","doc":""},"Lean.Parser.Syntax.binary":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L35-L35","name":"Lean.Parser.Syntax.binary","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Syntax.binary","doc":""},"Lean.Parser.Syntax.atom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L38-L38","name":"Lean.Parser.Syntax.atom","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Syntax.atom","doc":""},"Lean.Parser.Syntax.addPrio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L86-L86","name":"Lean.Parser.Syntax.addPrio","docLink":"./Init/Notation.html#Lean.Parser.Syntax.addPrio","doc":""},"Lean.Parser.Syntax.addPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L83-L83","name":"Lean.Parser.Syntax.addPrec","docLink":"./Init/Notation.html#Lean.Parser.Syntax.addPrec","doc":""},"Lean.Parser.Priority.numPrio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Attr.lean#L29-L29","name":"Lean.Parser.Priority.numPrio","docLink":"./Lean/Parser/Attr.html#Lean.Parser.Priority.numPrio","doc":""},"Lean.Parser.PrattParsingTables":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1563-L1567","name":"Lean.Parser.PrattParsingTables","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables","doc":""},"Lean.Parser.ParserState.toErrorMsg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L204-L209","name":"Lean.Parser.ParserState.toErrorMsg","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.toErrorMsg","doc":""},"Lean.Parser.ParserState.stackSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L180-L181","name":"Lean.Parser.ParserState.stackSize","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.stackSize","doc":""},"Lean.Parser.ParserState.shrinkStack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L198-L199","name":"Lean.Parser.ParserState.shrinkStack","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.shrinkStack","doc":""},"Lean.Parser.ParserState.setPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L186-L187","name":"Lean.Parser.ParserState.setPos","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.setPos","doc":""},"Lean.Parser.ParserState.setError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L238-L240","name":"Lean.Parser.ParserState.setError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.setError","doc":""},"Lean.Parser.ParserState.setCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L189-L190","name":"Lean.Parser.ParserState.setCache","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.setCache","doc":""},"Lean.Parser.ParserState.restore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L183-L184","name":"Lean.Parser.ParserState.restore","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.restore","doc":""},"Lean.Parser.ParserState.replaceLongest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1378-L1379","name":"Lean.Parser.ParserState.replaceLongest","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.replaceLongest","doc":""},"Lean.Parser.ParserState.pushSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L192-L193","name":"Lean.Parser.ParserState.pushSyntax","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.pushSyntax","doc":""},"Lean.Parser.ParserState.popSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L195-L196","name":"Lean.Parser.ParserState.popSyntax","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.popSyntax","doc":""},"Lean.Parser.ParserState.next":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L201-L202","name":"Lean.Parser.ParserState.next","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.next","doc":""},"Lean.Parser.ParserState.mkUnexpectedErrorAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L263-L265","name":"Lean.Parser.ParserState.mkUnexpectedErrorAt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkUnexpectedErrorAt","doc":""},"Lean.Parser.ParserState.mkUnexpectedError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L246-L248","name":"Lean.Parser.ParserState.mkUnexpectedError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkUnexpectedError","doc":""},"Lean.Parser.ParserState.mkTrailingNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L230-L236","name":"Lean.Parser.ParserState.mkTrailingNode","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkTrailingNode","doc":""},"Lean.Parser.ParserState.mkNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L211-L228","name":"Lean.Parser.ParserState.mkNode","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkNode","doc":""},"Lean.Parser.ParserState.mkErrorsAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L258-L261","name":"Lean.Parser.ParserState.mkErrorsAt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkErrorsAt","doc":""},"Lean.Parser.ParserState.mkErrorAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L253-L256","name":"Lean.Parser.ParserState.mkErrorAt","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkErrorAt","doc":""},"Lean.Parser.ParserState.mkError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L242-L244","name":"Lean.Parser.ParserState.mkError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkError","doc":""},"Lean.Parser.ParserState.mkEOIError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L250-L251","name":"Lean.Parser.ParserState.mkEOIError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mkEOIError","doc":""},"Lean.Parser.ParserState.mergeErrors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1367-L1372","name":"Lean.Parser.ParserState.mergeErrors","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mergeErrors","doc":""},"Lean.Parser.ParserState.keepTop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1355-L1357","name":"Lean.Parser.ParserState.keepTop","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepTop","doc":""},"Lean.Parser.ParserState.keepPrevError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1363-L1365","name":"Lean.Parser.ParserState.keepPrevError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepPrevError","doc":""},"Lean.Parser.ParserState.keepNewError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1359-L1361","name":"Lean.Parser.ParserState.keepNewError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepNewError","doc":""},"Lean.Parser.ParserState.keepLatest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1374-L1376","name":"Lean.Parser.ParserState.keepLatest","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepLatest","doc":""},"Lean.Parser.ParserState.hasError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L177-L178","name":"Lean.Parser.ParserState.hasError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.hasError","doc":""},"Lean.Parser.ParserState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L163-L173","name":"Lean.Parser.ParserState","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState","doc":""},"Lean.Parser.ParserModuleContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L118-L123","name":"Lean.Parser.ParserModuleContext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserModuleContext","doc":"Input context derived from elaboration of previous commands. "},"Lean.Parser.ParserInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L312-L316","name":"Lean.Parser.ParserInfo","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserInfo","doc":""},"Lean.Parser.ParserFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L269-L269","name":"Lean.Parser.ParserFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserFn","doc":""},"Lean.Parser.ParserExtension.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L80-L80","name":"Lean.Parser.ParserExtension.instInhabitedState","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedState","doc":""},"Lean.Parser.ParserExtension.instInhabitedOLeanEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L61-L61","name":"Lean.Parser.ParserExtension.instInhabitedOLeanEntry","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedOLeanEntry","doc":""},"Lean.Parser.ParserExtension.instInhabitedEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L68-L68","name":"Lean.Parser.ParserExtension.instInhabitedEntry","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedEntry","doc":""},"Lean.Parser.ParserExtension.addEntryImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L157-L172","name":"Lean.Parser.ParserExtension.addEntryImpl","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.addEntryImpl","doc":""},"Lean.Parser.ParserExtension.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L76-L80","name":"Lean.Parser.ParserExtension.State","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State","doc":""},"Lean.Parser.ParserExtension.OLeanEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L56-L61","name":"Lean.Parser.ParserExtension.OLeanEntry","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry","doc":""},"Lean.Parser.ParserExtension.Entry.toOLeanEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L70-L74","name":"Lean.Parser.ParserExtension.Entry.toOLeanEntry","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.toOLeanEntry","doc":""},"Lean.Parser.ParserExtension.Entry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L63-L68","name":"Lean.Parser.ParserExtension.Entry","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry","doc":""},"Lean.Parser.ParserExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L85-L85","name":"Lean.Parser.ParserExtension","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension","doc":""},"Lean.Parser.ParserContext.resolveName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L640-L641","name":"Lean.Parser.ParserContext.resolveName","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserContext.resolveName","doc":""},"Lean.Parser.ParserContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L125-L132","name":"Lean.Parser.ParserContext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserContext","doc":""},"Lean.Parser.ParserCategory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1614-L1632","name":"Lean.Parser.ParserCategory","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory","doc":"Each parser category is implemented using a Pratt's parser.\n  The system comes equipped with the following categories: `level`, `term`, `tactic`, and `command`.\n  Users and plugins may define extra categories.\n\n  The method\n  ```\n  categoryParser `term prec\n  ```\n  executes the Pratt's parser for category `term` with precedence `prec`.\n  That is, only parsers with precedence at least `prec` are considered.\n  The method `termParser prec` is equivalent to the method above.\n"},"Lean.Parser.ParserCategories":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1634-L1634","name":"Lean.Parser.ParserCategories","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories","doc":""},"Lean.Parser.ParserCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L94-L95","name":"Lean.Parser.ParserCache","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCache","doc":""},"Lean.Parser.ParserAttributeHook":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L304-L306","name":"Lean.Parser.ParserAttributeHook","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook","doc":""},"Lean.Parser.ParserAliasValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L210-L210","name":"Lean.Parser.ParserAliasValue","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue","doc":""},"Lean.Parser.ParserAliasInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L212-L217","name":"Lean.Parser.ParserAliasInfo","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo","doc":""},"Lean.Parser.Parser":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L318-L321","name":"Lean.Parser.Parser","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Parser","doc":""},"Lean.Parser.OrElseOnAntiquotBehavior":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L482-L486","name":"Lean.Parser.OrElseOnAntiquotBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior","doc":""},"Lean.Parser.ModuleParserState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L31-L34","name":"Lean.Parser.ModuleParserState","docLink":"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState","doc":""},"Lean.Parser.Module.updateTokens":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L23-L27","name":"Lean.Parser.Module.updateTokens","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.updateTokens","doc":""},"Lean.Parser.Module.prelude":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L13-L13","name":"Lean.Parser.Module.prelude","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.prelude","doc":""},"Lean.Parser.Module.module":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L21-L21","name":"Lean.Parser.Module.module","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.module","doc":"Parser for a Lean module. We never actually run this parser but instead use the imperative definitions below that\nreturn the same syntax tree structure, but add error recovery. Still, it is helpful to have a `Parser` definition\nfor it in order to auto-generate helpers such as the pretty printer. "},"Lean.Parser.Module.import":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L14-L14","name":"Lean.Parser.Module.import","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.import","doc":""},"Lean.Parser.Module.header":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Module.lean#L15-L15","name":"Lean.Parser.Module.header","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.header","doc":""},"Lean.Parser.Level.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L351-L351","name":"Lean.Parser.Level.quot","docLink":"./Lean/Parser/Term.html#Lean.Parser.Level.quot","doc":""},"Lean.Parser.Level.paren":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Level.lean#L19-L19","name":"Lean.Parser.Level.paren","docLink":"./Lean/Parser/Level.html#Lean.Parser.Level.paren","doc":""},"Lean.Parser.Level.num":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Level.lean#L23-L23","name":"Lean.Parser.Level.num","docLink":"./Lean/Parser/Level.html#Lean.Parser.Level.num","doc":""},"Lean.Parser.Level.max":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Level.lean#L20-L20","name":"Lean.Parser.Level.max","docLink":"./Lean/Parser/Level.html#Lean.Parser.Level.max","doc":""},"Lean.Parser.Level.imax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Level.lean#L21-L21","name":"Lean.Parser.Level.imax","docLink":"./Lean/Parser/Level.html#Lean.Parser.Level.imax","doc":""},"Lean.Parser.Level.ident":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Level.lean#L24-L24","name":"Lean.Parser.Level.ident","docLink":"./Lean/Parser/Level.html#Lean.Parser.Level.ident","doc":""},"Lean.Parser.Level.hole":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Level.lean#L22-L22","name":"Lean.Parser.Level.hole","docLink":"./Lean/Parser/Level.html#Lean.Parser.Level.hole","doc":""},"Lean.Parser.Level.addLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Level.lean#L25-L25","name":"Lean.Parser.Level.addLit","docLink":"./Lean/Parser/Level.html#Lean.Parser.Level.addLit","doc":""},"Lean.Parser.LeadingIdentBehavior":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1584-L1599","name":"Lean.Parser.LeadingIdentBehavior","docLink":"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior","doc":"The type `LeadingIdentBehavior` specifies how the parsing table\n  lookup function behaves for identifiers.  The function `prattParser`\n  uses two tables `leadingTable` and `trailingTable`. They map tokens\n  to parsers.\n\n  We use `LeadingIdentBehavior.symbol` and `LeadingIdentBehavior.both`\n  and `nonReservedSymbol` parser to implement the `tactic` parsers.\n  The idea is to avoid creating a reserved symbol for each\n  builtin tactic (e.g., `apply`, `assumption`, etc.).  That is, users\n  may still use these symbols as identifiers (e.g., naming a\n  function).\n"},"Lean.Parser.InputContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L111-L115","name":"Lean.Parser.InputContext","docLink":"./Lean/Parser/Basic.html#Lean.Parser.InputContext","doc":"Input string and related data. Recall that the `FileMap` is a helper structure for mapping\n`String.Pos` in the input string to line/column information.  "},"Lean.Parser.FirstTokens.toStr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L302-L306","name":"Lean.Parser.FirstTokens.toStr","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.toStr","doc":""},"Lean.Parser.FirstTokens.toOptional":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L289-L291","name":"Lean.Parser.FirstTokens.toOptional","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.toOptional","doc":""},"Lean.Parser.FirstTokens.seq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L283-L287","name":"Lean.Parser.FirstTokens.seq","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.seq","doc":""},"Lean.Parser.FirstTokens.merge":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L293-L300","name":"Lean.Parser.FirstTokens.merge","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.merge","doc":""},"Lean.Parser.FirstTokens.instToStringFirstTokens":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L308-L308","name":"Lean.Parser.FirstTokens.instToStringFirstTokens","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens.instToStringFirstTokens","doc":""},"Lean.Parser.FirstTokens":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L274-L279","name":"Lean.Parser.FirstTokens","docLink":"./Lean/Parser/Basic.html#Lean.Parser.FirstTokens","doc":""},"Lean.Parser.Error.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L147-L153","name":"Lean.Parser.Error.toString","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Error.toString","doc":""},"Lean.Parser.Error.merge":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L157-L159","name":"Lean.Parser.Error.merge","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Error.merge","doc":""},"Lean.Parser.Error.instToStringError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L155-L155","name":"Lean.Parser.Error.instToStringError","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Error.instToStringError","doc":""},"Lean.Parser.Error":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L134-L137","name":"Lean.Parser.Error","docLink":"./Lean/Parser/Basic.html#Lean.Parser.Error","doc":""},"Lean.Parser.Command.whereStructInst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L63-L63","name":"Lean.Parser.Command.whereStructInst","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.whereStructInst","doc":""},"Lean.Parser.Command.whereStructField":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L62-L62","name":"Lean.Parser.Command.whereStructField","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.whereStructField","doc":""},"Lean.Parser.Command.visibility":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L51-L51","name":"Lean.Parser.Command.visibility","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.visibility","doc":""},"Lean.Parser.Command.variable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L123-L123","name":"Lean.Parser.Command.variable","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.variable","doc":""},"Lean.Parser.Command.unsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L53-L53","name":"Lean.Parser.Command.unsafe","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.unsafe","doc":""},"Lean.Parser.Command.universe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L124-L124","name":"Lean.Parser.Command.universe","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.universe","doc":""},"Lean.Parser.Command.theorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L73-L73","name":"Lean.Parser.Command.theorem","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.theorem","doc":""},"Lean.Parser.Command.terminationSuffix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L41-L41","name":"Lean.Parser.Command.terminationSuffix","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.terminationSuffix","doc":""},"Lean.Parser.Command.terminationHintMany":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L31-L31","name":"Lean.Parser.Command.terminationHintMany","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.terminationHintMany","doc":"A mutual block may be broken in different cliques, we identify them using an `ident` (an element of the clique)\nWe provide two kinds of hints to the termination checker:\n1- A wellfounded relation (`p` is `termParser`)\n2- A tactic for proving the recursive applications are \"decreasing\" (`p` is `tacticSeq`)\n"},"Lean.Parser.Command.terminationHint1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L32-L32","name":"Lean.Parser.Command.terminationHint1","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.terminationHint1","doc":""},"Lean.Parser.Command.terminationHint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L33-L33","name":"Lean.Parser.Command.terminationHint","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.terminationHint","doc":""},"Lean.Parser.Command.terminationByElement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L38-L38","name":"Lean.Parser.Command.terminationByElement","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.terminationByElement","doc":""},"Lean.Parser.Command.terminationByCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L35-L35","name":"Lean.Parser.Command.terminationByCore","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.terminationByCore","doc":""},"Lean.Parser.Command.terminationBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L39-L39","name":"Lean.Parser.Command.terminationBy","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.terminationBy","doc":""},"Lean.Parser.Command.synth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L129-L129","name":"Lean.Parser.Command.synth","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.synth","doc":""},"Lean.Parser.Command.syntaxCat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L77-L77","name":"Lean.Parser.Command.syntaxCat","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.syntaxCat","doc":""},"Lean.Parser.Command.syntaxAbbrev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L73-L73","name":"Lean.Parser.Command.syntaxAbbrev","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.syntaxAbbrev","doc":""},"Lean.Parser.Command.syntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L72-L72","name":"Lean.Parser.Command.syntax","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.syntax","doc":""},"Lean.Parser.Command.structureTk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L109-L109","name":"Lean.Parser.Command.structureTk","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structureTk","doc":""},"Lean.Parser.Command.structure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L112-L115","name":"Lean.Parser.Command.structure","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structure","doc":""},"Lean.Parser.Command.structSimpleBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L106-L106","name":"Lean.Parser.Command.structSimpleBinder","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structSimpleBinder","doc":""},"Lean.Parser.Command.structInstBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L105-L105","name":"Lean.Parser.Command.structInstBinder","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structInstBinder","doc":""},"Lean.Parser.Command.structImplicitBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L104-L104","name":"Lean.Parser.Command.structImplicitBinder","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structImplicitBinder","doc":""},"Lean.Parser.Command.structFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L107-L107","name":"Lean.Parser.Command.structFields","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structFields","doc":""},"Lean.Parser.Command.structExplicitBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L103-L103","name":"Lean.Parser.Command.structExplicitBinder","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structExplicitBinder","doc":""},"Lean.Parser.Command.structCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L108-L108","name":"Lean.Parser.Command.structCtor","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structCtor","doc":""},"Lean.Parser.Command.set_option":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L136-L136","name":"Lean.Parser.Command.set_option","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.set_option","doc":""},"Lean.Parser.Command.section":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L120-L120","name":"Lean.Parser.Command.section","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.section","doc":""},"Lean.Parser.Command.resolve_name":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L133-L133","name":"Lean.Parser.Command.resolve_name","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.resolve_name","doc":""},"Lean.Parser.Command.registerSimpAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L418-L419","name":"Lean.Parser.Command.registerSimpAttr","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Parser.Command.registerSimpAttr","doc":""},"Lean.Parser.Command.reduce":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L127-L127","name":"Lean.Parser.Command.reduce","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.reduce","doc":""},"Lean.Parser.Command.quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L23-L23","name":"Lean.Parser.Command.quot","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.quot","doc":"Syntax quotation for (sequences of) commands. The identical syntax for term quotations takes priority, so ambiguous quotations like\n`` `($x $y) `` will be parsed as an application, not two commands. Use `` `($x:command $y:command) `` instead.\nMultiple commands will be put in a `` `null `` node, but a single command will not (so that you can directly\nmatch against a quotation in a command kind's elaborator). "},"Lean.Parser.Command.protected":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L50-L50","name":"Lean.Parser.Command.protected","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.protected","doc":""},"Lean.Parser.Command.private":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L49-L49","name":"Lean.Parser.Command.private","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.private","doc":""},"Lean.Parser.Command.printAxioms":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L132-L132","name":"Lean.Parser.Command.printAxioms","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.printAxioms","doc":""},"Lean.Parser.Command.print":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L131-L131","name":"Lean.Parser.Command.print","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.print","doc":""},"Lean.Parser.Command.prefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L56-L56","name":"Lean.Parser.Command.prefix","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.prefix","doc":""},"Lean.Parser.Command.postfix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L60-L60","name":"Lean.Parser.Command.postfix","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.postfix","doc":""},"Lean.Parser.Command.partial":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L54-L54","name":"Lean.Parser.Command.partial","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.partial","doc":""},"Lean.Parser.Command.optionValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L135-L135","name":"Lean.Parser.Command.optionValue","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.optionValue","doc":""},"Lean.Parser.Command.optNamedPrio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L47-L47","name":"Lean.Parser.Command.optNamedPrio","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.optNamedPrio","doc":""},"Lean.Parser.Command.optNamedName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L54-L54","name":"Lean.Parser.Command.optNamedName","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.optNamedName","doc":""},"Lean.Parser.Command.optKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L67-L67","name":"Lean.Parser.Command.optKind","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.optKind","doc":""},"Lean.Parser.Command.optDeriving":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L82-L82","name":"Lean.Parser.Command.optDeriving","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.optDeriving","doc":""},"Lean.Parser.Command.optDefDeriving":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L71-L71","name":"Lean.Parser.Command.optDefDeriving","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.optDefDeriving","doc":""},"Lean.Parser.Command.optDeclSig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L59-L59","name":"Lean.Parser.Command.optDeclSig","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.optDeclSig","doc":""},"Lean.Parser.Command.openSimple":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L144-L144","name":"Lean.Parser.Command.openSimple","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openSimple","doc":""},"Lean.Parser.Command.openScoped":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L145-L145","name":"Lean.Parser.Command.openScoped","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openScoped","doc":""},"Lean.Parser.Command.openRenamingItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L141-L141","name":"Lean.Parser.Command.openRenamingItem","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openRenamingItem","doc":""},"Lean.Parser.Command.openRenaming":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L142-L142","name":"Lean.Parser.Command.openRenaming","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openRenaming","doc":""},"Lean.Parser.Command.openOnly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L143-L143","name":"Lean.Parser.Command.openOnly","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openOnly","doc":""},"Lean.Parser.Command.openHiding":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L140-L140","name":"Lean.Parser.Command.openHiding","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openHiding","doc":""},"Lean.Parser.Command.openDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L146-L147","name":"Lean.Parser.Command.openDecl","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openDecl","doc":""},"Lean.Parser.Command.open":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L148-L148","name":"Lean.Parser.Command.open","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.open","doc":""},"Lean.Parser.Command.opaque":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L74-L74","name":"Lean.Parser.Command.opaque","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.opaque","doc":""},"Lean.Parser.Command.notationItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L69-L69","name":"Lean.Parser.Command.notationItem","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.notationItem","doc":""},"Lean.Parser.Command.notation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L70-L70","name":"Lean.Parser.Command.notation","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.notation","doc":""},"Lean.Parser.Command.nonrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L55-L55","name":"Lean.Parser.Command.nonrec","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.nonrec","doc":""},"Lean.Parser.Command.noncomputableSection":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L119-L119","name":"Lean.Parser.Command.noncomputableSection","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.noncomputableSection","doc":""},"Lean.Parser.Command.noncomputable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L52-L52","name":"Lean.Parser.Command.noncomputable","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.noncomputable","doc":""},"Lean.Parser.Command.namespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L121-L121","name":"Lean.Parser.Command.namespace","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.namespace","doc":""},"Lean.Parser.Command.namedPrio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L46-L46","name":"Lean.Parser.Command.namedPrio","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.namedPrio","doc":""},"Lean.Parser.Command.namedName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L53-L53","name":"Lean.Parser.Command.namedName","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.namedName","doc":""},"Lean.Parser.Command.mutual":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L150-L150","name":"Lean.Parser.Command.mutual","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.mutual","doc":""},"Lean.Parser.Command.moduleDoc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L44-L44","name":"Lean.Parser.Command.moduleDoc","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.moduleDoc","doc":""},"Lean.Parser.Command.mixfixKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L61-L61","name":"Lean.Parser.Command.mixfixKind","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.mixfixKind","doc":""},"Lean.Parser.Command.mixfix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L62-L62","name":"Lean.Parser.Command.mixfix","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.mixfix","doc":""},"Lean.Parser.Command.macro_rules":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L71-L71","name":"Lean.Parser.Command.macro_rules","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.macro_rules","doc":""},"Lean.Parser.Command.macroTailTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L80-L80","name":"Lean.Parser.Command.macroTailTactic","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.macroTailTactic","doc":""},"Lean.Parser.Command.macroTailDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L82-L82","name":"Lean.Parser.Command.macroTailDefault","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.macroTailDefault","doc":""},"Lean.Parser.Command.macroTailCommand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L81-L81","name":"Lean.Parser.Command.macroTailCommand","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.macroTailCommand","doc":""},"Lean.Parser.Command.macroTail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L83-L83","name":"Lean.Parser.Command.macroTail","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.macroTail","doc":""},"Lean.Parser.Command.macroRhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L79-L79","name":"Lean.Parser.Command.macroRhs","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.macroRhs","doc":""},"Lean.Parser.Command.macroArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L78-L78","name":"Lean.Parser.Command.macroArg","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.macroArg","doc":""},"Lean.Parser.Command.macro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L84-L84","name":"Lean.Parser.Command.macro","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.macro","doc":""},"Lean.Parser.Command.instance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L76-L76","name":"Lean.Parser.Command.instance","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.instance","doc":""},"Lean.Parser.Command.initializeKeyword":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L151-L151","name":"Lean.Parser.Command.initializeKeyword","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.initializeKeyword","doc":""},"Lean.Parser.Command.initialize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L152-L152","name":"Lean.Parser.Command.initialize","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.initialize","doc":""},"Lean.Parser.Command.init_quot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L134-L134","name":"Lean.Parser.Command.init_quot","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.init_quot","doc":""},"Lean.Parser.Command.infixr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L59-L59","name":"Lean.Parser.Command.infixr","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.infixr","doc":""},"Lean.Parser.Command.infixl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L58-L58","name":"Lean.Parser.Command.infixl","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.infixl","doc":""},"Lean.Parser.Command.infix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L57-L57","name":"Lean.Parser.Command.infix","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.infix","doc":""},"Lean.Parser.Command.inductive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L100-L101","name":"Lean.Parser.Command.inductive","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.inductive","doc":"In Lean, every concrete type other than the universes and every type constructor other than dependent arrows is\nan instance of a general family of type constructions known as inductive types.\nIt is remarkable that it is possible to construct a substantial edifice of mathematics based on nothing more than the\ntype universes, dependent arrow types, and inductive types; everything else follows from those.\nIntuitively, an inductive type is built up from a specified list of constructor. For example, `List α` is the list of elements of type `α`, and\nis defined as follows\n```\ninductive List (α : Type u) where\n| nil\n| cons (head : α) (tail : List α)\n```\nA list of elements of type `α` is either the empty list, `nil`, or an element `head : α` followed by a list `tail : List α`.\nFor more information about [inductive types](https://leanprover.github.io/theorem_proving_in_lean4/inductive_types.html).\n"},"Lean.Parser.Command.in":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L154-L154","name":"Lean.Parser.Command.in","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.in","doc":""},"Lean.Parser.Command.identPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L65-L65","name":"Lean.Parser.Command.identPrec","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.identPrec","doc":""},"Lean.Parser.Command.genInjectiveTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L161-L161","name":"Lean.Parser.Command.genInjectiveTheorems","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.genInjectiveTheorems","doc":"This is an auxiliary command for generation constructor injectivity theorems for inductive types defined at `Prelude.lean`.\nIt is meant for bootstrapping purposes only. "},"Lean.Parser.Command.extends":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L111-L111","name":"Lean.Parser.Command.extends","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.extends","doc":""},"Lean.Parser.Command.export":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L139-L139","name":"Lean.Parser.Command.export","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.export","doc":""},"Lean.Parser.Command.exit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L130-L130","name":"Lean.Parser.Command.exit","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.exit","doc":""},"Lean.Parser.Command.example":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L79-L79","name":"Lean.Parser.Command.example","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.example","doc":""},"Lean.Parser.Command.eval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L128-L128","name":"Lean.Parser.Command.eval","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.eval","doc":""},"Lean.Parser.Command.eraseAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L137-L137","name":"Lean.Parser.Command.eraseAttr","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.eraseAttr","doc":""},"Lean.Parser.Command.end":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L122-L122","name":"Lean.Parser.Command.end","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.end","doc":""},"Lean.Parser.Command.elab_rules":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L86-L86","name":"Lean.Parser.Command.elab_rules","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.elab_rules","doc":""},"Lean.Parser.Command.elabTail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L88-L88","name":"Lean.Parser.Command.elabTail","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.elabTail","doc":""},"Lean.Parser.Command.elabArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L87-L87","name":"Lean.Parser.Command.elabArg","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.elabArg","doc":""},"Lean.Parser.Command.elab":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L89-L89","name":"Lean.Parser.Command.elab","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.elab","doc":""},"Lean.Parser.Command.docComment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L19-L19","name":"Lean.Parser.Command.docComment","docLink":"./Lean/Parser/Term.html#Lean.Parser.Command.docComment","doc":""},"Lean.Parser.Command.derivingClasses":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L81-L81","name":"Lean.Parser.Command.derivingClasses","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.derivingClasses","doc":""},"Lean.Parser.Command.deriving":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L118-L118","name":"Lean.Parser.Command.deriving","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.deriving","doc":""},"Lean.Parser.Command.def":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L72-L72","name":"Lean.Parser.Command.def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.def","doc":""},"Lean.Parser.Command.decreasingBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L36-L36","name":"Lean.Parser.Command.decreasingBy","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.decreasingBy","doc":""},"Lean.Parser.Command.declaration":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L116-L117","name":"Lean.Parser.Command.declaration","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declaration","doc":""},"Lean.Parser.Command.declValSimple":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L60-L60","name":"Lean.Parser.Command.declValSimple","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declValSimple","doc":""},"Lean.Parser.Command.declValEqns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L61-L61","name":"Lean.Parser.Command.declValEqns","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declValEqns","doc":""},"Lean.Parser.Command.declVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L68-L69","name":"Lean.Parser.Command.declVal","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declVal","doc":""},"Lean.Parser.Command.declSig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L58-L58","name":"Lean.Parser.Command.declSig","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declSig","doc":""},"Lean.Parser.Command.declModifiersT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L164-L164","name":"Lean.Parser.Command.declModifiersT","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declModifiersT","doc":""},"Lean.Parser.Command.declModifiersF":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L163-L163","name":"Lean.Parser.Command.declModifiersF","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declModifiersF","doc":""},"Lean.Parser.Command.declModifiers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L56-L56","name":"Lean.Parser.Command.declModifiers","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declModifiers","doc":""},"Lean.Parser.Command.declId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L57-L57","name":"Lean.Parser.Command.declId","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declId","doc":""},"Lean.Parser.Command.ctor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L80-L80","name":"Lean.Parser.Command.ctor","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.ctor","doc":""},"Lean.Parser.Command.computedFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L84-L84","name":"Lean.Parser.Command.computedFields","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.computedFields","doc":""},"Lean.Parser.Command.computedField":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L83-L83","name":"Lean.Parser.Command.computedField","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.computedField","doc":""},"Lean.Parser.Command.commentBody.parenthesizer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L16-L16","name":"Lean.Parser.Command.commentBody.parenthesizer","docLink":"./Lean/Parser/Term.html#Lean.Parser.Command.commentBody.parenthesizer","doc":""},"Lean.Parser.Command.commentBody.formatter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L17-L17","name":"Lean.Parser.Command.commentBody.formatter","docLink":"./Lean/Parser/Term.html#Lean.Parser.Command.commentBody.formatter","doc":""},"Lean.Parser.Command.commentBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Term.lean#L13-L14","name":"Lean.Parser.Command.commentBody","docLink":"./Lean/Parser/Term.html#Lean.Parser.Command.commentBody","doc":""},"Lean.Parser.Command.classTk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L110-L110","name":"Lean.Parser.Command.classTk","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.classTk","doc":""},"Lean.Parser.Command.classInductive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L102-L102","name":"Lean.Parser.Command.classInductive","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.classInductive","doc":""},"Lean.Parser.Command.classAbbrev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L248-L261","name":"Lean.Parser.Command.classAbbrev","docLink":"./Init/NotationExtra.html#Lean.Parser.Command.classAbbrev","doc":"Expands\n```\nclass abbrev C <params> := D_1, ..., D_n\n```\ninto\n```\nclass C <params> extends D_1, ..., D_n\nattribute [instance] C.mk\n```\n"},"Lean.Parser.Command.check_failure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L126-L126","name":"Lean.Parser.Command.check_failure","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.check_failure","doc":""},"Lean.Parser.Command.check":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L125-L125","name":"Lean.Parser.Command.check","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.check","doc":""},"Lean.Parser.Command.catBehaviorSymbol":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L75-L75","name":"Lean.Parser.Command.catBehaviorSymbol","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.catBehaviorSymbol","doc":""},"Lean.Parser.Command.catBehaviorBoth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L74-L74","name":"Lean.Parser.Command.catBehaviorBoth","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.catBehaviorBoth","doc":""},"Lean.Parser.Command.catBehavior":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Syntax.lean#L76-L76","name":"Lean.Parser.Command.catBehavior","docLink":"./Lean/Parser/Syntax.html#Lean.Parser.Command.catBehavior","doc":""},"Lean.Parser.Command.axiom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L77-L77","name":"Lean.Parser.Command.axiom","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.axiom","doc":""},"Lean.Parser.Command.attribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L138-L138","name":"Lean.Parser.Command.attribute","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.attribute","doc":""},"Lean.Parser.Command.addDocString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L156-L156","name":"Lean.Parser.Command.addDocString","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.addDocString","doc":""},"Lean.Parser.Command.abbrev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Command.lean#L70-L70","name":"Lean.Parser.Command.abbrev","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.abbrev","doc":""},"Lean.Parser.CategoryParserFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Basic.lean#L1665-L1665","name":"Lean.Parser.CategoryParserFn","docLink":"./Lean/Parser/Basic.html#Lean.Parser.CategoryParserFn","doc":""},"Lean.Parser.Category.term":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L29-L29","name":"Lean.Parser.Category.term","docLink":"./Init/Notation.html#Lean.Parser.Category.term","doc":"`term` is the builtin syntax category for terms. A term denotes an expression\nin lean's type theory, for example `2 + 2` is a term. The difference between\n`Term` and `Expr` is that the former is a kind of syntax, while the latter is\nthe result of elaboration. For example `by simp` is also a `Term`, but it elaborates\nto different `Expr`s depending on the context. "},"Lean.Parser.Category.tactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L39-L39","name":"Lean.Parser.Category.tactic","docLink":"./Init/Notation.html#Lean.Parser.Category.tactic","doc":"`tactic` is the builtin syntax category for tactics. These appear after\n`by` in proofs, and they are programs that take in the proof context\n(the hypotheses in scope plus the type of the term to synthesize) and construct\na term of the expected type. For example, `simp` is a tactic, used in:\n```\nexample : 2 + 2 = 4 := by simp\n```\n"},"Lean.Parser.Category.stx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L56-L56","name":"Lean.Parser.Category.stx","docLink":"./Init/Notation.html#Lean.Parser.Category.stx","doc":"`stx` is a builtin syntax category for syntax. This is the abbreviated\nparser notation used inside `syntax` and `macro` declarations. "},"Lean.Parser.Category.rawStx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L307-L310","name":"Lean.Parser.Category.rawStx","docLink":"./Init/Notation.html#Lean.Parser.Category.rawStx","doc":"Category for carrying raw syntax trees between macros; any content is printed as is by the pretty printer.\nThe only accepted parser for this category is an antiquotation. "},"Lean.Parser.Category.prio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L64-L64","name":"Lean.Parser.Category.prio","docLink":"./Init/Notation.html#Lean.Parser.Category.prio","doc":"`prio` is a builtin syntax category for priorities.\nPriorities are used in many different attributes.\nHigher numbers denote higher priority, and for example typeclass search will\ntry high priority instances before low priority.\nIn addition to literals like `37`, you can also use `low`, `mid`, `high`, as well as\nadd and subtract priorities. "},"Lean.Parser.Category.prec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L75-L75","name":"Lean.Parser.Category.prec","docLink":"./Init/Notation.html#Lean.Parser.Category.prec","doc":"`prec` is a builtin syntax category for precedences. A precedence is a value\nthat expresses how tightly a piece of syntax binds: for example `1 + 2 * 3` is\nparsed as `1 + (2 * 3)` because `*` has a higher pr0ecedence than `+`.\nHigher numbers denote higher precedence.\nIn addition to literals like `37`, there are some special named priorities:\n* `arg` for the precedence of function arguments\n* `max` for the highest precedence used in term parsers (not actually the maximum possible value)\n* `lead` for the precedence of terms not supposed to be used as arguments\nand you can also add and subtract precedences. "},"Lean.Parser.Category.level":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L48-L48","name":"Lean.Parser.Category.level","docLink":"./Init/Notation.html#Lean.Parser.Category.level","doc":"`level` is a builtin syntax category for universe levels.\nThis is the `u` in `Sort u`: it can contain `max` and `imax`, addition with\nconstants, and variables. "},"Lean.Parser.Category.doElem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L43-L43","name":"Lean.Parser.Category.doElem","docLink":"./Init/Notation.html#Lean.Parser.Category.doElem","doc":"`doElem` is a builtin syntax category for elements that can appear in the `do` notation.\nFor example, `let x ← e` is a `doElem`, and a `do` block consists of a list of `doElem`s. "},"Lean.Parser.Category.conv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Conv.lean#L13-L18","name":"Lean.Parser.Category.conv","docLink":"./Init/Conv.html#Lean.Parser.Category.conv","doc":"`conv` is the syntax category for a \"conv tactic\", where \"conv\" is short\nfor conversion. A conv tactic is a program which receives a target, printed as\n`| a`, and is tasked with coming up with some term `b` and a proof of `a = b`.\nIt is mainly used for doing targeted term transformations, for example rewriting\nonly on the left side of an equality. "},"Lean.Parser.Category.command":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L22-L22","name":"Lean.Parser.Category.command","docLink":"./Init/Notation.html#Lean.Parser.Category.command","doc":"`command` is the syntax category for things that appear at the top level\nof a lean file. For example, `def foo := 1` is a `command`, as is\n`namespace Foo` and `end Foo`. Commands generally have an effect on the state of\nadding something to the environment (like a new definition), as well as\ncommands like `variable` which modify future commands within a scope. "},"Lean.Parser.Category.attr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L52-L52","name":"Lean.Parser.Category.attr","docLink":"./Init/Notation.html#Lean.Parser.Category.attr","doc":"`attr` is a builtin syntax category for attributes.\nDeclarations can be annotated with attributes using the `@[...]` notation. "},"Lean.Parser.Category":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Notation.lean#L13-L13","name":"Lean.Parser.Category","docLink":"./Init/Notation.html#Lean.Parser.Category","doc":"Auxiliary type used to represent syntax categories. We mainly use them to attach doc strings to syntax categories. "},"Lean.Parser.Attr.simple":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Attr.lean#L35-L35","name":"Lean.Parser.Attr.simple","docLink":"./Lean/Parser/Attr.html#Lean.Parser.Attr.simple","doc":""},"Lean.Parser.Attr.simp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Tactics.lean#L508-L545","name":"Lean.Parser.Attr.simp","docLink":"./Init/Tactics.html#Lean.Parser.Attr.simp","doc":"Theorems tagged with the `simp` attribute are by the simplifier (i.e., the `simp` tactic, and its variants) to simplify\nexpressions occurring in your goals.\nWe call theorems tagged with the `simp` attribute \"simp theorems\" or \"simp lemmas\".\nLean maintains a database/index containing all active simp theorems.\nHere is an example of a simp theorem.\n```lean\n@[simp] theorem ne_eq (a b : α) : (a ≠ b) = Not (a = b) := rfl\n```\nThis simp theorem instructs the simplifier to replace instances of the term `a ≠ b` (e.g. `x + 0 ≠ y`) with `Not (a = b)`\n(e.g., `Not (x + 0 = y)`).\nThe simplifier applies simp theorems in one direction only: if `A = B` is a simp theorem, then `simp`\nreplaces `A`s with `B`s, but it doesn't replace `B`s with `A`s. Hence a simp theorem should have the\nproperty that its right-hand side is \"simpler\" than its left-hand side.\nIn particular, `=` and `↔` should not be viewed as symmetric operators in this situation.\nThe following would be a terrible simp theorem (if it were even allowed):\n```lean\n@[simp] lemma mul_right_inv_bad (a : G) : 1 = a * a⁻¹ := ...\n```\nReplacing 1 with a * a⁻¹ is not a sensible default direction to travel. Even worse would be a theorem\nthat causes expressions to grow without bound, causing simp to loop forever.\n\nBy default the simplifier applies `simp` theorems to an expression `e` after its sub-expressions have been simplified.\nWe say it performs a bottom-up simplification. You can instruct the simplifier to apply a theorem before its sub-expressions\nhave been simplified by using the modifier `↓`. Here is an example\n```lean\n@[simp↓] theorem not_and_eq (p q : Prop) : (¬ (p ∧ q)) = (¬p ∨ ¬q) :=\n```\n\nWhen multiple simp theorems are applicable, the simplifier uses the one with highest priority. If there are several with\nthe same priority, it is uses the \"most recent one\". Example:\n```lean\n@[simp high] theorem cond_true (a b : α) : cond true a b = a := rfl\n@[simp low+1] theorem or_true (p : Prop) : (p ∨ True) = True := propext <| Iff.intro (fun _ => trivial) (fun _ => Or.inr trivial)\n@[simp 100] theorem ite_self {d : Decidable c} (a : α) : ite c a a = a := by cases d  <;> rfl\n```\n"},"Lean.Parser.Attr.recursor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Attr.lean#L41-L41","name":"Lean.Parser.Attr.recursor","docLink":"./Lean/Parser/Attr.html#Lean.Parser.Attr.recursor","doc":""},"Lean.Parser.Attr.macro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Attr.lean#L37-L37","name":"Lean.Parser.Attr.macro","docLink":"./Lean/Parser/Attr.html#Lean.Parser.Attr.macro","doc":""},"Lean.Parser.Attr.instance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Attr.lean#L43-L43","name":"Lean.Parser.Attr.instance","docLink":"./Lean/Parser/Attr.html#Lean.Parser.Attr.instance","doc":""},"Lean.Parser.Attr.externEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Attr.lean#L46-L46","name":"Lean.Parser.Attr.externEntry","docLink":"./Lean/Parser/Attr.html#Lean.Parser.Attr.externEntry","doc":""},"Lean.Parser.Attr.extern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Attr.lean#L47-L47","name":"Lean.Parser.Attr.extern","docLink":"./Lean/Parser/Attr.html#Lean.Parser.Attr.extern","doc":""},"Lean.Parser.Attr.export":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Attr.lean#L38-L38","name":"Lean.Parser.Attr.export","docLink":"./Lean/Parser/Attr.html#Lean.Parser.Attr.export","doc":""},"Lean.Parser.Attr.defaultInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Attr.lean#L44-L44","name":"Lean.Parser.Attr.defaultInstance","docLink":"./Lean/Parser/Attr.html#Lean.Parser.Attr.defaultInstance","doc":""},"Lean.Parser.Attr.class":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Attr.lean#L42-L42","name":"Lean.Parser.Attr.class","docLink":"./Lean/Parser/Attr.html#Lean.Parser.Attr.class","doc":""},"Lean.Parser.AliasValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L175-L178","name":"Lean.Parser.AliasValue","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue","doc":"Parser aliases for making `ParserDescr` extensible "},"Lean.Parser.AliasTable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Parser/Extension.lean#L180-L180","name":"Lean.Parser.AliasTable","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasTable","doc":""},"Lean.Parsec.ws":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L173-L174","name":"Lean.Parsec.ws","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.ws","doc":""},"Lean.Parsec.unexpectedEndOfInput":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L105-L105","name":"Lean.Parsec.unexpectedEndOfInput","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.unexpectedEndOfInput","doc":""},"Lean.Parsec.skipWs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L146-L154","name":"Lean.Parsec.skipWs","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.skipWs","doc":""},"Lean.Parsec.skipString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L103-L103","name":"Lean.Parsec.skipString","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.skipString","doc":""},"Lean.Parsec.skipChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L116-L116","name":"Lean.Parsec.skipChar","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.skipChar","doc":""},"Lean.Parsec.skip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L169-L170","name":"Lean.Parsec.skip","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.skip","doc":""},"Lean.Parsec.satisfy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L136-L138","name":"Lean.Parsec.satisfy","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.satisfy","doc":""},"Lean.Parsec.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L58-L61","name":"Lean.Parsec.run","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.run","doc":""},"Lean.Parsec.pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L26-L27","name":"Lean.Parsec.pure","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.pure","doc":""},"Lean.Parsec.pstring":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L95-L100","name":"Lean.Parsec.pstring","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.pstring","doc":"Parses the given string. "},"Lean.Parsec.peek?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L157-L161","name":"Lean.Parsec.peek?","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.peek?","doc":""},"Lean.Parsec.peek!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L164-L166","name":"Lean.Parsec.peek!","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.peek!","doc":""},"Lean.Parsec.pchar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L112-L113","name":"Lean.Parsec.pchar","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.pchar","doc":""},"Lean.Parsec.orElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L43-L47","name":"Lean.Parsec.orElse","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.orElse","doc":""},"Lean.Parsec.notFollowedBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L141-L144","name":"Lean.Parsec.notFollowedBy","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.notFollowedBy","doc":""},"Lean.Parsec.manyCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L73-L75","name":"Lean.Parsec.manyCore","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.manyCore","doc":""},"Lean.Parsec.manyCharsCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L84-L86","name":"Lean.Parsec.manyCharsCore","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.manyCharsCore","doc":""},"Lean.Parsec.manyChars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L89-L89","name":"Lean.Parsec.manyChars","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.manyChars","doc":""},"Lean.Parsec.many1Chars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L92-L92","name":"Lean.Parsec.many1Chars","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.many1Chars","doc":""},"Lean.Parsec.many1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L81-L81","name":"Lean.Parsec.many1","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.many1","doc":""},"Lean.Parsec.many":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L78-L78","name":"Lean.Parsec.many","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.many","doc":""},"Lean.Parsec.instReprParseResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L13-L13","name":"Lean.Parsec.instReprParseResult","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.instReprParseResult","doc":""},"Lean.Parsec.instMonadParsec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L35-L36","name":"Lean.Parsec.instMonadParsec","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.instMonadParsec","doc":""},"Lean.Parsec.instInhabitedParsec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L22-L23","name":"Lean.Parsec.instInhabitedParsec","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.instInhabitedParsec","doc":""},"Lean.Parsec.instAlternativeParsec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L55-L56","name":"Lean.Parsec.instAlternativeParsec","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.instAlternativeParsec","doc":""},"Lean.Parsec.hexDigit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L124-L128","name":"Lean.Parsec.hexDigit","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.hexDigit","doc":""},"Lean.Parsec.fail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L39-L40","name":"Lean.Parsec.fail","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.fail","doc":""},"Lean.Parsec.expectedEndOfInput":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L63-L63","name":"Lean.Parsec.expectedEndOfInput","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.expectedEndOfInput","doc":""},"Lean.Parsec.eof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L66-L70","name":"Lean.Parsec.eof","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.eof","doc":""},"Lean.Parsec.digit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L119-L121","name":"Lean.Parsec.digit","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.digit","doc":""},"Lean.Parsec.bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L30-L33","name":"Lean.Parsec.bind","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.bind","doc":""},"Lean.Parsec.attempt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L50-L53","name":"Lean.Parsec.attempt","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.attempt","doc":""},"Lean.Parsec.asciiLetter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L131-L133","name":"Lean.Parsec.asciiLetter","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.asciiLetter","doc":""},"Lean.Parsec.anyChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L108-L109","name":"Lean.Parsec.anyChar","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.anyChar","doc":""},"Lean.Parsec.ParseResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L10-L13","name":"Lean.Parsec.ParseResult","docLink":"./Lean/Data/Parsec.html#Lean.Parsec.ParseResult","doc":""},"Lean.Parsec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Parsec.lean#L16-L16","name":"Lean.Parsec","docLink":"./Lean/Data/Parsec.html#Lean.Parsec","doc":""},"Lean.ParametricAttributeImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L190-L194","name":"Lean.ParametricAttributeImpl","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl","doc":""},"Lean.ParametricAttribute.setParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L234-L240","name":"Lean.ParametricAttribute.setParam","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.setParam","doc":""},"Lean.ParametricAttribute.getParam?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L226-L232","name":"Lean.ParametricAttribute.getParam?","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.getParam?","doc":""},"Lean.ParametricAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L185-L188","name":"Lean.ParametricAttribute","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute","doc":"A `TagAttribute` variant where we can attach parameters to attributes.\n  It is slightly more expensive and consumes a little bit more memory than `TagAttribute`.\n\n  They provide the function `pAttr.getParam env decl` which returns `some p` iff declaration `decl`\n  contains the attribute `pAttr` with parameter `p`. "},"Lean.PPFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/PPExt.lean#L41-L45","name":"Lean.PPFns","docLink":"./Lean/Util/PPExt.html#Lean.PPFns","doc":""},"Lean.PPContext.runMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L18-L19","name":"Lean.PPContext.runMetaM","docLink":"./Lean/PrettyPrinter.html#Lean.PPContext.runMetaM","doc":""},"Lean.PPContext.runCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/PrettyPrinter.lean#L14-L16","name":"Lean.PPContext.runCoreM","docLink":"./Lean/PrettyPrinter.html#Lean.PPContext.runCoreM","doc":""},"Lean.PPContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/PPExt.lean#L33-L39","name":"Lean.PPContext","docLink":"./Lean/Util/PPExt.html#Lean.PPContext","doc":""},"Lean.PLevelSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L607-L607","name":"Lean.PLevelSet","docLink":"./Lean/Level.html#Lean.PLevelSet","doc":""},"Lean.PExprSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1187-L1187","name":"Lean.PExprSet","docLink":"./Lean/Expr.html#Lean.PExprSet","doc":""},"Lean.Options.getInPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L116-L117","name":"Lean.Options.getInPattern","docLink":"./Lean/Data/Options.html#Lean.Options.getInPattern","doc":""},"Lean.Options.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L13-L13","name":"Lean.Options.empty","docLink":"./Lean/Data/Options.html#Lean.Options.empty","doc":""},"Lean.Options":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L11-L11","name":"Lean.Options","docLink":"./Lean/Data/Options.html#Lean.Options","doc":""},"Lean.OptionDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L25-L25","name":"Lean.OptionDecls","docLink":"./Lean/Data/Options.html#Lean.OptionDecls","doc":""},"Lean.OptionDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L19-L23","name":"Lean.OptionDecl","docLink":"./Lean/Data/Options.html#Lean.OptionDecl","doc":""},"Lean.Option.setIfNotSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L142-L143","name":"Lean.Option.setIfNotSet","docLink":"./Lean/Data/Options.html#Lean.Option.setIfNotSet","doc":"Similar to `set`, but update `opts` only if it doesn't already contains an setting for `opt.name` "},"Lean.Option.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L138-L139","name":"Lean.Option.set","docLink":"./Lean/Data/Options.html#Lean.Option.set","doc":""},"Lean.Option.registerOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L152-L152","name":"Lean.Option.registerOption","docLink":"./Lean/Data/Options.html#Lean.Option.registerOption","doc":""},"Lean.Option.registerBuiltinOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L149-L149","name":"Lean.Option.registerBuiltinOption","docLink":"./Lean/Data/Options.html#Lean.Option.registerBuiltinOption","doc":""},"Lean.Option.register":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L145-L147","name":"Lean.Option.register","docLink":"./Lean/Data/Options.html#Lean.Option.register","doc":""},"Lean.Option.hasQuote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L963-L966","name":"Lean.Option.hasQuote","docLink":"./Init/Meta.html#Lean.Option.hasQuote","doc":""},"Lean.Option.get?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L132-L133","name":"Lean.Option.get?","docLink":"./Lean/Data/Options.html#Lean.Option.get?","doc":""},"Lean.Option.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L135-L136","name":"Lean.Option.get","docLink":"./Lean/Data/Options.html#Lean.Option.get","doc":""},"Lean.Option.Decl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L127-L130","name":"Lean.Option.Decl","docLink":"./Lean/Data/Options.html#Lean.Option.Decl","doc":""},"Lean.Option":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L120-L123","name":"Lean.Option","docLink":"./Lean/Data/Options.html#Lean.Option","doc":"A strongly-typed reference to an option. "},"Lean.OpenDecl.instToStringOpenDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/OpenDecl.lean#L18-L21","name":"Lean.OpenDecl.instToStringOpenDecl","docLink":"./Lean/Data/OpenDecl.html#Lean.OpenDecl.instToStringOpenDecl","doc":""},"Lean.OpenDecl.instInhabitedOpenDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/OpenDecl.lean#L16-L16","name":"Lean.OpenDecl.instInhabitedOpenDecl","docLink":"./Lean/Data/OpenDecl.html#Lean.OpenDecl.instInhabitedOpenDecl","doc":""},"Lean.OpenDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/OpenDecl.lean#L11-L13","name":"Lean.OpenDecl","docLink":"./Lean/Data/OpenDecl.html#Lean.OpenDecl","doc":"Data for representing `open` commands "},"Lean.OpaqueVal.isUnsafeEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L139-L140","name":"Lean.OpaqueVal.isUnsafeEx","docLink":"./Lean/Declaration.html#Lean.OpaqueVal.isUnsafeEx","doc":""},"Lean.OpaqueVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L125-L132","name":"Lean.OpaqueVal","docLink":"./Lean/Declaration.html#Lean.OpaqueVal","doc":"Value for an opaque constant declaration `opaque x : t := e` "},"Lean.Occurrences.isAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Occurrences.lean#L19-L21","name":"Lean.Occurrences.isAll","docLink":"./Lean/Data/Occurrences.html#Lean.Occurrences.isAll","doc":""},"Lean.Occurrences.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Occurrences.lean#L14-L17","name":"Lean.Occurrences.contains","docLink":"./Lean/Data/Occurrences.html#Lean.Occurrences.contains","doc":""},"Lean.Occurrences":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Occurrences.lean#L8-L12","name":"Lean.Occurrences","docLink":"./Lean/Data/Occurrences.html#Lean.Occurrences","doc":""},"Lean.NamingContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L33-L35","name":"Lean.NamingContext","docLink":"./Lean/Message.html#Lean.NamingContext","doc":""},"Lean.NameTrie.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L41-L42","name":"Lean.NameTrie.insert","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.insert","doc":""},"Lean.NameTrie.forMatchingM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L65-L66","name":"Lean.NameTrie.forMatchingM","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.forMatchingM","doc":""},"Lean.NameTrie.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L69-L70","name":"Lean.NameTrie.forM","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.forM","doc":""},"Lean.NameTrie.foldMatchingM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L57-L58","name":"Lean.NameTrie.foldMatchingM","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.foldMatchingM","doc":""},"Lean.NameTrie.foldM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L61-L62","name":"Lean.NameTrie.foldM","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.foldM","doc":""},"Lean.NameTrie.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L53-L54","name":"Lean.NameTrie.find?","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.find?","doc":""},"Lean.NameTrie.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L44-L45","name":"Lean.NameTrie.empty","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie.empty","doc":""},"Lean.NameTrie":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L31-L31","name":"Lean.NameTrie","docLink":"./Lean/Data/NameTrie.html#Lean.NameTrie","doc":""},"Lean.NameSet.instInhabitedNameSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L167-L167","name":"Lean.NameSet.instInhabitedNameSet","docLink":"./Lean/Data/Name.html#Lean.NameSet.instInhabitedNameSet","doc":""},"Lean.NameSet.instForInNameSetName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L170-L171","name":"Lean.NameSet.instForInNameSetName","docLink":"./Lean/Data/Name.html#Lean.NameSet.instForInNameSetName","doc":""},"Lean.NameSet.instEmptyCollectionNameSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L166-L166","name":"Lean.NameSet.instEmptyCollectionNameSet","docLink":"./Lean/Data/Name.html#Lean.NameSet.instEmptyCollectionNameSet","doc":""},"Lean.NameSet.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L168-L168","name":"Lean.NameSet.insert","docLink":"./Lean/Data/Name.html#Lean.NameSet.insert","doc":""},"Lean.NameSet.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L165-L165","name":"Lean.NameSet.empty","docLink":"./Lean/Data/Name.html#Lean.NameSet.empty","doc":""},"Lean.NameSet.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L169-L169","name":"Lean.NameSet.contains","docLink":"./Lean/Data/Name.html#Lean.NameSet.contains","doc":""},"Lean.NameSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L162-L162","name":"Lean.NameSet","docLink":"./Lean/Data/Name.html#Lean.NameSet","doc":""},"Lean.NameSanitizerState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Hygiene.lean#L74-L79","name":"Lean.NameSanitizerState","docLink":"./Lean/Hygiene.html#Lean.NameSanitizerState","doc":""},"Lean.NameSSet.instInhabitedNameSSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L180-L180","name":"Lean.NameSSet.instInhabitedNameSSet","docLink":"./Lean/Data/Name.html#Lean.NameSSet.instInhabitedNameSSet","doc":""},"Lean.NameSSet.instEmptyCollectionNameSSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L179-L179","name":"Lean.NameSSet.instEmptyCollectionNameSSet","docLink":"./Lean/Data/Name.html#Lean.NameSSet.instEmptyCollectionNameSSet","doc":""},"Lean.NameSSet.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L181-L181","name":"Lean.NameSSet.insert","docLink":"./Lean/Data/Name.html#Lean.NameSSet.insert","doc":""},"Lean.NameSSet.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L178-L178","name":"Lean.NameSSet.empty","docLink":"./Lean/Data/Name.html#Lean.NameSSet.empty","doc":""},"Lean.NameSSet.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L182-L182","name":"Lean.NameSSet.contains","docLink":"./Lean/Data/Name.html#Lean.NameSSet.contains","doc":""},"Lean.NameSSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L175-L175","name":"Lean.NameSSet","docLink":"./Lean/Data/Name.html#Lean.NameSSet","doc":""},"Lean.NamePart.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L25-L29","name":"Lean.NamePart.lt","docLink":"./Lean/Data/NameTrie.html#Lean.NamePart.lt","doc":""},"Lean.NamePart.cmp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L19-L23","name":"Lean.NamePart.cmp","docLink":"./Lean/Data/NameTrie.html#Lean.NamePart.cmp","doc":""},"Lean.NamePart":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/NameTrie.lean#L10-L12","name":"Lean.NamePart","docLink":"./Lean/Data/NameTrie.html#Lean.NamePart","doc":""},"Lean.NameMap.instInhabitedNameMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L148-L149","name":"Lean.NameMap.instInhabitedNameMap","docLink":"./Lean/Data/Name.html#Lean.NameMap.instInhabitedNameMap","doc":""},"Lean.NameMap.instForInNameMapProdName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L157-L158","name":"Lean.NameMap.instForInNameMapProdName","docLink":"./Lean/Data/Name.html#Lean.NameMap.instForInNameMapProdName","doc":""},"Lean.NameMap.instEmptyCollectionNameMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L146-L146","name":"Lean.NameMap.instEmptyCollectionNameMap","docLink":"./Lean/Data/Name.html#Lean.NameMap.instEmptyCollectionNameMap","doc":""},"Lean.NameMap.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L151-L151","name":"Lean.NameMap.insert","docLink":"./Lean/Data/Name.html#Lean.NameMap.insert","doc":""},"Lean.NameMap.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L155-L155","name":"Lean.NameMap.find?","docLink":"./Lean/Data/Name.html#Lean.NameMap.find?","doc":""},"Lean.NameMap.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L153-L153","name":"Lean.NameMap.contains","docLink":"./Lean/Data/Name.html#Lean.NameMap.contains","doc":""},"Lean.NameMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L139-L139","name":"Lean.NameMap","docLink":"./Lean/Data/Name.html#Lean.NameMap","doc":""},"Lean.NameHashSet.instInhabitedNameHashSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L190-L190","name":"Lean.NameHashSet.instInhabitedNameHashSet","docLink":"./Lean/Data/Name.html#Lean.NameHashSet.instInhabitedNameHashSet","doc":""},"Lean.NameHashSet.instEmptyCollectionNameHashSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L189-L189","name":"Lean.NameHashSet.instEmptyCollectionNameHashSet","docLink":"./Lean/Data/Name.html#Lean.NameHashSet.instEmptyCollectionNameHashSet","doc":""},"Lean.NameHashSet.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L191-L191","name":"Lean.NameHashSet.insert","docLink":"./Lean/Data/Name.html#Lean.NameHashSet.insert","doc":""},"Lean.NameHashSet.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L188-L188","name":"Lean.NameHashSet.empty","docLink":"./Lean/Data/Name.html#Lean.NameHashSet.empty","doc":""},"Lean.NameHashSet.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L192-L192","name":"Lean.NameHashSet.contains","docLink":"./Lean/Data/Name.html#Lean.NameHashSet.contains","doc":""},"Lean.NameHashSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L185-L185","name":"Lean.NameHashSet","docLink":"./Lean/Data/Name.html#Lean.NameHashSet","doc":""},"Lean.NameGenerator.next":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L232-L233","name":"Lean.NameGenerator.next","docLink":"./Init/Meta.html#Lean.NameGenerator.next","doc":""},"Lean.NameGenerator.mkChild":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L235-L237","name":"Lean.NameGenerator.mkChild","docLink":"./Init/Meta.html#Lean.NameGenerator.mkChild","doc":""},"Lean.NameGenerator.curr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L229-L230","name":"Lean.NameGenerator.curr","docLink":"./Init/Meta.html#Lean.NameGenerator.curr","doc":""},"Lean.NameGenerator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L222-L225","name":"Lean.NameGenerator","docLink":"./Init/Meta.html#Lean.NameGenerator","doc":""},"Lean.Name.updatePrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L33-L36","name":"Lean.Name.updatePrefix","docLink":"./Lean/Data/Name.html#Lean.Name.updatePrefix","doc":""},"Lean.Name.toStringWithSep.maybeEscape":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L127-L127","name":"Lean.Name.toStringWithSep.maybeEscape","docLink":"./Init/Meta.html#Lean.Name.toStringWithSep.maybeEscape","doc":""},"Lean.Name.toStringWithSep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L120-L127","name":"Lean.Name.toStringWithSep","docLink":"./Init/Meta.html#Lean.Name.toStringWithSep","doc":""},"Lean.Name.toString.maybePseudoSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L133-L138","name":"Lean.Name.toString.maybePseudoSyntax","docLink":"./Init/Meta.html#Lean.Name.toString.maybePseudoSyntax","doc":""},"Lean.Name.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L129-L138","name":"Lean.Name.toString","docLink":"./Init/Meta.html#Lean.Name.toString","doc":""},"Lean.Name.str.sizeOf_spec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L77-L78","name":"Lean.Name.str.sizeOf_spec","docLink":"./Init/SizeOf.html#Lean.Name.str.sizeOf_spec","doc":""},"Lean.Name.sizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L67-L70","name":"Lean.Name.sizeOf","docLink":"./Init/SizeOf.html#Lean.Name.sizeOf","doc":"We manually define `Lean.Name` instance because we use\nan opaque function for computing the hashcode field. "},"Lean.Name.simpMacroScopes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2811-L2814","name":"Lean.Name.simpMacroScopes","docLink":"./Init/Prelude.html#Lean.Name.simpMacroScopes","doc":"Helper function we use to create binder names that do not need to be unique. "},"Lean.Name.reprPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L148-L156","name":"Lean.Name.reprPrec","docLink":"./Init/Meta.html#Lean.Name.reprPrec","doc":""},"Lean.Name.replacePrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L167-L171","name":"Lean.Name.replacePrefix","docLink":"./Init/Meta.html#Lean.Name.replacePrefix","doc":""},"Lean.Name.quickLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L100-L101","name":"Lean.Name.quickLt","docLink":"./Lean/Data/Name.html#Lean.Name.quickLt","doc":""},"Lean.Name.quickCmpAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L80-L93","name":"Lean.Name.quickCmpAux","docLink":"./Lean/Data/Name.html#Lean.Name.quickCmpAux","doc":""},"Lean.Name.quickCmp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L95-L98","name":"Lean.Name.quickCmp","docLink":"./Lean/Data/Name.html#Lean.Name.quickCmp","doc":""},"Lean.Name.num.sizeOf_spec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L79-L80","name":"Lean.Name.num.sizeOf_spec","docLink":"./Init/SizeOf.html#Lean.Name.num.sizeOf_spec","doc":""},"Lean.Name.modifyBase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L183-L188","name":"Lean.Name.modifyBase","docLink":"./Init/Meta.html#Lean.Name.modifyBase","doc":"Remove macros scopes, apply `f`, and put them back "},"Lean.Name.mkStr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2389-L2390","name":"Lean.Name.mkStr","docLink":"./Init/Prelude.html#Lean.Name.mkStr","doc":"`.str p s` is now the preferred form.\n"},"Lean.Name.mkSimple":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2402-L2403","name":"Lean.Name.mkSimple","docLink":"./Init/Prelude.html#Lean.Name.mkSimple","doc":"Short for `.str .anonymous s`.\n"},"Lean.Name.mkNum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2396-L2397","name":"Lean.Name.mkNum","docLink":"./Init/Prelude.html#Lean.Name.mkNum","doc":"`.num p v` is now the preferred form.\n"},"Lean.Name.mangle":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/NameMangling.lean#L59-L60","name":"Lean.Name.mangle","docLink":"./Lean/Compiler/NameMangling.html#Lean.Name.mangle","doc":""},"Lean.Name.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L77-L78","name":"Lean.Name.lt","docLink":"./Lean/Data/Name.html#Lean.Name.lt","doc":""},"Lean.Name.isSuffixOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L56-L60","name":"Lean.Name.isSuffixOf","docLink":"./Lean/Data/Name.html#Lean.Name.isSuffixOf","doc":""},"Lean.Name.isStr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L127-L129","name":"Lean.Name.isStr","docLink":"./Lean/Data/Name.html#Lean.Name.isStr","doc":""},"Lean.Name.isPrefixOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L50-L53","name":"Lean.Name.isPrefixOf","docLink":"./Lean/Data/Name.html#Lean.Name.isPrefixOf","doc":""},"Lean.Name.isNum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L131-L133","name":"Lean.Name.isNum","docLink":"./Lean/Data/Name.html#Lean.Name.isNum","doc":""},"Lean.Name.isInternal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L112-L115","name":"Lean.Name.isInternal","docLink":"./Lean/Data/Name.html#Lean.Name.isInternal","doc":"The frontend does not allow user declarations to start with `_` in any of its parts.\nWe use name parts starting with `_` internally to create auxiliary names (e.g., `_private`). "},"Lean.Name.isInaccessibleUserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L108-L111","name":"Lean.Name.isInaccessibleUserName","docLink":"./Init/Meta.html#Lean.Name.isInaccessibleUserName","doc":""},"Lean.Name.isAtomic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L117-L121","name":"Lean.Name.isAtomic","docLink":"./Lean/Data/Name.html#Lean.Name.isAtomic","doc":""},"Lean.Name.isAnonymous":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L123-L125","name":"Lean.Name.isAnonymous","docLink":"./Lean/Data/Name.html#Lean.Name.isAnonymous","doc":""},"Lean.Name.instToStringName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L140-L141","name":"Lean.Name.instToStringName","docLink":"./Init/Meta.html#Lean.Name.instToStringName","doc":""},"Lean.Name.instReprSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L161-L161","name":"Lean.Name.instReprSyntax","docLink":"./Init/Meta.html#Lean.Name.instReprSyntax","doc":""},"Lean.Name.instReprName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L158-L159","name":"Lean.Name.instReprName","docLink":"./Init/Meta.html#Lean.Name.instReprName","doc":""},"Lean.Name.instLawfulBEqNameInstBEqName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L213-L215","name":"Lean.Name.instLawfulBEqNameInstBEqName","docLink":"./Init/Meta.html#Lean.Name.instLawfulBEqNameInstBEqName","doc":""},"Lean.Name.instDecidableRelNameLtHasLtQuick":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L107-L108","name":"Lean.Name.instDecidableRelNameLtHasLtQuick","docLink":"./Lean/Data/Name.html#Lean.Name.instDecidableRelNameLtHasLtQuick","doc":""},"Lean.Name.instDecidableEqName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L217-L218","name":"Lean.Name.instDecidableEqName","docLink":"./Init/Meta.html#Lean.Name.instDecidableEqName","doc":""},"Lean.Name.instBEqName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2412-L2413","name":"Lean.Name.instBEqName","docLink":"./Init/Prelude.html#Lean.Name.instBEqName","doc":""},"Lean.Name.instAppendName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2427-L2428","name":"Lean.Name.instAppendName","docLink":"./Init/Prelude.html#Lean.Name.instAppendName","doc":""},"Lean.Name.hashEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L16-L17","name":"Lean.Name.hashEx","docLink":"./Lean/Data/Name.html#Lean.Name.hashEx","doc":""},"Lean.Name.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2372-L2375","name":"Lean.Name.hash","docLink":"./Init/Prelude.html#Lean.Name.hash","doc":""},"Lean.Name.hasMacroScopes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2787-L2790","name":"Lean.Name.hasMacroScopes","docLink":"./Init/Prelude.html#Lean.Name.hasMacroScopes","doc":""},"Lean.Name.hasLtQuick":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L104-L105","name":"Lean.Name.hasLtQuick","docLink":"./Lean/Data/Name.html#Lean.Name.hasLtQuick","doc":"Alternative HasLt instance. "},"Lean.Name.getString!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L24-L26","name":"Lean.Name.getString!","docLink":"./Lean/Data/Name.html#Lean.Name.getString!","doc":""},"Lean.Name.getRoot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L100-L105","name":"Lean.Name.getRoot","docLink":"./Init/Meta.html#Lean.Name.getRoot","doc":""},"Lean.Name.getPrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L19-L22","name":"Lean.Name.getPrefix","docLink":"./Lean/Data/Name.html#Lean.Name.getPrefix","doc":""},"Lean.Name.getNumParts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L28-L31","name":"Lean.Name.getNumParts","docLink":"./Lean/Data/Name.html#Lean.Name.getNumParts","doc":""},"Lean.Name.escapePart":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L113-L116","name":"Lean.Name.escapePart","docLink":"./Init/Meta.html#Lean.Name.escapePart","doc":""},"Lean.Name.eraseSuffix?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L176-L180","name":"Lean.Name.eraseSuffix?","docLink":"./Init/Meta.html#Lean.Name.eraseSuffix?","doc":"`eraseSuffix? n s` return `n'` if `n` is of the form `n == n' ++ s`.\n"},"Lean.Name.eraseMacroScopes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2800-L2803","name":"Lean.Name.eraseMacroScopes","docLink":"./Init/Prelude.html#Lean.Name.eraseMacroScopes","doc":""},"Lean.Name.eqStr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L46-L48","name":"Lean.Name.eqStr","docLink":"./Lean/Data/Name.html#Lean.Name.eqStr","doc":""},"Lean.Name.components'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L38-L41","name":"Lean.Name.components'","docLink":"./Lean/Data/Name.html#Lean.Name.components'","doc":""},"Lean.Name.components":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L43-L44","name":"Lean.Name.components","docLink":"./Lean/Data/Name.html#Lean.Name.components","doc":""},"Lean.Name.cmp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L62-L75","name":"Lean.Name.cmp","docLink":"./Lean/Data/Name.html#Lean.Name.cmp","doc":""},"Lean.Name.capitalize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L163-L165","name":"Lean.Name.capitalize","docLink":"./Init/Meta.html#Lean.Name.capitalize","doc":""},"Lean.Name.beq_iff_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L209-L211","name":"Lean.Name.beq_iff_eq","docLink":"./Init/Meta.html#Lean.Name.beq_iff_eq","doc":""},"Lean.Name.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2406-L2410","name":"Lean.Name.beq","docLink":"./Init/Prelude.html#Lean.Name.beq","doc":""},"Lean.Name.appendIndexAfter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L197-L200","name":"Lean.Name.appendIndexAfter","docLink":"./Init/Meta.html#Lean.Name.appendIndexAfter","doc":""},"Lean.Name.appendBefore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L203-L207","name":"Lean.Name.appendBefore","docLink":"./Init/Meta.html#Lean.Name.appendBefore","doc":""},"Lean.Name.appendAfter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L191-L194","name":"Lean.Name.appendAfter","docLink":"./Init/Meta.html#Lean.Name.appendAfter","doc":""},"Lean.Name.append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2422-L2425","name":"Lean.Name.append","docLink":"./Init/Prelude.html#Lean.Name.append","doc":"Append two hierarchical names. Example:\n```lean\n`Lean.Meta ++ `Tactic.simp\n```\nreturn `Lean.Meta.Tactic.simp`\n"},"Lean.Name.anonymous.sizeOf_spec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L75-L76","name":"Lean.Name.anonymous.sizeOf_spec","docLink":"./Init/SizeOf.html#Lean.Name.anonymous.sizeOf_spec","doc":""},"Lean.Name":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2353-L2375","name":"Lean.Name","docLink":"./Init/Prelude.html#Lean.Name","doc":"Hierarchical names. We use hierarchical names to name declarations and\nfor creating unique identifiers for free variables and metavariables.\n\nYou can create hierarchical names using the following quotation notation.\n```\n`Lean.Meta.whnf\n```\nIt is short for `.str (.str (.str .anonymous \"Lean\") \"Meta\") \"whnf\"`\nYou can use double quotes to request Lean to statically check whether the name\ncorresponds to a Lean declaration in scope.\n```\n``Lean.Meta.whnf\n```\nIf the name is not in scope, Lean will report an error.\n"},"Lean.MonadWithOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L102-L103","name":"Lean.MonadWithOptions","docLink":"./Lean/Data/Options.html#Lean.MonadWithOptions","doc":""},"Lean.MonadTracer.trace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L141-L142","name":"Lean.MonadTracer.trace","docLink":"./Lean/Util/Trace.html#Lean.MonadTracer.trace","doc":""},"Lean.MonadTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Trace.lean#L35-L37","name":"Lean.MonadTrace","docLink":"./Lean/Util/Trace.html#Lean.MonadTrace","doc":""},"Lean.MonadStateCacheT.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L89-L90","name":"Lean.MonadStateCacheT.run","docLink":"./Lean/Util/MonadCache.html#Lean.MonadStateCacheT.run","doc":""},"Lean.MonadStateCacheT.instMonadRefMonadStateCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L97-L97","name":"Lean.MonadStateCacheT.instMonadRefMonadStateCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadStateCacheT.instMonadRefMonadStateCacheT","doc":""},"Lean.MonadStateCacheT.instMonadMonadStateCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L92-L92","name":"Lean.MonadStateCacheT.instMonadMonadStateCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadStateCacheT.instMonadMonadStateCacheT","doc":""},"Lean.MonadStateCacheT.instMonadLiftMonadStateCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L93-L93","name":"Lean.MonadStateCacheT.instMonadLiftMonadStateCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadStateCacheT.instMonadLiftMonadStateCacheT","doc":""},"Lean.MonadStateCacheT.instMonadHashMapCacheAdapterMonadStateCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L85-L87","name":"Lean.MonadStateCacheT.instMonadHashMapCacheAdapterMonadStateCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadStateCacheT.instMonadHashMapCacheAdapterMonadStateCacheT","doc":""},"Lean.MonadStateCacheT.instMonadFinallyMonadStateCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L96-L96","name":"Lean.MonadStateCacheT.instMonadFinallyMonadStateCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadStateCacheT.instMonadFinallyMonadStateCacheT","doc":""},"Lean.MonadStateCacheT.instMonadExceptOfMonadStateCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L94-L94","name":"Lean.MonadStateCacheT.instMonadExceptOfMonadStateCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadStateCacheT.instMonadExceptOfMonadStateCacheT","doc":""},"Lean.MonadStateCacheT.instMonadControlMonadStateCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L95-L95","name":"Lean.MonadStateCacheT.instMonadControlMonadStateCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadStateCacheT.instMonadControlMonadStateCacheT","doc":""},"Lean.MonadStateCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L79-L79","name":"Lean.MonadStateCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadStateCacheT","doc":""},"Lean.MonadResolveName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L171-L173","name":"Lean.MonadResolveName","docLink":"./Lean/ResolveName.html#Lean.MonadResolveName","doc":""},"Lean.MonadRef.mkInfoFromRefPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2758-L2759","name":"Lean.MonadRef.mkInfoFromRefPos","docLink":"./Init/Prelude.html#Lean.MonadRef.mkInfoFromRefPos","doc":""},"Lean.MonadRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2710-L2712","name":"Lean.MonadRef","docLink":"./Init/Prelude.html#Lean.MonadRef","doc":""},"Lean.MonadRecDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L92-L95","name":"Lean.MonadRecDepth","docLink":"./Lean/Exception.html#Lean.MonadRecDepth","doc":""},"Lean.MonadQuotation.addMacroScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2883-L2886","name":"Lean.MonadQuotation.addMacroScope","docLink":"./Init/Prelude.html#Lean.MonadQuotation.addMacroScope","doc":""},"Lean.MonadQuotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2738-L2754","name":"Lean.MonadQuotation","docLink":"./Init/Prelude.html#Lean.MonadQuotation","doc":"A monad that supports syntax quotations. Syntax quotations (in term\nposition) are monadic values that when executed retrieve the current \"macro\nscope\" from the monad and apply it to every identifier they introduce\n(independent of whether this identifier turns out to be a reference to an\nexisting declaration, or an actually fresh binding during further\nelaboration). We also apply the position of the result of `getRef` to each\nintroduced symbol, which results in better error positions than not applying\nany position. "},"Lean.MonadOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Options.lean#L84-L85","name":"Lean.MonadOptions","docLink":"./Lean/Data/Options.html#Lean.MonadOptions","doc":""},"Lean.MonadNameGenerator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L241-L243","name":"Lean.MonadNameGenerator","docLink":"./Init/Meta.html#Lean.MonadNameGenerator","doc":""},"Lean.MonadMCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L305-L307","name":"Lean.MonadMCtx","docLink":"./Lean/MetavarContext.html#Lean.MonadMCtx","doc":""},"Lean.MonadLog":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Log.lean#L13-L21","name":"Lean.MonadLog","docLink":"./Lean/Log.html#Lean.MonadLog","doc":"The `MonadLog` interface for logging error messages.\n"},"Lean.MonadLCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L418-L419","name":"Lean.MonadLCtx","docLink":"./Lean/LocalContext.html#Lean.MonadLCtx","doc":"Class used to denote that `m` has a local context. "},"Lean.MonadHashMapCacheAdapter.instMonadCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L49-L51","name":"Lean.MonadHashMapCacheAdapter.instMonadCache","docLink":"./Lean/Util/MonadCache.html#Lean.MonadHashMapCacheAdapter.instMonadCache","doc":""},"Lean.MonadHashMapCacheAdapter.findCached?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L42-L44","name":"Lean.MonadHashMapCacheAdapter.findCached?","docLink":"./Lean/Util/MonadCache.html#Lean.MonadHashMapCacheAdapter.findCached?","doc":""},"Lean.MonadHashMapCacheAdapter.cache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L46-L47","name":"Lean.MonadHashMapCacheAdapter.cache","docLink":"./Lean/Util/MonadCache.html#Lean.MonadHashMapCacheAdapter.cache","doc":""},"Lean.MonadHashMapCacheAdapter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L36-L38","name":"Lean.MonadHashMapCacheAdapter","docLink":"./Lean/Util/MonadCache.html#Lean.MonadHashMapCacheAdapter","doc":"Adapter for implementing `MonadCache` interface using `HashMap`s.\nWe just have to specify how to extract/modify the `HashMap`. "},"Lean.MonadFileMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L38-L39","name":"Lean.MonadFileMap","docLink":"./Lean/Data/Position.html#Lean.MonadFileMap","doc":""},"Lean.MonadError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L50-L53","name":"Lean.MonadError","docLink":"./Lean/Exception.html#Lean.MonadError","doc":""},"Lean.MonadEnv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L831-L833","name":"Lean.MonadEnv","docLink":"./Lean/Environment.html#Lean.MonadEnv","doc":""},"Lean.MonadCacheT.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L65-L66","name":"Lean.MonadCacheT.run","docLink":"./Lean/Util/MonadCache.html#Lean.MonadCacheT.run","doc":""},"Lean.MonadCacheT.instMonadRefMonadCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L73-L73","name":"Lean.MonadCacheT.instMonadRefMonadCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadCacheT.instMonadRefMonadCacheT","doc":""},"Lean.MonadCacheT.instMonadMonadCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L68-L68","name":"Lean.MonadCacheT.instMonadMonadCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadCacheT.instMonadMonadCacheT","doc":""},"Lean.MonadCacheT.instMonadLiftMonadCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L69-L69","name":"Lean.MonadCacheT.instMonadLiftMonadCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadCacheT.instMonadLiftMonadCacheT","doc":""},"Lean.MonadCacheT.instMonadHashMapCacheAdapterMonadCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L61-L63","name":"Lean.MonadCacheT.instMonadHashMapCacheAdapterMonadCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadCacheT.instMonadHashMapCacheAdapterMonadCacheT","doc":""},"Lean.MonadCacheT.instMonadFinallyMonadCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L72-L72","name":"Lean.MonadCacheT.instMonadFinallyMonadCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadCacheT.instMonadFinallyMonadCacheT","doc":""},"Lean.MonadCacheT.instMonadExceptOfMonadCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L70-L70","name":"Lean.MonadCacheT.instMonadExceptOfMonadCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadCacheT.instMonadExceptOfMonadCacheT","doc":""},"Lean.MonadCacheT.instMonadControlMonadCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L71-L71","name":"Lean.MonadCacheT.instMonadControlMonadCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadCacheT.instMonadControlMonadCacheT","doc":""},"Lean.MonadCacheT.instAlternativeMonadCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L74-L74","name":"Lean.MonadCacheT.instAlternativeMonadCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadCacheT.instAlternativeMonadCacheT","doc":""},"Lean.MonadCacheT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L55-L55","name":"Lean.MonadCacheT","docLink":"./Lean/Util/MonadCache.html#Lean.MonadCacheT","doc":""},"Lean.MonadCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadCache.lean#L10-L12","name":"Lean.MonadCache","docLink":"./Lean/Util/MonadCache.html#Lean.MonadCache","doc":"Interface for caching results.  "},"Lean.MonadBacktrack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/MonadBacktrack.lean#L10-L12","name":"Lean.MonadBacktrack","docLink":"./Lean/Util/MonadBacktrack.html#Lean.MonadBacktrack","doc":"Similar to `MonadState`, but it retrieves/restores only the \"backtrackable\" part of the state "},"Lean.ModuleIdx.toNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L22-L22","name":"Lean.ModuleIdx.toNat","docLink":"./Lean/Environment.html#Lean.ModuleIdx.toNat","doc":""},"Lean.ModuleIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L21-L21","name":"Lean.ModuleIdx","docLink":"./Lean/Environment.html#Lean.ModuleIdx","doc":""},"Lean.ModuleDoc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DocString.lean#L71-L73","name":"Lean.ModuleDoc","docLink":"./Lean/DocString.html#Lean.ModuleDoc","doc":""},"Lean.ModuleData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L54-L58","name":"Lean.ModuleData","docLink":"./Lean/Environment.html#Lean.ModuleData","doc":"Content of a .olean file.\nWe use `compact.cpp` to generate the image of this object in disk. "},"Lean.Module":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L452-L454","name":"Lean.Module","docLink":"./Init/Meta.html#Lean.Module","doc":"Syntax objects for a Lean module. "},"Lean.MetavarKind.isSyntheticOpaque":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L249-L251","name":"Lean.MetavarKind.isSyntheticOpaque","docLink":"./Lean/MetavarContext.html#Lean.MetavarKind.isSyntheticOpaque","doc":""},"Lean.MetavarKind.isNatural":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L253-L255","name":"Lean.MetavarKind.isNatural","docLink":"./Lean/MetavarContext.html#Lean.MetavarKind.isNatural","doc":""},"Lean.MetavarKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L243-L247","name":"Lean.MetavarKind","docLink":"./Lean/MetavarContext.html#Lean.MetavarKind","doc":""},"Lean.MetavarDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L257-L273","name":"Lean.MetavarDecl","docLink":"./Lean/MetavarContext.html#Lean.MetavarDecl","doc":""},"Lean.MetavarContext.setMVarUserNameTemporarily":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L794-L796","name":"Lean.MetavarContext.setMVarUserNameTemporarily","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.setMVarUserNameTemporarily","doc":"Low-level version of `setMVarUserName`.\nIt does not update the table `userNames`. Thus, `findUserName?` cannot see the modification.\nIt is meant for `mkForallFVars'` where we temporarily set the user facing name of metavariables to get more\nmeaningful binder names.\n"},"Lean.MetavarContext.setMVarUserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L780-L786","name":"Lean.MetavarContext.setMVarUserName","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.setMVarUserName","doc":"Set the metavariable user facing name.\n"},"Lean.MetavarContext.setMVarType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L800-L802","name":"Lean.MetavarContext.setMVarType","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.setMVarType","doc":"Update the type of the given metavariable. This function assumes the new type is\ndefinitionally equal to the current one "},"Lean.MetavarContext.setMVarKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L773-L775","name":"Lean.MetavarContext.setMVarKind","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.setMVarKind","doc":""},"Lean.MetavarContext.revert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1168-L1169","name":"Lean.MetavarContext.revert","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.revert","doc":""},"Lean.MetavarContext.mkMetavarContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L731-L731","name":"Lean.MetavarContext.mkMetavarContext","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.mkMetavarContext","doc":""},"Lean.MetavarContext.mkLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1175-L1176","name":"Lean.MetavarContext.mkLambda","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.mkLambda","doc":""},"Lean.MetavarContext.mkForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1178-L1179","name":"Lean.MetavarContext.mkForall","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.mkForall","doc":""},"Lean.MetavarContext.mkBinding":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1171-L1173","name":"Lean.MetavarContext.mkBinding","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.mkBinding","doc":""},"Lean.MetavarContext.levelMVarToParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1297-L1303","name":"Lean.MetavarContext.levelMVarToParam","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.levelMVarToParam","doc":""},"Lean.MetavarContext.isWellFormed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1191-L1209","name":"Lean.MetavarContext.isWellFormed","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.isWellFormed","doc":"`isWellFormed mctx lctx e` return true if\n- All locals in `e` are declared in `lctx`\n- All metavariables `?m` in `e` have a local context which is a subprefix of `lctx` or are assigned, and the assignment is well-formed. "},"Lean.MetavarContext.isAnonymousMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L812-L815","name":"Lean.MetavarContext.isAnonymousMVar","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.isAnonymousMVar","doc":""},"Lean.MetavarContext.instMonadMCtxStateRefT'MetavarContextST":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L820-L822","name":"Lean.MetavarContext.instMonadMCtxStateRefT'MetavarContextST","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.instMonadMCtxStateRefT'MetavarContextST","doc":""},"Lean.MetavarContext.instInhabitedMetavarContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L728-L728","name":"Lean.MetavarContext.instInhabitedMetavarContext","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.instInhabitedMetavarContext","doc":""},"Lean.MetavarContext.incDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L817-L818","name":"Lean.MetavarContext.incDepth","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.incDepth","doc":""},"Lean.MetavarContext.getLevelDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L807-L810","name":"Lean.MetavarContext.getLevelDepth","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.getLevelDepth","doc":""},"Lean.MetavarContext.getExprAssignmentDomain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1305-L1306","name":"Lean.MetavarContext.getExprAssignmentDomain","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.getExprAssignmentDomain","doc":""},"Lean.MetavarContext.getExprAssignmentCore?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L321-L322","name":"Lean.MetavarContext.getExprAssignmentCore?","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.getExprAssignmentCore?","doc":""},"Lean.MetavarContext.getDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L367-L370","name":"Lean.MetavarContext.getDecl","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.getDecl","doc":""},"Lean.MetavarContext.findUserName?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L770-L771","name":"Lean.MetavarContext.findUserName?","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.findUserName?","doc":""},"Lean.MetavarContext.findLevelDepth?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L804-L805","name":"Lean.MetavarContext.findLevelDepth?","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.findLevelDepth?","doc":""},"Lean.MetavarContext.findDecl?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L767-L768","name":"Lean.MetavarContext.findDecl?","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.findDecl?","doc":""},"Lean.MetavarContext.elimMVarDeps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1165-L1166","name":"Lean.MetavarContext.elimMVarDeps","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.elimMVarDeps","doc":""},"Lean.MetavarContext.collectForwardDeps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1184-L1185","name":"Lean.MetavarContext.collectForwardDeps","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.collectForwardDeps","doc":""},"Lean.MetavarContext.addLevelMVarDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L764-L765","name":"Lean.MetavarContext.addLevelMVarDecl","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.addLevelMVarDecl","doc":"Low level API for adding/declaring universe level metavariable declarations.\nIt is used to implement actions in the monads `MetaM`, `ElabM` and `TacticM`.\nIt should not be used directly since the argument `(mvarId : MVarId)` is assumed to be \"unique\". "},"Lean.MetavarContext.addExprMVarDeclExp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L757-L759","name":"Lean.MetavarContext.addExprMVarDeclExp","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.addExprMVarDeclExp","doc":""},"Lean.MetavarContext.addExprMVarDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L736-L755","name":"Lean.MetavarContext.addExprMVarDecl","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.addExprMVarDecl","doc":"Low level API for adding/declaring metavariable declarations.\nIt is used to implement actions in the monads `MetaM`, `ElabM` and `TacticM`.\nIt should not be used directly since the argument `(mvarId : MVarId)` is assumed to be \"unique\". "},"Lean.MetavarContext.abstractRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1181-L1182","name":"Lean.MetavarContext.abstractRange","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.abstractRange","doc":""},"Lean.MetavarContext.UnivMVarParamResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1291-L1295","name":"Lean.MetavarContext.UnivMVarParamResult","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.UnivMVarParamResult","doc":""},"Lean.MetavarContext.MkBindingM.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1159-L1161","name":"Lean.MetavarContext.MkBindingM.Context","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBindingM.Context","doc":""},"Lean.MetavarContext.MkBindingM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1163-L1163","name":"Lean.MetavarContext.MkBindingM","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBindingM","doc":""},"Lean.MetavarContext.MkBinding.revert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1106-L1108","name":"Lean.MetavarContext.MkBinding.revert","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.revert","doc":""},"Lean.MetavarContext.MkBinding.reduceLocalContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L945-L947","name":"Lean.MetavarContext.MkBinding.reduceLocalContext","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.reduceLocalContext","doc":"Create a new `LocalContext` by removing the free variables in `toRevert` from `lctx`.\nWe use this function when we create auxiliary metavariables at `elimMVarDepsAux`. "},"Lean.MetavarContext.MkBinding.preserveOrder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L867-L868","name":"Lean.MetavarContext.MkBinding.preserveOrder","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.preserveOrder","doc":""},"Lean.MetavarContext.MkBinding.mkBinding":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1124-L1155","name":"Lean.MetavarContext.MkBinding.mkBinding","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.mkBinding","doc":"Similar to `LocalContext.mkBinding`, but handles metavariables correctly.\nIf `usedOnly == false` then `forall` and `lambda` expressions are created only for used variables.\nIf `usedLetOnly == false` then `let` expressions are created only for used (let-) variables. "},"Lean.MetavarContext.MkBinding.instToStringException":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L829-L835","name":"Lean.MetavarContext.MkBinding.instToStringException","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.instToStringException","doc":""},"Lean.MetavarContext.MkBinding.instMonadMCtxM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L859-L861","name":"Lean.MetavarContext.MkBinding.instMonadMCtxM","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.instMonadMCtxM","doc":""},"Lean.MetavarContext.MkBinding.instMonadHashMapCacheAdapterExprStructEqExprMInstBEqExprStructEqInstHashableExprStructEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L870-L872","name":"Lean.MetavarContext.MkBinding.instMonadHashMapCacheAdapterExprStructEqExprMInstBEqExprStructEqInstHashableExprStructEq","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.instMonadHashMapCacheAdapterExprStructEqExprMInstBEqExprStructEqInstHashableExprStructEq","doc":""},"Lean.MetavarContext.MkBinding.elimMVarDeps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1099-L1104","name":"Lean.MetavarContext.MkBinding.elimMVarDeps","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.elimMVarDeps","doc":""},"Lean.MetavarContext.MkBinding.collectForwardDeps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L917-L941","name":"Lean.MetavarContext.MkBinding.collectForwardDeps","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.collectForwardDeps","doc":"Given `toRevert` an array of free variables s.t. `lctx` contains their declarations,\n  return a new array of free variables that contains `toRevert` and all free variables\n  in `lctx` that may depend on `toRevert`.\n\n  Remark: the result is sorted by `LocalDecl` indices.\n\n  Remark: We used to throw an `Exception.revertFailure` exception when an auxiliary declaration\n  had to be reversed. Recall that auxiliary declarations are created when compiling (mutually)\n  recursive definitions. The `revertFailure` due to auxiliary declaration dependency was originally\n  introduced in Lean3 to address issue https://github.com/leanprover/lean/issues/1258.\n  In Lean4, this solution is not satisfactory because all definitions/theorems are potentially\n  recursive. So, even an simple (incomplete) definition such as\n  ```\n  variables {α : Type} in\n  def f (a : α) : List α :=\n  _\n  ```\n  would trigger the `Exception.revertFailure` exception. In the definition above,\n  the elaborator creates the auxiliary definition `f : {α : Type} → List α`.\n  The `_` is elaborated as a new fresh variable `?m` that contains `α : Type`, `a : α`, and `f : α → List α` in its context,\n  When we try to create the lambda `fun {α : Type} (a : α) => ?m`, we first need to create\n  an auxiliary `?n` which do not contain `α` and `a` in its context. That is,\n  we create the metavariable `?n : {α : Type} → (a : α) → (f : α → List α) → List α`,\n  add the delayed assignment `?n #[α, a, f] := ?m α a f`, and create the lambda\n  `fun {α : Type} (a : α) => ?n α a f`.\n  See `elimMVarDeps` for more information.\n  If we kept using the Lean3 approach, we would get the `Exception.revertFailure` exception because we are\n  reverting the auxiliary definition `f`.\n\n  Note that https://github.com/leanprover/lean/issues/1258 is not an issue in Lean4 because\n  we have changed how we compile recursive definitions.\n"},"Lean.MetavarContext.MkBinding.abstractRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1116-L1118","name":"Lean.MetavarContext.MkBinding.abstractRange","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.abstractRange","doc":"Similar to `Expr.abstractRange`, but handles metavariables correctly.\n  It uses `elimMVarDeps` to ensure `e` and the type of the free variables `xs` do not\n  contain a metavariable `?m` s.t. local context of `?m` contains a free variable in `xs`.\n\n  `elimMVarDeps` is defined later in this file. "},"Lean.MetavarContext.MkBinding.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L842-L846","name":"Lean.MetavarContext.MkBinding.State","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.State","doc":"`MkBinding` and `elimMVarDepsAux` are mutually recursive, but `cache` is only used at `elimMVarDepsAux`.\n  We use a single state object for convenience.\n\n  We have a `NameGenerator` because we need to generate fresh auxiliary metavariables. "},"Lean.MetavarContext.MkBinding.MCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L856-L856","name":"Lean.MetavarContext.MkBinding.MCore","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.MCore","doc":""},"Lean.MetavarContext.MkBinding.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L857-L857","name":"Lean.MetavarContext.MkBinding.M","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.M","doc":""},"Lean.MetavarContext.MkBinding.Exception":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L826-L827","name":"Lean.MetavarContext.MkBinding.Exception","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.Exception","doc":""},"Lean.MetavarContext.MkBinding.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L848-L854","name":"Lean.MetavarContext.MkBinding.Context","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.MkBinding.Context","doc":""},"Lean.MetavarContext.LevelMVarToParam.visitLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1245-L1262","name":"Lean.MetavarContext.LevelMVarToParam.visitLevel","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.LevelMVarToParam.visitLevel","doc":""},"Lean.MetavarContext.LevelMVarToParam.mkParamName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1234-L1243","name":"Lean.MetavarContext.LevelMVarToParam.mkParamName","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.LevelMVarToParam.mkParamName","doc":""},"Lean.MetavarContext.LevelMVarToParam.main.visitApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1281-L1287","name":"Lean.MetavarContext.LevelMVarToParam.main.visitApp","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.LevelMVarToParam.main.visitApp","doc":""},"Lean.MetavarContext.LevelMVarToParam.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1264-L1287","name":"Lean.MetavarContext.LevelMVarToParam.main","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.LevelMVarToParam.main","doc":""},"Lean.MetavarContext.LevelMVarToParam.instMonadMCtxM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1226-L1228","name":"Lean.MetavarContext.LevelMVarToParam.instMonadMCtxM","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.LevelMVarToParam.instMonadMCtxM","doc":""},"Lean.MetavarContext.LevelMVarToParam.instMonadCacheExprStructEqExprM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1230-L1232","name":"Lean.MetavarContext.LevelMVarToParam.instMonadCacheExprStructEqExprM","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.LevelMVarToParam.instMonadCacheExprStructEqExprM","doc":""},"Lean.MetavarContext.LevelMVarToParam.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1218-L1222","name":"Lean.MetavarContext.LevelMVarToParam.State","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.LevelMVarToParam.State","doc":""},"Lean.MetavarContext.LevelMVarToParam.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1224-L1224","name":"Lean.MetavarContext.LevelMVarToParam.M","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.LevelMVarToParam.M","doc":""},"Lean.MetavarContext.LevelMVarToParam.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L1213-L1216","name":"Lean.MetavarContext.LevelMVarToParam.Context","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext.LevelMVarToParam.Context","doc":""},"Lean.MetavarContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L295-L303","name":"Lean.MetavarContext","docLink":"./Lean/MetavarContext.html#Lean.MetavarContext","doc":""},"Lean.MetaEval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Eval.lean#L17-L18","name":"Lean.MetaEval","docLink":"./Lean/Eval.html#Lean.MetaEval","doc":"`Eval` extension that gives access to the current environment & options.\nThe basic `Eval` class is in the prelude and should not depend on these\ntypes.\n"},"Lean.Meta.zetaReduce":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L111-L123","name":"Lean.Meta.zetaReduce","docLink":"./Lean/Meta/Transform.html#Lean.Meta.zetaReduce","doc":""},"Lean.Meta.withoutProofIrrelevance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L795-L796","name":"Lean.Meta.withoutProofIrrelevance","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withoutProofIrrelevance","doc":""},"Lean.Meta.withTransparency":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L798-L799","name":"Lean.Meta.withTransparency","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withTransparency","doc":""},"Lean.Meta.withTrackingZeta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L792-L793","name":"Lean.Meta.withTrackingZeta","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withTrackingZeta","doc":""},"Lean.Meta.withReducibleAndInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L813-L814","name":"Lean.Meta.withReducibleAndInstances","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withReducibleAndInstances","doc":"`withReducibleAndInstances x` excutes `x` using the `.instances` transparency setting. In this setting only definitions tagged as `[reducible]`\nor type class instances are unfolded.\n"},"Lean.Meta.withReducible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L806-L807","name":"Lean.Meta.withReducible","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withReducible","doc":"`withReducible x` excutes `x` using the reducible transparency setting. In this setting only definitions tagged as `[reducible]` are unfolded. "},"Lean.Meta.withPPShowLetValuesImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L35-L36","name":"Lean.Meta.withPPShowLetValuesImp","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.withPPShowLetValuesImp","doc":""},"Lean.Meta.withPPShowLetValues":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L38-L39","name":"Lean.Meta.withPPShowLetValues","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.withPPShowLetValues","doc":""},"Lean.Meta.withPPInaccessibleNamesImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L29-L30","name":"Lean.Meta.withPPInaccessibleNamesImp","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.withPPInaccessibleNamesImp","doc":""},"Lean.Meta.withPPInaccessibleNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L32-L33","name":"Lean.Meta.withPPInaccessibleNames","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.withPPInaccessibleNames","doc":""},"Lean.Meta.withPPForTacticGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L44-L45","name":"Lean.Meta.withPPForTacticGoal","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.withPPForTacticGoal","doc":"Set pretty-printing options (`pp.showLetValues = true` and `pp.inaccessibleNames = true`) for visualizing goals.\n"},"Lean.Meta.withNewMCtxDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1341-L1342","name":"Lean.Meta.withNewMCtxDepth","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withNewMCtxDepth","doc":"Save cache and `MetavarContext`, bump the `MetavarContext` depth, execute `x`,\n  and restore saved data.\n\n  Metavariable context depths are used to control which metavariables may be assigned in `isDefEq`.\n  See the docstring of `isDefEq` for more information.\n   "},"Lean.Meta.withNewLocalInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1068-L1069","name":"Lean.Meta.withNewLocalInstances","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withNewLocalInstances","doc":""},"Lean.Meta.withNewLocalInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L929-L930","name":"Lean.Meta.withNewLocalInstance","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withNewLocalInstance","doc":"Add entry `{ className := className, fvar := fvar }` to localInstances,\nand then execute continuation `k`.\nIt resets the type class cache using `resettingSynthInstanceCache`. "},"Lean.Meta.withNewBinderInfos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1261-L1262","name":"Lean.Meta.withNewBinderInfos","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withNewBinderInfos","doc":""},"Lean.Meta.withNatValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L769-L774","name":"Lean.Meta.withNatValue","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.withNatValue","doc":""},"Lean.Meta.withMVarContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1372-L1373","name":"Lean.Meta.withMVarContext","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withMVarContext","doc":""},"Lean.Meta.withMCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1385-L1386","name":"Lean.Meta.withMCtx","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withMCtx","doc":"`withMCtx mctx k` replaces the metavariable context and then executes `k`.\n  The metavariable context is restored after executing `k`.\n\n  This method is used to implement the type class resolution procedure. "},"Lean.Meta.withLocalInstancesImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1291-L1301","name":"Lean.Meta.withLocalInstancesImp","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withLocalInstancesImp","doc":""},"Lean.Meta.withLocalInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1304-L1305","name":"Lean.Meta.withLocalInstances","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withLocalInstances","doc":"Register any local instance in `decls` "},"Lean.Meta.withLocalDeclsD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1252-L1254","name":"Lean.Meta.withLocalDeclsD","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withLocalDeclsD","doc":""},"Lean.Meta.withLocalDecls.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1245-L1250","name":"Lean.Meta.withLocalDecls.loop","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withLocalDecls.loop","doc":""},"Lean.Meta.withLocalDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1238-L1250","name":"Lean.Meta.withLocalDecls","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withLocalDecls","doc":"Append an array of free variables `xs` to the local context and execute `k xs`.\ndeclInfos takes the form of an array consisting of:\n- the name of the variable\n- the binder info of the variable\n- a type constructor for the variable, where the array consists of all of the free variables\n  defined prior to this one. This is needed because the type of the variable may depend on prior variables.\n"},"Lean.Meta.withLocalDeclD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1228-L1229","name":"Lean.Meta.withLocalDeclD","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withLocalDeclD","doc":""},"Lean.Meta.withLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1225-L1226","name":"Lean.Meta.withLocalDecl","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withLocalDecl","doc":"Create a free variable `x` with name, binderInfo and type, add it to the context and run in `k`.\nThen revert the context. "},"Lean.Meta.withLetDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1288-L1289","name":"Lean.Meta.withLetDecl","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withLetDecl","doc":"Add the local declaration `<name> : <type> := <val>` to the local context and execute `k x`, where `x` is a new\nfree variable corresponding to the `let`-declaration. After executing `k x`, the local context is restored.\n"},"Lean.Meta.withLCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1357-L1358","name":"Lean.Meta.withLCtx","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withLCtx","doc":"`withLCtx lctx localInsts k` replaces the local context and local instances, and then executes `k`.\nThe local context and instances are restored after executing `k`.\nThis method assumes that the local instances in `localInsts` are in the local context `lctx`.\n"},"Lean.Meta.withInstImplicitAsImplict":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1267-L1274","name":"Lean.Meta.withInstImplicitAsImplict","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withInstImplicitAsImplict","doc":"Execute `k` using a local context where any `x` in `xs` that is tagged as\ninstance implicit is treated as a regular implicit. "},"Lean.Meta.withIncRecDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L448-L449","name":"Lean.Meta.withIncRecDepth","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withIncRecDepth","doc":""},"Lean.Meta.withExistingLocalDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1323-L1324","name":"Lean.Meta.withExistingLocalDecls","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withExistingLocalDecls","doc":"`withExistingLocalDecls decls k`, adds the given local declarations to the local context,\n  and then executes `k`. This method assumes declarations in `decls` have valid `FVarId`s.\n  After executing `k`, the local context is restored.\n\n  Remark: this method is used, for example, to implement the `match`-compiler.\n  Each `match`-alternative commes with a local declarations (corresponding to pattern variables),\n  and we use `withExistingLocalDecls` to add them to the local context before we process\n  them.\n"},"Lean.Meta.withDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L802-L803","name":"Lean.Meta.withDefault","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withDefault","doc":"`withDefault x` excutes `x` using the default transparency setting. "},"Lean.Meta.withConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L789-L790","name":"Lean.Meta.withConfig","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withConfig","doc":"`withConfig f x` executes `x` using the updated configuration object obtained by applying `f`. "},"Lean.Meta.withAtLeastTransparency":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L820-L826","name":"Lean.Meta.withAtLeastTransparency","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withAtLeastTransparency","doc":"Execute `x` ensuring the transparency setting is at least `mode`.\nRecall that `.all > .default > .instances > .reducible`.\n"},"Lean.Meta.withAssignableSyntheticOpaque":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L829-L830","name":"Lean.Meta.withAssignableSyntheticOpaque","docLink":"./Lean/Meta/Basic.html#Lean.Meta.withAssignableSyntheticOpaque","doc":"Execute `x` allowing `isDefEq` to assign synthetic opaque metavariables. "},"Lean.Meta.whnfUntil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L728-L733","name":"Lean.Meta.whnfUntil","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.whnfUntil","doc":""},"Lean.Meta.whnfR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1414-L1415","name":"Lean.Meta.whnfR","docLink":"./Lean/Meta/Basic.html#Lean.Meta.whnfR","doc":"`whnf` with reducible transparency."},"Lean.Meta.whnfImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L842-L858","name":"Lean.Meta.whnfImp","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.whnfImp","doc":""},"Lean.Meta.whnfI":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1422-L1423","name":"Lean.Meta.whnfI","docLink":"./Lean/Meta/Basic.html#Lean.Meta.whnfI","doc":"`whnf` with instances transparency."},"Lean.Meta.whnfHeadPred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L718-L726","name":"Lean.Meta.whnfHeadPred","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.whnfHeadPred","doc":""},"Lean.Meta.whnfForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L443-L445","name":"Lean.Meta.whnfForall","docLink":"./Lean/Meta/Basic.html#Lean.Meta.whnfForall","doc":""},"Lean.Meta.whnfEasyCases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L303-L330","name":"Lean.Meta.whnfEasyCases","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.whnfEasyCases","doc":"Auxiliary combinator for handling easy WHNF cases. It takes a function for handling the \"hard\" cases as an argument "},"Lean.Meta.whnfD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1418-L1419","name":"Lean.Meta.whnfD","docLink":"./Lean/Meta/Basic.html#Lean.Meta.whnfD","doc":"`whnf` with default transparency."},"Lean.Meta.whnfCore.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L502-L538","name":"Lean.Meta.whnfCore.go","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.whnfCore.go","doc":""},"Lean.Meta.whnfCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L499-L538","name":"Lean.Meta.whnfCore","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.whnfCore","doc":"Apply beta-reduction, zeta-reduction (i.e., unfold let local-decls), iota-reduction,\n  expand let-expressions, expand assigned meta-variables.\n\n  The parameter `deltaAtProj` controls how to reduce projections `s.i`. If `deltaAtProj == true`,\n  then delta reduction is used to reduce `s` (i.e., `whnf` is used), otherwise `whnfCore`.\n  We only set this flag to `false` when implementing `isDefEq`.\n"},"Lean.Meta.whnf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L436-L436","name":"Lean.Meta.whnf","docLink":"./Lean/Meta/Basic.html#Lean.Meta.whnf","doc":"Reduces an expression to its Weak Head Normal Form.\nThis is when the topmost expression has been fully reduced,\nbut may contain subexpressions which have not been reduced. "},"Lean.Meta.whenUndefDo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L1605-L1610","name":"Lean.Meta.whenUndefDo","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.whenUndefDo","doc":""},"Lean.Meta.viewSubexpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprLens.lean#L84-L87","name":"Lean.Meta.viewSubexpr","docLink":"./Lean/Meta/ExprLens.html#Lean.Meta.viewSubexpr","doc":"`view visit p e` runs `visit fvars s` where `s : Expr` is the subexpression of `e` at `p`.\nand `fvars` are the free variables for the binders that `s` is under.\n`s` is already instantiated with respect to these.\nThe role of the `visit` function is analogous to the `k` function in `Lean.Meta.forallTelescope`. "},"Lean.Meta.useEtaStruct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L422-L426","name":"Lean.Meta.useEtaStruct","docLink":"./Lean/Meta/Basic.html#Lean.Meta.useEtaStruct","doc":"`useEtaStruct inductName` return `true` if we eta for structures is enabled for\n  for the inductive datatype `inductName`.\n\n  Recall we have three different settings: `.none` (never use it), `.all` (always use it), `.notClasses`\n  (enabled only for structure-like inductive types that are not classes).\n\n  The parameter `inductName` affects the result only if the current setting is `.notClasses`.\n"},"Lean.Meta.unifyEq?.substEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/UnifyEq.lean#L55-L65","name":"Lean.Meta.unifyEq?.substEq","docLink":"./Lean/Meta/Tactic/UnifyEq.html#Lean.Meta.unifyEq?.substEq","doc":""},"Lean.Meta.unifyEq?.injection":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/UnifyEq.lean#L66-L86","name":"Lean.Meta.unifyEq?.injection","docLink":"./Lean/Meta/Tactic/UnifyEq.html#Lean.Meta.unifyEq?.injection","doc":""},"Lean.Meta.unifyEq?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/UnifyEq.lean#L37-L102","name":"Lean.Meta.unifyEq?","docLink":"./Lean/Meta/Tactic/UnifyEq.html#Lean.Meta.unifyEq?","doc":"Helper method for methods such as `Cases.unifyEqs?`.\n  Given the given goal `mvarId` containing the local hypothesis `eqFVarId`, it performs the following operations:\n\n  - If `eqFVarId` is a heterogeneous equality, tries to convert it to a homogeneous one.\n  - If `eqFVarId` is a homogeneous equality of the form `a = b`, it tries\n     - If `a` and `b` are definitionally equal, clear it\n     - Normalize `a` and `b` using the current reducibility setting.\n     - If `a` (`b`) is a free variable not occurring in `b` (`a`), replace it everywhere.\n     - If `a` and `b` are distinct constructors, return `none` to indicate that the goal has been closed.\n     - If `a` and `b` are the same contructor, apply `injection`, the result contains the number of new equalities introduced in the goal.\n     - It also tries to apply the given `acyclic` method to try to close the goal.\n       Remark: It is a parameter because `simp` uses `unifyEq?`, and `acyclic` depends on `simp`.\n"},"Lean.Meta.unificationHintExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L28-L28","name":"Lean.Meta.unificationHintExtension","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.unificationHintExtension","doc":""},"Lean.Meta.unfoldTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Unfold.lean#L33-L37","name":"Lean.Meta.unfoldTarget","docLink":"./Lean/Meta/Tactic/Unfold.html#Lean.Meta.unfoldTarget","doc":""},"Lean.Meta.unfoldProjInstWhenIntances?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L626-L630","name":"Lean.Meta.unfoldProjInstWhenIntances?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.unfoldProjInstWhenIntances?","doc":"Auxiliary method for unfolding a class projection. when transparency is set to `TransparencyMode.instances`.\nRecall that class instance projections are not marked with `[reducible]` because we want them to be\nin \"reducible canonical form\".\n"},"Lean.Meta.unfoldProjInst?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L607-L619","name":"Lean.Meta.unfoldProjInst?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.unfoldProjInst?","doc":"Auxiliary method for unfolding a class projection.\n"},"Lean.Meta.unfoldLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Unfold.lean#L39-L44","name":"Lean.Meta.unfoldLocalDecl","docLink":"./Lean/Meta/Tactic/Unfold.html#Lean.Meta.unfoldLocalDecl","doc":""},"Lean.Meta.unfoldDefinition?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L633-L711","name":"Lean.Meta.unfoldDefinition?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.unfoldDefinition?","doc":"Unfold definition using \"smart unfolding\" if possible. "},"Lean.Meta.unfoldDefinition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L714-L716","name":"Lean.Meta.unfoldDefinition","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.unfoldDefinition","doc":""},"Lean.Meta.unfoldDeclsFrom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L126-L143","name":"Lean.Meta.unfoldDeclsFrom","docLink":"./Lean/Meta/Transform.html#Lean.Meta.unfoldDeclsFrom","doc":"Unfold definitions and theorems in `e` that are not in the current environment, but are in `biggerEnv`. "},"Lean.Meta.unfold.pre":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Unfold.lean#L25-L31","name":"Lean.Meta.unfold.pre","docLink":"./Lean/Meta/Tactic/Unfold.html#Lean.Meta.unfold.pre","doc":""},"Lean.Meta.unfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Unfold.lean#L19-L31","name":"Lean.Meta.unfold","docLink":"./Lean/Meta/Tactic/Unfold.html#Lean.Meta.unfold","doc":""},"Lean.Meta.tryUnificationHints.tryCandidate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L107-L134","name":"Lean.Meta.tryUnificationHints.tryCandidate","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.tryUnificationHints.tryCandidate","doc":""},"Lean.Meta.tryUnificationHints.isDefEqPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L104-L105","name":"Lean.Meta.tryUnificationHints.isDefEqPattern","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.tryUnificationHints.isDefEqPattern","doc":""},"Lean.Meta.tryUnificationHints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L91-L134","name":"Lean.Meta.tryUnificationHints","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.tryUnificationHints","doc":""},"Lean.Meta.trySynthInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L737-L740","name":"Lean.Meta.trySynthInstance","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.trySynthInstance","doc":"Return `LOption.some r` if succeeded, `LOption.none` if it failed, and `LOption.undef` if\ninstance cannot be synthesized right now because `type` contains metavariables. "},"Lean.Meta.trySubst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Subst.lean#L210-L213","name":"Lean.Meta.trySubst","docLink":"./Lean/Meta/Tactic/Subst.html#Lean.Meta.trySubst","doc":""},"Lean.Meta.tryClearMany":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Clear.lean#L59-L60","name":"Lean.Meta.tryClearMany","docLink":"./Lean/Meta/Tactic/Clear.html#Lean.Meta.tryClearMany","doc":""},"Lean.Meta.tryClear":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Clear.lean#L49-L50","name":"Lean.Meta.tryClear","docLink":"./Lean/Meta/Tactic/Clear.html#Lean.Meta.tryClear","doc":""},"Lean.Meta.traverseLetWithPos.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprTraverse.lean#L47-L57","name":"Lean.Meta.traverseLetWithPos.visit","docLink":"./Lean/Meta/ExprTraverse.html#Lean.Meta.traverseLetWithPos.visit","doc":""},"Lean.Meta.traverseLetWithPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprTraverse.lean#L45-L57","name":"Lean.Meta.traverseLetWithPos","docLink":"./Lean/Meta/ExprTraverse.html#Lean.Meta.traverseLetWithPos","doc":"Similar to `traverseLet` but with an additional pos argument to track position. "},"Lean.Meta.traverseLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprTraverse.lean#L84-L84","name":"Lean.Meta.traverseLet","docLink":"./Lean/Meta/ExprTraverse.html#Lean.Meta.traverseLet","doc":"Similar to `traverseLambda` and `traverseForall` but with let binders.  "},"Lean.Meta.traverseLambdaWithPos.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprTraverse.lean#L23-L30","name":"Lean.Meta.traverseLambdaWithPos.visit","docLink":"./Lean/Meta/ExprTraverse.html#Lean.Meta.traverseLambdaWithPos.visit","doc":""},"Lean.Meta.traverseLambdaWithPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprTraverse.lean#L21-L30","name":"Lean.Meta.traverseLambdaWithPos","docLink":"./Lean/Meta/ExprTraverse.html#Lean.Meta.traverseLambdaWithPos","doc":"Similar to `traverseLambda` but with an additional pos argument to track position. "},"Lean.Meta.traverseLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprTraverse.lean#L75-L75","name":"Lean.Meta.traverseLambda","docLink":"./Lean/Meta/ExprTraverse.html#Lean.Meta.traverseLambda","doc":"Given an expression `fun (x₁ : α₁) ... (xₙ : αₙ) => b`, will run\n`f` on each of the variable types `αᵢ` and `b` with the correct MetaM context,\nreplacing each expression with the output of `f` and creating a new lambda.\n(that is, correctly instantiating bound variables and repackaging them after)  "},"Lean.Meta.traverseForallWithPos.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprTraverse.lean#L35-L42","name":"Lean.Meta.traverseForallWithPos.visit","docLink":"./Lean/Meta/ExprTraverse.html#Lean.Meta.traverseForallWithPos.visit","doc":""},"Lean.Meta.traverseForallWithPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprTraverse.lean#L33-L42","name":"Lean.Meta.traverseForallWithPos","docLink":"./Lean/Meta/ExprTraverse.html#Lean.Meta.traverseForallWithPos","doc":"Similar to `traverseForall` but with an additional pos argument to track position. "},"Lean.Meta.traverseForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprTraverse.lean#L81-L81","name":"Lean.Meta.traverseForall","docLink":"./Lean/Meta/ExprTraverse.html#Lean.Meta.traverseForall","doc":"Given an expression ` (x₁ : α₁) → ... → (xₙ : αₙ) → b`, will run\n`f` on each of the variable types `αᵢ` and `b` with the correct MetaM context,\nreplacing the expression with the output of `f` and creating a new forall expression.\n(that is, correctly instantiating bound variables and repackaging them after)  "},"Lean.Meta.traverseChildrenWithPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprTraverse.lean#L61-L69","name":"Lean.Meta.traverseChildrenWithPos","docLink":"./Lean/Meta/ExprTraverse.html#Lean.Meta.traverseChildrenWithPos","doc":"Similar to `Lean.Meta.traverseChildren` except that `visit` also includes a `Pos` argument so you can\ntrack the subexpression position. "},"Lean.Meta.traverseChildren":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprTraverse.lean#L94-L94","name":"Lean.Meta.traverseChildren","docLink":"./Lean/Meta/ExprTraverse.html#Lean.Meta.traverseChildren","doc":"Maps `visit` on each child of the given expression.\n\nApplications, foralls, lambdas and let binders are bundled (as they are bundled in `Expr.traverseApp`, `traverseForall`, ...).\nSo `traverseChildren f e` where ``e = `(fn a₁ ... aₙ)`` will return\n``(← f `(fn)) (← f `(a₁)) ... (← f `(aₙ))`` rather than ``(← f `(fn a₁ ... aₙ₋₁)) (← f `(aₙ))``\n\nSee also `Lean.Core.traverseChildren`.\n "},"Lean.Meta.transform.visit.visitPost":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L74-L77","name":"Lean.Meta.transform.visit.visitPost","docLink":"./Lean/Meta/Transform.html#Lean.Meta.transform.visit.visitPost","doc":""},"Lean.Meta.transform.visit.visitLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L90-L95","name":"Lean.Meta.transform.visit.visitLet","docLink":"./Lean/Meta/Transform.html#Lean.Meta.transform.visit.visitLet","doc":""},"Lean.Meta.transform.visit.visitLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L78-L83","name":"Lean.Meta.transform.visit.visitLambda","docLink":"./Lean/Meta/Transform.html#Lean.Meta.transform.visit.visitLambda","doc":""},"Lean.Meta.transform.visit.visitForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L84-L89","name":"Lean.Meta.transform.visit.visitForall","docLink":"./Lean/Meta/Transform.html#Lean.Meta.transform.visit.visitForall","doc":""},"Lean.Meta.transform.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L72-L108","name":"Lean.Meta.transform.visit","docLink":"./Lean/Meta/Transform.html#Lean.Meta.transform.visit","doc":""},"Lean.Meta.transform":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L64-L109","name":"Lean.Meta.transform","docLink":"./Lean/Meta/Transform.html#Lean.Meta.transform","doc":"Similar to `Core.transform`, but terms provided to `pre` and `post` do not contain loose bound variables.\nSo, it is safe to use any `MetaM` method at `pre` and `post`. "},"Lean.Meta.toCasesOnApp?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CasesOn.lean#L25-L44","name":"Lean.Meta.toCasesOnApp?","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.toCasesOnApp?","doc":"Return `some c` if `e` is a `casesOn` application. "},"Lean.Meta.throwUnknownMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L160-L161","name":"Lean.Meta.throwUnknownMVar","docLink":"./Lean/Meta/InferType.html#Lean.Meta.throwUnknownMVar","doc":""},"Lean.Meta.throwUnknownFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L654-L655","name":"Lean.Meta.throwUnknownFVar","docLink":"./Lean/Meta/Basic.html#Lean.Meta.throwUnknownFVar","doc":""},"Lean.Meta.throwTypeExcepted":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L122-L123","name":"Lean.Meta.throwTypeExcepted","docLink":"./Lean/Meta/InferType.html#Lean.Meta.throwTypeExcepted","doc":""},"Lean.Meta.throwTacticEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L38-L43","name":"Lean.Meta.throwTacticEx","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.throwTacticEx","doc":""},"Lean.Meta.throwNestedTacticEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L45-L46","name":"Lean.Meta.throwNestedTacticEx","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.throwNestedTacticEx","doc":""},"Lean.Meta.throwLetTypeMismatchMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Check.lean#L18-L24","name":"Lean.Meta.throwLetTypeMismatchMessage","docLink":"./Lean/Meta/Check.html#Lean.Meta.throwLetTypeMismatchMessage","doc":""},"Lean.Meta.throwIsDefEqStuck":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L356-L357","name":"Lean.Meta.throwIsDefEqStuck","docLink":"./Lean/Meta/Basic.html#Lean.Meta.throwIsDefEqStuck","doc":""},"Lean.Meta.throwIncorrectNumberOfLevels":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L86-L87","name":"Lean.Meta.throwIncorrectNumberOfLevels","docLink":"./Lean/Meta/InferType.html#Lean.Meta.throwIncorrectNumberOfLevels","doc":""},"Lean.Meta.throwFunctionExpected":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L69-L70","name":"Lean.Meta.throwFunctionExpected","docLink":"./Lean/Meta/InferType.html#Lean.Meta.throwFunctionExpected","doc":""},"Lean.Meta.throwAppTypeMismatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Check.lean#L128-L134","name":"Lean.Meta.throwAppTypeMismatch","docLink":"./Lean/Meta/Check.html#Lean.Meta.throwAppTypeMismatch","doc":""},"Lean.Meta.testHelper":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/MatchUtil.lean#L11-L15","name":"Lean.Meta.testHelper","docLink":"./Lean/Meta/MatchUtil.html#Lean.Meta.testHelper","doc":""},"Lean.Meta.tactic.hygienic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L69-L69","name":"Lean.Meta.tactic.hygienic","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.Meta.tactic.hygienic","doc":""},"Lean.Meta.synthPending":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L441-L441","name":"Lean.Meta.synthPending","docLink":"./Lean/Meta/Basic.html#Lean.Meta.synthPending","doc":""},"Lean.Meta.synthInstance?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L664-L732","name":"Lean.Meta.synthInstance?","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.synthInstance?","doc":""},"Lean.Meta.synthInstance.maxSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L22-L22","name":"Lean.Meta.synthInstance.maxSize","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.synthInstance.maxSize","doc":""},"Lean.Meta.synthInstance.maxHeartbeats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L17-L17","name":"Lean.Meta.synthInstance.maxHeartbeats","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.synthInstance.maxHeartbeats","doc":""},"Lean.Meta.synthInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L742-L749","name":"Lean.Meta.synthInstance","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.synthInstance","doc":""},"Lean.Meta.synthAppInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L28-L35","name":"Lean.Meta.synthAppInstances","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.Meta.synthAppInstances","doc":""},"Lean.Meta.substVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Subst.lean#L221-L225","name":"Lean.Meta.substVars","docLink":"./Lean/Meta/Tactic/Subst.html#Lean.Meta.substVars","doc":""},"Lean.Meta.substSomeVar?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Subst.lean#L215-L219","name":"Lean.Meta.substSomeVar?","docLink":"./Lean/Meta/Tactic/Subst.html#Lean.Meta.substSomeVar?","doc":""},"Lean.Meta.substCore?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Subst.lean#L207-L208","name":"Lean.Meta.substCore?","docLink":"./Lean/Meta/Tactic/Subst.html#Lean.Meta.substCore?","doc":""},"Lean.Meta.substCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Subst.lean#L17-L116","name":"Lean.Meta.substCore","docLink":"./Lean/Meta/Tactic/Subst.html#Lean.Meta.substCore","doc":""},"Lean.Meta.subst?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Subst.lean#L204-L205","name":"Lean.Meta.subst?","docLink":"./Lean/Meta/Tactic/Subst.html#Lean.Meta.subst?","doc":""},"Lean.Meta.subst.substEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Subst.lean#L155-L177","name":"Lean.Meta.subst.substEq","docLink":"./Lean/Meta/Tactic/Subst.html#Lean.Meta.subst.substEq","doc":"Give `h : Eq α a b`, try to apply `substCore` "},"Lean.Meta.subst.findEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Subst.lean#L180-L202","name":"Lean.Meta.subst.findEq","docLink":"./Lean/Meta/Tactic/Subst.html#Lean.Meta.subst.findEq","doc":"Try to find an equation of the form `heq : h = rhs` or `heq : lhs = h` "},"Lean.Meta.subst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Subst.lean#L140-L202","name":"Lean.Meta.subst","docLink":"./Lean/Meta/Tactic/Subst.html#Lean.Meta.subst","doc":""},"Lean.Meta.splitTarget?.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Split.lean#L293-L304","name":"Lean.Meta.splitTarget?.go","docLink":"./Lean/Meta/Tactic/Split.html#Lean.Meta.splitTarget?.go","doc":""},"Lean.Meta.splitTarget?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Split.lean#L291-L305","name":"Lean.Meta.splitTarget?","docLink":"./Lean/Meta/Tactic/Split.html#Lean.Meta.splitTarget?","doc":""},"Lean.Meta.splitLocalDecl?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Split.lean#L307-L319","name":"Lean.Meta.splitLocalDecl?","docLink":"./Lean/Meta/Tactic/Split.html#Lean.Meta.splitLocalDecl?","doc":""},"Lean.Meta.splitIfTarget?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/SplitIf.lean#L97-L106","name":"Lean.Meta.splitIfTarget?","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.splitIfTarget?","doc":""},"Lean.Meta.splitIfLocalDecl?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/SplitIf.lean#L108-L118","name":"Lean.Meta.splitIfLocalDecl?","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.splitIfLocalDecl?","doc":""},"Lean.Meta.splitAndCore.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L132-L142","name":"Lean.Meta.splitAndCore.go","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.Meta.splitAndCore.go","doc":""},"Lean.Meta.splitAndCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L124-L145","name":"Lean.Meta.splitAndCore","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.Meta.splitAndCore","doc":""},"Lean.Meta.splitAnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L154-L155","name":"Lean.Meta.splitAnd","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.Meta.splitAnd","doc":""},"Lean.Meta.sortFVarIds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1521-L1528","name":"Lean.Meta.sortFVarIds","docLink":"./Lean/Meta/Basic.html#Lean.Meta.sortFVarIds","doc":"Sort free variables using an order `x < y` iff `x` was defined before `y`.\nIf a free variable is not in the local context, we use their id. "},"Lean.Meta.smartUnfoldingSuffix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L31-L31","name":"Lean.Meta.smartUnfoldingSuffix","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.smartUnfoldingSuffix","doc":""},"Lean.Meta.smartUnfoldingReduce?.goMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L586-L600","name":"Lean.Meta.smartUnfoldingReduce?.goMatch","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.smartUnfoldingReduce?.goMatch","doc":""},"Lean.Meta.smartUnfoldingReduce?.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L573-L584","name":"Lean.Meta.smartUnfoldingReduce?.go","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.smartUnfoldingReduce?.go","doc":""},"Lean.Meta.smartUnfoldingReduce?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L570-L600","name":"Lean.Meta.smartUnfoldingReduce?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.smartUnfoldingReduce?","doc":"Recall that `_sunfold` auxiliary definitions contains the markers: `markSmartUnfoldingMatch` (*) and `markSmartUnfoldingMatchAlt` (**).\n  For example, consider the following definition\n  ```\n  def r (i j : Nat) : Nat :=\n    i +\n      match j with\n      | Nat.zero => 1\n      | Nat.succ j =>\n        i + match j with\n            | Nat.zero => 2\n            | Nat.succ j => r i j\n  ```\n  produces the following `_sunfold` auxiliary definition with the markers\n  ```\n  def r._sunfold (i j : Nat) : Nat :=\n    i +\n      (*) match j with\n      | Nat.zero => (**) 1\n      | Nat.succ j =>\n        i + (*) match j with\n            | Nat.zero => (**) 2\n            | Nat.succ j => (**) r i j\n  ```\n\n  `match` expressions marked with `markSmartUnfoldingMatch` (*) must be reduced, otherwise the resulting term is not definitionally\n   equal to the given expression. The recursion may be interrupted as soon as the annotation `markSmartUnfoldingAlt` (**) is reached.\n\n  For example, the term `r i j.succ.succ` reduces to the definitionally equal term `i + i * r i j`\n"},"Lean.Meta.smartUnfoldingMatchAlt?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L55-L56","name":"Lean.Meta.smartUnfoldingMatchAlt?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.smartUnfoldingMatchAlt?","doc":""},"Lean.Meta.smartUnfoldingMatch?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L48-L49","name":"Lean.Meta.smartUnfoldingMatch?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.smartUnfoldingMatch?","doc":""},"Lean.Meta.smartUnfolding":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L39-L39","name":"Lean.Meta.smartUnfolding","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.smartUnfolding","doc":""},"Lean.Meta.simpTargetStar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L957-L970","name":"Lean.Meta.simpTargetStar","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.simpTargetStar","doc":""},"Lean.Meta.simpTargetCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L835-L844","name":"Lean.Meta.simpTargetCore","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.simpTargetCore","doc":"See `simpTarget`. This method assumes `mvarId` is not assigned, and we are already using `mvarId`s local context. "},"Lean.Meta.simpTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L849-L852","name":"Lean.Meta.simpTarget","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.simpTarget","doc":"Simplify the given goal target (aka type). Return `none` if the goal was closed. Return `some mvarId'` otherwise,\nwhere `mvarId'` is the simplified new goal. "},"Lean.Meta.simpStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L883-L885","name":"Lean.Meta.simpStep","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.simpStep","doc":"Simplify `prop` (which is inhabited by `proof`). Return `none` if the goal was closed. Return `some (proof', prop')`\n  otherwise, where `proof' : prop'` and `prop'` is the simplified `prop`.\n\n  This method assumes `mvarId` is not assigned, and we are already using `mvarId`s local context. "},"Lean.Meta.simpLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L915-L919","name":"Lean.Meta.simpLocalDecl","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.simpLocalDecl","doc":""},"Lean.Meta.simpIfTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/SplitIf.lean#L83-L88","name":"Lean.Meta.simpIfTarget","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.simpIfTarget","doc":""},"Lean.Meta.simpIfLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/SplitIf.lean#L90-L95","name":"Lean.Meta.simpIfLocalDecl","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.simpIfLocalDecl","doc":""},"Lean.Meta.simpGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L923-L955","name":"Lean.Meta.simpGoal","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.simpGoal","doc":""},"Lean.Meta.simpExtensionMapRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L322-L322","name":"Lean.Meta.simpExtensionMapRef","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.simpExtensionMapRef","doc":""},"Lean.Meta.simpExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L332-L332","name":"Lean.Meta.simpExtension","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.simpExtension","doc":""},"Lean.Meta.simpAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpAll.lean#L124-L126","name":"Lean.Meta.simpAll","docLink":"./Lean/Meta/Tactic/Simp/SimpAll.html#Lean.Meta.simpAll","doc":""},"Lean.Meta.simp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L813-L816","name":"Lean.Meta.simp","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.simp","doc":""},"Lean.Meta.shouldReduceReducibleOnly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L522-L523","name":"Lean.Meta.shouldReduceReducibleOnly","docLink":"./Lean/Meta/Basic.html#Lean.Meta.shouldReduceReducibleOnly","doc":""},"Lean.Meta.shouldReduceAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L519-L520","name":"Lean.Meta.shouldReduceAll","docLink":"./Lean/Meta/Basic.html#Lean.Meta.shouldReduceAll","doc":""},"Lean.Meta.setPostponed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L406-L407","name":"Lean.Meta.setPostponed","docLink":"./Lean/Meta/Basic.html#Lean.Meta.setPostponed","doc":"Set the array of postponed universe level constraints. "},"Lean.Meta.setMVarUserNamesAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L76-L92","name":"Lean.Meta.setMVarUserNamesAt","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.setMVarUserNamesAt","doc":"Auxiliary method for (temporarily) setting the user facing name of metavariables.\nLet `?m` be a metavariable in `isTarget.contains ?m`, and `?m` does not have a user facing name.\nThen, we try to find an application `f ... ?m` in `e`, and (temporarily) use the\ncorresponding parameter name (with a fresh macro scope) as the user facing name for `?m`.\nThis method returns all metavariables whose user facing name has been updated.\n"},"Lean.Meta.setMVarUserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L644-L645","name":"Lean.Meta.setMVarUserName","docLink":"./Lean/Meta/Basic.html#Lean.Meta.setMVarUserName","doc":""},"Lean.Meta.setMVarType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L582-L583","name":"Lean.Meta.setMVarType","docLink":"./Lean/Meta/Basic.html#Lean.Meta.setMVarType","doc":""},"Lean.Meta.setMVarTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L25-L26","name":"Lean.Meta.setMVarTag","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.setMVarTag","doc":""},"Lean.Meta.setMVarKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L573-L574","name":"Lean.Meta.setMVarKind","docLink":"./Lean/Meta/Basic.html#Lean.Meta.setMVarKind","doc":""},"Lean.Meta.setInlineAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1431-L1435","name":"Lean.Meta.setInlineAttribute","docLink":"./Lean/Meta/Basic.html#Lean.Meta.setInlineAttribute","doc":"Mark declaration `declName` with the attribute `[inline]`.\n  This method does not check whether the given declaration is a definition.\n\n  Recall that this attribute can only be set in the same module where `declName` has been declared.\n"},"Lean.Meta.savingCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L837-L838","name":"Lean.Meta.savingCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.savingCache","doc":""},"Lean.Meta.saveState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L331-L332","name":"Lean.Meta.saveState","docLink":"./Lean/Meta/Basic.html#Lean.Meta.saveState","doc":""},"Lean.Meta.saveAndResetSynthInstanceCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L896-L899","name":"Lean.Meta.saveAndResetSynthInstanceCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.saveAndResetSynthInstanceCache","doc":""},"Lean.Meta.saturate.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L134-L138","name":"Lean.Meta.saturate.go","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.saturate.go","doc":""},"Lean.Meta.saturate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L130-L138","name":"Lean.Meta.saturate","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.saturate","doc":""},"Lean.Meta.rewrite":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Rewrite.lean#L71-L73","name":"Lean.Meta.rewrite","docLink":"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.rewrite","doc":""},"Lean.Meta.revert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Revert.lean#L47-L48","name":"Lean.Meta.revert","docLink":"./Lean/Meta/Tactic/Revert.html#Lean.Meta.revert","doc":""},"Lean.Meta.restoreSynthInstanceCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L901-L902","name":"Lean.Meta.restoreSynthInstanceCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.restoreSynthInstanceCache","doc":""},"Lean.Meta.resettingSynthInstanceCacheWhen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L912-L913","name":"Lean.Meta.resettingSynthInstanceCacheWhen","docLink":"./Lean/Meta/Basic.html#Lean.Meta.resettingSynthInstanceCacheWhen","doc":""},"Lean.Meta.resettingSynthInstanceCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L909-L910","name":"Lean.Meta.resettingSynthInstanceCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.resettingSynthInstanceCache","doc":"Reset `synthInstance` cache, execute `x`, and restore cache "},"Lean.Meta.resetZetaFVarIds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L395-L396","name":"Lean.Meta.resetZetaFVarIds","docLink":"./Lean/Meta/Basic.html#Lean.Meta.resetZetaFVarIds","doc":""},"Lean.Meta.resetMVarUserNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L98-L100","name":"Lean.Meta.resetMVarUserNames","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.resetMVarUserNames","doc":"Remove user facing name for metavariables in `toReset`.\nThis a low-level method for \"undoing\" the effect of `setMVarUserNamesAt`\n"},"Lean.Meta.replaceTargetEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L34-L35","name":"Lean.Meta.replaceTargetEq","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.Meta.replaceTargetEq","doc":""},"Lean.Meta.replaceTargetDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L58-L59","name":"Lean.Meta.replaceTargetDefEq","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.Meta.replaceTargetDefEq","doc":""},"Lean.Meta.replaceSubexpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprLens.lean#L52-L53","name":"Lean.Meta.replaceSubexpr","docLink":"./Lean/Meta/ExprLens.html#Lean.Meta.replaceSubexpr","doc":"Run the given `replace` function to replace the expression at the subexpression position. If the subexpression is below a binder\nthe bound variables will be appropriately instantiated with free variables and reabstracted after the replacement.\nIf the subexpression is invalid or points to a type then this will throw. "},"Lean.Meta.replaceLocalDeclDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L112-L113","name":"Lean.Meta.replaceLocalDeclDefEq","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.Meta.replaceLocalDeclDefEq","doc":""},"Lean.Meta.replaceLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L93-L94","name":"Lean.Meta.replaceLocalDecl","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.Meta.replaceLocalDecl","doc":""},"Lean.Meta.rename":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Rename.lean#L21-L22","name":"Lean.Meta.rename","docLink":"./Lean/Meta/Tactic/Rename.html#Lean.Meta.rename","doc":""},"Lean.Meta.removeUnused":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CollectFVars.lean#L48-L60","name":"Lean.Meta.removeUnused","docLink":"./Lean/Meta/CollectFVars.html#Lean.Meta.removeUnused","doc":""},"Lean.Meta.registerSimpAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L324-L330","name":"Lean.Meta.registerSimpAttr","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.registerSimpAttr","doc":""},"Lean.Meta.registerGetUnfoldEqnFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Eqns.lean#L127-L130","name":"Lean.Meta.registerGetUnfoldEqnFn","docLink":"./Lean/Meta/Eqns.html#Lean.Meta.registerGetUnfoldEqnFn","doc":"Register a new function for retrieving a \"unfold\" equation theorem.\n\n  We generate this kind of equation theorem on demand, and it is generated by more than one module.\n  For example, the structural and well-founded recursion modules generate it.\n  Most recent getters are tried first.\n\n  A getter returns an `Option Name`. The result is `none` if the getter failed.\n  Otherwise, it is a theorem name. Example: the definition\n\n  ```\n  def f (xs : List Nat) : List Nat :=\n    match xs with\n    | [] => []\n    | x::xs => (x+1)::f xs\n  ```\n  should have the theorem\n  ```\n  (xs : Nat) →\n    f xs =\n      match xs with\n      | [] => []\n      | x::xs => (x+1)::f xs\n  ```\n"},"Lean.Meta.registerGetEqnsFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Eqns.lean#L40-L43","name":"Lean.Meta.registerGetEqnsFn","docLink":"./Lean/Meta/Eqns.html#Lean.Meta.registerGetEqnsFn","doc":"Register a new function for retrieving equation theorems.\n  We generate equations theorems on demand, and they are generated by more than one module.\n  For example, the structural and well-founded recursion modules generate them.\n  Most recent getters are tried first.\n\n  A getter returns an `Option (Array Name)`. The result is `none` if the getter failed.\n  Otherwise, it is a sequence of theorem names where each one of them corresponds to\n  an alternative. Example: the definition\n\n  ```\n  def f (xs : List Nat) : List Nat :=\n    match xs with\n    | [] => []\n    | x::xs => (x+1)::f xs\n  ```\n  should have two equational theorems associated with it\n  ```\n  f [] = []\n  ```\n  and\n  ```\n  (x : Nat) → (xs : List Nat) → f (x :: xs) = (x+1) :: f xs\n  ```\n"},"Lean.Meta.refl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Refl.lean#L40-L41","name":"Lean.Meta.refl","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.Meta.refl","doc":""},"Lean.Meta.reduceUnaryNatOp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L776-L778","name":"Lean.Meta.reduceUnaryNatOp","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceUnaryNatOp","doc":""},"Lean.Meta.reduceRecMatcher?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L736-L750","name":"Lean.Meta.reduceRecMatcher?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceRecMatcher?","doc":"Try to reduce matcher/recursor/quot applications. We say they are all \"morally\" recursor applications. "},"Lean.Meta.reduceProjOf?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L861-L874","name":"Lean.Meta.reduceProjOf?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceProjOf?","doc":"If `e` is a projection function that satisfies `p`, then reduce it "},"Lean.Meta.reduceProj?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L461-L464","name":"Lean.Meta.reduceProj?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceProj?","doc":"Reduce kernel projection `Expr.proj ..` expression. "},"Lean.Meta.reduceNative?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L757-L767","name":"Lean.Meta.reduceNative?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceNative?","doc":""},"Lean.Meta.reduceNatNativeUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L753-L753","name":"Lean.Meta.reduceNatNativeUnsafe","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceNatNativeUnsafe","doc":""},"Lean.Meta.reduceNatNative":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L755-L755","name":"Lean.Meta.reduceNatNative","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceNatNative","doc":""},"Lean.Meta.reduceNat?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L791-L810","name":"Lean.Meta.reduceNat?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceNat?","doc":""},"Lean.Meta.reduceMatcher?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L420-L445","name":"Lean.Meta.reduceMatcher?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceMatcher?","doc":""},"Lean.Meta.reduceEval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ReduceEval.lean#L15-L17","name":"Lean.Meta.reduceEval","docLink":"./Lean/Meta/ReduceEval.html#Lean.Meta.reduceEval","doc":""},"Lean.Meta.reduceBoolNativeUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L752-L752","name":"Lean.Meta.reduceBoolNativeUnsafe","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceBoolNativeUnsafe","doc":""},"Lean.Meta.reduceBoolNative":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L754-L754","name":"Lean.Meta.reduceBoolNative","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceBoolNative","doc":""},"Lean.Meta.reduceBinNatPred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L786-L789","name":"Lean.Meta.reduceBinNatPred","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceBinNatPred","doc":""},"Lean.Meta.reduceBinNatOp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L780-L784","name":"Lean.Meta.reduceBinNatOp","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.reduceBinNatOp","doc":""},"Lean.Meta.reduceAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Reduce.lean#L44-L45","name":"Lean.Meta.reduceAll","docLink":"./Lean/Meta/Reduce.html#Lean.Meta.reduceAll","doc":""},"Lean.Meta.reduce.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Reduce.lean#L13-L41","name":"Lean.Meta.reduce.visit","docLink":"./Lean/Meta/Reduce.html#Lean.Meta.reduce.visit","doc":""},"Lean.Meta.reduce":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Reduce.lean#L12-L42","name":"Lean.Meta.reduce","docLink":"./Lean/Meta/Reduce.html#Lean.Meta.reduce","doc":""},"Lean.Meta.recursorAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L258-L258","name":"Lean.Meta.recursorAttribute","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.recursorAttribute","doc":""},"Lean.Meta.project?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L457-L458","name":"Lean.Meta.project?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.project?","doc":""},"Lean.Meta.processPostponed.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1601-L1617","name":"Lean.Meta.processPostponed.loop","docLink":"./Lean/Meta/Basic.html#Lean.Meta.processPostponed.loop","doc":""},"Lean.Meta.processPostponed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1596-L1618","name":"Lean.Meta.processPostponed","docLink":"./Lean/Meta/Basic.html#Lean.Meta.processPostponed","doc":""},"Lean.Meta.ppGoal.pushPending":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L216-L225","name":"Lean.Meta.ppGoal.pushPending","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ppGoal.pushPending","doc":""},"Lean.Meta.ppGoal.ppVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L226-L256","name":"Lean.Meta.ppGoal.ppVars","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ppGoal.ppVars","doc":""},"Lean.Meta.ppGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L203-L268","name":"Lean.Meta.ppGoal","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ppGoal","doc":""},"Lean.Meta.ppExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1465-L1467","name":"Lean.Meta.ppExpr","docLink":"./Lean/Meta/Basic.html#Lean.Meta.ppExpr","doc":"Pretty-print the given expression. "},"Lean.Meta.pp.showLetValues":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L23-L23","name":"Lean.Meta.pp.showLetValues","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.pp.showLetValues","doc":""},"Lean.Meta.pp.inaccessibleNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L17-L17","name":"Lean.Meta.pp.inaccessibleNames","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.pp.inaccessibleNames","doc":""},"Lean.Meta.pp.auxDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L11-L11","name":"Lean.Meta.pp.auxDecls","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.pp.auxDecls","doc":""},"Lean.Meta.postprocessAppMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L51-L54","name":"Lean.Meta.postprocessAppMVars","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.Meta.postprocessAppMVars","doc":""},"Lean.Meta.orelseMergeErrors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1502-L1505","name":"Lean.Meta.orelseMergeErrors","docLink":"./Lean/Meta/Basic.html#Lean.Meta.orelseMergeErrors","doc":"Similar to `orelse`, but merge errors. Note that internal errors are not caught.\nThe default `mergeRef` uses the `ref` (position information) for the first message.\nThe default `mergeMsg` combines error messages using `Format.line ++ Format.line` as a separator. "},"Lean.Meta.orElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1469-L1471","name":"Lean.Meta.orElse","docLink":"./Lean/Meta/Basic.html#Lean.Meta.orElse","doc":""},"Lean.Meta.openAbstractMVarsResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractMVars.lean#L137-L140","name":"Lean.Meta.openAbstractMVarsResult","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.openAbstractMVarsResult","doc":""},"Lean.Meta.normalizeLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1409-L1411","name":"Lean.Meta.normalizeLevel","docLink":"./Lean/Meta/Basic.html#Lean.Meta.normalizeLevel","doc":"Instantiate assigned universe metavariables in `u`, and then normalize it. "},"Lean.Meta.modifyTargetEqLHS":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L183-L184","name":"Lean.Meta.modifyTargetEqLHS","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.Meta.modifyTargetEqLHS","doc":""},"Lean.Meta.modifyTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L168-L169","name":"Lean.Meta.modifyTarget","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.Meta.modifyTarget","doc":""},"Lean.Meta.modifyPostponed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L410-L411","name":"Lean.Meta.modifyPostponed","docLink":"./Lean/Meta/Basic.html#Lean.Meta.modifyPostponed","doc":"Modify the array of postponed universe level constraints. "},"Lean.Meta.modifyInferTypeCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L383-L384","name":"Lean.Meta.modifyInferTypeCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.modifyInferTypeCache","doc":""},"Lean.Meta.modifyDefEqCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L386-L387","name":"Lean.Meta.modifyDefEqCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.modifyDefEqCache","doc":""},"Lean.Meta.modifyCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L380-L381","name":"Lean.Meta.modifyCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.modifyCache","doc":""},"Lean.Meta.mkSyntheticSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L471-L472","name":"Lean.Meta.mkSyntheticSorry","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkSyntheticSorry","doc":"Return `sorryAx type` "},"Lean.Meta.mkSub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L561-L561","name":"Lean.Meta.mkSub","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkSub","doc":"Return `a - b` using a heterogeneous `-`. This method assumes `a` and `b` have the same type. "},"Lean.Meta.mkSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L438-L440","name":"Lean.Meta.mkSorry","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkSorry","doc":""},"Lean.Meta.mkSmartUnfoldingNameFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L33-L34","name":"Lean.Meta.mkSmartUnfoldingNameFor","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.mkSmartUnfoldingNameFor","doc":""},"Lean.Meta.mkSizeOfSpecLemmaName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L182-L183","name":"Lean.Meta.mkSizeOfSpecLemmaName","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.mkSizeOfSpecLemmaName","doc":""},"Lean.Meta.mkSizeOfSpecLemmaInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L185-L196","name":"Lean.Meta.mkSizeOfSpecLemmaInstance","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.mkSizeOfSpecLemmaInstance","doc":""},"Lean.Meta.mkSizeOfInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L473-L505","name":"Lean.Meta.mkSizeOfInstances","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.mkSizeOfInstances","doc":""},"Lean.Meta.mkSizeOfFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L158-L180","name":"Lean.Meta.mkSizeOfFns","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.mkSizeOfFns","doc":"Create `sizeOf` functions for all inductive datatypes in the mutual inductive declaration containing `typeName`\nThe resulting array contains the generated functions names. The `NameMap` maps recursor names into the generated function names.\nThere is a function for each element of the mutual inductive declaration, and for auxiliary recursors for nested inductive types.\n"},"Lean.Meta.mkSizeOfFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L118-L151","name":"Lean.Meta.mkSizeOfFn","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.mkSizeOfFn","doc":"Create a \"sizeOf\" function with name `declName` using the recursor `recName`.\n"},"Lean.Meta.mkSimpTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L364-L366","name":"Lean.Meta.mkSimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.mkSimpTheorems","doc":"Auxiliary method for creating simp theorems from a proof term `val`. "},"Lean.Meta.mkSimpExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L309-L318","name":"Lean.Meta.mkSimpExt","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.mkSimpExt","doc":""},"Lean.Meta.mkSimpCongrTheorem.onlyMVarsAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L105-L106","name":"Lean.Meta.mkSimpCongrTheorem.onlyMVarsAt","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.mkSimpCongrTheorem.onlyMVarsAt","doc":"Return `true` if `t` contains a metavariable that is not in `mvarSet` "},"Lean.Meta.mkSimpCongrTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L53-L106","name":"Lean.Meta.mkSimpCongrTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.mkSimpCongrTheorem","doc":""},"Lean.Meta.mkSimpAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L277-L307","name":"Lean.Meta.mkSimpAttr","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.mkSimpAttr","doc":""},"Lean.Meta.mkRecursorInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L270-L276","name":"Lean.Meta.mkRecursorInfo","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.mkRecursorInfo","doc":""},"Lean.Meta.mkPure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L387-L388","name":"Lean.Meta.mkPure","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkPure","doc":"Given a `monad` and `e : α`, makes `pure e`."},"Lean.Meta.mkPropExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L479-L480","name":"Lean.Meta.mkPropExt","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkPropExt","doc":"Return `propext h` "},"Lean.Meta.mkProjection":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L393-L418","name":"Lean.Meta.mkProjection","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkProjection","doc":"`mkProjection s fieldName` return an expression for accessing field `fieldName` of the structure `s`.\nRemark: `fieldName` may be a subfield of `s`. "},"Lean.Meta.mkProjFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L121-L126","name":"Lean.Meta.mkProjFn","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.mkProjFn","doc":"Create the `i`th projection `major`. It tries to use the auto-generated projection functions if available. Otherwise falls back\nto `Expr.proj`.\n"},"Lean.Meta.mkOfNonempty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L467-L468","name":"Lean.Meta.mkOfNonempty","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkOfNonempty","doc":"Return `@Classical.ofNonempty α _` "},"Lean.Meta.mkOfEqTrue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L495-L496","name":"Lean.Meta.mkOfEqTrue","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkOfEqTrue","doc":"Return `of_eq_true h` "},"Lean.Meta.mkNumeral":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L540-L543","name":"Lean.Meta.mkNumeral","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkNumeral","doc":"Return `(n : type)`, a numeric literal of type `type`. The method fails if we don't have an instance `OfNat type n` "},"Lean.Meta.mkNoConfusion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L375-L384","name":"Lean.Meta.mkNoConfusion","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkNoConfusion","doc":""},"Lean.Meta.mkMul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L564-L564","name":"Lean.Meta.mkMul","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkMul","doc":"Return `a * b` using a heterogeneous `*`. This method assumes `a` and `b` have the same type. "},"Lean.Meta.mkLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L455-L456","name":"Lean.Meta.mkLt","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkLt","doc":"Return `a < b` "},"Lean.Meta.mkListLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L424-L431","name":"Lean.Meta.mkListLit","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkListLit","doc":""},"Lean.Meta.mkLevelStuckErrorMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1578-L1579","name":"Lean.Meta.mkLevelStuckErrorMessage","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkLevelStuckErrorMessage","doc":""},"Lean.Meta.mkLevelErrorMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1581-L1582","name":"Lean.Meta.mkLevelErrorMessage","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkLevelErrorMessage","doc":""},"Lean.Meta.mkLetValCongr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L487-L488","name":"Lean.Meta.mkLetValCongr","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkLetValCongr","doc":"Return `let_val_congr b h` "},"Lean.Meta.mkLetFVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L774-L775","name":"Lean.Meta.mkLetFVars","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkLetFVars","doc":""},"Lean.Meta.mkLetCongr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L483-L484","name":"Lean.Meta.mkLetCongr","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkLetCongr","doc":"Return `let_congr h₁ h₂` "},"Lean.Meta.mkLetBodyCongr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L491-L492","name":"Lean.Meta.mkLetBodyCongr","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkLetBodyCongr","doc":"Return `let_body_congr a h` "},"Lean.Meta.mkLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L459-L460","name":"Lean.Meta.mkLe","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkLe","doc":"Return `a <= b` "},"Lean.Meta.mkLambdaFVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L771-L772","name":"Lean.Meta.mkLambdaFVars","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkLambdaFVars","doc":"Takes an array `xs` of free variables and metavariables and a\nbody term `e` and creates `fun ..xs => e`, suitably\nabstracting `e` and the types in `xs`. "},"Lean.Meta.mkLT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L582-L582","name":"Lean.Meta.mkLT","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkLT","doc":"Return `a < b`. This method assumes `a` and `b` have the same type. "},"Lean.Meta.mkLE":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L579-L579","name":"Lean.Meta.mkLE","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkLE","doc":"Return `a ≤ b`. This method assumes `a` and `b` have the same type. "},"Lean.Meta.mkInjectiveTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Injective.lean#L150-L158","name":"Lean.Meta.mkInjectiveTheorems","docLink":"./Lean/Meta/Injective.html#Lean.Meta.mkInjectiveTheorems","doc":""},"Lean.Meta.mkInjectiveTheoremNameFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Injective.lean#L98-L99","name":"Lean.Meta.mkInjectiveTheoremNameFor","docLink":"./Lean/Meta/Injective.html#Lean.Meta.mkInjectiveTheoremNameFor","doc":""},"Lean.Meta.mkInjectiveEqTheoremNameFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Injective.lean#L113-L114","name":"Lean.Meta.mkInjectiveEqTheoremNameFor","docLink":"./Lean/Meta/Injective.html#Lean.Meta.mkInjectiveEqTheoremNameFor","doc":""},"Lean.Meta.mkImpDepCongrCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L522-L523","name":"Lean.Meta.mkImpDepCongrCtx","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkImpDepCongrCtx","doc":""},"Lean.Meta.mkImpCongrCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L519-L520","name":"Lean.Meta.mkImpCongrCtx","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkImpCongrCtx","doc":""},"Lean.Meta.mkImpCongr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L516-L517","name":"Lean.Meta.mkImpCongr","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkImpCongr","doc":""},"Lean.Meta.mkId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L15-L18","name":"Lean.Meta.mkId","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkId","doc":"Return `id e` "},"Lean.Meta.mkHasTypeButIsExpectedMsg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Check.lean#L117-L126","name":"Lean.Meta.mkHasTypeButIsExpectedMsg","docLink":"./Lean/Meta/Check.html#Lean.Meta.mkHasTypeButIsExpectedMsg","doc":"Return error message \"has type{givenType}\\nbut is expected to have type{expectedType}\"\n"},"Lean.Meta.mkHEqTrans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L127-L140","name":"Lean.Meta.mkHEqTrans","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkHEqTrans","doc":"Given `h₁ : HEq a b`, `h₂ : HEq b c`, returns a proof of `HEq a c`. "},"Lean.Meta.mkHEqSymm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L114-L124","name":"Lean.Meta.mkHEqSymm","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkHEqSymm","doc":"Given `h : HEq a b`, returns a proof of `HEq b a`.  "},"Lean.Meta.mkHEqRefl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L59-L62","name":"Lean.Meta.mkHEqRefl","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkHEqRefl","doc":"Return a proof of `HEq a a`. "},"Lean.Meta.mkHEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L34-L38","name":"Lean.Meta.mkHEq","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkHEq","doc":"Return `HEq a b`. "},"Lean.Meta.mkHCongrWithArity.withNewEqs.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L77-L90","name":"Lean.Meta.mkHCongrWithArity.withNewEqs.loop","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongrWithArity.withNewEqs.loop","doc":""},"Lean.Meta.mkHCongrWithArity.withNewEqs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L76-L91","name":"Lean.Meta.mkHCongrWithArity.withNewEqs","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongrWithArity.withNewEqs","doc":""},"Lean.Meta.mkHCongrWithArity.mkProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L93-L112","name":"Lean.Meta.mkHCongrWithArity.mkProof","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongrWithArity.mkProof","doc":""},"Lean.Meta.mkHCongrWithArity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L54-L112","name":"Lean.Meta.mkHCongrWithArity","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongrWithArity","doc":""},"Lean.Meta.mkHCongr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L114-L115","name":"Lean.Meta.mkHCongr","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongr","doc":""},"Lean.Meta.mkGeneralizationForbiddenSet.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GeneralizeVars.lean#L24-L35","name":"Lean.Meta.mkGeneralizationForbiddenSet.visit","docLink":"./Lean/Meta/GeneralizeVars.html#Lean.Meta.mkGeneralizationForbiddenSet.visit","doc":""},"Lean.Meta.mkGeneralizationForbiddenSet.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GeneralizeVars.lean#L37-L45","name":"Lean.Meta.mkGeneralizationForbiddenSet.loop","docLink":"./Lean/Meta/GeneralizeVars.html#Lean.Meta.mkGeneralizationForbiddenSet.loop","doc":""},"Lean.Meta.mkGeneralizationForbiddenSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GeneralizeVars.lean#L14-L45","name":"Lean.Meta.mkGeneralizationForbiddenSet","docLink":"./Lean/Meta/GeneralizeVars.html#Lean.Meta.mkGeneralizationForbiddenSet","doc":"Add to `forbidden` all a set of `FVarId`s containing `targets` and all variables they depend on.\n"},"Lean.Meta.mkFunUnit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L782-L783","name":"Lean.Meta.mkFunUnit","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkFunUnit","doc":"`fun _ : Unit => a` "},"Lean.Meta.mkFunExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L475-L476","name":"Lean.Meta.mkFunExt","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkFunExt","doc":"Return `funext h` "},"Lean.Meta.mkFreshTypeMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L481-L483","name":"Lean.Meta.mkFreshTypeMVar","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkFreshTypeMVar","doc":""},"Lean.Meta.mkFreshLevelMVarsFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L504-L505","name":"Lean.Meta.mkFreshLevelMVarsFor","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkFreshLevelMVarsFor","doc":""},"Lean.Meta.mkFreshLevelMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L500-L502","name":"Lean.Meta.mkFreshLevelMVars","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkFreshLevelMVars","doc":""},"Lean.Meta.mkFreshLevelMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L462-L465","name":"Lean.Meta.mkFreshLevelMVar","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkFreshLevelMVar","doc":""},"Lean.Meta.mkFreshExprSyntheticOpaqueMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L35-L36","name":"Lean.Meta.mkFreshExprSyntheticOpaqueMVar","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.mkFreshExprSyntheticOpaqueMVar","doc":""},"Lean.Meta.mkFreshExprMVarWithId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L492-L498","name":"Lean.Meta.mkFreshExprMVarWithId","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkFreshExprMVarWithId","doc":""},"Lean.Meta.mkFreshExprMVarAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L456-L460","name":"Lean.Meta.mkFreshExprMVarAt","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkFreshExprMVarAt","doc":""},"Lean.Meta.mkFreshExprMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L478-L479","name":"Lean.Meta.mkFreshExprMVar","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkFreshExprMVar","doc":""},"Lean.Meta.mkFreshBinderNameForTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L86-L87","name":"Lean.Meta.mkFreshBinderNameForTactic","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.Meta.mkFreshBinderNameForTactic","doc":"Similar to `mkFreshUserName`, but takes into account `tactic.hygienic` option value.\nIf `tactic.hygienic = true`, then the current macro scopes are applied to `binderName`.\nIf not, then an unused (accessible) name (based on `binderName`) in the local context is used.\n"},"Lean.Meta.mkForallFVars'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L109-L124","name":"Lean.Meta.mkForallFVars'","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.mkForallFVars'","doc":"Similar to `mkForallFVars`, but tries to infer better binder names when `xs` contains metavariables.\nLet `?m` be a metavariable in `xs` s.t. `?m` does not have a user facing name.\nThen, we try to find an application `f ... ?m` in the other binder typer and `type`, and\n(temporarily) use the corresponding parameter name (with a fresh macro scope) as the user facing name for `?m`.\nThe \"renaming\" is temporary.\n"},"Lean.Meta.mkForallFVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L765-L766","name":"Lean.Meta.mkForallFVars","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkForallFVars","doc":"Takes an array `xs` of free variables or metavariables and a term `e` that may contain those variables, and abstracts and binds them as universal quantifiers.\n\n- if `usedOnly = true` then only variables that the expression body depends on will appear.\n- if `usedLetOnly = true` same as `usedOnly` except for let-bound variables. (That is, local constants which have been assigned a value.)\n "},"Lean.Meta.mkForallCongr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L525-L526","name":"Lean.Meta.mkForallCongr","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkForallCongr","doc":""},"Lean.Meta.mkFalseElim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L71-L73","name":"Lean.Meta.mkFalseElim","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkFalseElim","doc":"Given `h : False`, return an instance of type `e`. "},"Lean.Meta.mkExpectedTypeHint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L23-L25","name":"Lean.Meta.mkExpectedTypeHint","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkExpectedTypeHint","doc":"Given `e` s.t. `inferType e` is definitionally equal to `expectedType`, return\nterm `@id expectedType e`. "},"Lean.Meta.mkEqTrue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L499-L500","name":"Lean.Meta.mkEqTrue","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEqTrue","doc":"Return `eq_true h` "},"Lean.Meta.mkEqTrans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L98-L111","name":"Lean.Meta.mkEqTrans","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEqTrans","doc":"Given `h₁ : a = b` and `h₂ : b = c` returns a proof of `a = c`. "},"Lean.Meta.mkEqSymm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L86-L95","name":"Lean.Meta.mkEqSymm","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEqSymm","doc":"Given `h : a = b`, returns a proof of `b = a`. "},"Lean.Meta.mkEqRefl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L53-L56","name":"Lean.Meta.mkEqRefl","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEqRefl","doc":"Return a proof of `a = a`. "},"Lean.Meta.mkEqRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L353-L367","name":"Lean.Meta.mkEqRec","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEqRec","doc":""},"Lean.Meta.mkEqOfHEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L143-L152","name":"Lean.Meta.mkEqOfHEq","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEqOfHEq","doc":"Given `h : Eq a b`, returns a proof of `HEq a b`. "},"Lean.Meta.mkEqNDRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L338-L351","name":"Lean.Meta.mkEqNDRec","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEqNDRec","doc":""},"Lean.Meta.mkEqMPR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L372-L373","name":"Lean.Meta.mkEqMPR","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEqMPR","doc":""},"Lean.Meta.mkEqMP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L369-L370","name":"Lean.Meta.mkEqMP","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEqMP","doc":""},"Lean.Meta.mkEqHEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L43-L50","name":"Lean.Meta.mkEqHEq","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEqHEq","doc":"If `a` and `b` have definitionally equal types, return `Eq a b`, otherwise return `HEq a b`.\n"},"Lean.Meta.mkEqFalse'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L513-L514","name":"Lean.Meta.mkEqFalse'","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEqFalse'","doc":"Return `eq_false' h`\n`h` must have type definitionally equal to `p → False` in the current\nreducibility setting. "},"Lean.Meta.mkEqFalse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L506-L507","name":"Lean.Meta.mkEqFalse","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEqFalse","doc":"Return `eq_false h`\n`h` must have type definitionally equal to `¬ p` in the current\nreducibility setting. "},"Lean.Meta.mkEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L28-L31","name":"Lean.Meta.mkEq","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkEq","doc":"Return `a = b`. "},"Lean.Meta.mkDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L463-L464","name":"Lean.Meta.mkDefault","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkDefault","doc":"Return `Inhabited.default α` "},"Lean.Meta.mkDecideProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L447-L452","name":"Lean.Meta.mkDecideProof","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkDecideProof","doc":"Return a proof for `p : Prop` using `decide p` "},"Lean.Meta.mkDecide":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L443-L444","name":"Lean.Meta.mkDecide","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkDecide","doc":"Return `Decidable.decide p` "},"Lean.Meta.mkCustomEliminator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L109-L131","name":"Lean.Meta.mkCustomEliminator","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.mkCustomEliminator","doc":""},"Lean.Meta.mkConstWithFreshMVarLevels":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L511-L513","name":"Lean.Meta.mkConstWithFreshMVarLevels","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkConstWithFreshMVarLevels","doc":"Create a constant with the given name and new universe metavariables.\nExample: ``mkConstWithFreshMVarLevels `Monad`` returns `@Monad.{?u, ?v}`\n"},"Lean.Meta.mkCongrSimpCore?.mkProof.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L256-L279","name":"Lean.Meta.mkCongrSimpCore?.mkProof.go","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?.mkProof.go","doc":""},"Lean.Meta.mkCongrSimpCore?.mkProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L255-L280","name":"Lean.Meta.mkCongrSimpCore?.mkProof","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?.mkProof","doc":""},"Lean.Meta.mkCongrSimpCore?.mk?.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L223-L250","name":"Lean.Meta.mkCongrSimpCore?.mk?.go","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?.mk?.go","doc":""},"Lean.Meta.mkCongrSimpCore?.mk?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L218-L253","name":"Lean.Meta.mkCongrSimpCore?.mk?","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?.mk?","doc":"Create a congruence theorem that is useful for the simplifier.\nIn this kind of theorem, if the i-th argument is a `cast` argument, then the theorem\ncontains an input `a_i` representing the i-th argument in the left-hand-side, and\nit appears with a cast (e.g., `Eq.drec ... a_i ...`) in the right-hand-side.\nThe idea is that the right-hand-side of this theorem \"tells\" the simplifier\nhow the resulting term looks like. "},"Lean.Meta.mkCongrSimpCore?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L200-L280","name":"Lean.Meta.mkCongrSimpCore?","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?","doc":"Create a congruence theorem that is useful for the simplifier and `congr` tactic.\n"},"Lean.Meta.mkCongrSimp?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L290-L293","name":"Lean.Meta.mkCongrSimp?","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimp?","doc":"Create a congruence theorem for `f`. The theorem is used in the simplifier.\n\nIf `subsinglentonInstImplicitRhs = true`, the the `rhs` corresponding to `[Decidable p]` parameters\nis marked as instance implicit. It forces the simplifier to compute the new instance when applying\nthe congruence theorem.\nFor the `congr` tactic we set it to `false`.\n"},"Lean.Meta.mkCongrFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L170-L185","name":"Lean.Meta.mkCongrFun","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkCongrFun","doc":"Given `h : f = g` and `a : α`, returns a proof of `f a = g a`."},"Lean.Meta.mkCongrArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L155-L167","name":"Lean.Meta.mkCongrArg","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkCongrArg","doc":"Given `f : α → β` and `h : a = b`, returns a proof of `f a = f b`."},"Lean.Meta.mkCongr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L188-L206","name":"Lean.Meta.mkCongr","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkCongr","doc":"Given `h₁ : f = g` and `h₂ : a = b`, returns a proof of `f a = g b`. "},"Lean.Meta.mkAuxMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L614-L615","name":"Lean.Meta.mkAuxMVar","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.mkAuxMVar","doc":""},"Lean.Meta.mkAuxLemma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AuxLemma.lean#L26-L39","name":"Lean.Meta.mkAuxLemma","docLink":"./Lean/Meta/Tactic/AuxLemma.html#Lean.Meta.mkAuxLemma","doc":"Helper method for creating auxiliary lemmas in the environment.\n\n  It uses a cache that maps `type` to declaration name. The cache is not stored in `.olean` files.\n  It is useful to make sure the same auxiliary lemma is not created over and over again in the same file.\n\n  This method is useful for tactics (e.g., `simp`) that may perform preprocessing steps to lemmas provided by\n  users. For example, `simp` preprocessor may convert a lemma into multiple ones.\n"},"Lean.Meta.mkAuxDefinitionFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L365-L368","name":"Lean.Meta.mkAuxDefinitionFor","docLink":"./Lean/Meta/Closure.html#Lean.Meta.mkAuxDefinitionFor","doc":"Similar to `mkAuxDefinition`, but infers the type of `value`. "},"Lean.Meta.mkAuxDefinition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L348-L362","name":"Lean.Meta.mkAuxDefinition","docLink":"./Lean/Meta/Closure.html#Lean.Meta.mkAuxDefinition","doc":"Create an auxiliary definition with the given name, type and value.\nThe parameters `type` and `value` may contain free and meta variables.\nA \"closure\" is computed, and a term of the form `name.{u_1 ... u_n} t_1 ... t_m` is\nreturned where `u_i`s are universe parameters and metavariables `type` and `value` depend on,\nand `t_j`s are free and meta variables `type` and `value` depend on. "},"Lean.Meta.mkArrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L778-L779","name":"Lean.Meta.mkArrow","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mkArrow","doc":"Creates the expression `d → b` "},"Lean.Meta.mkArrayLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L433-L436","name":"Lean.Meta.mkArrayLit","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkArrayLit","doc":""},"Lean.Meta.mkAppOptM'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L333-L336","name":"Lean.Meta.mkAppOptM'","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkAppOptM'","doc":"Similar to `mkAppOptM`, but takes an `Expr` instead of a constant name "},"Lean.Meta.mkAppOptM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L327-L330","name":"Lean.Meta.mkAppOptM","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkAppOptM","doc":"Similar to `mkAppM`, but it allows us to specify which arguments are provided explicitly using `Option` type.\nExample:\nGiven `Pure.pure {m : Type u → Type v} [Pure m] {α : Type u} (a : α) : m α`,\n```\nmkAppOptM `Pure.pure #[m, none, none, a]\n```\nreturns a `Pure.pure` application if the instance `Pure m` can be synthesized, and the universe match.\nNote that,\n```\nmkAppM `Pure.pure #[a]\n```\nfails because the only explicit argument `(a : α)` is not sufficient for inferring the remaining arguments,\nwe would need the expected type. "},"Lean.Meta.mkAppM'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L274-L279","name":"Lean.Meta.mkAppM'","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkAppM'","doc":"Similar to `mkAppM`, but takes an `Expr` instead of a constant name. "},"Lean.Meta.mkAppM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L266-L271","name":"Lean.Meta.mkAppM","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkAppM","doc":"Return the application `constName xs`.\n  It tries to fill the implicit arguments before the last element in `xs`.\n\n  Remark:\n  ``mkAppM `arbitrary #[α]`` returns `@arbitrary.{u} α` without synthesizing\n  the implicit argument occurring after `α`.\n  Given a `x : (([Decidable p] → Bool) × Nat`, ``mkAppM `Prod.fst #[x]`` returns `@Prod.fst ([Decidable p] → Bool) Nat x`\n"},"Lean.Meta.mkAdd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L558-L558","name":"Lean.Meta.mkAdd","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkAdd","doc":"Return `a + b` using a heterogeneous `+`. This method assumes `a` and `b` have the same type. "},"Lean.Meta.mkAbsurd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L65-L68","name":"Lean.Meta.mkAbsurd","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.mkAbsurd","doc":"Given `hp : P` and `nhp : Not P` returns an instance of type `e`. "},"Lean.Meta.matchNot?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/MatchUtil.lean#L45-L52","name":"Lean.Meta.matchNot?","docLink":"./Lean/Meta/MatchUtil.html#Lean.Meta.matchNot?","doc":""},"Lean.Meta.matchNe?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/MatchUtil.lean#L54-L61","name":"Lean.Meta.matchNe?","docLink":"./Lean/Meta/MatchUtil.html#Lean.Meta.matchNe?","doc":""},"Lean.Meta.matchMatcherApp?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L142-L163","name":"Lean.Meta.matchMatcherApp?","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.matchMatcherApp?","doc":""},"Lean.Meta.matchHelper?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/MatchUtil.lean#L17-L20","name":"Lean.Meta.matchHelper?","docLink":"./Lean/Meta/MatchUtil.html#Lean.Meta.matchHelper?","doc":""},"Lean.Meta.matchHEq?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/MatchUtil.lean#L26-L27","name":"Lean.Meta.matchHEq?","docLink":"./Lean/Meta/MatchUtil.html#Lean.Meta.matchHEq?","doc":""},"Lean.Meta.matchFalse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/MatchUtil.lean#L42-L43","name":"Lean.Meta.matchFalse","docLink":"./Lean/Meta/MatchUtil.html#Lean.Meta.matchFalse","doc":""},"Lean.Meta.matchEqHEq?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/MatchUtil.lean#L32-L40","name":"Lean.Meta.matchEqHEq?","docLink":"./Lean/Meta/MatchUtil.html#Lean.Meta.matchEqHEq?","doc":"Return `some (α, lhs, rhs)` if `e` is of the form `@Eq α lhs rhs` or `@HEq α lhs α rhs`\n"},"Lean.Meta.matchEq?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/MatchUtil.lean#L23-L24","name":"Lean.Meta.matchEq?","docLink":"./Lean/Meta/MatchUtil.html#Lean.Meta.matchEq?","doc":"Matches `e` with `lhs = (rhs : α)` and returns `(α, lhs, rhs)`. "},"Lean.Meta.matchConstructorApp?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/MatchUtil.lean#L63-L66","name":"Lean.Meta.matchConstructorApp?","docLink":"./Lean/Meta/MatchUtil.html#Lean.Meta.matchConstructorApp?","doc":""},"Lean.Meta.markSmartUnfoldingMatchAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L52-L53","name":"Lean.Meta.markSmartUnfoldingMatchAlt","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.markSmartUnfoldingMatchAlt","doc":"Add auxiliary annotation to indicate expression `e` (a `match` alternative rhs) was successfully reduced by smart unfolding. "},"Lean.Meta.markSmartUnfoldingMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L45-L46","name":"Lean.Meta.markSmartUnfoldingMatch","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.markSmartUnfoldingMatch","doc":"Add auxiliary annotation to indicate the `match`-expression `e` must be reduced when performing smart unfolding. "},"Lean.Meta.mapMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L368-L369","name":"Lean.Meta.mapMetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mapMetaM","doc":""},"Lean.Meta.mapErrorImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1508-L1513","name":"Lean.Meta.mapErrorImp","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mapErrorImp","doc":"Execute `x`, and apply `f` to the produced error message "},"Lean.Meta.mapError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1515-L1516","name":"Lean.Meta.mapError","docLink":"./Lean/Meta/Basic.html#Lean.Meta.mapError","doc":""},"Lean.Meta.map2MetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L374-L375","name":"Lean.Meta.map2MetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.map2MetaM","doc":""},"Lean.Meta.map1MetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L371-L372","name":"Lean.Meta.map1MetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.map1MetaM","doc":""},"Lean.Meta.liftMkBindingM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L717-L726","name":"Lean.Meta.liftMkBindingM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.liftMkBindingM","doc":"Lift a `MkBindingM` monadic action `x` to `MetaM`.\n"},"Lean.Meta.liftMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L365-L366","name":"Lean.Meta.liftMetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.liftMetaM","doc":""},"Lean.Meta.lambdaTelescope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1131-L1132","name":"Lean.Meta.lambdaTelescope","docLink":"./Lean/Meta/Basic.html#Lean.Meta.lambdaTelescope","doc":"Given `e` of the form `fun ..xs => A`, execute `k xs A`.\nThis combinator will declare local declarations, create free variables for them,\nexecute `k` with updated local context, and make sure the cache is restored after executing `k`. "},"Lean.Meta.lambdaMetaTelescope.process":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1194-L1208","name":"Lean.Meta.lambdaMetaTelescope.process","docLink":"./Lean/Meta/Basic.html#Lean.Meta.lambdaMetaTelescope.process","doc":""},"Lean.Meta.lambdaMetaTelescope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1191-L1208","name":"Lean.Meta.lambdaMetaTelescope","docLink":"./Lean/Meta/Basic.html#Lean.Meta.lambdaMetaTelescope","doc":"Similar to `forallMetaTelescopeReducingAux` but for lambda expressions. "},"Lean.Meta.lambdaLetTelescope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1124-L1125","name":"Lean.Meta.lambdaLetTelescope","docLink":"./Lean/Meta/Basic.html#Lean.Meta.lambdaLetTelescope","doc":"Similar to `lambdaTelescope` but for lambda and let expressions. "},"Lean.Meta.kabstract.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/KAbstract.lean#L24-L46","name":"Lean.Meta.kabstract.visit","docLink":"./Lean/Meta/KAbstract.html#Lean.Meta.kabstract.visit","doc":""},"Lean.Meta.kabstract":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/KAbstract.lean#L17-L47","name":"Lean.Meta.kabstract","docLink":"./Lean/Meta/KAbstract.html#Lean.Meta.kabstract","doc":"Abstract occurrences of `p` in `e`. We detect subterms equivalent to `p` using key-matching.\nThat is, only perform `isDefEq` tests when the head symbol of substerm is equivalent to head symbol of `p`.\nBy default, all occurrences are abstracted, but this behavior can be controlled using the `occs` parameter.\n"},"Lean.Meta.iteToDIte":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Ite.lean#L14-L27","name":"Lean.Meta.iteToDIte","docLink":"./Lean/Elab/PreDefinition/WF/Ite.html#Lean.Meta.iteToDIte","doc":"Convert `ite` expressions in `e` to `dite`s.\nIt is useful to make this conversion in the `WF` module because the condition is often used in\ntermination proofs. "},"Lean.Meta.isUIntPatLit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Value.lean#L21-L28","name":"Lean.Meta.isUIntPatLit?","docLink":"./Lean/Meta/Match/Value.html#Lean.Meta.isUIntPatLit?","doc":"Return `some (typeName, numLit)` if `v` is of the form `UInt*.mk (Fin.ofNat _ numLit)` "},"Lean.Meta.isUIntPatLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Value.lean#L30-L31","name":"Lean.Meta.isUIntPatLit","docLink":"./Lean/Meta/Match/Value.html#Lean.Meta.isUIntPatLit","doc":""},"Lean.Meta.isTypeQuick":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L352-L364","name":"Lean.Meta.isTypeQuick","docLink":"./Lean/Meta/InferType.html#Lean.Meta.isTypeQuick","doc":"`isTypeQuick e` is an \"approximate\" predicate which returns `LBool.true`\nif `e` is a type. "},"Lean.Meta.isTypeFormerType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L383-L389","name":"Lean.Meta.isTypeFormerType","docLink":"./Lean/Meta/InferType.html#Lean.Meta.isTypeFormerType","doc":"Return true iff `type` is `Sort _` or `As → Sort _`.\n"},"Lean.Meta.isTypeFormer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L395-L396","name":"Lean.Meta.isTypeFormer","docLink":"./Lean/Meta/InferType.html#Lean.Meta.isTypeFormer","doc":"Return true iff `e : Sort _` or `e : (forall As, Sort _)`.\nRemark: it subsumes `isType`\n"},"Lean.Meta.isTypeCorrect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Check.lean#L196-L202","name":"Lean.Meta.isTypeCorrect","docLink":"./Lean/Meta/Check.html#Lean.Meta.isTypeCorrect","doc":"Return true if `e` is type correct.\n"},"Lean.Meta.isType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L369-L378","name":"Lean.Meta.isType","docLink":"./Lean/Meta/InferType.html#Lean.Meta.isType","doc":"Return `true` iff the type of `e` is a `Sort _`.\n"},"Lean.Meta.isSyntheticMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L560-L564","name":"Lean.Meta.isSyntheticMVar","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isSyntheticMVar","doc":"Reture `true` if `e` is a synthetic (or synthetic opaque) metavariable "},"Lean.Meta.isRflTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L73-L75","name":"Lean.Meta.isRflTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.isRflTheorem","doc":""},"Lean.Meta.isRflProofCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L51-L71","name":"Lean.Meta.isRflProofCore","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.isRflProofCore","doc":""},"Lean.Meta.isRflProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L78-L82","name":"Lean.Meta.isRflProof","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.isRflProof","doc":""},"Lean.Meta.isReadOnlyOrSyntheticOpaqueExprMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L608-L609","name":"Lean.Meta.isReadOnlyOrSyntheticOpaqueExprMVar","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isReadOnlyOrSyntheticOpaqueExprMVar","doc":""},"Lean.Meta.isReadOnlyLevelMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L634-L635","name":"Lean.Meta.isReadOnlyLevelMVar","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isReadOnlyLevelMVar","doc":""},"Lean.Meta.isReadOnlyExprMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L593-L594","name":"Lean.Meta.isReadOnlyExprMVar","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isReadOnlyExprMVar","doc":""},"Lean.Meta.isPropQuick":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L241-L253","name":"Lean.Meta.isPropQuick","docLink":"./Lean/Meta/InferType.html#Lean.Meta.isPropQuick","doc":"`isPropQuick e` is an \"approximate\" predicate which returns `LBool.true`\nif `e` is a proposition. "},"Lean.Meta.isProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L261-L270","name":"Lean.Meta.isProp","docLink":"./Lean/Meta/InferType.html#Lean.Meta.isProp","doc":"`isProp whnf e` return `true` if `e` is a proposition.\n\n     If `e` contains metavariables, it may not be possible\n     to decide whether is a proposition or not. We return `false` in this\n     case. We considered using `LBool` and retuning `LBool.undef`, but\n     we have no applications for it. "},"Lean.Meta.isProofQuick":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L301-L313","name":"Lean.Meta.isProofQuick","docLink":"./Lean/Meta/InferType.html#Lean.Meta.isProofQuick","doc":"`isProofQuick e` is an \"approximate\" predicate which returns `LBool.true`\nif `e` is a proof. "},"Lean.Meta.isProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L317-L321","name":"Lean.Meta.isProof","docLink":"./Lean/Meta/InferType.html#Lean.Meta.isProof","doc":""},"Lean.Meta.isNatProjInst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Offset.lean#L19-L22","name":"Lean.Meta.isNatProjInst","docLink":"./Lean/Meta/Offset.html#Lean.Meta.isNatProjInst","doc":""},"Lean.Meta.isMonad?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AppBuilder.lean#L529-L537","name":"Lean.Meta.isMonad?","docLink":"./Lean/Meta/AppBuilder.html#Lean.Meta.isMonad?","doc":"Return instance for `[Monad m]` if there is one "},"Lean.Meta.isMatcherCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L109-L110","name":"Lean.Meta.isMatcherCore","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.isMatcherCore","doc":""},"Lean.Meta.isMatcherAppCore?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L115-L123","name":"Lean.Meta.isMatcherAppCore?","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.isMatcherAppCore?","doc":""},"Lean.Meta.isMatcherAppCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L125-L126","name":"Lean.Meta.isMatcherAppCore","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.isMatcherAppCore","doc":""},"Lean.Meta.isMatcherApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L128-L129","name":"Lean.Meta.isMatcherApp","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.isMatcherApp","doc":""},"Lean.Meta.isMatcher":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L112-L113","name":"Lean.Meta.isMatcher","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.isMatcher","doc":""},"Lean.Meta.isMatchValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Value.lean#L44-L45","name":"Lean.Meta.isMatchValue","docLink":"./Lean/Meta/Match/Value.html#Lean.Meta.isMatchValue","doc":"Return true is `e` is a term that should be processed by the `match`-compiler using `casesValues` "},"Lean.Meta.isListLevelDefEqAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1542-L1545","name":"Lean.Meta.isListLevelDefEqAux","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isListLevelDefEqAux","doc":""},"Lean.Meta.isLevelDefEqAuxImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/LevelDefEq.lean#L87-L117","name":"Lean.Meta.isLevelDefEqAuxImpl","docLink":"./Lean/Meta/LevelDefEq.html#Lean.Meta.isLevelDefEqAuxImpl","doc":""},"Lean.Meta.isLevelDefEqAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L440-L440","name":"Lean.Meta.isLevelDefEqAux","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isLevelDefEqAux","doc":""},"Lean.Meta.isLevelDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1660-L1664","name":"Lean.Meta.isLevelDefEq","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isLevelDefEq","doc":"Determines whether two universe level expressions are definitionally equal to each other.\n"},"Lean.Meta.isInductivePredicate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1533-L1540","name":"Lean.Meta.isInductivePredicate","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isInductivePredicate","doc":"Return `true` if `declName` is an inductive predicate. That is, `inductive` type in `Prop`. "},"Lean.Meta.isGlobalInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GlobalInstances.lean#L22-L23","name":"Lean.Meta.isGlobalInstance","docLink":"./Lean/Meta/GlobalInstances.html#Lean.Meta.isGlobalInstance","doc":""},"Lean.Meta.isFinPatLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Value.lean#L17-L18","name":"Lean.Meta.isFinPatLit","docLink":"./Lean/Meta/Match/Value.html#Lean.Meta.isFinPatLit","doc":""},"Lean.Meta.isExprDefEqGuarded":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1688-L1689","name":"Lean.Meta.isExprDefEqGuarded","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isExprDefEqGuarded","doc":""},"Lean.Meta.isExprDefEqAuxImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L1733-L1769","name":"Lean.Meta.isExprDefEqAuxImpl","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.isExprDefEqAuxImpl","doc":""},"Lean.Meta.isExprDefEqAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L439-L439","name":"Lean.Meta.isExprDefEqAux","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isExprDefEqAux","doc":""},"Lean.Meta.isExprDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1667-L1671","name":"Lean.Meta.isExprDefEq","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isExprDefEq","doc":"See `isDefEq`. "},"Lean.Meta.isEtaUnassignedMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L125-L134","name":"Lean.Meta.isEtaUnassignedMVar","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.isEtaUnassignedMVar","doc":"Return `true` if `e` is of the form `fun (x_1 ... x_n) => ?m x_1 ... x_n)`, and `?m` is unassigned.\nRemark: `n` may be 0. "},"Lean.Meta.isDefEqStuckExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L34-L34","name":"Lean.Meta.isDefEqStuckExceptionId","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isDefEqStuckExceptionId","doc":""},"Lean.Meta.isDefEqStringLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L113-L120","name":"Lean.Meta.isDefEqStringLit","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.isDefEqStringLit","doc":"Support for constraints of the form `(\"...\" =?= String.mk cs)` "},"Lean.Meta.isDefEqOffset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Offset.lean#L118-L163","name":"Lean.Meta.isDefEqOffset","docLink":"./Lean/Meta/Offset.html#Lean.Meta.isDefEqOffset","doc":""},"Lean.Meta.isDefEqNoConstantApprox":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1695-L1696","name":"Lean.Meta.isDefEqNoConstantApprox","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isDefEqNoConstantApprox","doc":""},"Lean.Meta.isDefEqNative":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L88-L96","name":"Lean.Meta.isDefEqNative","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.isDefEqNative","doc":"Support for `Lean.reduceBool` and `Lean.reduceNat` "},"Lean.Meta.isDefEqNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L99-L110","name":"Lean.Meta.isDefEqNat","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.isDefEqNat","doc":"Support for reducing Nat basic operations. "},"Lean.Meta.isDefEqGuarded":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1692-L1693","name":"Lean.Meta.isDefEqGuarded","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isDefEqGuarded","doc":"Similar to `isDefEq`, but returns `false` if an exception has been thrown. "},"Lean.Meta.isDefEqBindingDomain.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L276-L289","name":"Lean.Meta.isDefEqBindingDomain.loop","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.isDefEqBindingDomain.loop","doc":""},"Lean.Meta.isDefEqBindingDomain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L275-L290","name":"Lean.Meta.isDefEqBindingDomain","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.isDefEqBindingDomain","doc":"Check whether the types of the free variables at `fvars` are\n  definitionally equal to the types at `ds₂`.\n\n  Pre: `fvars.size == ds₂.size`\n\n  This method also updates the set of local instances, and invokes\n  the continuation `k` with the updated set.\n\n  We can't use `withNewLocalInstances` because the `isDeq fvarType d₂`\n  may use local instances. "},"Lean.Meta.isDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1685-L1686","name":"Lean.Meta.isDefEq","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isDefEq","doc":"Determines whether two expressions are definitionally equal to each other.\n\n  To control how metavariables are assigned and unified, metavariables and their context have a \"depth\".\n  Given a metavariable `?m` and a `MetavarContext` `mctx`, `?m` is not assigned if `?m.depth != mctx.depth`.\n  The combinator `withNewMCtxDepth x` will bump the depth while executing `x`.\n  So, `withNewMCtxDepth (isDefEq a b)` is `isDefEq` without any mvar assignment happening\n  whereas `isDefEq a b` will assign any metavariables of the current depth in `a` and `b` to unify them.\n\n  For matching (where only mvars in `b` should be assigned), we create the term inside the `withNewMCtxDepth`.\n  For an example, see [Lean.Meta.Simp.tryTheoremWithExtraArgs?](https://github.com/leanprover/lean4/blob/master/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L100-L106)\n "},"Lean.Meta.isCoeDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Coe.lean#L15-L19","name":"Lean.Meta.isCoeDecl","docLink":"./Lean/Meta/Coe.html#Lean.Meta.isCoeDecl","doc":"Return true iff `declName` is one of the auxiliary definitions/projections\nused to implement coercions.\n"},"Lean.Meta.isClass?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1062-L1063","name":"Lean.Meta.isClass?","docLink":"./Lean/Meta/Basic.html#Lean.Meta.isClass?","doc":"`isClass? type` return `some ClsName` if `type` is an instance of the class `ClsName`.\nExample:\n```\n#eval do\n  let x ← mkAppM ``Inhabited #[mkConst ``Nat]\n  IO.println (← isClass? x)\n  -- (some Inhabited)\n```\n"},"Lean.Meta.isAuxDef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L62-L64","name":"Lean.Meta.isAuxDef","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.isAuxDef","doc":""},"Lean.Meta.intros":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L192-L193","name":"Lean.Meta.intros","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.Meta.intros","doc":""},"Lean.Meta.introNP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L133-L134","name":"Lean.Meta.introNP","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.Meta.introNP","doc":""},"Lean.Meta.introNCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L107-L113","name":"Lean.Meta.introNCore","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.Meta.introNCore","doc":""},"Lean.Meta.introN":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L122-L123","name":"Lean.Meta.introN","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.Meta.introN","doc":""},"Lean.Meta.intro1P":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L170-L171","name":"Lean.Meta.intro1P","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.Meta.intro1P","doc":""},"Lean.Meta.intro1Core":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L147-L149","name":"Lean.Meta.intro1Core","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.Meta.intro1Core","doc":""},"Lean.Meta.intro1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L159-L160","name":"Lean.Meta.intro1","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.Meta.intro1","doc":""},"Lean.Meta.intro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L144-L145","name":"Lean.Meta.intro","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.Meta.intro","doc":""},"Lean.Meta.instantiateLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1461-L1462","name":"Lean.Meta.instantiateLambda","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instantiateLambda","doc":"Given `e` of the form `fun (a_1 : A_1) ... (a_n : A_n) => t[a_1, ..., a_n]` and `p_1 : A_1, ... p_n : A_n`, return `t[p_1, ..., p_n]`.\nIt uses `whnf` to reduce `e` if it is not a lambda "},"Lean.Meta.instantiateForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1447-L1448","name":"Lean.Meta.instantiateForall","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instantiateForall","doc":"Given `e` of the form `forall (a_1 : A_1) ... (a_n : A_n), B[a_1, ..., a_n]` and `p_1 : A_1, ... p_n : A_n`, return `B[p_1, ..., p_n]`. "},"Lean.Meta.instanceExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L46-L46","name":"Lean.Meta.instanceExtension","docLink":"./Lean/Meta/Instances.html#Lean.Meta.instanceExtension","doc":""},"Lean.Meta.instToStringRecursorUnivLevelPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L16-L18","name":"Lean.Meta.instToStringRecursorUnivLevelPos","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.instToStringRecursorUnivLevelPos","doc":""},"Lean.Meta.instToMessageDataSimpTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L91-L92","name":"Lean.Meta.instToMessageDataSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instToMessageDataSimpTheorem","doc":""},"Lean.Meta.instToFormatUnificationHints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L22-L23","name":"Lean.Meta.instToFormatUnificationHints","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.instToFormatUnificationHints","doc":""},"Lean.Meta.instToFormatSimpTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L84-L89","name":"Lean.Meta.instToFormatSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instToFormatSimpTheorem","doc":""},"Lean.Meta.instToFormatInstanceEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L22-L25","name":"Lean.Meta.instToFormatInstanceEntry","docLink":"./Lean/Meta/Instances.html#Lean.Meta.instToFormatInstanceEntry","doc":""},"Lean.Meta.instReprTransparencyMode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1174-L1174","name":"Lean.Meta.instReprTransparencyMode","docLink":"./Init/Meta.html#Lean.Meta.instReprTransparencyMode","doc":""},"Lean.Meta.instReprSimpCongrTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L28-L28","name":"Lean.Meta.instReprSimpCongrTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.instReprSimpCongrTheorems","doc":""},"Lean.Meta.instReprSimpCongrTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L24-L24","name":"Lean.Meta.instReprSimpCongrTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.instReprSimpCongrTheorem","doc":""},"Lean.Meta.instReprEtaStructMode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1183-L1183","name":"Lean.Meta.instReprEtaStructMode","docLink":"./Init/Meta.html#Lean.Meta.instReprEtaStructMode","doc":""},"Lean.Meta.instReprElimInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L22-L22","name":"Lean.Meta.instReprElimInfo","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.instReprElimInfo","doc":""},"Lean.Meta.instReprElimAltInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L15-L15","name":"Lean.Meta.instReprElimAltInfo","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.instReprElimAltInfo","doc":""},"Lean.Meta.instReprCustomEliminators":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L95-L95","name":"Lean.Meta.instReprCustomEliminators","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.instReprCustomEliminators","doc":""},"Lean.Meta.instReprCustomEliminator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L91-L91","name":"Lean.Meta.instReprCustomEliminator","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.instReprCustomEliminator","doc":""},"Lean.Meta.instReduceEvalString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ReduceEval.lean#L37-L40","name":"Lean.Meta.instReduceEvalString","docLink":"./Lean/Meta/ReduceEval.html#Lean.Meta.instReduceEvalString","doc":""},"Lean.Meta.instReduceEvalOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ReduceEval.lean#L28-L35","name":"Lean.Meta.instReduceEvalOption","docLink":"./Lean/Meta/ReduceEval.html#Lean.Meta.instReduceEvalOption","doc":""},"Lean.Meta.instReduceEvalNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ReduceEval.lean#L22-L26","name":"Lean.Meta.instReduceEvalNat","docLink":"./Lean/Meta/ReduceEval.html#Lean.Meta.instReduceEvalNat","doc":""},"Lean.Meta.instReduceEvalName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ReduceEval.lean#L58-L59","name":"Lean.Meta.instReduceEvalName","docLink":"./Lean/Meta/ReduceEval.html#Lean.Meta.instReduceEvalName","doc":""},"Lean.Meta.instOrElseMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1473-L1473","name":"Lean.Meta.instOrElseMetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instOrElseMetaM","doc":""},"Lean.Meta.instMonadMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L312-L312","name":"Lean.Meta.instMonadMetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instMonadMetaM","doc":""},"Lean.Meta.instMonadMCtxMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L320-L322","name":"Lean.Meta.instMonadMCtxMetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instMonadMCtxMetaM","doc":""},"Lean.Meta.instMonadLCtxMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L317-L318","name":"Lean.Meta.instMonadLCtxMetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instMonadLCtxMetaM","doc":""},"Lean.Meta.instMonadEnvMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L324-L326","name":"Lean.Meta.instMonadEnvMetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instMonadEnvMetaM","doc":""},"Lean.Meta.instMonadBacktrackSavedStateMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L339-L341","name":"Lean.Meta.instMonadBacktrackSavedStateMetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instMonadBacktrackSavedStateMetaM","doc":""},"Lean.Meta.instMetaEvalMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L353-L354","name":"Lean.Meta.instMetaEvalMetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instMetaEvalMetaM","doc":""},"Lean.Meta.instInhabitedUnificationHints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L20-L20","name":"Lean.Meta.instInhabitedUnificationHints","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.instInhabitedUnificationHints","doc":""},"Lean.Meta.instInhabitedUnificationHintEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L16-L16","name":"Lean.Meta.instInhabitedUnificationHintEntry","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.instInhabitedUnificationHintEntry","doc":""},"Lean.Meta.instInhabitedTransparencyMode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1174-L1174","name":"Lean.Meta.instInhabitedTransparencyMode","docLink":"./Init/Meta.html#Lean.Meta.instInhabitedTransparencyMode","doc":""},"Lean.Meta.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L275-L275","name":"Lean.Meta.instInhabitedState","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instInhabitedState","doc":""},"Lean.Meta.instInhabitedSimpTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L104-L104","name":"Lean.Meta.instInhabitedSimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instInhabitedSimpTheorems","doc":""},"Lean.Meta.instInhabitedSimpTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L43-L43","name":"Lean.Meta.instInhabitedSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instInhabitedSimpTheorem","doc":""},"Lean.Meta.instInhabitedSimpEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L265-L265","name":"Lean.Meta.instInhabitedSimpEntry","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instInhabitedSimpEntry","doc":""},"Lean.Meta.instInhabitedSimpCongrTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L28-L28","name":"Lean.Meta.instInhabitedSimpCongrTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.instInhabitedSimpCongrTheorems","doc":""},"Lean.Meta.instInhabitedSimpCongrTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L24-L24","name":"Lean.Meta.instInhabitedSimpCongrTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.instInhabitedSimpCongrTheorem","doc":""},"Lean.Meta.instInhabitedSavedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L283-L283","name":"Lean.Meta.instInhabitedSavedState","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instInhabitedSavedState","doc":""},"Lean.Meta.instInhabitedPostponedEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L263-L263","name":"Lean.Meta.instInhabitedPostponedEntry","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instInhabitedPostponedEntry","doc":""},"Lean.Meta.instInhabitedParamInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L167-L167","name":"Lean.Meta.instInhabitedParamInfo","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instInhabitedParamInfo","doc":""},"Lean.Meta.instInhabitedMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L314-L315","name":"Lean.Meta.instInhabitedMetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instInhabitedMetaM","doc":""},"Lean.Meta.instInhabitedKExprMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/KExprMap.lean#L19-L19","name":"Lean.Meta.instInhabitedKExprMap","docLink":"./Lean/Meta/KExprMap.html#Lean.Meta.instInhabitedKExprMap","doc":""},"Lean.Meta.instInhabitedInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L31-L31","name":"Lean.Meta.instInhabitedInstances","docLink":"./Lean/Meta/Instances.html#Lean.Meta.instInhabitedInstances","doc":""},"Lean.Meta.instInhabitedInstanceEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L17-L17","name":"Lean.Meta.instInhabitedInstanceEntry","docLink":"./Lean/Meta/Instances.html#Lean.Meta.instInhabitedInstanceEntry","doc":""},"Lean.Meta.instInhabitedInfoCacheKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L208-L208","name":"Lean.Meta.instInhabitedInfoCacheKey","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instInhabitedInfoCacheKey","doc":""},"Lean.Meta.instInhabitedInductionSubgoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Induction.lean#L42-L42","name":"Lean.Meta.instInhabitedInductionSubgoal","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.instInhabitedInductionSubgoal","doc":""},"Lean.Meta.instInhabitedGeneralizeArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Generalize.lean#L17-L17","name":"Lean.Meta.instInhabitedGeneralizeArg","docLink":"./Lean/Meta/Tactic/Generalize.html#Lean.Meta.instInhabitedGeneralizeArg","doc":""},"Lean.Meta.instInhabitedFVarSubst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L20-L20","name":"Lean.Meta.instInhabitedFVarSubst","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.instInhabitedFVarSubst","doc":""},"Lean.Meta.instInhabitedEtaStructMode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1183-L1183","name":"Lean.Meta.instInhabitedEtaStructMode","docLink":"./Init/Meta.html#Lean.Meta.instInhabitedEtaStructMode","doc":""},"Lean.Meta.instInhabitedEqnsExtState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Eqns.lean#L54-L54","name":"Lean.Meta.instInhabitedEqnsExtState","docLink":"./Lean/Meta/Eqns.html#Lean.Meta.instInhabitedEqnsExtState","doc":""},"Lean.Meta.instInhabitedElimInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L22-L22","name":"Lean.Meta.instInhabitedElimInfo","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.instInhabitedElimInfo","doc":""},"Lean.Meta.instInhabitedElimAltInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L15-L15","name":"Lean.Meta.instInhabitedElimAltInfo","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.instInhabitedElimAltInfo","doc":""},"Lean.Meta.instInhabitedDefaultInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L96-L96","name":"Lean.Meta.instInhabitedDefaultInstances","docLink":"./Lean/Meta/Instances.html#Lean.Meta.instInhabitedDefaultInstances","doc":""},"Lean.Meta.instInhabitedCustomEliminators":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L95-L95","name":"Lean.Meta.instInhabitedCustomEliminators","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.instInhabitedCustomEliminators","doc":""},"Lean.Meta.instInhabitedCustomEliminator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L91-L91","name":"Lean.Meta.instInhabitedCustomEliminator","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.instInhabitedCustomEliminator","doc":""},"Lean.Meta.instInhabitedCongrArgKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L33-L33","name":"Lean.Meta.instInhabitedCongrArgKind","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.instInhabitedCongrArgKind","doc":""},"Lean.Meta.instInhabitedCaseValuesSubgoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/CaseValues.lean#L65-L65","name":"Lean.Meta.instInhabitedCaseValuesSubgoal","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValuesSubgoal","doc":""},"Lean.Meta.instInhabitedCaseValueSubgoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/CaseValues.lean#L16-L16","name":"Lean.Meta.instInhabitedCaseValueSubgoal","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.instInhabitedCaseValueSubgoal","doc":""},"Lean.Meta.instInhabitedCaseArraySizesSubgoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/CaseArraySizes.lean#L16-L16","name":"Lean.Meta.instInhabitedCaseArraySizesSubgoal","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.instInhabitedCaseArraySizesSubgoal","doc":""},"Lean.Meta.instInhabitedCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L239-L239","name":"Lean.Meta.instInhabitedCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instInhabitedCache","doc":""},"Lean.Meta.instInhabitedAuxLemmas":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AuxLemma.lean#L13-L13","name":"Lean.Meta.instInhabitedAuxLemmas","docLink":"./Lean/Meta/Tactic/AuxLemma.html#Lean.Meta.instInhabitedAuxLemmas","doc":""},"Lean.Meta.instInhabitedAltVarNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Induction.lean#L53-L53","name":"Lean.Meta.instInhabitedAltVarNames","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.instInhabitedAltVarNames","doc":""},"Lean.Meta.instInhabitedAbstractMVarsResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractMVars.lean#L14-L14","name":"Lean.Meta.instInhabitedAbstractMVarsResult","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.instInhabitedAbstractMVarsResult","doc":""},"Lean.Meta.instBEqTransparencyMode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1174-L1174","name":"Lean.Meta.instBEqTransparencyMode","docLink":"./Init/Meta.html#Lean.Meta.instBEqTransparencyMode","doc":""},"Lean.Meta.instBEqSimpTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L94-L95","name":"Lean.Meta.instBEqSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instBEqSimpTheorem","doc":""},"Lean.Meta.instBEqInstanceEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L19-L20","name":"Lean.Meta.instBEqInstanceEntry","docLink":"./Lean/Meta/Instances.html#Lean.Meta.instBEqInstanceEntry","doc":""},"Lean.Meta.instBEqInfoCacheKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L208-L208","name":"Lean.Meta.instBEqInfoCacheKey","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instBEqInfoCacheKey","doc":""},"Lean.Meta.instBEqEtaStructMode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1183-L1183","name":"Lean.Meta.instBEqEtaStructMode","docLink":"./Init/Meta.html#Lean.Meta.instBEqEtaStructMode","doc":""},"Lean.Meta.instBEqAbstractMVarsResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractMVars.lean#L14-L14","name":"Lean.Meta.instBEqAbstractMVarsResult","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.instBEqAbstractMVarsResult","doc":""},"Lean.Meta.instAlternativeMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1475-L1477","name":"Lean.Meta.instAlternativeMetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instAlternativeMetaM","doc":""},"Lean.Meta.instAddMessageContextMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L328-L329","name":"Lean.Meta.instAddMessageContextMetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.instAddMessageContextMetaM","doc":""},"Lean.Meta.injections.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Injection.lean#L100-L117","name":"Lean.Meta.injections.go","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injections.go","doc":""},"Lean.Meta.injections":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Injection.lean#L95-L117","name":"Lean.Meta.injections","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injections","doc":""},"Lean.Meta.injectionIntro.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Injection.lean#L77-L87","name":"Lean.Meta.injectionIntro.go","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injectionIntro.go","doc":""},"Lean.Meta.injectionIntro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Injection.lean#L76-L88","name":"Lean.Meta.injectionIntro","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injectionIntro","doc":""},"Lean.Meta.injectionCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Injection.lean#L27-L69","name":"Lean.Meta.injectionCore","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injectionCore","doc":""},"Lean.Meta.injection":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Injection.lean#L90-L93","name":"Lean.Meta.injection","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.injection","doc":""},"Lean.Meta.inferTypeImp.infer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L184-L198","name":"Lean.Meta.inferTypeImp.infer","docLink":"./Lean/Meta/InferType.html#Lean.Meta.inferTypeImp.infer","doc":""},"Lean.Meta.inferTypeImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L183-L199","name":"Lean.Meta.inferTypeImp","docLink":"./Lean/Meta/InferType.html#Lean.Meta.inferTypeImp","doc":""},"Lean.Meta.inferType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L438-L438","name":"Lean.Meta.inferType","docLink":"./Lean/Meta/Basic.html#Lean.Meta.inferType","doc":"Returns the inferred type of the given expression, or fails if it is not type-correct. "},"Lean.Meta.induction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Induction.lean#L210-L211","name":"Lean.Meta.induction","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.induction","doc":""},"Lean.Meta.heqToEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Subst.lean#L122-L138","name":"Lean.Meta.heqToEq","docLink":"./Lean/Meta/Tactic/Subst.html#Lean.Meta.heqToEq","doc":"Given `h : HEq α a α b` in the given goal, produce a new goal where `h : Eq α a b`.\nIf `h` is not of the give form, then just return `(h, mvarId)`\n"},"Lean.Meta.headBetaMVarType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L93-L94","name":"Lean.Meta.headBetaMVarType","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.headBetaMVarType","doc":""},"Lean.Meta.hasSmartUnfoldingDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L36-L37","name":"Lean.Meta.hasSmartUnfoldingDecl","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.hasSmartUnfoldingDecl","doc":""},"Lean.Meta.globalInstanceExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GlobalInstances.lean#L11-L11","name":"Lean.Meta.globalInstanceExtension","docLink":"./Lean/Meta/GlobalInstances.html#Lean.Meta.globalInstanceExtension","doc":""},"Lean.Meta.getZetaFVarIds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L398-L399","name":"Lean.Meta.getZetaFVarIds","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getZetaFVarIds","doc":""},"Lean.Meta.getUnfoldEqnFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Eqns.lean#L137-L145","name":"Lean.Meta.getUnfoldEqnFor?","docLink":"./Lean/Meta/Eqns.html#Lean.Meta.getUnfoldEqnFor?","doc":"Return a \"unfold\" theorem for the given declaration.\nBy default, we not create unfold theorems for nonrecursive definitions.\nYou can use `nonRec := true` to override this behavior.\n"},"Lean.Meta.getTransparency":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L516-L517","name":"Lean.Meta.getTransparency","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getTransparency","doc":"Return current transparency setting/mode. "},"Lean.Meta.getTheoremInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L840-L844","name":"Lean.Meta.getTheoremInfo","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getTheoremInfo","doc":""},"Lean.Meta.getStuckMVar?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L249-L295","name":"Lean.Meta.getStuckMVar?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.getStuckMVar?","doc":"Return `some (Expr.mvar mvarId)` if metavariable `mvarId` is blocking reduction. "},"Lean.Meta.getStructureName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Structure.lean#L13-L19","name":"Lean.Meta.getStructureName","docLink":"./Lean/Meta/Structure.html#Lean.Meta.getStructureName","doc":""},"Lean.Meta.getStructuralRecArgPos?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L29-L29","name":"Lean.Meta.getStructuralRecArgPos?","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.getStructuralRecArgPos?","doc":"Forward declaration. It is defined in the module `src/Lean/Elab/PreDefinition/Structural/Eqns.lean`.\nIt is possible to avoid this hack if we move `Structural.EqnInfo` and `Structural.eqnInfoExt`\nto this module.\n"},"Lean.Meta.getSimpTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L337-L338","name":"Lean.Meta.getSimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.getSimpTheorems","doc":""},"Lean.Meta.getSimpExtension?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L334-L335","name":"Lean.Meta.getSimpExtension?","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.getSimpExtension?","doc":""},"Lean.Meta.getSimpCongrTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L121-L122","name":"Lean.Meta.getSimpCongrTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.getSimpCongrTheorems","doc":""},"Lean.Meta.getResetPostponed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1550-L1553","name":"Lean.Meta.getResetPostponed","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getResetPostponed","doc":""},"Lean.Meta.getPropHyps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L152-L158","name":"Lean.Meta.getPropHyps","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.getPropHyps","doc":"Return all propositions in the local context. "},"Lean.Meta.getPostponed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L402-L403","name":"Lean.Meta.getPostponed","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getPostponed","doc":"Return the array of postponed universe level constraints. "},"Lean.Meta.getParamNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1135-L1139","name":"Lean.Meta.getParamNames","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getParamNames","doc":"Return the parameter names for the given global declaration. "},"Lean.Meta.getNumPostponed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1547-L1548","name":"Lean.Meta.getNumPostponed","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getNumPostponed","doc":""},"Lean.Meta.getNondepPropHyps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L127-L128","name":"Lean.Meta.getNondepPropHyps","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.getNondepPropHyps","doc":""},"Lean.Meta.getMatcherInfoCore?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L102-L103","name":"Lean.Meta.getMatcherInfoCore?","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.getMatcherInfoCore?","doc":""},"Lean.Meta.getMatcherInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L105-L106","name":"Lean.Meta.getMatcherInfo?","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.getMatcherInfo?","doc":""},"Lean.Meta.getMajorPos?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L267-L268","name":"Lean.Meta.getMajorPos?","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.getMajorPos?","doc":""},"Lean.Meta.getMVarsNoDelayed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CollectMVars.lean#L37-L39","name":"Lean.Meta.getMVarsNoDelayed","docLink":"./Lean/Meta/CollectMVars.html#Lean.Meta.getMVarsNoDelayed","doc":"Similar to getMVars, but removes delayed assignments. "},"Lean.Meta.getMVarsAtDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CollectMVars.lean#L44-L46","name":"Lean.Meta.getMVarsAtDecl","docLink":"./Lean/Meta/CollectMVars.html#Lean.Meta.getMVarsAtDecl","doc":""},"Lean.Meta.getMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CollectMVars.lean#L32-L34","name":"Lean.Meta.getMVars","docLink":"./Lean/Meta/CollectMVars.html#Lean.Meta.getMVars","doc":"Return metavariables in occuring the given expression. See `collectMVars` "},"Lean.Meta.getMVarType'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L71-L72","name":"Lean.Meta.getMVarType'","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.getMVarType'","doc":""},"Lean.Meta.getMVarType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L62-L63","name":"Lean.Meta.getMVarType","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.getMVarType","doc":""},"Lean.Meta.getMVarTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L18-L19","name":"Lean.Meta.getMVarTag","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.getMVarTag","doc":""},"Lean.Meta.getMVarDeclKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L556-L557","name":"Lean.Meta.getMVarDeclKind","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getMVarDeclKind","doc":""},"Lean.Meta.getMVarDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L546-L547","name":"Lean.Meta.getMVarDecl","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getMVarDecl","doc":""},"Lean.Meta.getLocalInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L389-L390","name":"Lean.Meta.getLocalInstances","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getLocalInstances","doc":""},"Lean.Meta.getLocalDeclFromUserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L709-L712","name":"Lean.Meta.getLocalDeclFromUserName","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getLocalDeclFromUserName","doc":"Given a user-facing name for a free variable, return its declaration in the current local context.\nThrow an exception if free variable is not declared.\n"},"Lean.Meta.getLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L677-L678","name":"Lean.Meta.getLocalDecl","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getLocalDecl","doc":""},"Lean.Meta.getLevelMVarDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L620-L621","name":"Lean.Meta.getLevelMVarDepth","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getLevelMVarDepth","doc":""},"Lean.Meta.getLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L125-L137","name":"Lean.Meta.getLevel","docLink":"./Lean/Meta/InferType.html#Lean.Meta.getLevel","doc":""},"Lean.Meta.getInductiveUniverseAndParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L19-L24","name":"Lean.Meta.getInductiveUniverseAndParams","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.Meta.getInductiveUniverseAndParams","doc":""},"Lean.Meta.getGoalPrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L196-L201","name":"Lean.Meta.getGoalPrefix","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.getGoalPrefix","doc":""},"Lean.Meta.getGlobalInstancesIndex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L78-L79","name":"Lean.Meta.getGlobalInstancesIndex","docLink":"./Lean/Meta/Instances.html#Lean.Meta.getGlobalInstancesIndex","doc":""},"Lean.Meta.getFunInfoNArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/FunInfo.lean#L95-L96","name":"Lean.Meta.getFunInfoNArgs","docLink":"./Lean/Meta/FunInfo.html#Lean.Meta.getFunInfoNArgs","doc":""},"Lean.Meta.getFunInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/FunInfo.lean#L92-L93","name":"Lean.Meta.getFunInfo","docLink":"./Lean/Meta/FunInfo.html#Lean.Meta.getFunInfo","doc":""},"Lean.Meta.getFVarsToGeneralize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GeneralizeVars.lean#L68-L71","name":"Lean.Meta.getFVarsToGeneralize","docLink":"./Lean/Meta/GeneralizeVars.html#Lean.Meta.getFVarsToGeneralize","doc":""},"Lean.Meta.getFVarSetToGeneralize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GeneralizeVars.lean#L57-L66","name":"Lean.Meta.getFVarSetToGeneralize","docLink":"./Lean/Meta/GeneralizeVars.html#Lean.Meta.getFVarSetToGeneralize","doc":"Collect variables to be generalized.\n  It uses the following heuristic\n  - Collect forward dependencies that are not in the forbidden set, and depend on some variable in `targets`.\n\n  - We use `mkForbiddenSet` to compute `forbidden`.\n\n  Remark: we *not* collect instance implicit arguments nor auxiliary declarations for compiling\n  recursive declarations.\n"},"Lean.Meta.getFVarLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L702-L703","name":"Lean.Meta.getFVarLocalDecl","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getFVarLocalDecl","doc":"Get the local declaration associated to the given `Expr` in the current local\ncontext. Fails if the given expression is not a fvar or if no such declaration exists. "},"Lean.Meta.getExpectedNumArgsAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L17-L19","name":"Lean.Meta.getExpectedNumArgsAux","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.Meta.getExpectedNumArgsAux","doc":"Compute the number of expected arguments and whether the result type is of the form\n(?m ...) where ?m is an unassigned metavariable.\n"},"Lean.Meta.getExpectedNumArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L21-L23","name":"Lean.Meta.getExpectedNumArgs","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.Meta.getExpectedNumArgs","doc":""},"Lean.Meta.getErasedInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L81-L82","name":"Lean.Meta.getErasedInstances","docLink":"./Lean/Meta/Instances.html#Lean.Meta.getErasedInstances","doc":""},"Lean.Meta.getEqnsFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Eqns.lean#L83-L96","name":"Lean.Meta.getEqnsFor?","docLink":"./Lean/Meta/Eqns.html#Lean.Meta.getEqnsFor?","doc":"Return equation theorems for the given declaration.\nBy default, we not create equation theorems for nonrecursive definitions.\nYou can use `nonRec := true` to override this behavior, a dummy `rfl` proof is created on the fly.\n"},"Lean.Meta.getElimInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L24-L51","name":"Lean.Meta.getElimInfo","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.getElimInfo","doc":""},"Lean.Meta.getDefaultInstancesPriorities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L133-L134","name":"Lean.Meta.getDefaultInstancesPriorities","docLink":"./Lean/Meta/Instances.html#Lean.Meta.getDefaultInstancesPriorities","doc":""},"Lean.Meta.getDefaultInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L136-L137","name":"Lean.Meta.getDefaultInstances","docLink":"./Lean/Meta/Instances.html#Lean.Meta.getDefaultInstances","doc":""},"Lean.Meta.getDecLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DecLevel.lean#L69-L70","name":"Lean.Meta.getDecLevel","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.getDecLevel","doc":"This method is useful for inferring universe level parameters for function that take arguments such as `{α : Type u}`.\nRecall that `Type u` is `Sort (u+1)` in Lean. Thus, given `α`, we must infer its universe level,\nand then decrement 1 to obtain `u`. "},"Lean.Meta.getCustomEliminators":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L145-L146","name":"Lean.Meta.getCustomEliminators","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.getCustomEliminators","doc":""},"Lean.Meta.getCustomEliminator?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L148-L154","name":"Lean.Meta.getCustomEliminator?","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.getCustomEliminator?","doc":""},"Lean.Meta.getCtorNumPropFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Injection.lean#L15-L21","name":"Lean.Meta.getCtorNumPropFields","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.getCtorNumPropFields","doc":""},"Lean.Meta.getConstNoEx?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GetConst.lean#L36-L41","name":"Lean.Meta.getConstNoEx?","docLink":"./Lean/Meta/GetConst.html#Lean.Meta.getConstNoEx?","doc":""},"Lean.Meta.getConst?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GetConst.lean#L29-L34","name":"Lean.Meta.getConst?","docLink":"./Lean/Meta/GetConst.html#Lean.Meta.getConst?","doc":""},"Lean.Meta.getCongrSimpKinds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L173-L195","name":"Lean.Meta.getCongrSimpKinds","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.getCongrSimpKinds","doc":"Compute `CongrArgKind`s for a simp congruence theorem. "},"Lean.Meta.getConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L392-L393","name":"Lean.Meta.getConfig","docLink":"./Lean/Meta/Basic.html#Lean.Meta.getConfig","doc":""},"Lean.Meta.getArrayArgType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/CaseArraySizes.lean#L18-L23","name":"Lean.Meta.getArrayArgType","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.getArrayArgType","doc":""},"Lean.Meta.generalizeTelescope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GeneralizeTelescope.lean#L87-L92","name":"Lean.Meta.generalizeTelescope","docLink":"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.generalizeTelescope","doc":"Given expressions `es := #[e_1, e_2, ..., e_n]`, execute `k` with the\n  free variables `(x_1 : A_1) (x_2 : A_2 [x_1]) ... (x_n : A_n [x_1, ... x_{n-1}])`.\n  Moreover,\n  - type of `e_1` is definitionally equal to `A_1`,\n  - type of `e_2` is definitionally equal to `A_2[e_1]`.\n  - ...\n  - type of `e_n` is definitionally equal to `A_n[e_1, ..., e_{n-1}]`.\n\n  This method tries to avoid the creation of new free variables. For example, if `e_i` is a\n  free variable `x_i` and it is not a let-declaration variable, and its type does not depend on\n  previous `e_j`s, the method will just use `x_i`.\n\n  The telescope `x_1 ... x_n` can be used to create lambda and forall abstractions.\n  Moreover, for any type correct lambda abstraction `f` constructed using `mkForall #[x_1, ..., x_n] ...`,\n  The application `f e_1 ... e_n` is also type correct.\n\n  The `kabstract` method is used to \"locate\" and abstract forward dependencies.\n  That is, an occurrence of `e_i` in the of `e_j` for `j > i`.\n\n  The method checks whether the abstract types `A_i` are type correct. Here is an example\n  where `generalizeTelescope` fails to create the telescope `x_1 ... x_n`.\n  Assume the local context contains `(n : Nat := 10) (xs : Vec Nat n) (ys : Vec Nat 10) (h : xs = ys)`.\n  Then, assume we invoke `generalizeTelescope` with `es := #[10, xs, ys, h]`\n  A type error is detected when processing `h`'s type. At this point, the method had successfully produced\n  ```\n    (x_1 : Nat) (xs : Vec Nat n) (x_2 : Vec Nat x_1)\n  ```\n  and the type for the new variable abstracting `h` is `xs = x_2` which is not type correct. "},"Lean.Meta.generalizeTargetsEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L45-L59","name":"Lean.Meta.generalizeTargetsEq","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.Meta.generalizeTargetsEq","doc":""},"Lean.Meta.generalizeIndices":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L85-L122","name":"Lean.Meta.generalizeIndices","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.Meta.generalizeIndices","doc":"Similar to `generalizeTargets` but customized for the `casesOn` motive.\nGiven a metavariable `mvarId` representing the\n```\nCtx, h : I A j, D |- T\n```\nwhere `fvarId` is `h`s id, and the type `I A j` is an inductive datatype where `A` are parameters,\nand `j` the indices. Generate the goal\n```\nCtx, h : I A j, D, j' : J, h' : I A j' |- j == j' -> h == h' -> T\n```\nRemark: `(j == j' -> h == h')` is a \"telescopic\" equality.\nRemark: `j` is sequence of terms, and `j'` a sequence of free variables.\nThe result contains the fields\n- `mvarId`: the new goal\n- `indicesFVarIds`: `j'` ids\n- `fvarId`: `h'` id\n- `numEqs`: number of equations in the target "},"Lean.Meta.generalize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Generalize.lean#L79-L80","name":"Lean.Meta.generalize","docLink":"./Lean/Meta/Tactic/Generalize.html#Lean.Meta.generalize","doc":""},"Lean.Meta.genSizeOfSpec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L468-L468","name":"Lean.Meta.genSizeOfSpec","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.genSizeOfSpec","doc":""},"Lean.Meta.genSizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L463-L463","name":"Lean.Meta.genSizeOf","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.genSizeOf","doc":""},"Lean.Meta.genInjectivity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Injective.lean#L145-L145","name":"Lean.Meta.genInjectivity","docLink":"./Lean/Meta/Injective.html#Lean.Meta.genInjectivity","doc":""},"Lean.Meta.fullApproxDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1405-L1406","name":"Lean.Meta.fullApproxDefEq","docLink":"./Lean/Meta/Basic.html#Lean.Meta.fullApproxDefEq","doc":"Similar to `approxDefEq`, but uses all available approximations.\nWe don't use `constApprox` by default at `approxDefEq` because it often produces undesirable solution for monadic code.\nFor example, suppose we have `pure (x > 0)` which has type `?m Prop`. We also have the goal `[Pure ?m]`.\nNow, assume the expected type is `IO Bool`. Then, the unification constraint `?m Prop =?= IO Bool` could be solved\nas `?m := fun _ => IO Bool` using `constApprox`, but this spurious solution would generate a failure when we try to\nsolve `[Pure (fun _ => IO Bool)]` "},"Lean.Meta.forallTelescopeReducing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1087-L1088","name":"Lean.Meta.forallTelescopeReducing","docLink":"./Lean/Meta/Basic.html#Lean.Meta.forallTelescopeReducing","doc":"Similar to `forallTelescope`, but given `type` of the form `forall xs, A`,\nit reduces `A` and continues bulding the telescope if it is a `forall`. "},"Lean.Meta.forallTelescopeCompatibleAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclUtil.lean#L11-L28","name":"Lean.Meta.forallTelescopeCompatibleAux","docLink":"./Lean/Elab/DeclUtil.html#Lean.Meta.forallTelescopeCompatibleAux","doc":""},"Lean.Meta.forallTelescopeCompatible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclUtil.lean#L32-L34","name":"Lean.Meta.forallTelescopeCompatible","docLink":"./Lean/Elab/DeclUtil.html#Lean.Meta.forallTelescopeCompatible","doc":"Given two forall-expressions `type₁` and `type₂`, ensure the first `numParams` parameters are compatible, and\nthen execute `k` with the parameters and remaining types. "},"Lean.Meta.forallTelescope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1078-L1079","name":"Lean.Meta.forallTelescope","docLink":"./Lean/Meta/Basic.html#Lean.Meta.forallTelescope","doc":"Given `type` of the form `forall xs, A`, execute `k xs A`.\nThis combinator will declare local declarations, create free variables for them,\nexecute `k` with updated local context, and make sure the cache is restored after executing `k`. "},"Lean.Meta.forallMetaTelescopeReducing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1182-L1183","name":"Lean.Meta.forallMetaTelescopeReducing","docLink":"./Lean/Meta/Basic.html#Lean.Meta.forallMetaTelescopeReducing","doc":"Similar to `forallMetaTelescope`, but if `e = forall ..xs, A`\nit will reduce `A` to construct further mvars.  "},"Lean.Meta.forallMetaTelescope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1177-L1178","name":"Lean.Meta.forallMetaTelescope","docLink":"./Lean/Meta/Basic.html#Lean.Meta.forallMetaTelescope","doc":"Given `e` of the form `forall ..xs, A`, this combinator will create a new\nmetavariable for each `x` in `xs` and instantiate `A` with these.\nReturns a product containing\n- the new metavariables\n- the binder info for the `xs`\n- the instantiated `A`\n"},"Lean.Meta.forallMetaBoundedTelescope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1187-L1188","name":"Lean.Meta.forallMetaBoundedTelescope","docLink":"./Lean/Meta/Basic.html#Lean.Meta.forallMetaBoundedTelescope","doc":"Similar to `forallMetaTelescopeReducing`, stops\nconstructing the telescope when it reaches size `maxMVars`. "},"Lean.Meta.forallBoundedTelescope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1096-L1097","name":"Lean.Meta.forallBoundedTelescope","docLink":"./Lean/Meta/Basic.html#Lean.Meta.forallBoundedTelescope","doc":"Similar to `forallTelescopeReducing`, stops constructing the telescope when\nit reaches size `maxFVars`. "},"Lean.Meta.forEachExpr'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L54-L55","name":"Lean.Meta.forEachExpr'","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.forEachExpr'","doc":"Similar to `Expr.forEach'`, but creates free variables whenever going inside of a binder. "},"Lean.Meta.forEachExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L58-L61","name":"Lean.Meta.forEachExpr","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.forEachExpr","doc":"Similar to `Expr.forEach`, but creates free variables whenever going inside of a binder. "},"Lean.Meta.foldPatValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Value.lean#L37-L40","name":"Lean.Meta.foldPatValue","docLink":"./Lean/Meta/Match/Value.html#Lean.Meta.foldPatValue","doc":"The frontend expands uint numerals occurring in patterns into `UInt*.mk ..` contructor applications.\nThis method convert them back into `UInt*.ofNat ..` applications.\n"},"Lean.Meta.foldAncestors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprLens.lean#L106-L109","name":"Lean.Meta.foldAncestors","docLink":"./Lean/Meta/ExprLens.html#Lean.Meta.foldAncestors","doc":"`foldAncestors k init p e` folds over the strict ancestor subexpressions of the given expression `e` above position `p`, starting at the root expression and working down.\nThe fold function `k` is given the newly instantiated free variables, the ancestor subexpression, and the coordinate\nthat will be explored next."},"Lean.Meta.findMVarDecl?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L533-L534","name":"Lean.Meta.findMVarDecl?","docLink":"./Lean/Meta/Basic.html#Lean.Meta.findMVarDecl?","doc":""},"Lean.Meta.findLocalDeclWithType?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assumption.lean#L11-L18","name":"Lean.Meta.findLocalDeclWithType?","docLink":"./Lean/Meta/Tactic/Assumption.html#Lean.Meta.findLocalDeclWithType?","doc":"Return a local declaration whose type is definitionally equal to `type`. "},"Lean.Meta.findLocalDecl?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L664-L665","name":"Lean.Meta.findLocalDecl?","docLink":"./Lean/Meta/Basic.html#Lean.Meta.findLocalDecl?","doc":""},"Lean.Meta.expandCoe.step":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Coe.lean#L26-L37","name":"Lean.Meta.expandCoe.step","docLink":"./Lean/Meta/Coe.html#Lean.Meta.expandCoe.step","doc":""},"Lean.Meta.expandCoe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Coe.lean#L22-L37","name":"Lean.Meta.expandCoe","docLink":"./Lean/Meta/Coe.html#Lean.Meta.expandCoe","doc":"Expand coercions occurring in `e` "},"Lean.Meta.existsIntro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Constructor.lean#L53-L54","name":"Lean.Meta.existsIntro","docLink":"./Lean/Meta/Tactic/Constructor.html#Lean.Meta.existsIntro","doc":""},"Lean.Meta.exactlyOne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L140-L143","name":"Lean.Meta.exactlyOne","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.exactlyOne","doc":""},"Lean.Meta.evalNat.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Offset.lean#L36-L61","name":"Lean.Meta.evalNat.visit","docLink":"./Lean/Meta/Offset.html#Lean.Meta.evalNat.visit","doc":""},"Lean.Meta.evalNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Offset.lean#L27-L61","name":"Lean.Meta.evalNat","docLink":"./Lean/Meta/Offset.html#Lean.Meta.evalNat","doc":"Evaluate simple `Nat` expressions.\nRemark: this method assumes the given expression has type `Nat`. "},"Lean.Meta.evalExprCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Eval.lean#L10-L21","name":"Lean.Meta.evalExprCore","docLink":"./Lean/Meta/Eval.html#Lean.Meta.evalExprCore","doc":""},"Lean.Meta.evalExpr'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Eval.lean#L23-L27","name":"Lean.Meta.evalExpr'","docLink":"./Lean/Meta/Eval.html#Lean.Meta.evalExpr'","doc":""},"Lean.Meta.evalExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Eval.lean#L29-L32","name":"Lean.Meta.evalExpr","docLink":"./Lean/Meta/Eval.html#Lean.Meta.evalExpr","doc":""},"Lean.Meta.etaExpand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1706-L1707","name":"Lean.Meta.etaExpand","docLink":"./Lean/Meta/Basic.html#Lean.Meta.etaExpand","doc":"Eta expand the given expression.\nExample:\n```\netaExpand (mkConst ``Nat.add)\n```\nproduces `fun x y => Nat.add x y`\n"},"Lean.Meta.erasePatternRefAnnotations":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L148-L149","name":"Lean.Meta.erasePatternRefAnnotations","docLink":"./Lean/Meta/Transform.html#Lean.Meta.erasePatternRefAnnotations","doc":""},"Lean.Meta.eraseInaccessibleAnnotations":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L145-L146","name":"Lean.Meta.eraseInaccessibleAnnotations","docLink":"./Lean/Meta/Transform.html#Lean.Meta.eraseInaccessibleAnnotations","doc":""},"Lean.Meta.eqnsExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Eqns.lean#L57-L57","name":"Lean.Meta.eqnsExt","docLink":"./Lean/Meta/Eqns.html#Lean.Meta.eqnsExt","doc":""},"Lean.Meta.ensureAtMostOne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L145-L149","name":"Lean.Meta.ensureAtMostOne","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.ensureAtMostOne","doc":""},"Lean.Meta.elimOptParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Injective.lean#L26-L31","name":"Lean.Meta.elimOptParam","docLink":"./Lean/Meta/Injective.html#Lean.Meta.elimOptParam","doc":""},"Lean.Meta.elimMVarDeps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L785-L786","name":"Lean.Meta.elimMVarDeps","docLink":"./Lean/Meta/Basic.html#Lean.Meta.elimMVarDeps","doc":""},"Lean.Meta.dsimpGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L972-L996","name":"Lean.Meta.dsimpGoal","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.dsimpGoal","doc":""},"Lean.Meta.dsimp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L818-L819","name":"Lean.Meta.dsimp","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.dsimp","doc":""},"Lean.Meta.deltaTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Delta.lean#L35-L36","name":"Lean.Meta.deltaTarget","docLink":"./Lean/Meta/Tactic/Delta.html#Lean.Meta.deltaTarget","doc":""},"Lean.Meta.deltaLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Delta.lean#L47-L48","name":"Lean.Meta.deltaLocalDecl","docLink":"./Lean/Meta/Tactic/Delta.html#Lean.Meta.deltaLocalDecl","doc":""},"Lean.Meta.deltaExpand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Delta.lean#L20-L24","name":"Lean.Meta.deltaExpand","docLink":"./Lean/Meta/Tactic/Delta.html#Lean.Meta.deltaExpand","doc":"Low-level delta expansion. It is used to implement equation lemmas and elimination principles for recursive definitions. "},"Lean.Meta.delta?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Delta.lean#L11-L17","name":"Lean.Meta.delta?","docLink":"./Lean/Meta/Tactic/Delta.html#Lean.Meta.delta?","doc":""},"Lean.Meta.define":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assert.lean#L44-L45","name":"Lean.Meta.define","docLink":"./Lean/Meta/Tactic/Assert.html#Lean.Meta.define","doc":""},"Lean.Meta.defaultInstanceExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L104-L104","name":"Lean.Meta.defaultInstanceExtension","docLink":"./Lean/Meta/Instances.html#Lean.Meta.defaultInstanceExtension","doc":""},"Lean.Meta.decLevel?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DecLevel.lean#L53-L59","name":"Lean.Meta.decLevel?","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.decLevel?","doc":""},"Lean.Meta.decLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DecLevel.lean#L61-L64","name":"Lean.Meta.decLevel","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.decLevel","doc":""},"Lean.Meta.customEliminatorExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L101-L101","name":"Lean.Meta.customEliminatorExt","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.customEliminatorExt","doc":""},"Lean.Meta.contradiction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Contradiction.lean#L229-L230","name":"Lean.Meta.contradiction","docLink":"./Lean/Meta/Tactic/Contradiction.html#Lean.Meta.contradiction","doc":""},"Lean.Meta.constructor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Constructor.lean#L31-L32","name":"Lean.Meta.constructor","docLink":"./Lean/Meta/Tactic/Constructor.html#Lean.Meta.constructor","doc":""},"Lean.Meta.congrExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L45-L45","name":"Lean.Meta.congrExtension","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.congrExtension","doc":""},"Lean.Meta.compatibleCtors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Inductive.lean#L13-L21","name":"Lean.Meta.compatibleCtors","docLink":"./Lean/Meta/Inductive.html#Lean.Meta.compatibleCtors","doc":"Return true if the types of the given constructors are compatible. "},"Lean.Meta.collectMVarsAtDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CollectMVars.lean#L41-L42","name":"Lean.Meta.collectMVarsAtDecl","docLink":"./Lean/Meta/CollectMVars.html#Lean.Meta.collectMVarsAtDecl","doc":""},"Lean.Meta.collectMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CollectMVars.lean#L20-L29","name":"Lean.Meta.collectMVars","docLink":"./Lean/Meta/CollectMVars.html#Lean.Meta.collectMVars","doc":"Collect unassigned metavariables occuring in the given expression.\n\n  Remark: if `e` contains `?m` and there is a `t` assigned to `?m`, we\n  collect unassigned metavariables occurring in `t`.\n\n  Remark: if `e` contains `?m` and `?m` is delayed assigned to some term `t`,\n  we collect `?m` and unassigned metavariables occurring in `t`.\n  We collect `?m` because it has not been assigned yet. "},"Lean.Meta.collectForwardDeps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L757-L758","name":"Lean.Meta.collectForwardDeps","docLink":"./Lean/Meta/Basic.html#Lean.Meta.collectForwardDeps","doc":"Collect forward dependencies for the free variables in `toRevert`.\nRecall that when reverting free variables `xs`, we must also revert their forward dependencies.\n"},"Lean.Meta.clear":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Clear.lean#L38-L39","name":"Lean.Meta.clear","docLink":"./Lean/Meta/Tactic/Clear.html#Lean.Meta.clear","doc":""},"Lean.Meta.cleanup":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cleanup.lean#L70-L71","name":"Lean.Meta.cleanup","docLink":"./Lean/Meta/Tactic/Cleanup.html#Lean.Meta.cleanup","doc":""},"Lean.Meta.checkpointDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1628-L1655","name":"Lean.Meta.checkpointDefEq","docLink":"./Lean/Meta/Basic.html#Lean.Meta.checkpointDefEq","doc":"`checkpointDefEq x` executes `x` and process all postponed universe level constraints produced by `x`.\n  We keep the modifications only if `processPostponed` return true and `x` returned `true`.\n\n  If `mayPostpone == false`, all new postponed universe level constraints must be solved before returning.\n  We currently try to postpone universe constraints as much as possible, even when by postponing them we\n  are not sure whether `x` really succeeded or not.\n"},"Lean.Meta.checkNotAssigned":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L54-L55","name":"Lean.Meta.checkNotAssigned","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.checkNotAssigned","doc":""},"Lean.Meta.checkAssignment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L872-L889","name":"Lean.Meta.checkAssignment","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.checkAssignment","doc":"Auxiliary function for handling constraints of the form `?m a₁ ... aₙ =?= v`.\nIt will check whether we can perform the assignment\n```\n?m := fun fvars => v\n```\nThe result is `none` if the assignment can't be performed.\nThe result is `some newV` where `newV` is a possibly updated `v`. This method may need\nto unfold let-declarations. "},"Lean.Meta.checkApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Check.lean#L136-L144","name":"Lean.Meta.checkApp","docLink":"./Lean/Meta/Check.html#Lean.Meta.checkApp","doc":""},"Lean.Meta.check":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Check.lean#L189-L191","name":"Lean.Meta.check","docLink":"./Lean/Meta/Check.html#Lean.Meta.check","doc":"Throw an exception if `e` is not type correct.\n"},"Lean.Meta.changeLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L156-L157","name":"Lean.Meta.changeLocalDecl","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.Meta.changeLocalDecl","doc":""},"Lean.Meta.change":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L128-L129","name":"Lean.Meta.change","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.Meta.change","doc":""},"Lean.Meta.casesOnStuckLHS?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L52-L53","name":"Lean.Meta.casesOnStuckLHS?","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.casesOnStuckLHS?","doc":""},"Lean.Meta.casesOnStuckLHS.findFVar?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L27-L50","name":"Lean.Meta.casesOnStuckLHS.findFVar?","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.casesOnStuckLHS.findFVar?","doc":""},"Lean.Meta.casesOnStuckLHS":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L20-L50","name":"Lean.Meta.casesOnStuckLHS","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.casesOnStuckLHS","doc":"Helper method for `proveCondEqThm`. Given a goal of the form `C.rec ... xMajor = rhs`,\napply `cases xMajor`. "},"Lean.Meta.cases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L265-L266","name":"Lean.Meta.cases","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.Meta.cases","doc":""},"Lean.Meta.caseValues.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/CaseValues.lean#L83-L102","name":"Lean.Meta.caseValues.loop","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValues.loop","doc":""},"Lean.Meta.caseValues":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/CaseValues.lean#L82-L103","name":"Lean.Meta.caseValues","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValues","doc":"Split goal `... |- C x` into values.size + 1 subgoals\n  1) `..., (h_1 : x = value[0])  |- C value[0]`\n  ...\n  n) `..., (h_n : x = value[n - 1])  |- C value[n - 1]`\n  n+1) `..., (h_1 : x != value[0]) ... (h_n : x != value[n-1]) |- C x`\n  where `n = values.size`\n  where `fvarId` is `x`s id.\n  The type of `x` must have decidable equality.\n\n  Remark: the last subgoal is for the \"else\" catchall case, and its `subst` is `{}`.\n  Remark: the fiels `newHs` has size 1 forall but the last subgoal.\n\n  If `substNewEqs = true`, then the new `h_i` equality hypotheses are substituted in the first `n` cases.\n"},"Lean.Meta.caseValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/CaseValues.lean#L55-L59","name":"Lean.Meta.caseValue","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.caseValue","doc":""},"Lean.Meta.caseArraySizes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/CaseArraySizes.lean#L60-L87","name":"Lean.Meta.caseArraySizes","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.caseArraySizes","doc":"Split goal `... |- C a` into sizes.size + 1 subgoals\n1) `..., x_1 ... x_{sizes[0]} |- C #[x_1, ... x_{sizes[0]}]`\n...\nn) `..., x_1 ... x_{sizes[n-1]}  |- C #[x_1, ..., x_{sizes[n-1]}]`\nn+1) `..., (h_1 : a.size != sizes[0]), ..., (h_n : a.size != sizes[n-1]) |- C a`\nwhere `n = sizes.size` "},"Lean.Meta.canUnfoldAtMatcher":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L382-L405","name":"Lean.Meta.canUnfoldAtMatcher","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.canUnfoldAtMatcher","doc":"The \"match\" compiler uses `if-then-else` expressions and other auxiliary declarations to compile match-expressions such as\n  ```\n  match v with\n  | 'a' => 1\n  | 'b' => 2\n  | _   => 3\n  ```\n  because it is more efficient than using `casesOn` recursors.\n  The method `reduceMatcher?` fails if these auxiliary definitions (e.g., `ite`) cannot be unfolded in the current\n  transparency setting. This is problematic because tactics such as `simp` use `TransparencyMode.reducible`, and\n  most users assume that expressions such as\n  ```\n  match 0 with\n  | 0 => 1\n  | 100 => 2\n  | _ => 3\n  ```\n  should reduce in any transparency mode.\n  Thus, we define a custom `canUnfoldAtMatcher` predicate for `whnfMatcher`.\n\n  This solution is not very modular because modications at the `match` compiler require changes here.\n  We claim this is defensible because it is reducing the auxiliary declaration defined by the `match` compiler.\n\n  Alternative solution: tactics that use `TransparencyMode.reducible` should rely on the equations we generated for match-expressions.\n  This solution is also not perfect because the match-expression above will not reduce during type checking when we are not using\n  `TransparencyMode.default` or `TransparencyMode.all`.\n"},"Lean.Meta.canUnfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GetConst.lean#L22-L27","name":"Lean.Meta.canUnfold","docLink":"./Lean/Meta/GetConst.html#Lean.Meta.canUnfold","doc":""},"Lean.Meta.auxLemmasExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AuxLemma.lean#L15-L15","name":"Lean.Meta.auxLemmasExt","docLink":"./Lean/Meta/Tactic/AuxLemma.html#Lean.Meta.auxLemmasExt","doc":""},"Lean.Meta.assumptionCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assumption.lean#L29-L30","name":"Lean.Meta.assumptionCore","docLink":"./Lean/Meta/Tactic/Assumption.html#Lean.Meta.assumptionCore","doc":""},"Lean.Meta.assumption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assumption.lean#L38-L39","name":"Lean.Meta.assumption","docLink":"./Lean/Meta/Tactic/Assumption.html#Lean.Meta.assumption","doc":""},"Lean.Meta.assertHypotheses":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assert.lean#L126-L127","name":"Lean.Meta.assertHypotheses","docLink":"./Lean/Meta/Tactic/Assert.html#Lean.Meta.assertHypotheses","doc":""},"Lean.Meta.assertExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assert.lean#L64-L65","name":"Lean.Meta.assertExt","docLink":"./Lean/Meta/Tactic/Assert.html#Lean.Meta.assertExt","doc":""},"Lean.Meta.assertAfter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assert.lean#L100-L101","name":"Lean.Meta.assertAfter","docLink":"./Lean/Meta/Tactic/Assert.html#Lean.Meta.assertAfter","doc":""},"Lean.Meta.assert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assert.lean#L27-L28","name":"Lean.Meta.assert","docLink":"./Lean/Meta/Tactic/Assert.html#Lean.Meta.assert","doc":""},"Lean.Meta.approxDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1392-L1393","name":"Lean.Meta.approxDefEq","docLink":"./Lean/Meta/Basic.html#Lean.Meta.approxDefEq","doc":"Execute `x` using approximate unification: `foApprox`, `ctxApprox` and `quasiPatternApprox`.  "},"Lean.Meta.applySimpResultToTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L825-L832","name":"Lean.Meta.applySimpResultToTarget","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.applySimpResultToTarget","doc":"Auxiliary method.\nGiven the current `target` of `mvarId`, apply `r` which is a new target and proof that it is equaal to the current one.\n"},"Lean.Meta.applySimpResultToProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L859-L872","name":"Lean.Meta.applySimpResultToProp","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.applySimpResultToProp","doc":"Apply the result `r` for `prop` (which is inhabited by `proof`). Return `none` if the goal was closed. Return `some (proof', prop')`\n  otherwise, where `proof' : prop'` and `prop'` is the simplified `prop`.\n\n  This method assumes `mvarId` is not assigned, and we are already using `mvarId`s local context. "},"Lean.Meta.applySimpResultToLocalDeclCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L887-L898","name":"Lean.Meta.applySimpResultToLocalDeclCore","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.applySimpResultToLocalDeclCore","doc":""},"Lean.Meta.applySimpResultToLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L903-L913","name":"Lean.Meta.applySimpResultToLocalDecl","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.applySimpResultToLocalDecl","doc":"Simplify `simp` result to the given local declaration. Return `none` if the goal was closed.\nThis method assumes `mvarId` is not assigned, and we are already using `mvarId`s local context. "},"Lean.Meta.applySimpResultToFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L874-L876","name":"Lean.Meta.applySimpResultToFVarId","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.applySimpResultToFVarId","doc":""},"Lean.Meta.apply":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L121-L122","name":"Lean.Meta.apply","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.Meta.apply","doc":""},"Lean.Meta.appendTagSuffix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L31-L33","name":"Lean.Meta.appendTagSuffix","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.appendTagSuffix","doc":""},"Lean.Meta.appendTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L28-L29","name":"Lean.Meta.appendTag","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.appendTag","doc":""},"Lean.Meta.appendParentTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L37-L49","name":"Lean.Meta.appendParentTag","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.Meta.appendParentTag","doc":""},"Lean.Meta.admit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L85-L86","name":"Lean.Meta.admit","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.admit","doc":""},"Lean.Meta.addUnificationHint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L68-L80","name":"Lean.Meta.addUnificationHint","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.addUnificationHint","doc":""},"Lean.Meta.addSimpTheoremEntry.updateLemmaNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L112-L115","name":"Lean.Meta.addSimpTheoremEntry.updateLemmaNames","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.addSimpTheoremEntry.updateLemmaNames","doc":""},"Lean.Meta.addSimpTheoremEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L106-L115","name":"Lean.Meta.addSimpTheoremEntry","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.addSimpTheoremEntry","doc":""},"Lean.Meta.addSimpTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L272-L275","name":"Lean.Meta.addSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.addSimpTheorem","doc":""},"Lean.Meta.addSimpCongrTheoremEntry.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L41-L43","name":"Lean.Meta.addSimpCongrTheoremEntry.insert","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.addSimpCongrTheoremEntry.insert","doc":""},"Lean.Meta.addSimpCongrTheoremEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L35-L43","name":"Lean.Meta.addSimpCongrTheoremEntry","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.addSimpCongrTheoremEntry","doc":""},"Lean.Meta.addSimpCongrTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L108-L110","name":"Lean.Meta.addSimpCongrTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.addSimpCongrTheorem","doc":""},"Lean.Meta.addPPExplicitToExposeDiff.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Check.lean#L78-L103","name":"Lean.Meta.addPPExplicitToExposeDiff.visit","docLink":"./Lean/Meta/Check.html#Lean.Meta.addPPExplicitToExposeDiff.visit","doc":""},"Lean.Meta.addPPExplicitToExposeDiff.hasExplicitDiff?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Check.lean#L105-L112","name":"Lean.Meta.addPPExplicitToExposeDiff.hasExplicitDiff?","docLink":"./Lean/Meta/Check.html#Lean.Meta.addPPExplicitToExposeDiff.hasExplicitDiff?","doc":""},"Lean.Meta.addPPExplicitToExposeDiff":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Check.lean#L72-L112","name":"Lean.Meta.addPPExplicitToExposeDiff","docLink":"./Lean/Meta/Check.html#Lean.Meta.addPPExplicitToExposeDiff","doc":"Given two expressions `a` and `b`, this method tries to annotate terms with `pp.explicit := true` to\nexpose \"implicit\" differences. For example, suppose `a` and `b` are of the form\n```lean\n@HashMap Nat Nat eqInst hasInst1\n@HashMap Nat Nat eqInst hasInst2\n```\nBy default, the pretty printer formats both of them as `HashMap Nat Nat`.\nSo, counterintuitive error messages such as\n```lean\nerror: application type mismatch\n  HashMap.insert m\nargument\n  m\nhas type\n  HashMap Nat Nat\nbut is expected to have type\n  HashMap Nat Nat\n```\nwould be produced.\nBy adding `pp.explicit := true`, we can generate the more informative error\n```lean\nerror: application type mismatch\n  HashMap.insert m\nargument\n  m\nhas type\n  @HashMap Nat Nat eqInst hasInst1\nbut is expected to have type\n  @HashMap Nat Nat eqInst hasInst2\n```\nRemark: this method implements a simple heuristic, we should extend it as we find other counterintuitive\nerror messages.\n"},"Lean.Meta.addInstanceEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L33-L36","name":"Lean.Meta.addInstanceEntry","docLink":"./Lean/Meta/Instances.html#Lean.Meta.addInstanceEntry","doc":""},"Lean.Meta.addInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L59-L63","name":"Lean.Meta.addInstance","docLink":"./Lean/Meta/Instances.html#Lean.Meta.addInstance","doc":""},"Lean.Meta.addImplicitTargets.collect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L68-L86","name":"Lean.Meta.addImplicitTargets.collect","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.addImplicitTargets.collect","doc":""},"Lean.Meta.addImplicitTargets":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L58-L86","name":"Lean.Meta.addImplicitTargets","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.addImplicitTargets","doc":"Eliminators/recursors may have implicit targets. For builtin recursors, all indices are implicit targets.\nGiven an eliminator and the sequence of explicit targets, this methods returns a new sequence containing\nimplicit and explicit targets.\n"},"Lean.Meta.addGlobalInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GlobalInstances.lean#L18-L19","name":"Lean.Meta.addGlobalInstance","docLink":"./Lean/Meta/GlobalInstances.html#Lean.Meta.addGlobalInstance","doc":""},"Lean.Meta.addDefaultInstanceEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L98-L102","name":"Lean.Meta.addDefaultInstanceEntry","docLink":"./Lean/Meta/Instances.html#Lean.Meta.addDefaultInstanceEntry","doc":""},"Lean.Meta.addDefaultInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L111-L121","name":"Lean.Meta.addDefaultInstance","docLink":"./Lean/Meta/Instances.html#Lean.Meta.addDefaultInstance","doc":""},"Lean.Meta.addCustomEliminatorEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L97-L99","name":"Lean.Meta.addCustomEliminatorEntry","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.addCustomEliminatorEntry","doc":""},"Lean.Meta.addCustomEliminator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L133-L135","name":"Lean.Meta.addCustomEliminator","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.addCustomEliminator","doc":""},"Lean.Meta.abstractRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L739-L740","name":"Lean.Meta.abstractRange","docLink":"./Lean/Meta/Basic.html#Lean.Meta.abstractRange","doc":""},"Lean.Meta.abstractNestedProofs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractNestedProofs.lean#L68-L69","name":"Lean.Meta.abstractNestedProofs","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.abstractNestedProofs","doc":"Replace proofs nested in `e` with new lemmas. The new lemmas have names of the form `mainDeclName.proof_<idx>` "},"Lean.Meta.abstractMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractMVars.lean#L129-L135","name":"Lean.Meta.abstractMVars","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.abstractMVars","doc":"Abstract (current depth) metavariables occurring in `e`.\n  The result contains\n  - An array of universe level parameters that replaced universe metavariables occurring in `e`.\n  - The number of (expr) metavariables abstracted.\n  - And an expression of the form `fun (m_1 : A_1) ... (m_k : A_k) => e'`, where\n    `k` equal to the number of (expr) metavariables abstracted, and `e'` is `e` after we\n    replace the metavariables.\n\n  Example: given `f.{?u} ?m1` where `?m1 : ?m2 Nat`, `?m2 : Type -> Type`. This function returns\n  `{ levels := #[u], size := 2, expr := (fun (m2 : Type -> Type) (m1 : m2 Nat) => f.{u} m1) }`\n\n  This API can be used to \"transport\" to a different metavariable context.\n  Given a new metavariable context, we replace the `AbstractMVarsResult.levels` with\n  new fresh universe metavariables, and instantiate the `(m_i : A_i)` in the lambda-expression\n  with new fresh metavariables.\n\n  Application: we use this method to cache the results of type class resolution. "},"Lean.Meta.abstract":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L750-L751","name":"Lean.Meta.abstract","docLink":"./Lean/Meta/Basic.html#Lean.Meta.abstract","doc":""},"Lean.Meta.WhnfCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L221-L221","name":"Lean.Meta.WhnfCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.WhnfCache","doc":""},"Lean.Meta.UnifyEqResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/UnifyEq.lean#L18-L21","name":"Lean.Meta.UnifyEqResult","docLink":"./Lean/Meta/Tactic/UnifyEq.html#Lean.Meta.UnifyEqResult","doc":""},"Lean.Meta.UnificationHints.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L25-L26","name":"Lean.Meta.UnificationHints.add","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.UnificationHints.add","doc":""},"Lean.Meta.UnificationHints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L18-L20","name":"Lean.Meta.UnificationHints","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.UnificationHints","doc":""},"Lean.Meta.UnificationHintEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L13-L16","name":"Lean.Meta.UnificationHintEntry","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.UnificationHintEntry","doc":""},"Lean.Meta.UnificationHint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L39-L41","name":"Lean.Meta.UnificationHint","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.UnificationHint","doc":""},"Lean.Meta.UnificationConstraint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/UnificationHint.lean#L35-L37","name":"Lean.Meta.UnificationConstraint","docLink":"./Lean/Meta/UnificationHint.html#Lean.Meta.UnificationConstraint","doc":""},"Lean.Meta.TransparencyMode.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/TransparencyMode.lean#L18-L25","name":"Lean.Meta.TransparencyMode.lt","docLink":"./Lean/Meta/TransparencyMode.html#Lean.Meta.TransparencyMode.lt","doc":""},"Lean.Meta.TransparencyMode.instHashableTransparencyMode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/TransparencyMode.lean#L16-L16","name":"Lean.Meta.TransparencyMode.instHashableTransparencyMode","docLink":"./Lean/Meta/TransparencyMode.html#Lean.Meta.TransparencyMode.instHashableTransparencyMode","doc":""},"Lean.Meta.TransparencyMode.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/TransparencyMode.lean#L10-L14","name":"Lean.Meta.TransparencyMode.hash","docLink":"./Lean/Meta/TransparencyMode.html#Lean.Meta.TransparencyMode.hash","doc":""},"Lean.Meta.TransparencyMode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1172-L1174","name":"Lean.Meta.TransparencyMode","docLink":"./Init/Meta.html#Lean.Meta.TransparencyMode","doc":""},"Lean.Meta.ToHide.visitVisibleExpr.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L113-L124","name":"Lean.Meta.ToHide.visitVisibleExpr.visit","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.visitVisibleExpr.visit","doc":""},"Lean.Meta.ToHide.visitVisibleExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L110-L124","name":"Lean.Meta.ToHide.visitVisibleExpr","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.visitVisibleExpr","doc":"If `e` is visible, then any inaccessible in `e` marked as hidden should be unmarked. "},"Lean.Meta.ToHide.unmark":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L73-L78","name":"Lean.Meta.ToHide.unmark","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.unmark","doc":"If `fvarId` isMarked, then unmark it. "},"Lean.Meta.ToHide.moveToHiddeProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L80-L85","name":"Lean.Meta.ToHide.moveToHiddeProp","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.moveToHiddeProp","doc":""},"Lean.Meta.ToHide.isMarked":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L68-L70","name":"Lean.Meta.ToHide.isMarked","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.isMarked","doc":"Return true if `fvarId` is marked as an hidden inaccessible or inaccessible proposition "},"Lean.Meta.ToHide.hasVisibleDep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L98-L100","name":"Lean.Meta.ToHide.hasVisibleDep","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.hasVisibleDep","doc":"Return true if the given local declaration has a \"visible dependency\", that is, it contains\n   a free variable that is `hiddenInaccessible`\n\n   Recall that hiddenInaccessibleProps are visible, only their names are hidden "},"Lean.Meta.ToHide.hasInaccessibleNameDep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L104-L107","name":"Lean.Meta.ToHide.hasInaccessibleNameDep","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.hasInaccessibleNameDep","doc":"Return true if the given local declaration has a \"nonvisible dependency\", that is, it contains\na free variable that is `hiddenInaccessible` or `hiddenInaccessibleProp` "},"Lean.Meta.ToHide.fixpointStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L126-L142","name":"Lean.Meta.ToHide.fixpointStep","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.fixpointStep","doc":""},"Lean.Meta.ToHide.fixpoint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L144-L148","name":"Lean.Meta.ToHide.fixpoint","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.fixpoint","doc":""},"Lean.Meta.ToHide.collect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L179-L189","name":"Lean.Meta.ToHide.collect","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.collect","doc":"If `pp.inaccessibleNames == false`, then collect two sets of `FVarId`s : `hiddenInaccessible` and `hiddenInaccessibleProp`\n1- `hiddenInaccessible` contains `FVarId`s of free variables with inaccessible names that\n    a) are not propositions or\n    b) are propositions containing \"visible\" names.\n2- `hiddenInaccessibleProp` contains `FVarId`s of free variables with inaccessible names that are propositions\n   containing \"visible\" names.\nBoth sets do not contain `FVarId`s that contain visible backward or forward dependencies.\nThe `goalTarget` counts as a forward dependency.\n\nWe say a name is visible if it is a free variable with FVarId not in `hiddenInaccessible` nor `hiddenInaccessibleProp`\n\nFor propositions in `hiddenInaccessibleProp`, we show only their types when displaying a goal.\n\nRemark: when `pp.inaccessibleNames == true`, we still compute `hiddenInaccessibleProp` to prevent the\ngoal from being littered with irrelevant names.\n\n"},"Lean.Meta.ToHide.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L49-L54","name":"Lean.Meta.ToHide.State","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.State","doc":""},"Lean.Meta.ToHide.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L65-L65","name":"Lean.Meta.ToHide.M","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.M","doc":""},"Lean.Meta.ToHide.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/PPGoal.lean#L56-L63","name":"Lean.Meta.ToHide.Context","docLink":"./Lean/Meta/PPGoal.html#Lean.Meta.ToHide.Context","doc":""},"Lean.Meta.TacticResultCNM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L166-L169","name":"Lean.Meta.TacticResultCNM","docLink":"./Lean/Meta/Tactic/Util.html#Lean.Meta.TacticResultCNM","doc":""},"Lean.Meta.SynthInstanceCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L217-L217","name":"Lean.Meta.SynthInstanceCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.SynthInstanceCache","doc":""},"Lean.Meta.SynthInstance.wakeUp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L379-L391","name":"Lean.Meta.SynthInstance.wakeUp","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.wakeUp","doc":"Move waiters that are waiting for the given answer to the resume stack. "},"Lean.Meta.SynthInstance.tryResolveCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L319-L357","name":"Lean.Meta.SynthInstance.tryResolveCore","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.tryResolveCore","doc":""},"Lean.Meta.SynthInstance.tryResolve":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L364-L365","name":"Lean.Meta.SynthInstance.tryResolve","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.tryResolve","doc":"Try to synthesize metavariable `mvar` using the instance `inst`.\nRemark: `mctx` contains `mvar`.\nIf it succeeds, the result is a new updated metavariable context and a new list of subgoals.\nA subgoal is created for each instance implicit parameter of `inst`. "},"Lean.Meta.SynthInstance.tryAnswer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L370-L376","name":"Lean.Meta.SynthInstance.tryAnswer","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.tryAnswer","doc":"Assign a precomputed answer to `mvar`.\nIf it succeeds, the result is a new updated metavariable context and a new list of subgoals. "},"Lean.Meta.SynthInstance.synth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L573-L580","name":"Lean.Meta.SynthInstance.synth","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.synth","doc":""},"Lean.Meta.SynthInstance.step":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L558-L568","name":"Lean.Meta.SynthInstance.step","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.step","doc":""},"Lean.Meta.SynthInstance.resume":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L544-L556","name":"Lean.Meta.SynthInstance.resume","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.resume","doc":"Given `(cNode, answer)` on the top of the resume stack, continue execution by using `answer` to solve the\nnext subgoal. "},"Lean.Meta.SynthInstance.newSubgoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L231-L241","name":"Lean.Meta.SynthInstance.newSubgoal","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.newSubgoal","doc":"Create a new generator node for `mvar` and add `waiter` as its waiter.\n`key` must be `mkTableKey mctx mvarType`. "},"Lean.Meta.SynthInstance.modifyTop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L516-L517","name":"Lean.Meta.SynthInstance.modifyTop","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.modifyTop","doc":""},"Lean.Meta.SynthInstance.mkTableKeyFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L256-L260","name":"Lean.Meta.SynthInstance.mkTableKeyFor","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.mkTableKeyFor","doc":"Create a `key` for the goal associated with the given metavariable.\n  That is, we create a key for the type of the metavariable.\n\n  We must instantiate assigned metavariables before we invoke `mkTableKey`. "},"Lean.Meta.SynthInstance.mkTableKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L145-L148","name":"Lean.Meta.SynthInstance.mkTableKey","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.mkTableKey","doc":"Remark: `mkTableKey` assumes `e` does not contain assigned metavariables. "},"Lean.Meta.SynthInstance.mkGeneratorNode?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L215-L226","name":"Lean.Meta.SynthInstance.mkGeneratorNode?","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.mkGeneratorNode?","doc":""},"Lean.Meta.SynthInstance.mapMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L182-L183","name":"Lean.Meta.SynthInstance.mapMetaM","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.mapMetaM","doc":""},"Lean.Meta.SynthInstance.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L582-L596","name":"Lean.Meta.SynthInstance.main","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.main","doc":""},"Lean.Meta.SynthInstance.isNewAnswer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L393-L397","name":"Lean.Meta.SynthInstance.isNewAnswer","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.isNewAnswer","doc":""},"Lean.Meta.SynthInstance.instInhabitedSynthM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L185-L186","name":"Lean.Meta.SynthInstance.instInhabitedSynthM","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.instInhabitedSynthM","doc":""},"Lean.Meta.SynthInstance.instInhabitedGeneratorNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L45-L45","name":"Lean.Meta.SynthInstance.instInhabitedGeneratorNode","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.instInhabitedGeneratorNode","doc":""},"Lean.Meta.SynthInstance.instInhabitedConsumerNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L53-L53","name":"Lean.Meta.SynthInstance.instInhabitedConsumerNode","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.instInhabitedConsumerNode","doc":""},"Lean.Meta.SynthInstance.instInhabitedAnswer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L154-L154","name":"Lean.Meta.SynthInstance.instInhabitedAnswer","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.instInhabitedAnswer","doc":""},"Lean.Meta.SynthInstance.inferTCGoalsRLAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L33-L33","name":"Lean.Meta.SynthInstance.inferTCGoalsRLAttr","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.inferTCGoalsRLAttr","doc":""},"Lean.Meta.SynthInstance.hasInferTCGoalsRLAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L36-L37","name":"Lean.Meta.SynthInstance.hasInferTCGoalsRLAttribute","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.hasInferTCGoalsRLAttribute","doc":""},"Lean.Meta.SynthInstance.getTop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L513-L514","name":"Lean.Meta.SynthInstance.getTop","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getTop","doc":""},"Lean.Meta.SynthInstance.getSubgoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L307-L317","name":"Lean.Meta.SynthInstance.getSubgoals","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getSubgoals","doc":"`getSubgoals lctx localInsts xs inst` creates the subgoals for the instance `inst`.\n  The subgoals are in the context of the free variables `xs`, and\n  `(lctx, localInsts)` is the local context and instances before we added the free variables to it.\n\n  This extra complication is required because\n    1- We want all metavariables created by `synthInstance` to share the same local context.\n    2- We want to ensure that applications such as `mvar xs` are higher order patterns.\n\n  The method `getGoals` create a new metavariable for each parameter of `inst`.\n  For example, suppose the type of `inst` is `forall (x_1 : A_1) ... (x_n : A_n), B x_1 ... x_n`.\n  Then, we create the metavariables `?m_i : forall xs, A_i`, and return the subset of these\n  metavariables that are instance implicit arguments, and the expressions:\n    - `inst (?m_1 xs) ... (?m_n xs)` (aka `instVal`)\n    - `B (?m_1 xs) ... (?m_n xs)` "},"Lean.Meta.SynthInstance.getResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L570-L571","name":"Lean.Meta.SynthInstance.getResult","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getResult","doc":""},"Lean.Meta.SynthInstance.getNextToResume":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L536-L539","name":"Lean.Meta.SynthInstance.getNextToResume","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getNextToResume","doc":""},"Lean.Meta.SynthInstance.getMaxHeartbeats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L28-L29","name":"Lean.Meta.SynthInstance.getMaxHeartbeats","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getMaxHeartbeats","doc":""},"Lean.Meta.SynthInstance.getInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L189-L213","name":"Lean.Meta.SynthInstance.getInstances","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getInstances","doc":"Return globals and locals instances that may unify with `type` "},"Lean.Meta.SynthInstance.getEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L246-L249","name":"Lean.Meta.SynthInstance.getEntry","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getEntry","doc":""},"Lean.Meta.SynthInstance.generate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L520-L534","name":"Lean.Meta.SynthInstance.generate","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.generate","doc":"Try the next instance in the node on the top of the generator stack. "},"Lean.Meta.SynthInstance.findEntry?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L243-L244","name":"Lean.Meta.SynthInstance.findEntry?","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.findEntry?","doc":""},"Lean.Meta.SynthInstance.consume":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L479-L511","name":"Lean.Meta.SynthInstance.consume","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.consume","doc":"Process the next subgoal in the given consumer node. "},"Lean.Meta.SynthInstance.checkMaxHeartbeats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L179-L180","name":"Lean.Meta.SynthInstance.checkMaxHeartbeats","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.checkMaxHeartbeats","doc":""},"Lean.Meta.SynthInstance.addAnswer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L412-L424","name":"Lean.Meta.SynthInstance.addAnswer","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.addAnswer","doc":"Create a new answer after `cNode` resolved all subgoals.\nThat is, `cNode.subgoals == []`.\nAnd then, store it in the tabled entries map, and wakeup waiters. "},"Lean.Meta.SynthInstance.Waiter.isRoot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L59-L61","name":"Lean.Meta.SynthInstance.Waiter.isRoot","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Waiter.isRoot","doc":""},"Lean.Meta.SynthInstance.Waiter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L55-L57","name":"Lean.Meta.SynthInstance.Waiter","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Waiter","doc":""},"Lean.Meta.SynthInstance.TableEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L156-L158","name":"Lean.Meta.SynthInstance.TableEntry","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.TableEntry","doc":""},"Lean.Meta.SynthInstance.SynthM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L177-L177","name":"Lean.Meta.SynthInstance.SynthM","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.SynthM","doc":""},"Lean.Meta.SynthInstance.SubgoalsResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L268-L271","name":"Lean.Meta.SynthInstance.SubgoalsResult","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.SubgoalsResult","doc":"See `getSubgoals` and `getSubgoalsAux`\n\n   We use the parameter `j` to reduce the number of `instantiate*` invocations.\n   It is the same approach we use at `forallTelescope` and `lambdaTelescope`.\n   Given `getSubgoalsAux args j subgoals instVal type`,\n   we have that `type.instantiateRevRange j args.size args` does not have loose bound variables. "},"Lean.Meta.SynthInstance.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L171-L175","name":"Lean.Meta.SynthInstance.State","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.State","doc":"Remark: the SynthInstance.State is not really an extension of `Meta.State`.\nThe field `postponed` is not needed, and the field `mctx` is misleading since\n`synthInstance` methods operate over different `MetavarContext`s simultaneously.\nThat being said, we still use `extends` because it makes it simpler to move from\n`M` to `MetaM`.\n"},"Lean.Meta.SynthInstance.MkTableKey.normLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L97-L115","name":"Lean.Meta.SynthInstance.MkTableKey.normLevel","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.normLevel","doc":""},"Lean.Meta.SynthInstance.MkTableKey.normExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L117-L140","name":"Lean.Meta.SynthInstance.MkTableKey.normExpr","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.normExpr","doc":""},"Lean.Meta.SynthInstance.MkTableKey.instMonadMCtxM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L93-L95","name":"Lean.Meta.SynthInstance.MkTableKey.instMonadMCtxM","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.instMonadMCtxM","doc":""},"Lean.Meta.SynthInstance.MkTableKey.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L85-L89","name":"Lean.Meta.SynthInstance.MkTableKey.State","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.State","doc":""},"Lean.Meta.SynthInstance.MkTableKey.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L91-L91","name":"Lean.Meta.SynthInstance.MkTableKey.M","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.M","doc":""},"Lean.Meta.SynthInstance.GeneratorNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L39-L45","name":"Lean.Meta.SynthInstance.GeneratorNode","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.GeneratorNode","doc":""},"Lean.Meta.SynthInstance.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L160-L162","name":"Lean.Meta.SynthInstance.Context","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Context","doc":""},"Lean.Meta.SynthInstance.ConsumerNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L47-L53","name":"Lean.Meta.SynthInstance.ConsumerNode","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.ConsumerNode","doc":""},"Lean.Meta.SynthInstance.Answer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SynthInstance.lean#L150-L154","name":"Lean.Meta.SynthInstance.Answer","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Answer","doc":""},"Lean.Meta.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L268-L275","name":"Lean.Meta.State","docLink":"./Lean/Meta/Basic.html#Lean.Meta.State","doc":"`MetaM` monad state.\n"},"Lean.Meta.SplitIf.splitIfAt?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/SplitIf.lean#L68-L77","name":"Lean.Meta.SplitIf.splitIfAt?","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.SplitIf.splitIfAt?","doc":""},"Lean.Meta.SplitIf.getSimpContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/SplitIf.lean#L29-L30","name":"Lean.Meta.SplitIf.getSimpContext","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.SplitIf.getSimpContext","doc":"Default `Simp.Context` for `simpIf` methods. It contains all congruence theorems, but\njust the rewriting rules for reducing `if` expressions. "},"Lean.Meta.SplitIf.findIfToSplit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/SplitIf.lean#L60-L66","name":"Lean.Meta.SplitIf.findIfToSplit?","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.SplitIf.findIfToSplit?","doc":"Return the condition of an `if` expression to case split. "},"Lean.Meta.SplitIf.ext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/SplitIf.lean#L13-L13","name":"Lean.Meta.SplitIf.ext","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.SplitIf.ext","doc":""},"Lean.Meta.SplitIf.discharge?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/SplitIf.lean#L36-L57","name":"Lean.Meta.SplitIf.discharge?","docLink":"./Lean/Meta/Tactic/SplitIf.html#Lean.Meta.SplitIf.discharge?","doc":"Default `discharge?` function for `simpIf` methods.\nIt only uses hypotheses from the local context. It is effective\nafter a case-split. "},"Lean.Meta.Split.splitMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Split.lean#L246-L256","name":"Lean.Meta.Split.splitMatch","docLink":"./Lean/Meta/Tactic/Split.html#Lean.Meta.Split.splitMatch","doc":""},"Lean.Meta.Split.simpMatchTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Split.lean#L32-L35","name":"Lean.Meta.Split.simpMatchTarget","docLink":"./Lean/Meta/Tactic/Split.html#Lean.Meta.Split.simpMatchTarget","doc":""},"Lean.Meta.Split.simpMatch.pre":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Split.lean#L22-L30","name":"Lean.Meta.Split.simpMatch.pre","docLink":"./Lean/Meta/Tactic/Split.html#Lean.Meta.Split.simpMatch.pre","doc":""},"Lean.Meta.Split.simpMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Split.lean#L19-L30","name":"Lean.Meta.Split.simpMatch","docLink":"./Lean/Meta/Tactic/Split.html#Lean.Meta.Split.simpMatch","doc":""},"Lean.Meta.Split.getSimpMatchContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Split.lean#L12-L17","name":"Lean.Meta.Split.getSimpMatchContext","docLink":"./Lean/Meta/Tactic/Split.html#Lean.Meta.Split.getSimpMatchContext","doc":""},"Lean.Meta.Split.findSplit?.isCandidate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Split.lean#L273-L285","name":"Lean.Meta.Split.findSplit?.isCandidate","docLink":"./Lean/Meta/Tactic/Split.html#Lean.Meta.Split.findSplit?.isCandidate","doc":""},"Lean.Meta.Split.findSplit?.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Split.lean#L262-L271","name":"Lean.Meta.Split.findSplit?.go","docLink":"./Lean/Meta/Tactic/Split.html#Lean.Meta.Split.findSplit?.go","doc":""},"Lean.Meta.Split.findSplit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Split.lean#L259-L285","name":"Lean.Meta.Split.findSplit?","docLink":"./Lean/Meta/Tactic/Split.html#Lean.Meta.Split.findSplit?","doc":"Return an `if-then-else` or `match-expr` to split. "},"Lean.Meta.Split.applyMatchSplitter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Split.lean#L200-L244","name":"Lean.Meta.Split.applyMatchSplitter","docLink":"./Lean/Meta/Tactic/Split.html#Lean.Meta.Split.applyMatchSplitter","doc":""},"Lean.Meta.SizeOfSpecNested.throwUnexpected":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L211-L212","name":"Lean.Meta.SizeOfSpecNested.throwUnexpected","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.throwUnexpected","doc":""},"Lean.Meta.SizeOfSpecNested.throwFailed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L214-L215","name":"Lean.Meta.SizeOfSpecNested.throwFailed","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.throwFailed","doc":""},"Lean.Meta.SizeOfSpecNested.main.step":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L408-L413","name":"Lean.Meta.SizeOfSpecNested.main.step","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.main.step","doc":""},"Lean.Meta.SizeOfSpecNested.main.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L395-L406","name":"Lean.Meta.SizeOfSpecNested.main.loop","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.main.loop","doc":""},"Lean.Meta.SizeOfSpecNested.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L386-L413","name":"Lean.Meta.SizeOfSpecNested.main","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.main","doc":""},"Lean.Meta.SizeOfSpecNested.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L209-L209","name":"Lean.Meta.SizeOfSpecNested.M","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.M","doc":""},"Lean.Meta.SizeOfSpecNested.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/SizeOf.lean#L201-L207","name":"Lean.Meta.SizeOfSpecNested.Context","docLink":"./Lean/Meta/SizeOf.html#Lean.Meta.SizeOfSpecNested.Context","doc":""},"Lean.Meta.SimpTheoremsArray.isErased":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L412-L413","name":"Lean.Meta.SimpTheoremsArray.isErased","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray.isErased","doc":""},"Lean.Meta.SimpTheoremsArray.isDeclToUnfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L415-L416","name":"Lean.Meta.SimpTheoremsArray.isDeclToUnfold","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray.isDeclToUnfold","doc":""},"Lean.Meta.SimpTheoremsArray.eraseTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L409-L410","name":"Lean.Meta.SimpTheoremsArray.eraseTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray.eraseTheorem","doc":""},"Lean.Meta.SimpTheoremsArray.addTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L402-L407","name":"Lean.Meta.SimpTheoremsArray.addTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray.addTheorem","doc":""},"Lean.Meta.SimpTheoremsArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L400-L400","name":"Lean.Meta.SimpTheoremsArray","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray","doc":""},"Lean.Meta.SimpTheorems.registerDeclToUnfoldThms":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L128-L129","name":"Lean.Meta.SimpTheorems.registerDeclToUnfoldThms","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.registerDeclToUnfoldThms","doc":"Register the equational theorems for the given definition. "},"Lean.Meta.SimpTheorems.isLemma":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L124-L125","name":"Lean.Meta.SimpTheorems.isLemma","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.isLemma","doc":""},"Lean.Meta.SimpTheorems.isDeclToUnfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L121-L122","name":"Lean.Meta.SimpTheorems.isDeclToUnfold","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.isDeclToUnfold","doc":"Return `true` if `declName` is tagged to be unfolded using `unfoldDefinition?` (i.e., without using equational theorems). "},"Lean.Meta.SimpTheorems.eraseCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L131-L136","name":"Lean.Meta.SimpTheorems.eraseCore","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.eraseCore","doc":""},"Lean.Meta.SimpTheorems.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L138-L141","name":"Lean.Meta.SimpTheorems.erase","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.erase","doc":""},"Lean.Meta.SimpTheorems.addDeclToUnfoldCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L117-L118","name":"Lean.Meta.SimpTheorems.addDeclToUnfoldCore","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.addDeclToUnfoldCore","doc":""},"Lean.Meta.SimpTheorems.addDeclToUnfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L389-L398","name":"Lean.Meta.SimpTheorems.addDeclToUnfold","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.addDeclToUnfold","doc":""},"Lean.Meta.SimpTheorems.addConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L341-L344","name":"Lean.Meta.SimpTheorems.addConst","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.addConst","doc":"Auxiliary method for adding a global declaration to a `SimpTheorems` datastructure. "},"Lean.Meta.SimpTheorems.add.getName?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L376-L387","name":"Lean.Meta.SimpTheorems.add.getName?","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.add.getName?","doc":""},"Lean.Meta.SimpTheorems.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L369-L387","name":"Lean.Meta.SimpTheorems.add","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.add","doc":"Auxiliary method for adding a local simp theorem to a `SimpTheorems` datastructure. "},"Lean.Meta.SimpTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L97-L104","name":"Lean.Meta.SimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems","doc":""},"Lean.Meta.SimpTheorem.getValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L346-L355","name":"Lean.Meta.SimpTheorem.getValue","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorem.getValue","doc":""},"Lean.Meta.SimpTheorem.getName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L45-L48","name":"Lean.Meta.SimpTheorem.getName","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorem.getName","doc":""},"Lean.Meta.SimpTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L23-L43","name":"Lean.Meta.SimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorem","doc":"The fields `levelParams` and `proof` are used to encode the proof of the simp theorem.\n  If the `proof` is a global declaration `c`, we store `Expr.const c []` at `proof` without the universe levels, and `levelParams` is set to `#[]`\n  When using the lemma, we create fresh universe metavariables.\n  Motivation: most simp theorems are global declarations, and this approach is faster and saves memory.\n\n  The field `levelParams` is not empty only when we elaborate an expression provided by the user, and it contains universe metavariables.\n  Then, we use `abstractMVars` to abstract the universe metavariables and create new fresh universe parameters that are stored at the field `levelParams`.\n"},"Lean.Meta.SimpExtensionMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L320-L320","name":"Lean.Meta.SimpExtensionMap","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpExtensionMap","doc":""},"Lean.Meta.SimpExtension.getTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L269-L270","name":"Lean.Meta.SimpExtension.getTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpExtension.getTheorems","doc":""},"Lean.Meta.SimpExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L267-L267","name":"Lean.Meta.SimpExtension","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpExtension","doc":""},"Lean.Meta.SimpEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L261-L265","name":"Lean.Meta.SimpEntry","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpEntry","doc":""},"Lean.Meta.SimpCongrTheorems.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L30-L33","name":"Lean.Meta.SimpCongrTheorems.get","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.SimpCongrTheorems.get","doc":""},"Lean.Meta.SimpCongrTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L26-L28","name":"Lean.Meta.SimpCongrTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.SimpCongrTheorems","doc":""},"Lean.Meta.SimpCongrTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpCongrTheorems.lean#L19-L24","name":"Lean.Meta.SimpCongrTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpCongrTheorems.html#Lean.Meta.SimpCongrTheorem","doc":"Data for user-defined theorems marked with the `congr` attribute.\n\n  This type should be confused with `CongrTheorem` which reprents different kinds of automatically\n  generated congruence theorems. The `simp` tactic also uses some of them.\n"},"Lean.Meta.SimpAll.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpAll.lean#L110-L120","name":"Lean.Meta.SimpAll.main","docLink":"./Lean/Meta/Tactic/Simp/SimpAll.html#Lean.Meta.SimpAll.main","doc":""},"Lean.Meta.SimpAll.instInhabitedEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpAll.lean#L20-L20","name":"Lean.Meta.SimpAll.instInhabitedEntry","docLink":"./Lean/Meta/Tactic/Simp/SimpAll.html#Lean.Meta.SimpAll.instInhabitedEntry","doc":""},"Lean.Meta.SimpAll.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpAll.lean#L22-L26","name":"Lean.Meta.SimpAll.State","docLink":"./Lean/Meta/Tactic/Simp/SimpAll.html#Lean.Meta.SimpAll.State","doc":""},"Lean.Meta.SimpAll.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpAll.lean#L28-L28","name":"Lean.Meta.SimpAll.M","docLink":"./Lean/Meta/Tactic/Simp/SimpAll.html#Lean.Meta.SimpAll.M","doc":""},"Lean.Meta.SimpAll.Entry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpAll.lean#L14-L20","name":"Lean.Meta.SimpAll.Entry","docLink":"./Lean/Meta/Tactic/Simp/SimpAll.html#Lean.Meta.SimpAll.Entry","doc":""},"Lean.Meta.Simp.withSimpTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L92-L98","name":"Lean.Meta.Simp.withSimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.withSimpTheorems","doc":""},"Lean.Meta.Simp.withParent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L83-L84","name":"Lean.Meta.Simp.withParent","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.withParent","doc":""},"Lean.Meta.Simp.tryTheoremWithExtraArgs?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L101-L108","name":"Lean.Meta.Simp.tryTheoremWithExtraArgs?","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.tryTheoremWithExtraArgs?","doc":""},"Lean.Meta.Simp.tryTheorem?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L110-L125","name":"Lean.Meta.Simp.tryTheorem?","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.tryTheorem?","doc":""},"Lean.Meta.Simp.tryRewriteUsingDecide?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L194-L200","name":"Lean.Meta.Simp.tryRewriteUsingDecide?","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.tryRewriteUsingDecide?","doc":""},"Lean.Meta.Simp.tryRewriteCtorEq?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L173-L176","name":"Lean.Meta.Simp.tryRewriteCtorEq?","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.tryRewriteCtorEq?","doc":""},"Lean.Meta.Simp.throwCongrHypothesisFailed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L21-L22","name":"Lean.Meta.Simp.throwCongrHypothesisFailed","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.throwCongrHypothesisFailed","doc":""},"Lean.Meta.Simp.synthesizeArgs.synthesizeInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L43-L53","name":"Lean.Meta.Simp.synthesizeArgs.synthesizeInstance","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.synthesizeArgs.synthesizeInstance","doc":""},"Lean.Meta.Simp.synthesizeArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L22-L53","name":"Lean.Meta.Simp.synthesizeArgs","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.synthesizeArgs","doc":""},"Lean.Meta.Simp.simpMatchCore?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L207-L213","name":"Lean.Meta.Simp.simpMatchCore?","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.simpMatchCore?","doc":""},"Lean.Meta.Simp.simpMatch?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L215-L220","name":"Lean.Meta.Simp.simpMatch?","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.simpMatch?","doc":""},"Lean.Meta.Simp.simpArith?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L202-L205","name":"Lean.Meta.Simp.simpArith?","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.simpArith?","doc":""},"Lean.Meta.Simp.simp.withNewLemmas":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L580-L593","name":"Lean.Meta.Simp.simp.withNewLemmas","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.withNewLemmas","doc":""},"Lean.Meta.Simp.simp.visitFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L354-L366","name":"Lean.Meta.Simp.simp.visitFn","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.visitFn","doc":""},"Lean.Meta.Simp.simp.trySimpCongrTheorem?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L513-L552","name":"Lean.Meta.Simp.simp.trySimpCongrTheorem?","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.trySimpCongrTheorem?","doc":"Try to rewrite `e` children using the given congruence theorem "},"Lean.Meta.Simp.simp.tryAutoCongrTheorem?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L386-L473","name":"Lean.Meta.Simp.simp.tryAutoCongrTheorem?","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.tryAutoCongrTheorem?","doc":"Try to use automatically generated congruence theorems. See `mkCongrSimp?`. "},"Lean.Meta.Simp.simp.simpStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L284-L297","name":"Lean.Meta.Simp.simp.simpStep","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.simpStep","doc":""},"Lean.Meta.Simp.simp.simpProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L310-L334","name":"Lean.Meta.Simp.simp.simpProj","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.simpProj","doc":""},"Lean.Meta.Simp.simp.simpLoop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L263-L282","name":"Lean.Meta.Simp.simp.simpLoop","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.simpLoop","doc":""},"Lean.Meta.Simp.simp.simpLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L299-L308","name":"Lean.Meta.Simp.simp.simpLit","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.simpLit","doc":""},"Lean.Meta.Simp.simp.simpLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L656-L686","name":"Lean.Meta.Simp.simp.simpLet","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.simpLet","doc":""},"Lean.Meta.Simp.simp.simpLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L595-L604","name":"Lean.Meta.Simp.simp.simpLambda","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.simpLambda","doc":""},"Lean.Meta.Simp.simp.simpForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L641-L654","name":"Lean.Meta.Simp.simp.simpForall","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.simpForall","doc":""},"Lean.Meta.Simp.simp.simpConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L577-L578","name":"Lean.Meta.Simp.simp.simpConst","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.simpConst","doc":""},"Lean.Meta.Simp.simp.simpArrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L606-L639","name":"Lean.Meta.Simp.simp.simpArrow","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.simpArrow","doc":""},"Lean.Meta.Simp.simp.simpApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L567-L575","name":"Lean.Meta.Simp.simp.simpApp","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.simpApp","doc":""},"Lean.Meta.Simp.simp.processCongrHypothesis":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L483-L510","name":"Lean.Meta.Simp.simp.processCongrHypothesis","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.processCongrHypothesis","doc":"Process the given congruence theorem hypothesis. Return true if it made \"progress\". "},"Lean.Meta.Simp.simp.mkCongrSimp?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L368-L383","name":"Lean.Meta.Simp.simp.mkCongrSimp?","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.mkCongrSimp?","doc":""},"Lean.Meta.Simp.simp.congrDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L475-L480","name":"Lean.Meta.Simp.simp.congrDefault","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.congrDefault","doc":""},"Lean.Meta.Simp.simp.congrArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L336-L352","name":"Lean.Meta.Simp.simp.congrArgs","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.congrArgs","doc":""},"Lean.Meta.Simp.simp.congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L554-L565","name":"Lean.Meta.Simp.simp.congr","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.congr","doc":""},"Lean.Meta.Simp.simp.cacheResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L688-L692","name":"Lean.Meta.Simp.simp.cacheResult","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp.cacheResult","doc":""},"Lean.Meta.Simp.simp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L247-L692","name":"Lean.Meta.Simp.simp","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.simp","doc":""},"Lean.Meta.Simp.rewriteUsingDecide?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L178-L192","name":"Lean.Meta.Simp.rewriteUsingDecide?","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.rewriteUsingDecide?","doc":""},"Lean.Meta.Simp.rewritePre":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L222-L226","name":"Lean.Meta.Simp.rewritePre","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.rewritePre","doc":""},"Lean.Meta.Simp.rewritePost":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L228-L232","name":"Lean.Meta.Simp.rewritePost","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.rewritePost","doc":""},"Lean.Meta.Simp.rewriteCtorEq?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L157-L171","name":"Lean.Meta.Simp.rewriteCtorEq?","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.rewriteCtorEq?","doc":""},"Lean.Meta.Simp.rewrite?.inErasedSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L143-L146","name":"Lean.Meta.Simp.rewrite?.inErasedSet","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.rewrite?.inErasedSet","doc":""},"Lean.Meta.Simp.rewrite?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L129-L146","name":"Lean.Meta.Simp.rewrite?","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.rewrite?","doc":"Remark: the parameter tag is used for creating trace messages. It is irrelevant otherwise.\n"},"Lean.Meta.Simp.removeUnnecessaryCasts.isDummyEqRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L238-L239","name":"Lean.Meta.Simp.removeUnnecessaryCasts.isDummyEqRec","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.removeUnnecessaryCasts.isDummyEqRec","doc":""},"Lean.Meta.Simp.removeUnnecessaryCasts.elimDummyEqRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L241-L245","name":"Lean.Meta.Simp.removeUnnecessaryCasts.elimDummyEqRec","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.removeUnnecessaryCasts.elimDummyEqRec","doc":""},"Lean.Meta.Simp.removeUnnecessaryCasts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L225-L245","name":"Lean.Meta.Simp.removeUnnecessaryCasts","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.removeUnnecessaryCasts","doc":"Given the application `e`, remove unnecessary casts of the form `Eq.rec a rfl` and `Eq.ndrec a rfl`. "},"Lean.Meta.Simp.preDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L234-L236","name":"Lean.Meta.Simp.preDefault","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.preDefault","doc":""},"Lean.Meta.Simp.pre":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L71-L72","name":"Lean.Meta.Simp.pre","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.pre","doc":""},"Lean.Meta.Simp.postDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L238-L243","name":"Lean.Meta.Simp.postDefault","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.postDefault","doc":""},"Lean.Meta.Simp.post":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L74-L75","name":"Lean.Meta.Simp.post","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.post","doc":""},"Lean.Meta.Simp.neutralConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1230-L1239","name":"Lean.Meta.Simp.neutralConfig","docLink":"./Init/Meta.html#Lean.Meta.Simp.neutralConfig","doc":""},"Lean.Meta.Simp.mkEqTrans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L15-L20","name":"Lean.Meta.Simp.mkEqTrans","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.mkEqTrans","doc":""},"Lean.Meta.Simp.mkCongrFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L56-L59","name":"Lean.Meta.Simp.mkCongrFun","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.mkCongrFun","doc":""},"Lean.Meta.Simp.mkCongr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L61-L67","name":"Lean.Meta.Simp.mkCongr","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.mkCongr","doc":""},"Lean.Meta.Simp.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L694-L700","name":"Lean.Meta.Simp.main","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.main","doc":""},"Lean.Meta.Simp.lambdaTelescopeDSimp.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L200-L203","name":"Lean.Meta.Simp.lambdaTelescopeDSimp.go","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.lambdaTelescopeDSimp.go","doc":""},"Lean.Meta.Simp.lambdaTelescopeDSimp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L197-L203","name":"Lean.Meta.Simp.lambdaTelescopeDSimp","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.lambdaTelescopeDSimp","doc":""},"Lean.Meta.Simp.isOfNatNatLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L76-L77","name":"Lean.Meta.Simp.isOfNatNatLit","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.isOfNatNatLit","doc":"Return true if `e` is of the form `ofNat n` where `n` is a kernel Nat literal "},"Lean.Meta.Simp.isEqnThmHypothesis.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L731-L734","name":"Lean.Meta.Simp.isEqnThmHypothesis.go","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.isEqnThmHypothesis.go","doc":""},"Lean.Meta.Simp.isEqnThmHypothesis":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L728-L734","name":"Lean.Meta.Simp.isEqnThmHypothesis","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.isEqnThmHypothesis","doc":"Return true if `e` is of the form `(x : α) → ... → s = t → ... → False`\n\n  Recall that this kind of proposition is generated by Lean when creating equations for\n  functions and match-expressions with overlapping cases.\n  Example: the following `match`-expression has overlapping cases.\n  ```\n  def f (x y : Nat) :=\n    match x, y with\n    | Nat.succ n, Nat.succ m => ...\n    | _, _ => 0\n  ```\n  The second equation is of the form\n  ```\n  (x y : Nat) → ((n m : Nat) → x = Nat.succ n → y = Nat.succ m → False) → f x y = 0\n  ```\n  The hypothesis `(n m : Nat) → x = Nat.succ n → y = Nat.succ m → False` is essentially\n  saying the first case is not applicable.\n"},"Lean.Meta.Simp.instReprConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1224-L1224","name":"Lean.Meta.Simp.instReprConfig","docLink":"./Init/Meta.html#Lean.Meta.Simp.instReprConfig","doc":""},"Lean.Meta.Simp.instMonadBacktrackSavedStateSimpM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L45-L47","name":"Lean.Meta.Simp.instMonadBacktrackSavedStateSimpM","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.instMonadBacktrackSavedStateSimpM","doc":""},"Lean.Meta.Simp.instInhabitedStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L52-L52","name":"Lean.Meta.Simp.instInhabitedStep","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.instInhabitedStep","doc":""},"Lean.Meta.Simp.instInhabitedResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L18-L18","name":"Lean.Meta.Simp.instInhabitedResult","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.instInhabitedResult","doc":""},"Lean.Meta.Simp.instInhabitedMethods":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L66-L66","name":"Lean.Meta.Simp.instInhabitedMethods","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.instInhabitedMethods","doc":""},"Lean.Meta.Simp.instInhabitedM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L194-L195","name":"Lean.Meta.Simp.instInhabitedM","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.instInhabitedM","doc":""},"Lean.Meta.Simp.instInhabitedContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L30-L30","name":"Lean.Meta.Simp.instInhabitedContext","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.instInhabitedContext","doc":""},"Lean.Meta.Simp.instInhabitedConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1224-L1224","name":"Lean.Meta.Simp.instInhabitedConfig","docLink":"./Init/Meta.html#Lean.Meta.Simp.instInhabitedConfig","doc":""},"Lean.Meta.Simp.instBEqConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1224-L1224","name":"Lean.Meta.Simp.instBEqConfig","docLink":"./Init/Meta.html#Lean.Meta.Simp.instBEqConfig","doc":""},"Lean.Meta.Simp.getSimpTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L86-L87","name":"Lean.Meta.Simp.getSimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.getSimpTheorems","doc":""},"Lean.Meta.Simp.getSimpLetCase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L210-L222","name":"Lean.Meta.Simp.getSimpLetCase","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.getSimpLetCase","doc":""},"Lean.Meta.Simp.getSimpCongrTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L89-L90","name":"Lean.Meta.Simp.getSimpCongrTheorems","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.getSimpCongrTheorems","doc":""},"Lean.Meta.Simp.getConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L80-L81","name":"Lean.Meta.Simp.getConfig","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.getConfig","doc":""},"Lean.Meta.Simp.dsimpMain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L702-L707","name":"Lean.Meta.Simp.dsimpMain","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.dsimpMain","doc":""},"Lean.Meta.Simp.dischargeUsingAssumption?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L738-L745","name":"Lean.Meta.Simp.dischargeUsingAssumption?","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.dischargeUsingAssumption?","doc":""},"Lean.Meta.Simp.dischargeEqnThmHypothesis?.go?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L760-L773","name":"Lean.Meta.Simp.dischargeEqnThmHypothesis?.go?","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.dischargeEqnThmHypothesis?.go?","doc":""},"Lean.Meta.Simp.dischargeEqnThmHypothesis?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L751-L773","name":"Lean.Meta.Simp.dischargeEqnThmHypothesis?","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.dischargeEqnThmHypothesis?","doc":"Tries to solve `e` using `unifyEq?`.\nIt assumes that `isEqnThmHypothesis e` is `true`.\n"},"Lean.Meta.Simp.discharge?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L77-L78","name":"Lean.Meta.Simp.discharge?","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.discharge?","doc":""},"Lean.Meta.Simp.defaultMaxSteps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1202-L1202","name":"Lean.Meta.Simp.defaultMaxSteps","docLink":"./Init/Meta.html#Lean.Meta.Simp.defaultMaxSteps","doc":""},"Lean.Meta.Simp.congrHypothesisExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L18-L18","name":"Lean.Meta.Simp.congrHypothesisExceptionId","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.congrHypothesisExceptionId","doc":""},"Lean.Meta.Simp.andThen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Rewrite.lean#L148-L155","name":"Lean.Meta.Simp.andThen","docLink":"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.andThen","doc":""},"Lean.Meta.Simp.Step.updateResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L58-L60","name":"Lean.Meta.Simp.Step.updateResult","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Step.updateResult","doc":""},"Lean.Meta.Simp.Step.result":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L54-L56","name":"Lean.Meta.Simp.Step.result","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Step.result","doc":""},"Lean.Meta.Simp.Step":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L49-L52","name":"Lean.Meta.Simp.Step","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Step","doc":""},"Lean.Meta.Simp.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L38-L41","name":"Lean.Meta.Simp.State","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.State","doc":""},"Lean.Meta.Simp.SimpM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L43-L43","name":"Lean.Meta.Simp.SimpM","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.SimpM","doc":""},"Lean.Meta.Simp.SimpLetCase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L205-L208","name":"Lean.Meta.Simp.SimpLetCase","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.SimpLetCase","doc":""},"Lean.Meta.Simp.Result.getProof'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L45-L54","name":"Lean.Meta.Simp.Result.getProof'","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.Result.getProof'","doc":"Similar to `Result.getProof`, but adds a `mkExpectedTypeHint` if `proof?` is `none`\n(i.e., result is definitionally equal to input), but we cannot establish that\n`source` and `r.expr` are definitionally when using `TransparencyMode.reducible`. "},"Lean.Meta.Simp.Result.getProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L36-L39","name":"Lean.Meta.Simp.Result.getProof","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.Result.getProof","doc":""},"Lean.Meta.Simp.Result":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L14-L18","name":"Lean.Meta.Simp.Result","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Result","doc":""},"Lean.Meta.Simp.Methods":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L62-L66","name":"Lean.Meta.Simp.Methods","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Methods","doc":""},"Lean.Meta.Simp.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L69-L69","name":"Lean.Meta.Simp.M","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.M","doc":""},"Lean.Meta.Simp.Discharge":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L736-L736","name":"Lean.Meta.Simp.Discharge","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.Discharge","doc":""},"Lean.Meta.Simp.DefaultMethods.pre":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L799-L800","name":"Lean.Meta.Simp.DefaultMethods.pre","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.DefaultMethods.pre","doc":""},"Lean.Meta.Simp.DefaultMethods.post":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L802-L803","name":"Lean.Meta.Simp.DefaultMethods.post","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.DefaultMethods.post","doc":""},"Lean.Meta.Simp.DefaultMethods.methods":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L806-L807","name":"Lean.Meta.Simp.DefaultMethods.methods","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.DefaultMethods.methods","doc":""},"Lean.Meta.Simp.DefaultMethods.discharge?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L777-L797","name":"Lean.Meta.Simp.DefaultMethods.discharge?","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.DefaultMethods.discharge?","doc":""},"Lean.Meta.Simp.Context.mkDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L35-L36","name":"Lean.Meta.Simp.Context.mkDefault","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context.mkDefault","doc":""},"Lean.Meta.Simp.Context.isDeclToUnfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L32-L33","name":"Lean.Meta.Simp.Context.isDeclToUnfold","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context.isDeclToUnfold","doc":""},"Lean.Meta.Simp.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L24-L30","name":"Lean.Meta.Simp.Context","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context","doc":""},"Lean.Meta.Simp.CongrCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L22-L22","name":"Lean.Meta.Simp.CongrCache","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.CongrCache","doc":""},"Lean.Meta.Simp.ConfigCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1227-L1228","name":"Lean.Meta.Simp.ConfigCtx","docLink":"./Init/Meta.html#Lean.Meta.Simp.ConfigCtx","doc":""},"Lean.Meta.Simp.Config.updateArith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L27-L34","name":"Lean.Meta.Simp.Config.updateArith","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.Simp.Config.updateArith","doc":"Helper method for bootstrapping purposes. It disables `arith` if support theorems have not been defined yet.\n"},"Lean.Meta.Simp.Config":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1204-L1224","name":"Lean.Meta.Simp.Config","docLink":"./Init/Meta.html#Lean.Meta.Simp.Config","doc":""},"Lean.Meta.Simp.Cache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Types.lean#L20-L20","name":"Lean.Meta.Simp.Cache","docLink":"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Cache","doc":""},"Lean.Meta.SavedState.restore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L335-L337","name":"Lean.Meta.SavedState.restore","docLink":"./Lean/Meta/Basic.html#Lean.Meta.SavedState.restore","doc":"Restore backtrackable parts of the state. "},"Lean.Meta.SavedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L280-L283","name":"Lean.Meta.SavedState","docLink":"./Lean/Meta/Basic.html#Lean.Meta.SavedState","doc":"Backtrackable state for the `MetaM` monad.\n"},"Lean.Meta.RewriteResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Rewrite.lean#L14-L17","name":"Lean.Meta.RewriteResult","docLink":"./Lean/Meta/Tactic/Rewrite.html#Lean.Meta.RewriteResult","doc":""},"Lean.Meta.Rewrite.Config":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1245-L1247","name":"Lean.Meta.Rewrite.Config","docLink":"./Init/Meta.html#Lean.Meta.Rewrite.Config","doc":""},"Lean.Meta.ReduceMatcherResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/WHNF.lean#L348-L352","name":"Lean.Meta.ReduceMatcherResult","docLink":"./Lean/Meta/WHNF.html#Lean.Meta.ReduceMatcherResult","doc":""},"Lean.Meta.ReduceEval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ReduceEval.lean#L12-L13","name":"Lean.Meta.ReduceEval","docLink":"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval","doc":""},"Lean.Meta.RecursorUnivLevelPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L12-L14","name":"Lean.Meta.RecursorUnivLevelPos","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.RecursorUnivLevelPos","doc":""},"Lean.Meta.RecursorInfo.numParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L34-L34","name":"Lean.Meta.RecursorInfo.numParams","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.RecursorInfo.numParams","doc":""},"Lean.Meta.RecursorInfo.numMinors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L44-L47","name":"Lean.Meta.RecursorInfo.numMinors","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.RecursorInfo.numMinors","doc":""},"Lean.Meta.RecursorInfo.numIndices":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L35-L35","name":"Lean.Meta.RecursorInfo.numIndices","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.RecursorInfo.numIndices","doc":""},"Lean.Meta.RecursorInfo.motivePos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L36-L36","name":"Lean.Meta.RecursorInfo.motivePos","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.RecursorInfo.motivePos","doc":""},"Lean.Meta.RecursorInfo.isMinor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L39-L42","name":"Lean.Meta.RecursorInfo.isMinor","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.RecursorInfo.isMinor","doc":""},"Lean.Meta.RecursorInfo.instToStringRecursorInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L49-L65","name":"Lean.Meta.RecursorInfo.instToStringRecursorInfo","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.RecursorInfo.instToStringRecursorInfo","doc":""},"Lean.Meta.RecursorInfo.firstIndexPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L37-L37","name":"Lean.Meta.RecursorInfo.firstIndexPos","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.RecursorInfo.firstIndexPos","doc":""},"Lean.Meta.RecursorInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L20-L30","name":"Lean.Meta.RecursorInfo","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.RecursorInfo","doc":""},"Lean.Meta.PrioritySet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L91-L91","name":"Lean.Meta.PrioritySet","docLink":"./Lean/Meta/Instances.html#Lean.Meta.PrioritySet","doc":""},"Lean.Meta.PostponedEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L256-L263","name":"Lean.Meta.PostponedEntry","docLink":"./Lean/Meta/Basic.html#Lean.Meta.PostponedEntry","doc":"Auxiliary structure for representing postponed universe constraints.\nRemark: the fields `ref` and `rootDefEq?` are used for error message generation only.\nRemark: we may consider improving the error message generation in the future.\n"},"Lean.Meta.ParamInfo.isStrictImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L175-L176","name":"Lean.Meta.ParamInfo.isStrictImplicit","docLink":"./Lean/Meta/Basic.html#Lean.Meta.ParamInfo.isStrictImplicit","doc":""},"Lean.Meta.ParamInfo.isInstImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L172-L173","name":"Lean.Meta.ParamInfo.isInstImplicit","docLink":"./Lean/Meta/Basic.html#Lean.Meta.ParamInfo.isInstImplicit","doc":""},"Lean.Meta.ParamInfo.isImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L169-L170","name":"Lean.Meta.ParamInfo.isImplicit","docLink":"./Lean/Meta/Basic.html#Lean.Meta.ParamInfo.isImplicit","doc":""},"Lean.Meta.ParamInfo.isExplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L178-L179","name":"Lean.Meta.ParamInfo.isExplicit","docLink":"./Lean/Meta/Basic.html#Lean.Meta.ParamInfo.isExplicit","doc":""},"Lean.Meta.ParamInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L125-L167","name":"Lean.Meta.ParamInfo","docLink":"./Lean/Meta/Basic.html#Lean.Meta.ParamInfo","doc":"Function parameter information cache.\n"},"Lean.Meta.MetaM.toIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L349-L351","name":"Lean.Meta.MetaM.toIO","docLink":"./Lean/Meta/Basic.html#Lean.Meta.MetaM.toIO","doc":""},"Lean.Meta.MetaM.run'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L346-L347","name":"Lean.Meta.MetaM.run'","docLink":"./Lean/Meta/Basic.html#Lean.Meta.MetaM.run'","doc":""},"Lean.Meta.MetaM.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L343-L344","name":"Lean.Meta.MetaM.run","docLink":"./Lean/Meta/Basic.html#Lean.Meta.MetaM.run","doc":""},"Lean.Meta.MetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L308-L308","name":"Lean.Meta.MetaM","docLink":"./Lean/Meta/Basic.html#Lean.Meta.MetaM","doc":""},"Lean.Meta.MatcherApp.toExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L165-L170","name":"Lean.Meta.MatcherApp.toExpr","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.MatcherApp.toExpr","doc":""},"Lean.Meta.MatcherApp.addArg?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L961-L965","name":"Lean.Meta.MatcherApp.addArg?","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.MatcherApp.addArg?","doc":"Similar `MatcherApp.addArg?`, but returns `none` on failure. "},"Lean.Meta.MatcherApp.addArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L925-L958","name":"Lean.Meta.MatcherApp.addArg","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.MatcherApp.addArg","doc":"Given\n- matcherApp `match_i As (fun xs => motive[xs]) discrs (fun ys_1 => (alt_1 : motive (C_1[ys_1])) ... (fun ys_n => (alt_n : motive (C_n[ys_n]) remaining`, and\n- expression `e : B[discrs]`,\nConstruct the term\n`match_i As (fun xs => B[xs] -> motive[xs]) discrs (fun ys_1 (y : B[C_1[ys_1]]) => alt_1) ... (fun ys_n (y : B[C_n[ys_n]]) => alt_n) e remaining`, and\nWe use `kabstract` to abstract the discriminants from `B[discrs]`.\nThis method assumes\n- the `matcherApp.motive` is a lambda abstraction where `xs.size == discrs.size`\n- each alternative is a lambda abstraction where `ys_i.size == matcherApp.altNumParams[i]`\n"},"Lean.Meta.MatcherApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L131-L140","name":"Lean.Meta.MatcherApp","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.MatcherApp","doc":""},"Lean.Meta.Match.withMkMatcherInput":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L885-L893","name":"Lean.Meta.Match.withMkMatcherInput","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.withMkMatcherInput","doc":"This function is only used for testing purposes "},"Lean.Meta.Match.withGoalOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L295-L296","name":"Lean.Meta.Match.withGoalOf","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.withGoalOf","doc":""},"Lean.Meta.Match.withCleanLCtxFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L742-L748","name":"Lean.Meta.Match.withCleanLCtxFor","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.withCleanLCtxFor","doc":"Auxiliary method used at `mkMatcher`. It executes `k` in a local context that contains only\nthe local declarations `m` depends on. This is important because otherwise dependent elimination\nmay \"refine\" the types of unnecessary declarations and accidentally introduce unnecessary dependencies\nin the auto-generated auxiliary declaration. Note that this is not just an optimization because the\nunnecessary dependencies may prevent the termination checker from succeeding. For an example,\nsee issue #1237.\n"},"Lean.Meta.Match.unfoldNamedPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L57-L63","name":"Lean.Meta.Match.unfoldNamedPattern","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.Match.unfoldNamedPattern","doc":""},"Lean.Meta.Match.toPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L328-L356","name":"Lean.Meta.Match.toPattern","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.toPattern","doc":"Convert a expression occurring as the argument of a `match` motive application back into a `Pattern`\nFor example, we can use this method to convert `x::y::xs` at\n```\n...\n(motive : List Nat → Sort u_1) (xs : List Nat) (h_1 : (x y : Nat) → (xs : List Nat) → motive (x :: y :: xs))\n...\n```\ninto a pattern object\n"},"Lean.Meta.Match.registerMatchEqns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqsExt.lean#L27-L28","name":"Lean.Meta.Match.registerMatchEqns","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.registerMatchEqns","doc":""},"Lean.Meta.Match.proveCondEqThm.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L299-L323","name":"Lean.Meta.Match.proveCondEqThm.go","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.Match.proveCondEqThm.go","doc":""},"Lean.Meta.Match.proveCondEqThm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L290-L323","name":"Lean.Meta.Match.proveCondEqThm","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.Match.proveCondEqThm","doc":"Helper method for proving a conditional equational theorem associated with an alternative of\nthe `match`-eliminator `matchDeclName`. `type` contains the type of the theorem. "},"Lean.Meta.Match.processInaccessibleAsCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L379-L396","name":"Lean.Meta.Match.processInaccessibleAsCtor","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.processInaccessibleAsCtor","doc":"Given `alt` s.t. the next pattern is an inaccessible pattern `e`,\ntry to normalize `e` into a constructor application.\nIf it is not a constructor, throw an error.\nOtherwise, if it is a constructor application of `ctorName`,\nupdate the next patterns with the fields of the constructor.\nOtherwise, return none. "},"Lean.Meta.Match.mkNamedPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L13-L14","name":"Lean.Meta.Match.mkNamedPattern","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.mkNamedPattern","doc":""},"Lean.Meta.Match.mkMatcherAuxDefinition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L688-L714","name":"Lean.Meta.Match.mkMatcherAuxDefinition","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.mkMatcherAuxDefinition","doc":"Similar to `mkAuxDefinition`, but uses the cache `matcherExt`.\nIt also returns an Boolean that indicates whether a new matcher function was added to the environment or not. "},"Lean.Meta.Match.mkMatcher":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L759-L852","name":"Lean.Meta.Match.mkMatcher","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.mkMatcher","doc":"Create a dependent matcher for `matchType` where `matchType` is of the form\n`(a_1 : A_1) -> (a_2 : A_2[a_1]) -> ... -> (a_n : A_n[a_1, a_2, ... a_{n-1}]) -> B[a_1, ..., a_n]`\nwhere `n = numDiscrs`, and the `lhss` are the left-hand-sides of the `match`-expression alternatives.\nEach `AltLHS` has a list of local declarations and a list of patterns.\nThe number of patterns must be the same in each `AltLHS`.\nThe generated matcher has the structure described at `MatcherInfo`. The motive argument is of the form\n`(motive : (a_1 : A_1) -> (a_2 : A_2[a_1]) -> ... -> (a_n : A_n[a_1, a_2, ... a_{n-1}]) -> Sort v)`\nwhere `v` is a universe parameter or 0 if `B[a_1, ..., a_n]` is a proposition. "},"Lean.Meta.Match.matcherExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L684-L684","name":"Lean.Meta.Match.matcherExt","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.matcherExt","doc":""},"Lean.Meta.Match.matchEqnsExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqsExt.lean#L24-L24","name":"Lean.Meta.Match.matchEqnsExt","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.matchEqnsExt","doc":""},"Lean.Meta.Match.isNamedPattern?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L16-L21","name":"Lean.Meta.Match.isNamedPattern?","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.isNamedPattern?","doc":""},"Lean.Meta.Match.isCurrVarInductive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L609-L614","name":"Lean.Meta.Match.isCurrVarInductive","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.isCurrVarInductive","doc":""},"Lean.Meta.Match.instantiatePatternMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L107-L113","name":"Lean.Meta.Match.instantiatePatternMVars","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.instantiatePatternMVars","doc":""},"Lean.Meta.Match.instantiateAltLHSMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L124-L128","name":"Lean.Meta.Match.instantiateAltLHSMVars","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.instantiateAltLHSMVars","doc":""},"Lean.Meta.Match.instReprMatchEqns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqsExt.lean#L14-L14","name":"Lean.Meta.Match.instReprMatchEqns","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.instReprMatchEqns","doc":""},"Lean.Meta.Match.instInhabitedProblem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L293-L293","name":"Lean.Meta.Match.instInhabitedProblem","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.instInhabitedProblem","doc":""},"Lean.Meta.Match.instInhabitedPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L30-L30","name":"Lean.Meta.Match.instInhabitedPattern","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.instInhabitedPattern","doc":""},"Lean.Meta.Match.instInhabitedMatchEqnsExtState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqsExt.lean#L21-L21","name":"Lean.Meta.Match.instInhabitedMatchEqnsExtState","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.instInhabitedMatchEqnsExtState","doc":""},"Lean.Meta.Match.instInhabitedMatchEqns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqsExt.lean#L14-L14","name":"Lean.Meta.Match.instInhabitedMatchEqns","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.instInhabitedMatchEqns","doc":""},"Lean.Meta.Match.instInhabitedDiscrInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L14-L14","name":"Lean.Meta.Match.instInhabitedDiscrInfo","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.instInhabitedDiscrInfo","doc":""},"Lean.Meta.Match.instInhabitedAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L158-L158","name":"Lean.Meta.Match.instInhabitedAlt","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.instInhabitedAlt","doc":""},"Lean.Meta.Match.getNumEqsFromDiscrInfos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L56-L61","name":"Lean.Meta.Match.getNumEqsFromDiscrInfos","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.getNumEqsFromDiscrInfos","doc":""},"Lean.Meta.Match.getMkMatcherInputInContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L854-L882","name":"Lean.Meta.Match.getMkMatcherInputInContext","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.getMkMatcherInputInContext","doc":""},"Lean.Meta.Match.getEquationsForImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L701-L704","name":"Lean.Meta.Match.getEquationsForImpl","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.Match.getEquationsForImpl","doc":""},"Lean.Meta.Match.getEquationsFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqsExt.lean#L34-L34","name":"Lean.Meta.Match.getEquationsFor","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.getEquationsFor","doc":"Forward definition. We want to use `getEquationsFor` in the simplifier,\n`getEquationsFor` depends on `mkEquationsfor` which uses the simplifier. "},"Lean.Meta.Match.forallAltTelescope.isNamedPatternProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L126-L131","name":"Lean.Meta.Match.forallAltTelescope.isNamedPatternProof","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.Match.forallAltTelescope.isNamedPatternProof","doc":""},"Lean.Meta.Match.forallAltTelescope.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L88-L124","name":"Lean.Meta.Match.forallAltTelescope.go","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.Match.forallAltTelescope.go","doc":""},"Lean.Meta.Match.forallAltTelescope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L83-L131","name":"Lean.Meta.Match.forallAltTelescope","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.Match.forallAltTelescope","doc":"Similar to `forallTelescopeReducing`, but\n\n  1. Eliminates arguments for named parameters and the associated equation proofs.\n\n  2. Equality parameters associated with the `h : discr` notation are replaced with `rfl` proofs.\n     Recall that this kind of parameter always occurs after the parameters correspoting to pattern variables.\n     `numNonEqParams` is the size of the prefix.\n\n  The continuation `k` takes four arguments `ys args mask type`.\n  - `ys` are variables for the hypotheses that have not been eliminated.\n  - `eqs` are variables for equality hypotheses associated with discriminants annotated with `h : discr`.\n  - `args` are the arguments for the alternative `alt` that has type `altType`. `ys.size <= args.size`\n  - `mask[i]` is true if the hypotheses has not been eliminated. `mask.size == args.size`.\n  - `type` is the resulting type for `altType`.\n\n  We use the `mask` to build the splitter proof. See `mkSplitterProof`.\n"},"Lean.Meta.Match.examplesToMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L285-L286","name":"Lean.Meta.Match.examplesToMessageData","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.examplesToMessageData","doc":""},"Lean.Meta.Match.counterExamplesToMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L309-L310","name":"Lean.Meta.Match.counterExamplesToMessageData","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.counterExamplesToMessageData","doc":""},"Lean.Meta.Match.counterExampleToMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L306-L307","name":"Lean.Meta.Match.counterExampleToMessageData","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.counterExampleToMessageData","doc":""},"Lean.Meta.Match.bootstrap.genMatcherCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L678-L678","name":"Lean.Meta.Match.bootstrap.genMatcherCode","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.bootstrap.genMatcherCode","doc":""},"Lean.Meta.Match.addMatcherInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L95-L96","name":"Lean.Meta.Match.addMatcherInfo","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.addMatcherInfo","doc":""},"Lean.Meta.Match.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L72-L74","name":"Lean.Meta.Match.State","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.State","doc":""},"Lean.Meta.Match.SimpH.trySubstVarsAndContradiction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L187-L196","name":"Lean.Meta.Match.SimpH.trySubstVarsAndContradiction","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.Match.SimpH.trySubstVarsAndContradiction","doc":"Auxiliary tactic that tries to replace as many variables as possible and then apply `contradiction`.\nWe use it to discard redundant hypotheses.\n"},"Lean.Meta.Match.SimpH.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L241-L247","name":"Lean.Meta.Match.SimpH.go","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.Match.SimpH.go","doc":""},"Lean.Meta.Match.SimpH.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L145-L149","name":"Lean.Meta.Match.SimpH.State","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.Match.SimpH.State","doc":"State for the equational theorem hypothesis simplifier.\n\n  Recall that each equation contains additional hypotheses to ensure the associated case does not taken by previous cases.\n  We have one hypothesis for each previous case.\n\n  Each hypothesis is of the form `forall xs, eqs → False`\n\n  We use tactics to minimize code duplication.\n"},"Lean.Meta.Match.SimpH.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L151-L151","name":"Lean.Meta.Match.SimpH.M","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.Match.SimpH.M","doc":""},"Lean.Meta.Match.Problem.toMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L298-L302","name":"Lean.Meta.Match.Problem.toMessageData","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Problem.toMessageData","doc":""},"Lean.Meta.Match.Problem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L288-L293","name":"Lean.Meta.Match.Problem","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Problem","doc":""},"Lean.Meta.Match.Pattern.toMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L34-L41","name":"Lean.Meta.Match.Pattern.toMessageData","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern.toMessageData","doc":""},"Lean.Meta.Match.Pattern.toExpr.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L46-L66","name":"Lean.Meta.Match.Pattern.toExpr.visit","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern.toExpr.visit","doc":""},"Lean.Meta.Match.Pattern.toExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L43-L66","name":"Lean.Meta.Match.Pattern.toExpr","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern.toExpr","doc":""},"Lean.Meta.Match.Pattern.replaceFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L81-L83","name":"Lean.Meta.Match.Pattern.replaceFVarId","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern.replaceFVarId","doc":""},"Lean.Meta.Match.Pattern.hasExprMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L85-L91","name":"Lean.Meta.Match.Pattern.hasExprMVar","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern.hasExprMVar","doc":""},"Lean.Meta.Match.Pattern.collectFVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L94-L103","name":"Lean.Meta.Match.Pattern.collectFVars","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern.collectFVars","doc":""},"Lean.Meta.Match.Pattern.applyFVarSubst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L69-L79","name":"Lean.Meta.Match.Pattern.applyFVarSubst","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern.applyFVarSubst","doc":"Apply the free variable substitution `s` to the given pattern "},"Lean.Meta.Match.Pattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L23-L30","name":"Lean.Meta.Match.Pattern","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Pattern","doc":""},"Lean.Meta.Match.MkMatcherInput.numDiscrs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L722-L723","name":"Lean.Meta.Match.MkMatcherInput.numDiscrs","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.MkMatcherInput.numDiscrs","doc":""},"Lean.Meta.Match.MkMatcherInput.collectFVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L725-L727","name":"Lean.Meta.Match.MkMatcherInput.collectFVars","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.MkMatcherInput.collectFVars","doc":""},"Lean.Meta.Match.MkMatcherInput.collectDependencies":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L729-L732","name":"Lean.Meta.Match.MkMatcherInput.collectDependencies","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.MkMatcherInput.collectDependencies","doc":""},"Lean.Meta.Match.MkMatcherInput":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Match.lean#L716-L720","name":"Lean.Meta.Match.MkMatcherInput","docLink":"./Lean/Meta/Match/Match.html#Lean.Meta.Match.MkMatcherInput","doc":""},"Lean.Meta.Match.MatcherResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L312-L316","name":"Lean.Meta.Match.MatcherResult","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.MatcherResult","doc":""},"Lean.Meta.Match.MatcherInfo.numAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L35-L36","name":"Lean.Meta.Match.MatcherInfo.numAlts","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.MatcherInfo.numAlts","doc":""},"Lean.Meta.Match.MatcherInfo.getNumDiscrEqs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L63-L64","name":"Lean.Meta.Match.MatcherInfo.getNumDiscrEqs","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.MatcherInfo.getNumDiscrEqs","doc":""},"Lean.Meta.Match.MatcherInfo.getMotivePos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L53-L54","name":"Lean.Meta.Match.MatcherInfo.getMotivePos","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.MatcherInfo.getMotivePos","doc":""},"Lean.Meta.Match.MatcherInfo.getFirstDiscrPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L41-L42","name":"Lean.Meta.Match.MatcherInfo.getFirstDiscrPos","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.MatcherInfo.getFirstDiscrPos","doc":""},"Lean.Meta.Match.MatcherInfo.getFirstAltPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L47-L48","name":"Lean.Meta.Match.MatcherInfo.getFirstAltPos","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.MatcherInfo.getFirstAltPos","doc":""},"Lean.Meta.Match.MatcherInfo.getDiscrRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L44-L45","name":"Lean.Meta.Match.MatcherInfo.getDiscrRange","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.MatcherInfo.getDiscrRange","doc":""},"Lean.Meta.Match.MatcherInfo.getAltRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L50-L51","name":"Lean.Meta.Match.MatcherInfo.getAltRange","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.MatcherInfo.getAltRange","doc":""},"Lean.Meta.Match.MatcherInfo.arity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L38-L39","name":"Lean.Meta.Match.MatcherInfo.arity","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.MatcherInfo.arity","doc":""},"Lean.Meta.Match.MatcherInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L25-L33","name":"Lean.Meta.Match.MatcherInfo","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.MatcherInfo","doc":"A \"matcher\" auxiliary declaration has the following structure:\n- `numParams` parameters\n- motive\n- `numDiscrs` discriminators (aka major premises)\n- `altNumParams.size` alternatives (aka minor premises) where alternative `i` has `altNumParams[i]` parameters\n- `uElimPos?` is `some pos` when the matcher can eliminate in different universe levels, and\n   `pos` is the position of the universe level parameter that specifies the elimination universe.\n   It is `none` if the matcher only eliminates into `Prop`. "},"Lean.Meta.Match.MatchEqnsExtState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqsExt.lean#L19-L21","name":"Lean.Meta.Match.MatchEqnsExtState","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqnsExtState","doc":""},"Lean.Meta.Match.MatchEqns.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqsExt.lean#L16-L17","name":"Lean.Meta.Match.MatchEqns.size","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns.size","doc":""},"Lean.Meta.Match.MatchEqns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqsExt.lean#L10-L14","name":"Lean.Meta.Match.MatchEqns","docLink":"./Lean/Meta/Match/MatchEqsExt.html#Lean.Meta.Match.MatchEqns","doc":""},"Lean.Meta.Match.InjectionAnyResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatchEqs.lean#L337-L340","name":"Lean.Meta.Match.InjectionAnyResult","docLink":"./Lean/Meta/Match/MatchEqs.html#Lean.Meta.Match.InjectionAnyResult","doc":""},"Lean.Meta.Match.Extension.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L75-L75","name":"Lean.Meta.Match.Extension.instInhabitedState","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.Extension.instInhabitedState","doc":""},"Lean.Meta.Match.Extension.getMatcherInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L90-L91","name":"Lean.Meta.Match.Extension.getMatcherInfo?","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.Extension.getMatcherInfo?","doc":""},"Lean.Meta.Match.Extension.extension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L80-L80","name":"Lean.Meta.Match.Extension.extension","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.Extension.extension","doc":""},"Lean.Meta.Match.Extension.addMatcherInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L87-L88","name":"Lean.Meta.Match.Extension.addMatcherInfo","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.Extension.addMatcherInfo","doc":""},"Lean.Meta.Match.Extension.State.switch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L78-L78","name":"Lean.Meta.Match.Extension.State.switch","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.Extension.State.switch","doc":""},"Lean.Meta.Match.Extension.State.addEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L77-L77","name":"Lean.Meta.Match.Extension.State.addEntry","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.Extension.State.addEntry","doc":""},"Lean.Meta.Match.Extension.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L72-L73","name":"Lean.Meta.Match.Extension.State","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.Extension.State","doc":""},"Lean.Meta.Match.Extension.Entry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L68-L70","name":"Lean.Meta.Match.Extension.Entry","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.Extension.Entry","doc":""},"Lean.Meta.Match.Example.varsToUnderscore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L269-L273","name":"Lean.Meta.Match.Example.varsToUnderscore","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Example.varsToUnderscore","doc":""},"Lean.Meta.Match.Example.toMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L275-L281","name":"Lean.Meta.Match.Example.toMessageData","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Example.toMessageData","doc":""},"Lean.Meta.Match.Example.replaceFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L254-L258","name":"Lean.Meta.Match.Example.replaceFVarId","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Example.replaceFVarId","doc":""},"Lean.Meta.Match.Example.applyFVarSubst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L260-L267","name":"Lean.Meta.Match.Example.applyFVarSubst","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Example.applyFVarSubst","doc":""},"Lean.Meta.Match.Example":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L245-L250","name":"Lean.Meta.Match.Example","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Example","doc":""},"Lean.Meta.Match.DiscrInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MatcherInfo.lean#L11-L14","name":"Lean.Meta.Match.DiscrInfo","docLink":"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.DiscrInfo","doc":""},"Lean.Meta.Match.CounterExample":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L304-L304","name":"Lean.Meta.Match.CounterExample","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.CounterExample","doc":""},"Lean.Meta.Match.AltLHS.collectFVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L120-L122","name":"Lean.Meta.Match.AltLHS.collectFVars","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.AltLHS.collectFVars","doc":""},"Lean.Meta.Match.AltLHS":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L115-L118","name":"Lean.Meta.Match.AltLHS","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.AltLHS","doc":""},"Lean.Meta.Match.Alt.toMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L162-L168","name":"Lean.Meta.Match.Alt.toMessageData","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Alt.toMessageData","doc":""},"Lean.Meta.Match.Alt.replaceFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L177-L184","name":"Lean.Meta.Match.Alt.replaceFVarId","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Alt.replaceFVarId","doc":""},"Lean.Meta.Match.Alt.isLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L187-L188","name":"Lean.Meta.Match.Alt.isLocalDecl","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Alt.isLocalDecl","doc":"Return `true` if `fvarId` is one of the alternative pattern variables "},"Lean.Meta.Match.Alt.checkAndReplaceFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L232-L241","name":"Lean.Meta.Match.Alt.checkAndReplaceFVarId","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Alt.checkAndReplaceFVarId","doc":"Similar to `checkAndReplaceFVarId`, but ensures type of `v` is definitionally equal to type of `fvarId`.\n  This extra check is necessary when performing dependent elimination and inaccessible terms have been used.\n  For example, consider the following code fragment:\n\n```\ninductive Vec (α : Type u) : Nat → Type u where\n  | nil : Vec α 0\n  | cons {n} (head : α) (tail : Vec α n) : Vec α (n+1)\n\ninductive VecPred {α : Type u} (P : α → Prop) : {n : Nat} → Vec α n → Prop where\n  | nil   : VecPred P Vec.nil\n  | cons  {n : Nat} {head : α} {tail : Vec α n} : P head → VecPred P tail → VecPred P (Vec.cons head tail)\n\ntheorem ex {α : Type u} (P : α → Prop) : {n : Nat} → (v : Vec α (n+1)) → VecPred P v → Exists P\n  | _, Vec.cons head _, VecPred.cons h (w : VecPred P Vec.nil) => ⟨head, h⟩\n```\nRecall that `_` in a pattern can be elaborated into pattern variable or an inaccessible term.\nThe elaborator uses an inaccessible term when typing constraints restrict its value.\nThus, in the example above, the `_` at `Vec.cons head _` becomes the inaccessible pattern `.(Vec.nil)`\nbecause the type ascription `(w : VecPred P Vec.nil)` propagates typing constraints that restrict its value to be `Vec.nil`.\nAfter elaboration the alternative becomes:\n```\n  | .(0), @Vec.cons .(α) .(0) head .(Vec.nil), @VecPred.cons .(α) .(P) .(0) .(head) .(Vec.nil) h w => ⟨head, h⟩\n```\nwhere\n```\n(head : α), (h: P head), (w : VecPred P Vec.nil)\n```\nThen, when we process this alternative in this module, the following check will detect that\n`w` has type `VecPred P Vec.nil`, when it is supposed to have type `VecPred P tail`.\nNote that if we had written\n```\ntheorem ex {α : Type u} (P : α → Prop) : {n : Nat} → (v : Vec α (n+1)) → VecPred P v → Exists P\n  | _, Vec.cons head Vec.nil, VecPred.cons h (w : VecPred P Vec.nil) => ⟨head, h⟩\n```\nwe would get the easier to digest error message\n```\nmissing cases:\n_, (Vec.cons _ _ (Vec.cons _ _ _)), _\n```\n"},"Lean.Meta.Match.Alt.applyFVarSubst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L170-L175","name":"Lean.Meta.Match.Alt.applyFVarSubst","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Alt.applyFVarSubst","doc":""},"Lean.Meta.Match.Alt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/Basic.lean#L131-L158","name":"Lean.Meta.Match.Alt","docLink":"./Lean/Meta/Match/Basic.html#Lean.Meta.Match.Alt","doc":"`Match` alternative "},"Lean.Meta.MVarRenaming.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MVarRenaming.lean#L14-L15","name":"Lean.Meta.MVarRenaming.isEmpty","docLink":"./Lean/Meta/Match/MVarRenaming.html#Lean.Meta.MVarRenaming.isEmpty","doc":""},"Lean.Meta.MVarRenaming.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MVarRenaming.lean#L23-L24","name":"Lean.Meta.MVarRenaming.insert","docLink":"./Lean/Meta/Match/MVarRenaming.html#Lean.Meta.MVarRenaming.insert","doc":""},"Lean.Meta.MVarRenaming.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MVarRenaming.lean#L17-L18","name":"Lean.Meta.MVarRenaming.find?","docLink":"./Lean/Meta/Match/MVarRenaming.html#Lean.Meta.MVarRenaming.find?","doc":""},"Lean.Meta.MVarRenaming.find!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MVarRenaming.lean#L20-L21","name":"Lean.Meta.MVarRenaming.find!","docLink":"./Lean/Meta/Match/MVarRenaming.html#Lean.Meta.MVarRenaming.find!","doc":""},"Lean.Meta.MVarRenaming.apply":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MVarRenaming.lean#L26-L33","name":"Lean.Meta.MVarRenaming.apply","docLink":"./Lean/Meta/Match/MVarRenaming.html#Lean.Meta.MVarRenaming.apply","doc":""},"Lean.Meta.MVarRenaming":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/MVarRenaming.lean#L11-L12","name":"Lean.Meta.MVarRenaming","docLink":"./Lean/Meta/Match/MVarRenaming.html#Lean.Meta.MVarRenaming","doc":"A mapping from MVarId to MVarId "},"Lean.Meta.Linear.solve":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L248-L265","name":"Lean.Meta.Linear.solve","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.solve","doc":""},"Lean.Meta.Linear.simp?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Simp.lean#L16-L24","name":"Lean.Meta.Linear.simp?","docLink":"./Lean/Meta/Tactic/LinearArith/Simp.html#Lean.Meta.Linear.simp?","doc":""},"Lean.Meta.Linear.resolve":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L219-L246","name":"Lean.Meta.Linear.resolve","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.resolve","doc":""},"Lean.Meta.Linear.pickAssignment?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L207-L217","name":"Lean.Meta.Linear.pickAssignment?","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.pickAssignment?","doc":""},"Lean.Meta.Linear.isLinearTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Basic.lean#L11-L17","name":"Lean.Meta.Linear.isLinearTerm","docLink":"./Lean/Meta/Tactic/LinearArith/Basic.html#Lean.Meta.Linear.isLinearTerm","doc":"Quick filter for linear terms. "},"Lean.Meta.Linear.isLinearCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Basic.lean#L20-L31","name":"Lean.Meta.Linear.isLinearCnstr","docLink":"./Lean/Meta/Tactic/LinearArith/Basic.html#Lean.Meta.Linear.isLinearCnstr","doc":"Quick filter for linear constraints. "},"Lean.Meta.Linear.instReprVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L12-L12","name":"Lean.Meta.Linear.instReprVar","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprVar","doc":""},"Lean.Meta.Linear.instReprPoly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L41-L41","name":"Lean.Meta.Linear.instReprPoly","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprPoly","doc":""},"Lean.Meta.Linear.instReprJustification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L126-L126","name":"Lean.Meta.Linear.instReprJustification","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprJustification","doc":""},"Lean.Meta.Linear.instReprCnstrKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L130-L130","name":"Lean.Meta.Linear.instReprCnstrKind","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprCnstrKind","doc":""},"Lean.Meta.Linear.instReprCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L137-L137","name":"Lean.Meta.Linear.instReprCnstr","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprCnstr","doc":""},"Lean.Meta.Linear.instReprAssumptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L121-L121","name":"Lean.Meta.Linear.instReprAssumptionId","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprAssumptionId","doc":""},"Lean.Meta.Linear.instOrdVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L12-L12","name":"Lean.Meta.Linear.instOrdVar","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instOrdVar","doc":""},"Lean.Meta.Linear.instLTVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L14-L15","name":"Lean.Meta.Linear.instLTVar","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instLTVar","doc":""},"Lean.Meta.Linear.instInhabitedVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L12-L12","name":"Lean.Meta.Linear.instInhabitedVar","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedVar","doc":""},"Lean.Meta.Linear.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L192-L192","name":"Lean.Meta.Linear.instInhabitedState","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedState","doc":""},"Lean.Meta.Linear.instInhabitedPoly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L41-L41","name":"Lean.Meta.Linear.instInhabitedPoly","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedPoly","doc":""},"Lean.Meta.Linear.instInhabitedJustification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L126-L126","name":"Lean.Meta.Linear.instInhabitedJustification","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedJustification","doc":""},"Lean.Meta.Linear.instInhabitedCnstrKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L130-L130","name":"Lean.Meta.Linear.instInhabitedCnstrKind","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedCnstrKind","doc":""},"Lean.Meta.Linear.instInhabitedCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L137-L137","name":"Lean.Meta.Linear.instInhabitedCnstr","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedCnstr","doc":""},"Lean.Meta.Linear.instInhabitedAssumptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L121-L121","name":"Lean.Meta.Linear.instInhabitedAssumptionId","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedAssumptionId","doc":""},"Lean.Meta.Linear.instInhabitedAssignment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L22-L22","name":"Lean.Meta.Linear.instInhabitedAssignment","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedAssignment","doc":""},"Lean.Meta.Linear.instDecidableLtVarInstLTVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L17-L18","name":"Lean.Meta.Linear.instDecidableLtVarInstLTVar","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableLtVarInstLTVar","doc":""},"Lean.Meta.Linear.instDecidableEqVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L12-L12","name":"Lean.Meta.Linear.instDecidableEqVar","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqVar","doc":""},"Lean.Meta.Linear.instDecidableEqPoly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L41-L41","name":"Lean.Meta.Linear.instDecidableEqPoly","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqPoly","doc":""},"Lean.Meta.Linear.instDecidableEqJustification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L126-L126","name":"Lean.Meta.Linear.instDecidableEqJustification","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqJustification","doc":""},"Lean.Meta.Linear.instDecidableEqCnstrKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L130-L130","name":"Lean.Meta.Linear.instDecidableEqCnstrKind","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqCnstrKind","doc":""},"Lean.Meta.Linear.instDecidableEqCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L137-L137","name":"Lean.Meta.Linear.instDecidableEqCnstr","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqCnstr","doc":""},"Lean.Meta.Linear.instDecidableEqAssumptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L121-L121","name":"Lean.Meta.Linear.instDecidableEqAssumptionId","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqAssumptionId","doc":""},"Lean.Meta.Linear.instBEqJustification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L126-L126","name":"Lean.Meta.Linear.instBEqJustification","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instBEqJustification","doc":""},"Lean.Meta.Linear.instBEqCnstrKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L130-L130","name":"Lean.Meta.Linear.instBEqCnstrKind","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instBEqCnstrKind","doc":""},"Lean.Meta.Linear.instBEqCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L137-L137","name":"Lean.Meta.Linear.instBEqCnstr","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instBEqCnstr","doc":""},"Lean.Meta.Linear.getBestBound?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L163-L176","name":"Lean.Meta.Linear.getBestBound?","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.getBestBound?","doc":""},"Lean.Meta.Linear.Var":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L10-L12","name":"Lean.Meta.Linear.Var","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var","doc":""},"Lean.Meta.Linear.State.getNumVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L194-L194","name":"Lean.Meta.Linear.State.getNumVars","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.getNumVars","doc":""},"Lean.Meta.Linear.State.getBestUpperBound?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L201-L202","name":"Lean.Meta.Linear.State.getBestUpperBound?","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.getBestUpperBound?","doc":""},"Lean.Meta.Linear.State.getBestLowerBound?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L198-L199","name":"Lean.Meta.Linear.State.getBestLowerBound?","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.getBestLowerBound?","doc":""},"Lean.Meta.Linear.State.currVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L196-L196","name":"Lean.Meta.Linear.State.currVar","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.currVar","doc":""},"Lean.Meta.Linear.State.assignCurr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L204-L205","name":"Lean.Meta.Linear.State.assignCurr","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.assignCurr","doc":""},"Lean.Meta.Linear.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L187-L192","name":"Lean.Meta.Linear.State","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State","doc":""},"Lean.Meta.Linear.Result":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L178-L182","name":"Lean.Meta.Linear.Result","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result","doc":""},"Lean.Meta.Linear.Poly.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L43-L44","name":"Lean.Meta.Linear.Poly.size","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.size","doc":""},"Lean.Meta.Linear.Poly.scale":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L55-L56","name":"Lean.Meta.Linear.Poly.scale","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.scale","doc":""},"Lean.Meta.Linear.Poly.getMaxVarCoeff":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L46-L47","name":"Lean.Meta.Linear.Poly.getMaxVarCoeff","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.getMaxVarCoeff","doc":""},"Lean.Meta.Linear.Poly.getMaxVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L49-L50","name":"Lean.Meta.Linear.Poly.getMaxVar","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.getMaxVar","doc":""},"Lean.Meta.Linear.Poly.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L52-L53","name":"Lean.Meta.Linear.Poly.get","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.get","doc":""},"Lean.Meta.Linear.Poly.eval?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L110-L117","name":"Lean.Meta.Linear.Poly.eval?","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.eval?","doc":""},"Lean.Meta.Linear.Poly.combine.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L84-L106","name":"Lean.Meta.Linear.Poly.combine.go","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.combine.go","doc":""},"Lean.Meta.Linear.Poly.combine":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L83-L108","name":"Lean.Meta.Linear.Poly.combine","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.combine","doc":""},"Lean.Meta.Linear.Poly.add.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L59-L79","name":"Lean.Meta.Linear.Poly.add.go","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.add.go","doc":""},"Lean.Meta.Linear.Poly.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L58-L81","name":"Lean.Meta.Linear.Poly.add","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.add","doc":""},"Lean.Meta.Linear.Poly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L39-L41","name":"Lean.Meta.Linear.Poly","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly","doc":""},"Lean.Meta.Linear.Nat.toContextExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L155-L156","name":"Lean.Meta.Linear.Nat.toContextExpr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.toContextExpr","doc":""},"Lean.Meta.Linear.Nat.simpExpr?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Simp.lean#L57-L68","name":"Lean.Meta.Linear.Nat.simpExpr?","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Simp.html#Lean.Meta.Linear.Nat.simpExpr?","doc":""},"Lean.Meta.Linear.Nat.simpCnstrPos?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Simp.lean#L10-L27","name":"Lean.Meta.Linear.Nat.simpCnstrPos?","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Simp.html#Lean.Meta.Linear.Nat.simpCnstrPos?","doc":""},"Lean.Meta.Linear.Nat.simpCnstr?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Simp.lean#L29-L55","name":"Lean.Meta.Linear.Nat.simpCnstr?","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Simp.html#Lean.Meta.Linear.Nat.simpCnstr?","doc":""},"Lean.Meta.Linear.Nat.reflTrue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L158-L159","name":"Lean.Meta.Linear.Nat.reflTrue","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.reflTrue","doc":""},"Lean.Meta.Linear.Nat.instToExprLinearExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L29-L31","name":"Lean.Meta.Linear.Nat.instToExprLinearExpr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instToExprLinearExpr","doc":""},"Lean.Meta.Linear.Nat.instToExprLinearCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L36-L38","name":"Lean.Meta.Linear.Nat.instToExprLinearCnstr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instToExprLinearCnstr","doc":""},"Lean.Meta.Linear.Nat.instReprPolyCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L14-L14","name":"Lean.Meta.Linear.Nat.instReprPolyCnstr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprPolyCnstr","doc":""},"Lean.Meta.Linear.Nat.instReprExprCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L13-L13","name":"Lean.Meta.Linear.Nat.instReprExprCnstr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprExprCnstr","doc":""},"Lean.Meta.Linear.Nat.instReprExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L12-L12","name":"Lean.Meta.Linear.Nat.instReprExpr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprExpr","doc":""},"Lean.Meta.Linear.Nat.ToLinear.toLinearExpr.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L83-L111","name":"Lean.Meta.Linear.Nat.ToLinear.toLinearExpr.visit","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearExpr.visit","doc":""},"Lean.Meta.Linear.Nat.ToLinear.toLinearExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L74-L111","name":"Lean.Meta.Linear.Nat.ToLinear.toLinearExpr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearExpr","doc":""},"Lean.Meta.Linear.Nat.ToLinear.toLinearCnstr?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L113-L145","name":"Lean.Meta.Linear.Nat.ToLinear.toLinearCnstr?","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearCnstr?","doc":""},"Lean.Meta.Linear.Nat.ToLinear.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L147-L149","name":"Lean.Meta.Linear.Nat.ToLinear.run","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.run","doc":""},"Lean.Meta.Linear.Nat.ToLinear.addAsVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L65-L72","name":"Lean.Meta.Linear.Nat.ToLinear.addAsVar","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.addAsVar","doc":""},"Lean.Meta.Linear.Nat.ToLinear.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L57-L59","name":"Lean.Meta.Linear.Nat.ToLinear.State","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State","doc":""},"Lean.Meta.Linear.Nat.ToLinear.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L61-L61","name":"Lean.Meta.Linear.Nat.ToLinear.M","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M","doc":""},"Lean.Meta.Linear.Nat.PolyExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L18-L18","name":"Lean.Meta.Linear.Nat.PolyExpr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.PolyExpr","doc":""},"Lean.Meta.Linear.Nat.LinearExpr.toExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L20-L27","name":"Lean.Meta.Linear.Nat.LinearExpr.toExpr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr.toExpr","doc":""},"Lean.Meta.Linear.Nat.LinearExpr.toArith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L41-L47","name":"Lean.Meta.Linear.Nat.LinearExpr.toArith","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr.toArith","doc":""},"Lean.Meta.Linear.Nat.LinearExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L16-L16","name":"Lean.Meta.Linear.Nat.LinearExpr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr","doc":""},"Lean.Meta.Linear.Nat.LinearCnstr.toExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L33-L34","name":"Lean.Meta.Linear.Nat.LinearCnstr.toExpr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr.toExpr","doc":""},"Lean.Meta.Linear.Nat.LinearCnstr.toArith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L49-L53","name":"Lean.Meta.Linear.Nat.LinearCnstr.toArith","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr.toArith","doc":""},"Lean.Meta.Linear.Nat.LinearCnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L17-L17","name":"Lean.Meta.Linear.Nat.LinearCnstr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr","doc":""},"Lean.Meta.Linear.Nat.Collect.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Solver.lean#L17-L18","name":"Lean.Meta.Linear.Nat.Collect.State","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Solver.html#Lean.Meta.Linear.Nat.Collect.State","doc":""},"Lean.Meta.Linear.Nat.Collect.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Solver.lean#L20-L20","name":"Lean.Meta.Linear.Nat.Collect.M","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Solver.html#Lean.Meta.Linear.Nat.Collect.M","doc":""},"Lean.Meta.Linear.Nat.Collect.Cnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Nat/Solver.lean#L13-L15","name":"Lean.Meta.Linear.Nat.Collect.Cnstr","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Solver.html#Lean.Meta.Linear.Nat.Collect.Cnstr","doc":""},"Lean.Meta.Linear.Justification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L123-L126","name":"Lean.Meta.Linear.Justification","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification","doc":""},"Lean.Meta.Linear.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L184-L185","name":"Lean.Meta.Linear.Context","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Context","doc":""},"Lean.Meta.Linear.CnstrKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L128-L130","name":"Lean.Meta.Linear.CnstrKind","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind","doc":""},"Lean.Meta.Linear.Cnstr.isUnsat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L153-L161","name":"Lean.Meta.Linear.Cnstr.isUnsat","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.isUnsat","doc":""},"Lean.Meta.Linear.Cnstr.isStrict":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L139-L140","name":"Lean.Meta.Linear.Cnstr.isStrict","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.isStrict","doc":""},"Lean.Meta.Linear.Cnstr.getBound":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L142-L151","name":"Lean.Meta.Linear.Cnstr.getBound","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.getBound","doc":""},"Lean.Meta.Linear.Cnstr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L132-L137","name":"Lean.Meta.Linear.Cnstr","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr","doc":""},"Lean.Meta.Linear.AssumptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L119-L121","name":"Lean.Meta.Linear.AssumptionId","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId","doc":""},"Lean.Meta.Linear.Assignment.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L24-L25","name":"Lean.Meta.Linear.Assignment.size","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.size","doc":""},"Lean.Meta.Linear.Assignment.shrink":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L36-L37","name":"Lean.Meta.Linear.Assignment.shrink","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.shrink","doc":""},"Lean.Meta.Linear.Assignment.push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L33-L34","name":"Lean.Meta.Linear.Assignment.push","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.push","doc":""},"Lean.Meta.Linear.Assignment.get?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L27-L31","name":"Lean.Meta.Linear.Assignment.get?","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.get?","doc":""},"Lean.Meta.Linear.Assignment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L20-L22","name":"Lean.Meta.Linear.Assignment","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment","doc":""},"Lean.Meta.KExprMap.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/KExprMap.lean#L41-L45","name":"Lean.Meta.KExprMap.insert","docLink":"./Lean/Meta/KExprMap.html#Lean.Meta.KExprMap.insert","doc":"Insert `e ↦ v` into `m` "},"Lean.Meta.KExprMap.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/KExprMap.lean#L22-L29","name":"Lean.Meta.KExprMap.find?","docLink":"./Lean/Meta/KExprMap.html#Lean.Meta.KExprMap.find?","doc":"Return `some v` if there is an entry `e ↦ v` in `m`. "},"Lean.Meta.KExprMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/KExprMap.lean#L17-L19","name":"Lean.Meta.KExprMap","docLink":"./Lean/Meta/KExprMap.html#Lean.Meta.KExprMap","doc":"A mapping that indentifies definitionally equal expressions.\n  We implement it as a mapping from `HeadIndex` to `Std.AssocList Expr α`.\n\n  Remark: this map may be quite inefficient if there are many `HeadIndex` collisions.\n"},"Lean.Meta.Instances.eraseCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L38-L39","name":"Lean.Meta.Instances.eraseCore","docLink":"./Lean/Meta/Instances.html#Lean.Meta.Instances.eraseCore","doc":""},"Lean.Meta.Instances.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L41-L44","name":"Lean.Meta.Instances.erase","docLink":"./Lean/Meta/Instances.html#Lean.Meta.Instances.erase","doc":""},"Lean.Meta.Instances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L27-L31","name":"Lean.Meta.Instances","docLink":"./Lean/Meta/Instances.html#Lean.Meta.Instances","doc":""},"Lean.Meta.InstanceEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L12-L17","name":"Lean.Meta.InstanceEntry","docLink":"./Lean/Meta/Instances.html#Lean.Meta.InstanceEntry","doc":""},"Lean.Meta.InjectionResultCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Injection.lean#L23-L25","name":"Lean.Meta.InjectionResultCore","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResultCore","doc":""},"Lean.Meta.InjectionResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Injection.lean#L71-L73","name":"Lean.Meta.InjectionResult","docLink":"./Lean/Meta/Tactic/Injection.html#Lean.Meta.InjectionResult","doc":""},"Lean.Meta.InfoCacheKey.instHashableInfoCacheKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L211-L212","name":"Lean.Meta.InfoCacheKey.instHashableInfoCacheKey","docLink":"./Lean/Meta/Basic.html#Lean.Meta.InfoCacheKey.instHashableInfoCacheKey","doc":""},"Lean.Meta.InfoCacheKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L197-L208","name":"Lean.Meta.InfoCacheKey","docLink":"./Lean/Meta/Basic.html#Lean.Meta.InfoCacheKey","doc":"Key for the function information cache.\n"},"Lean.Meta.InferTypeCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L219-L219","name":"Lean.Meta.InferTypeCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.InferTypeCache","doc":""},"Lean.Meta.InductionSubgoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Induction.lean#L38-L42","name":"Lean.Meta.InductionSubgoal","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.InductionSubgoal","doc":""},"Lean.Meta.IndPredBelow.proveBrecOn.intros":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L262-L268","name":"Lean.Meta.IndPredBelow.proveBrecOn.intros","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.intros","doc":""},"Lean.Meta.IndPredBelow.proveBrecOn.introNPRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L306-L307","name":"Lean.Meta.IndPredBelow.proveBrecOn.introNPRec","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.introNPRec","doc":""},"Lean.Meta.IndPredBelow.proveBrecOn.induction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L276-L290","name":"Lean.Meta.IndPredBelow.proveBrecOn.induction","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.induction","doc":""},"Lean.Meta.IndPredBelow.proveBrecOn.closeGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L309-L314","name":"Lean.Meta.IndPredBelow.proveBrecOn.closeGoal","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.closeGoal","doc":""},"Lean.Meta.IndPredBelow.proveBrecOn.applyIH":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L270-L274","name":"Lean.Meta.IndPredBelow.proveBrecOn.applyIH","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.applyIH","doc":""},"Lean.Meta.IndPredBelow.proveBrecOn.applyCtors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L292-L304","name":"Lean.Meta.IndPredBelow.proveBrecOn.applyCtors","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn.applyCtors","doc":""},"Lean.Meta.IndPredBelow.proveBrecOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L251-L314","name":"Lean.Meta.IndPredBelow.proveBrecOn","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.proveBrecOn","doc":""},"Lean.Meta.IndPredBelow.mkInductiveType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L215-L223","name":"Lean.Meta.IndPredBelow.mkInductiveType","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkInductiveType","doc":""},"Lean.Meta.IndPredBelow.mkCtorType.replaceTempVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L146-L151","name":"Lean.Meta.IndPredBelow.mkCtorType.replaceTempVars","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.replaceTempVars","doc":""},"Lean.Meta.IndPredBelow.mkCtorType.rebuild":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L135-L144","name":"Lean.Meta.IndPredBelow.mkCtorType.rebuild","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.rebuild","doc":""},"Lean.Meta.IndPredBelow.mkCtorType.modifyBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L123-L133","name":"Lean.Meta.IndPredBelow.mkCtorType.modifyBinders","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.modifyBinders","doc":""},"Lean.Meta.IndPredBelow.mkCtorType.mkMotiveBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L189-L201","name":"Lean.Meta.IndPredBelow.mkCtorType.mkMotiveBinder","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.mkMotiveBinder","doc":""},"Lean.Meta.IndPredBelow.mkCtorType.mkBelowBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L166-L187","name":"Lean.Meta.IndPredBelow.mkCtorType.mkBelowBinder","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.mkBelowBinder","doc":""},"Lean.Meta.IndPredBelow.mkCtorType.copyVarName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L203-L205","name":"Lean.Meta.IndPredBelow.mkCtorType.copyVarName","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.copyVarName","doc":""},"Lean.Meta.IndPredBelow.mkCtorType.checkCount":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L153-L164","name":"Lean.Meta.IndPredBelow.mkCtorType.checkCount","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.checkCount","doc":""},"Lean.Meta.IndPredBelow.mkCtorType.addMotives":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L116-L121","name":"Lean.Meta.IndPredBelow.mkCtorType.addMotives","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.addMotives","doc":""},"Lean.Meta.IndPredBelow.mkCtorType.addHeaderVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L109-L114","name":"Lean.Meta.IndPredBelow.mkCtorType.addHeaderVars","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType.addHeaderVars","doc":""},"Lean.Meta.IndPredBelow.mkCtorType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L97-L205","name":"Lean.Meta.IndPredBelow.mkCtorType","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkCtorType","doc":""},"Lean.Meta.IndPredBelow.mkContext.motiveType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L90-L92","name":"Lean.Meta.IndPredBelow.mkContext.motiveType","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.motiveType","doc":""},"Lean.Meta.IndPredBelow.mkContext.motiveName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L69-L72","name":"Lean.Meta.IndPredBelow.mkContext.motiveName","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.motiveName","doc":""},"Lean.Meta.IndPredBelow.mkContext.mkIndValConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L94-L95","name":"Lean.Meta.IndPredBelow.mkContext.mkIndValConst","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.mkIndValConst","doc":""},"Lean.Meta.IndPredBelow.mkContext.mkHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L74-L81","name":"Lean.Meta.IndPredBelow.mkContext.mkHeader","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.mkHeader","doc":""},"Lean.Meta.IndPredBelow.mkContext.addMotives":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L83-L88","name":"Lean.Meta.IndPredBelow.mkContext.addMotives","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext.addMotives","doc":""},"Lean.Meta.IndPredBelow.mkContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L54-L95","name":"Lean.Meta.IndPredBelow.mkContext","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkContext","doc":""},"Lean.Meta.IndPredBelow.mkConstructor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L207-L213","name":"Lean.Meta.IndPredBelow.mkConstructor","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkConstructor","doc":""},"Lean.Meta.IndPredBelow.mkBrecOnDecl.mkType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L326-L333","name":"Lean.Meta.IndPredBelow.mkBrecOnDecl.mkType","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBrecOnDecl.mkType","doc":""},"Lean.Meta.IndPredBelow.mkBrecOnDecl.mkIH":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L334-L354","name":"Lean.Meta.IndPredBelow.mkBrecOnDecl.mkIH","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBrecOnDecl.mkIH","doc":""},"Lean.Meta.IndPredBelow.mkBrecOnDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L316-L354","name":"Lean.Meta.IndPredBelow.mkBrecOnDecl","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBrecOnDecl","doc":""},"Lean.Meta.IndPredBelow.mkBelowMatcher.transformFields.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L513-L540","name":"Lean.Meta.IndPredBelow.mkBelowMatcher.transformFields.loop","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.transformFields.loop","doc":""},"Lean.Meta.IndPredBelow.mkBelowMatcher.transformFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L512-L541","name":"Lean.Meta.IndPredBelow.mkBelowMatcher.transformFields","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.transformFields","doc":""},"Lean.Meta.IndPredBelow.mkBelowMatcher.toInaccessible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L543-L546","name":"Lean.Meta.IndPredBelow.mkBelowMatcher.toInaccessible","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.toInaccessible","doc":""},"Lean.Meta.IndPredBelow.mkBelowMatcher.newMotive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L548-L554","name":"Lean.Meta.IndPredBelow.mkBelowMatcher.newMotive","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.newMotive","doc":""},"Lean.Meta.IndPredBelow.mkBelowMatcher.convertToBelow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L472-L510","name":"Lean.Meta.IndPredBelow.mkBelowMatcher.convertToBelow","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.convertToBelow","doc":"this function changes the type of the pattern from the original type to the `below` version thereof.\nMost of the cases don't apply. In order to change the type and the pattern to be type correct, we don't\nsimply recursively change all occurrences, but rather, we recursively change occurences of the constructor.\nAs such there are only a few cases:\n- the pattern is a constructor from the original type. Here we need to:\n  - replace the constructor\n  - copy original recursive patterns and convert them to below and reintroduce them in the correct position\n  - turn original recursive patterns inaccessible\n  - introduce free variables as needed.\n- it is an `as` pattern. Here the contstructor could be hidden inside of it.\n- it is a variable. Here you we need to introduce a fresh variable of a different type.\n"},"Lean.Meta.IndPredBelow.mkBelowMatcher.addBelowPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L449-L457","name":"Lean.Meta.IndPredBelow.mkBelowMatcher.addBelowPattern","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher.addBelowPattern","doc":""},"Lean.Meta.IndPredBelow.mkBelowMatcher":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L402-L554","name":"Lean.Meta.IndPredBelow.mkBelowMatcher","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowMatcher","doc":"This function adds an additional `below` discriminant to a matcher application.\n    It is used for modifying the patterns, such that the structural recursion can use the new\n    `below` predicate instead of the original one and thus be used prove structural recursion.\n\n    It takes as parameters:\n    - matcherApp: a matcher application\n    - belowMotive: the motive, that the `below` type should carry\n    - below: an expression from the local context that is the `below` version of a predicate\n             and can be used for structural recursion\n    - idx: the index of the original predicate discriminant.\n\n    It returns:\n    - A matcher application as an expression\n    - A side-effect for adding the matcher to the environment "},"Lean.Meta.IndPredBelow.mkBelowDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L225-L231","name":"Lean.Meta.IndPredBelow.mkBelowDecl","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelowDecl","doc":""},"Lean.Meta.IndPredBelow.mkBelow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L577-L592","name":"Lean.Meta.IndPredBelow.mkBelow","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.mkBelow","doc":""},"Lean.Meta.IndPredBelow.maxBackwardChainingDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L16-L16","name":"Lean.Meta.IndPredBelow.maxBackwardChainingDepth","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.maxBackwardChainingDepth","doc":""},"Lean.Meta.IndPredBelow.instInhabitedVariables":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L42-L42","name":"Lean.Meta.IndPredBelow.instInhabitedVariables","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.instInhabitedVariables","doc":""},"Lean.Meta.IndPredBelow.getBelowIndices.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L364-L378","name":"Lean.Meta.IndPredBelow.getBelowIndices.loop","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.getBelowIndices.loop","doc":""},"Lean.Meta.IndPredBelow.getBelowIndices":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L357-L378","name":"Lean.Meta.IndPredBelow.getBelowIndices","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.getBelowIndices","doc":"Given a constructor name, find the indices of the corresponding `below` version thereof. "},"Lean.Meta.IndPredBelow.findBelowIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L556-L575","name":"Lean.Meta.IndPredBelow.findBelowIdx","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.findBelowIdx","doc":""},"Lean.Meta.IndPredBelow.backwardsChaining":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L233-L249","name":"Lean.Meta.IndPredBelow.backwardsChaining","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.backwardsChaining","doc":""},"Lean.Meta.IndPredBelow.Variables":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L35-L42","name":"Lean.Meta.IndPredBelow.Variables","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Variables","doc":"Collection of variables used to keep track of the positions of binders in the construction\nof `below` motives and constructors.\n"},"Lean.Meta.IndPredBelow.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L24-L29","name":"Lean.Meta.IndPredBelow.Context","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.Context","doc":"The context used in the creation of the `below` scheme for inductive predicates.\n"},"Lean.Meta.IndPredBelow.BrecOnVariables":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/IndPredBelow.lean#L47-L52","name":"Lean.Meta.IndPredBelow.BrecOnVariables","docLink":"./Lean/Meta/IndPredBelow.html#Lean.Meta.IndPredBelow.BrecOnVariables","doc":"Collection of variables used to keep track of the local context used in the `brecOn` proof.\n"},"Lean.Meta.Hypothesis":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assert.lean#L103-L106","name":"Lean.Meta.Hypothesis","docLink":"./Lean/Meta/Tactic/Assert.html#Lean.Meta.Hypothesis","doc":""},"Lean.Meta.GetUnfoldEqnFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Eqns.lean#L98-L98","name":"Lean.Meta.GetUnfoldEqnFn","docLink":"./Lean/Meta/Eqns.html#Lean.Meta.GetUnfoldEqnFn","doc":""},"Lean.Meta.GetEqnsFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Eqns.lean#L11-L11","name":"Lean.Meta.GetEqnsFn","docLink":"./Lean/Meta/Eqns.html#Lean.Meta.GetEqnsFn","doc":""},"Lean.Meta.GeneralizeTelescope.updateTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GeneralizeTelescope.lean#L17-L30","name":"Lean.Meta.GeneralizeTelescope.updateTypes","docLink":"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.updateTypes","doc":""},"Lean.Meta.GeneralizeTelescope.generalizeTelescopeAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GeneralizeTelescope.lean#L32-L52","name":"Lean.Meta.GeneralizeTelescope.generalizeTelescopeAux","docLink":"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.generalizeTelescopeAux","doc":""},"Lean.Meta.GeneralizeTelescope.Entry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/GeneralizeTelescope.lean#L12-L15","name":"Lean.Meta.GeneralizeTelescope.Entry","docLink":"./Lean/Meta/GeneralizeTelescope.html#Lean.Meta.GeneralizeTelescope.Entry","doc":""},"Lean.Meta.GeneralizeIndicesSubgoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L61-L65","name":"Lean.Meta.GeneralizeIndicesSubgoal","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.Meta.GeneralizeIndicesSubgoal","doc":""},"Lean.Meta.GeneralizeArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Generalize.lean#L13-L17","name":"Lean.Meta.GeneralizeArg","docLink":"./Lean/Meta/Tactic/Generalize.html#Lean.Meta.GeneralizeArg","doc":"The `generalize` tactic takes arguments of the form `h : e = x` "},"Lean.Meta.FunInfoCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L220-L220","name":"Lean.Meta.FunInfoCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.FunInfoCache","doc":""},"Lean.Meta.FunInfo.getArity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/FunInfo.lean#L98-L99","name":"Lean.Meta.FunInfo.getArity","docLink":"./Lean/Meta/FunInfo.html#Lean.Meta.FunInfo.getArity","doc":""},"Lean.Meta.FunInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L185-L192","name":"Lean.Meta.FunInfo","docLink":"./Lean/Meta/Basic.html#Lean.Meta.FunInfo","doc":"Function information cache. See `ParamInfo`.\n"},"Lean.Meta.ForEachExpr.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L37-L47","name":"Lean.Meta.ForEachExpr.visit","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.ForEachExpr.visit","doc":""},"Lean.Meta.ForEachExpr.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ForEachExpr.lean#L13-L13","name":"Lean.Meta.ForEachExpr.M","docLink":"./Lean/Meta/ForEachExpr.html#Lean.Meta.ForEachExpr.M","doc":""},"Lean.Meta.FVarSubst.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L26-L27","name":"Lean.Meta.FVarSubst.isEmpty","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst.isEmpty","doc":""},"Lean.Meta.FVarSubst.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L33-L37","name":"Lean.Meta.FVarSubst.insert","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst.insert","doc":"Add entry `fvarId |-> v` to `s` if `s` does not contain an entry for `fvarId`. "},"Lean.Meta.FVarSubst.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L45-L48","name":"Lean.Meta.FVarSubst.get","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst.get","doc":""},"Lean.Meta.FVarSubst.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L42-L43","name":"Lean.Meta.FVarSubst.find?","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst.find?","doc":""},"Lean.Meta.FVarSubst.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L39-L40","name":"Lean.Meta.FVarSubst.erase","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst.erase","doc":""},"Lean.Meta.FVarSubst.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L24-L24","name":"Lean.Meta.FVarSubst.empty","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst.empty","doc":""},"Lean.Meta.FVarSubst.domain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L60-L61","name":"Lean.Meta.FVarSubst.domain","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst.domain","doc":""},"Lean.Meta.FVarSubst.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L29-L30","name":"Lean.Meta.FVarSubst.contains","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst.contains","doc":""},"Lean.Meta.FVarSubst.apply":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L51-L58","name":"Lean.Meta.FVarSubst.apply","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst.apply","doc":"Given `e`, for each `(x => v)` in `s` replace `x` with `v` in `e` "},"Lean.Meta.FVarSubst.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L63-L64","name":"Lean.Meta.FVarSubst.any","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst.any","doc":""},"Lean.Meta.FVarSubst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L18-L20","name":"Lean.Meta.FVarSubst","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Meta.FVarSubst","doc":"Some tactics substitute hypotheses with expressions.\nWe track these substitutions using `FVarSubst`.\nIt is just a mapping from the original FVarId (internal) name\nto an expression. The free variables occurring in the expression must\nbe defined in the new goal. "},"Lean.Meta.FVarIdToLemmaId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/Main.lean#L921-L921","name":"Lean.Meta.FVarIdToLemmaId","docLink":"./Lean/Meta/Tactic/Simp/Main.html#Lean.Meta.FVarIdToLemmaId","doc":""},"Lean.Meta.Expr.acLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ACLt.lean#L158-L158","name":"Lean.Meta.Expr.acLt","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.Expr.acLt","doc":""},"Lean.Meta.EtaStructMode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1176-L1183","name":"Lean.Meta.EtaStructMode","docLink":"./Init/Meta.html#Lean.Meta.EtaStructMode","doc":""},"Lean.Meta.EqnsExtState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Eqns.lean#L52-L54","name":"Lean.Meta.EqnsExtState","docLink":"./Lean/Meta/Eqns.html#Lean.Meta.EqnsExtState","doc":""},"Lean.Meta.ElimInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L17-L22","name":"Lean.Meta.ElimInfo","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.ElimInfo","doc":""},"Lean.Meta.ElimEmptyInductive.instMonadBacktrackSavedStateM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Contradiction.lean#L49-L51","name":"Lean.Meta.ElimEmptyInductive.instMonadBacktrackSavedStateM","docLink":"./Lean/Meta/Tactic/Contradiction.html#Lean.Meta.ElimEmptyInductive.instMonadBacktrackSavedStateM","doc":""},"Lean.Meta.ElimEmptyInductive.elim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Contradiction.lean#L53-L74","name":"Lean.Meta.ElimEmptyInductive.elim","docLink":"./Lean/Meta/Tactic/Contradiction.html#Lean.Meta.ElimEmptyInductive.elim","doc":""},"Lean.Meta.ElimEmptyInductive.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Contradiction.lean#L47-L47","name":"Lean.Meta.ElimEmptyInductive.M","docLink":"./Lean/Meta/Tactic/Contradiction.html#Lean.Meta.ElimEmptyInductive.M","doc":""},"Lean.Meta.ElimAltInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L12-L15","name":"Lean.Meta.ElimAltInfo","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.ElimAltInfo","doc":""},"Lean.Meta.DiscrTree.whnfDT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L267-L268","name":"Lean.Meta.DiscrTree.whnfDT","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.whnfDT","doc":"whnf for the discrimination tree module "},"Lean.Meta.DiscrTree.mkPathAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L311-L318","name":"Lean.Meta.DiscrTree.mkPathAux","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.mkPathAux","doc":""},"Lean.Meta.DiscrTree.mkPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L322-L326","name":"Lean.Meta.DiscrTree.mkPath","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.mkPath","doc":""},"Lean.Meta.DiscrTree.mkNoindexAnnotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L223-L224","name":"Lean.Meta.DiscrTree.mkNoindexAnnotation","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.mkNoindexAnnotation","doc":""},"Lean.Meta.DiscrTree.instToFormatTrie":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L100-L100","name":"Lean.Meta.DiscrTree.instToFormatTrie","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.instToFormatTrie","doc":""},"Lean.Meta.DiscrTree.instToFormatKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L82-L82","name":"Lean.Meta.DiscrTree.instToFormatKey","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.instToFormatKey","doc":""},"Lean.Meta.DiscrTree.instToFormatDiscrTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L109-L109","name":"Lean.Meta.DiscrTree.instToFormatDiscrTree","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.instToFormatDiscrTree","doc":""},"Lean.Meta.DiscrTree.instReprKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTreeTypes.lean#L22-L22","name":"Lean.Meta.DiscrTree.instReprKey","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instReprKey","doc":""},"Lean.Meta.DiscrTree.instLTKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L69-L69","name":"Lean.Meta.DiscrTree.instLTKey","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.instLTKey","doc":""},"Lean.Meta.DiscrTree.instInhabitedTrie":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L91-L91","name":"Lean.Meta.DiscrTree.instInhabitedTrie","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.instInhabitedTrie","doc":""},"Lean.Meta.DiscrTree.instInhabitedKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTreeTypes.lean#L22-L22","name":"Lean.Meta.DiscrTree.instInhabitedKey","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instInhabitedKey","doc":""},"Lean.Meta.DiscrTree.instInhabitedDiscrTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L116-L117","name":"Lean.Meta.DiscrTree.instInhabitedDiscrTree","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.instInhabitedDiscrTree","doc":""},"Lean.Meta.DiscrTree.instHashableKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTreeTypes.lean#L33-L33","name":"Lean.Meta.DiscrTree.instHashableKey","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instHashableKey","doc":""},"Lean.Meta.DiscrTree.instDecidableLtKeyInstLTKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L70-L70","name":"Lean.Meta.DiscrTree.instDecidableLtKeyInstLTKey","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.instDecidableLtKeyInstLTKey","doc":""},"Lean.Meta.DiscrTree.instBEqKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTreeTypes.lean#L22-L22","name":"Lean.Meta.DiscrTree.instBEqKey","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.instBEqKey","doc":""},"Lean.Meta.DiscrTree.insertCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L352-L362","name":"Lean.Meta.DiscrTree.insertCore","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.insertCore","doc":""},"Lean.Meta.DiscrTree.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L364-L366","name":"Lean.Meta.DiscrTree.insert","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.insert","doc":""},"Lean.Meta.DiscrTree.hasNoindexAnnotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L226-L227","name":"Lean.Meta.DiscrTree.hasNoindexAnnotation","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.hasNoindexAnnotation","doc":""},"Lean.Meta.DiscrTree.getUnify.process":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L551-L581","name":"Lean.Meta.DiscrTree.getUnify.process","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.getUnify.process","doc":""},"Lean.Meta.DiscrTree.getUnify":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L540-L581","name":"Lean.Meta.DiscrTree.getUnify","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.getUnify","doc":""},"Lean.Meta.DiscrTree.getMatchWithExtra.mayMatchPrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L522-L531","name":"Lean.Meta.DiscrTree.getMatchWithExtra.mayMatchPrefix","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.getMatchWithExtra.mayMatchPrefix","doc":""},"Lean.Meta.DiscrTree.getMatchWithExtra.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L533-L538","name":"Lean.Meta.DiscrTree.getMatchWithExtra.go","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.getMatchWithExtra.go","doc":""},"Lean.Meta.DiscrTree.getMatchWithExtra":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L512-L538","name":"Lean.Meta.DiscrTree.getMatchWithExtra","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.getMatchWithExtra","doc":"Similar to `getMatch`, but returns solutions that are prefixes of `e`.\nWe store the number of ignored arguments in the result."},"Lean.Meta.DiscrTree.getMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L506-L507","name":"Lean.Meta.DiscrTree.getMatch","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.getMatch","doc":"Find values that match `e` in `d`.\n"},"Lean.Meta.DiscrTree.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L102-L107","name":"Lean.Meta.DiscrTree.format","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.format","doc":""},"Lean.Meta.DiscrTree.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L93-L93","name":"Lean.Meta.DiscrTree.empty","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.empty","doc":""},"Lean.Meta.DiscrTree.Trie.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L95-L98","name":"Lean.Meta.DiscrTree.Trie.format","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Trie.format","doc":""},"Lean.Meta.DiscrTree.Trie":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTreeTypes.lean#L35-L36","name":"Lean.Meta.DiscrTree.Trie","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Trie","doc":""},"Lean.Meta.DiscrTree.Key.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L62-L67","name":"Lean.Meta.DiscrTree.Key.lt","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Key.lt","doc":""},"Lean.Meta.DiscrTree.Key.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTreeTypes.lean#L24-L31","name":"Lean.Meta.DiscrTree.Key.hash","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key.hash","doc":""},"Lean.Meta.DiscrTree.Key.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L72-L80","name":"Lean.Meta.DiscrTree.Key.format","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Key.format","doc":""},"Lean.Meta.DiscrTree.Key.ctorIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L53-L60","name":"Lean.Meta.DiscrTree.Key.ctorIdx","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Key.ctorIdx","doc":""},"Lean.Meta.DiscrTree.Key.arity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTree.lean#L84-L89","name":"Lean.Meta.DiscrTree.Key.arity","docLink":"./Lean/Meta/DiscrTree.html#Lean.Meta.DiscrTree.Key.arity","doc":""},"Lean.Meta.DiscrTree.Key":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTreeTypes.lean#L14-L22","name":"Lean.Meta.DiscrTree.Key","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key","doc":""},"Lean.Meta.DiscrTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DiscrTreeTypes.lean#L43-L44","name":"Lean.Meta.DiscrTree","docLink":"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree","doc":""},"Lean.Meta.DefaultInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L93-L96","name":"Lean.Meta.DefaultInstances","docLink":"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstances","doc":""},"Lean.Meta.DefaultInstanceEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Instances.lean#L86-L89","name":"Lean.Meta.DefaultInstanceEntry","docLink":"./Lean/Meta/Instances.html#Lean.Meta.DefaultInstanceEntry","doc":""},"Lean.Meta.DefEqContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L245-L249","name":"Lean.Meta.DefEqContext","docLink":"./Lean/Meta/Basic.html#Lean.Meta.DefEqContext","doc":"\"Context\" for a postponed universe constraint.\n`lhs` and `rhs` are the surrounding `isDefEq` call when the postponed constraint was created.\n"},"Lean.Meta.DefEqCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L227-L227","name":"Lean.Meta.DefEqCache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.DefEqCache","doc":"A mapping `(s, t) ↦ isDefEq s t`.\nTODO: consider more efficient representations (e.g., a proper set) and caching policies (e.g., imperfect cache).\nWe should also investigate the impact on memory consumption. "},"Lean.Meta.DefEqArgsFirstPassResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L145-L178","name":"Lean.Meta.DefEqArgsFirstPassResult","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.DefEqArgsFirstPassResult","doc":"Result type for `isDefEqArgsFirstPass`.\n"},"Lean.Meta.DecLevelContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/DecLevel.lean#L11-L16","name":"Lean.Meta.DecLevelContext","docLink":"./Lean/Meta/DecLevel.html#Lean.Meta.DecLevelContext","doc":""},"Lean.Meta.DSimp.instReprConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1196-L1196","name":"Lean.Meta.DSimp.instReprConfig","docLink":"./Init/Meta.html#Lean.Meta.DSimp.instReprConfig","doc":""},"Lean.Meta.DSimp.instInhabitedConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1196-L1196","name":"Lean.Meta.DSimp.instInhabitedConfig","docLink":"./Init/Meta.html#Lean.Meta.DSimp.instInhabitedConfig","doc":""},"Lean.Meta.DSimp.instBEqConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1196-L1196","name":"Lean.Meta.DSimp.instBEqConfig","docLink":"./Init/Meta.html#Lean.Meta.DSimp.instBEqConfig","doc":""},"Lean.Meta.DSimp.Config":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1187-L1196","name":"Lean.Meta.DSimp.Config","docLink":"./Init/Meta.html#Lean.Meta.DSimp.Config","doc":""},"Lean.Meta.CustomEliminators":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L93-L95","name":"Lean.Meta.CustomEliminators","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.CustomEliminators","doc":""},"Lean.Meta.CustomEliminator":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/ElimInfo.lean#L88-L91","name":"Lean.Meta.CustomEliminator","docLink":"./Lean/Meta/Tactic/ElimInfo.html#Lean.Meta.CustomEliminator","doc":""},"Lean.Meta.Contradiction.Config":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Contradiction.lean#L13-L24","name":"Lean.Meta.Contradiction.Config","docLink":"./Lean/Meta/Tactic/Contradiction.html#Lean.Meta.Contradiction.Config","doc":""},"Lean.Meta.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L288-L306","name":"Lean.Meta.Context","docLink":"./Lean/Meta/Basic.html#Lean.Meta.Context","doc":"Contextual information for the `MetaM` monad.\n"},"Lean.Meta.CongrTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L35-L38","name":"Lean.Meta.CongrTheorem","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrTheorem","doc":""},"Lean.Meta.CongrArgKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CongrTheorems.lean#L10-L33","name":"Lean.Meta.CongrArgKind","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrArgKind","doc":""},"Lean.Meta.Config":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L49-L120","name":"Lean.Meta.Config","docLink":"./Lean/Meta/Basic.html#Lean.Meta.Config","doc":"Configuration flags for the `MetaM` monad.\nMany of them are used to control the `isDefEq` function that checks whether two terms are definitionally equal or not.\nRecall that when `isDefEq` is trying to check whether\n`?m@C a₁ ... aₙ` and `t` are definitionally equal (`?m@C a₁ ... aₙ =?= t`), where\n`?m@C` as a shorthand for `C |- ?m : t` where `t` is the type of `?m`.\nWe solve it using the assignment `?m := fun a₁ ... aₙ => t` if\n1) `a₁ ... aₙ` are pairwise distinct free variables that are ​*not*​ let-variables.\n2) `a₁ ... aₙ` are not in `C`\n3) `t` only contains free variables in `C` and/or `{a₁, ..., aₙ}`\n4) For every metavariable `?m'@C'` occurring in `t`, `C'` is a subprefix of `C`\n5) `?m` does not occur in `t`\n"},"Lean.Meta.Closure.visitLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L124-L134","name":"Lean.Meta.Closure.visitLevel","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.visitLevel","doc":""},"Lean.Meta.Closure.visitExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L136-L146","name":"Lean.Meta.Closure.visitExpr","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.visitExpr","doc":""},"Lean.Meta.Closure.pushToProcess":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L185-L186","name":"Lean.Meta.Closure.pushToProcess","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.pushToProcess","doc":""},"Lean.Meta.Closure.pushLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L249-L251","name":"Lean.Meta.Closure.pushLocalDecl","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.pushLocalDecl","doc":""},"Lean.Meta.Closure.pushFVarArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L246-L247","name":"Lean.Meta.Closure.pushFVarArg","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.pushFVarArg","doc":""},"Lean.Meta.Closure.process":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L253-L283","name":"Lean.Meta.Closure.process","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.process","doc":""},"Lean.Meta.Closure.preprocess":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L166-L173","name":"Lean.Meta.Closure.preprocess","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.preprocess","doc":""},"Lean.Meta.Closure.pickNextToProcessAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L223-L232","name":"Lean.Meta.Closure.pickNextToProcessAux","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.pickNextToProcessAux","doc":""},"Lean.Meta.Closure.pickNextToProcess?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L234-L244","name":"Lean.Meta.Closure.pickNextToProcess?","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.pickNextToProcess?","doc":""},"Lean.Meta.Closure.mkValueTypeClosureAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L318-L324","name":"Lean.Meta.Closure.mkValueTypeClosureAux","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkValueTypeClosureAux","doc":""},"Lean.Meta.Closure.mkValueTypeClosure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L326-L338","name":"Lean.Meta.Closure.mkValueTypeClosure","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkValueTypeClosure","doc":""},"Lean.Meta.Closure.mkNextUserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L179-L183","name":"Lean.Meta.Closure.mkNextUserName","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkNextUserName","doc":"Remark: This method does not guarantee unique user names.\nThe correctness of the procedure does not rely on unique user names.\nRecall that the pretty printer takes care of unintended collisions. "},"Lean.Meta.Closure.mkNewLevelParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L148-L152","name":"Lean.Meta.Closure.mkNewLevelParam","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkNewLevelParam","doc":""},"Lean.Meta.Closure.mkLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L305-L306","name":"Lean.Meta.Closure.mkLambda","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkLambda","doc":""},"Lean.Meta.Closure.mkForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L308-L309","name":"Lean.Meta.Closure.mkForall","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkForall","doc":""},"Lean.Meta.Closure.mkBinding":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L285-L303","name":"Lean.Meta.Closure.mkBinding","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.mkBinding","doc":""},"Lean.Meta.Closure.instInhabitedToProcessElement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L103-L103","name":"Lean.Meta.Closure.instInhabitedToProcessElement","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.instInhabitedToProcessElement","doc":""},"Lean.Meta.Closure.collectLevelAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L154-L160","name":"Lean.Meta.Closure.collectLevelAux","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.collectLevelAux","doc":""},"Lean.Meta.Closure.collectLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L162-L164","name":"Lean.Meta.Closure.collectLevel","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.collectLevel","doc":""},"Lean.Meta.Closure.collectExprAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L188-L217","name":"Lean.Meta.Closure.collectExprAux","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.collectExprAux","doc":""},"Lean.Meta.Closure.collectExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L219-L221","name":"Lean.Meta.Closure.collectExpr","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.collectExpr","doc":""},"Lean.Meta.Closure.ToProcessElement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L100-L103","name":"Lean.Meta.Closure.ToProcessElement","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.ToProcessElement","doc":""},"Lean.Meta.Closure.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L108-L120","name":"Lean.Meta.Closure.State","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.State","doc":""},"Lean.Meta.Closure.MkValueTypeClosureResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L311-L316","name":"Lean.Meta.Closure.MkValueTypeClosureResult","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.MkValueTypeClosureResult","doc":""},"Lean.Meta.Closure.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L105-L106","name":"Lean.Meta.Closure.Context","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.Context","doc":""},"Lean.Meta.Closure.ClosureM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Closure.lean#L122-L122","name":"Lean.Meta.Closure.ClosureM","docLink":"./Lean/Meta/Closure.html#Lean.Meta.Closure.ClosureM","doc":""},"Lean.Meta.CheckAssignmentQuick.check.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L827-L858","name":"Lean.Meta.CheckAssignmentQuick.check.visit","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignmentQuick.check.visit","doc":""},"Lean.Meta.CheckAssignmentQuick.check":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L824-L859","name":"Lean.Meta.CheckAssignmentQuick.check","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignmentQuick.check","doc":""},"Lean.Meta.CheckAssignment.throwOutOfScopeFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L637-L638","name":"Lean.Meta.CheckAssignment.throwOutOfScopeFVar","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.throwOutOfScopeFVar","doc":""},"Lean.Meta.CheckAssignment.throwCheckAssignmentFailure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L634-L635","name":"Lean.Meta.CheckAssignment.throwCheckAssignmentFailure","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.throwCheckAssignmentFailure","doc":""},"Lean.Meta.CheckAssignment.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L657-L664","name":"Lean.Meta.CheckAssignment.run","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.run","doc":""},"Lean.Meta.CheckAssignment.outOfScopeExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L620-L620","name":"Lean.Meta.CheckAssignment.outOfScopeExceptionId","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.outOfScopeExceptionId","doc":""},"Lean.Meta.CheckAssignment.instMonadCacheExprCheckAssignmentM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L646-L648","name":"Lean.Meta.CheckAssignment.instMonadCacheExprCheckAssignmentM","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.instMonadCacheExprCheckAssignmentM","doc":""},"Lean.Meta.CheckAssignment.checkMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L683-L740","name":"Lean.Meta.CheckAssignment.checkMVar","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.checkMVar","doc":""},"Lean.Meta.CheckAssignment.checkFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L668-L681","name":"Lean.Meta.CheckAssignment.checkFVar","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.checkFVar","doc":""},"Lean.Meta.CheckAssignment.checkAssignmentExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L619-L619","name":"Lean.Meta.CheckAssignment.checkAssignmentExceptionId","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.checkAssignmentExceptionId","doc":""},"Lean.Meta.CheckAssignment.checkAssignmentAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L759-L760","name":"Lean.Meta.CheckAssignment.checkAssignmentAux","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.checkAssignmentAux","doc":""},"Lean.Meta.CheckAssignment.checkApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L762-L790","name":"Lean.Meta.CheckAssignment.checkApp","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.checkApp","doc":""},"Lean.Meta.CheckAssignment.check":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L792-L806","name":"Lean.Meta.CheckAssignment.check","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.check","doc":""},"Lean.Meta.CheckAssignment.assignToConstFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L748-L756","name":"Lean.Meta.CheckAssignment.assignToConstFun","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.assignToConstFun","doc":"Auxiliary function used to \"fix\" subterms of the form `?m x_1 ... x_n` where `x_i`s are free variables,\nand one of them is out-of-scope.\nSee `Expr.app` case at `check`.\nIf `ctxApprox` is true, then we solve this case by creating a fresh metavariable ?n with the correct scope,\nan assigning `?m := fun _ ... _ => ?n` "},"Lean.Meta.CheckAssignment.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L622-L623","name":"Lean.Meta.CheckAssignment.State","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.State","doc":""},"Lean.Meta.CheckAssignment.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L625-L630","name":"Lean.Meta.CheckAssignment.Context","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.Context","doc":""},"Lean.Meta.CheckAssignment.CheckAssignmentM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprDefEq.lean#L632-L632","name":"Lean.Meta.CheckAssignment.CheckAssignmentM","docLink":"./Lean/Meta/ExprDefEq.html#Lean.Meta.CheckAssignment.CheckAssignmentM","doc":""},"Lean.Meta.CasesSubgoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L124-L125","name":"Lean.Meta.CasesSubgoal","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.Meta.CasesSubgoal","doc":""},"Lean.Meta.CasesOnApp.toExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CasesOn.lean#L47-L48","name":"Lean.Meta.CasesOnApp.toExpr","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.toExpr","doc":"Convert `c` back to `Expr` "},"Lean.Meta.CasesOnApp.addArg?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CasesOn.lean#L110-L114","name":"Lean.Meta.CasesOnApp.addArg?","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.addArg?","doc":"Similar `CasesOnApp.addArg`, but returns `none` on failure. "},"Lean.Meta.CasesOnApp.addArg.updateAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CasesOn.lean#L84-L107","name":"Lean.Meta.CasesOnApp.addArg.updateAlts","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.addArg.updateAlts","doc":""},"Lean.Meta.CasesOnApp.addArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CasesOn.lean#L61-L107","name":"Lean.Meta.CasesOnApp.addArg","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.addArg","doc":"Given a `casesOn` application `c` of the form\n```\ncasesOn As (fun is x => motive[i, xs]) is major  (fun ys_1 => (alt_1 : motive (C_1[ys_1])) ... (fun ys_n => (alt_n : motive (C_n[ys_n]) remaining\n```\nand an expression `e : B[is, major]`, construct the term\n```\ncasesOn As (fun is x => B[is, x] → motive[i, xs]) is major (fun ys_1 (y : B[C_1[ys_1]]) => (alt_1 : motive (C_1[ys_1])) ... (fun ys_n (y : B[C_n[ys_n]]) => (alt_n : motive (C_n[ys_n]) e remaining\n```\nWe use `kabstract` to abstract the `is` and `major` from `B[is, major]`.\n"},"Lean.Meta.CasesOnApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CasesOn.lean#L11-L22","name":"Lean.Meta.CasesOnApp","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp","doc":""},"Lean.Meta.Cases.unifyEqs?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L202-L210","name":"Lean.Meta.Cases.unifyEqs?","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.Meta.Cases.unifyEqs?","doc":""},"Lean.Meta.Cases.cases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L232-L253","name":"Lean.Meta.Cases.cases","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.Meta.Cases.cases","doc":""},"Lean.Meta.Cases.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L129-L136","name":"Lean.Meta.Cases.Context","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.Meta.Cases.Context","doc":""},"Lean.Meta.CaseValuesSubgoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/CaseValues.lean#L61-L65","name":"Lean.Meta.CaseValuesSubgoal","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValuesSubgoal","doc":""},"Lean.Meta.CaseValueSubgoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/CaseValues.lean#L12-L16","name":"Lean.Meta.CaseValueSubgoal","docLink":"./Lean/Meta/Match/CaseValues.html#Lean.Meta.CaseValueSubgoal","doc":""},"Lean.Meta.CaseArraySizesSubgoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Match/CaseArraySizes.lean#L11-L16","name":"Lean.Meta.CaseArraySizesSubgoal","docLink":"./Lean/Meta/Match/CaseArraySizes.html#Lean.Meta.CaseArraySizesSubgoal","doc":""},"Lean.Meta.Cache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L232-L239","name":"Lean.Meta.Cache","docLink":"./Lean/Meta/Basic.html#Lean.Meta.Cache","doc":"Cache datastructures for type inference, type class resolution, whnf, and definitional equality.\n"},"Lean.Meta.ByCasesSubgoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L300-L302","name":"Lean.Meta.ByCasesSubgoal","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.Meta.ByCasesSubgoal","doc":"Auxiliary structure for storing `byCases` tactic result. "},"Lean.Meta.AuxLemmas":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AuxLemma.lean#L10-L13","name":"Lean.Meta.AuxLemmas","docLink":"./Lean/Meta/Tactic/AuxLemma.html#Lean.Meta.AuxLemmas","doc":""},"Lean.Meta.Attribute.Recursor.getMajorPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/RecursorInfo.lean#L243-L250","name":"Lean.Meta.Attribute.Recursor.getMajorPos","docLink":"./Lean/Meta/RecursorInfo.html#Lean.Meta.Attribute.Recursor.getMajorPos","doc":""},"Lean.Meta.AssertAfterResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assert.lean#L67-L70","name":"Lean.Meta.AssertAfterResult","docLink":"./Lean/Meta/Tactic/Assert.html#Lean.Meta.AssertAfterResult","doc":""},"Lean.Meta.ApplyNewGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L79-L80","name":"Lean.Meta.ApplyNewGoals","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.Meta.ApplyNewGoals","doc":"Controls which new mvars are turned in to goals by the `apply` tactic.\n- `nonDependentFirst`  mvars that don't depend on other goals appear first in the goal list.\n- `nonDependentOnly` only mvars that don't depend on other goals are added to goal list.\n- `all` all unassigned mvars are added to the goal list.\n"},"Lean.Meta.ApplyConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L92-L93","name":"Lean.Meta.ApplyConfig","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.Meta.ApplyConfig","doc":"Configures the behaviour of the `apply` tactic. "},"Lean.Meta.AltVarNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Induction.lean#L50-L53","name":"Lean.Meta.AltVarNames","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames","doc":""},"Lean.Meta.AbstractNestedProofs.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractNestedProofs.lean#L36-L63","name":"Lean.Meta.AbstractNestedProofs.visit","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.visit","doc":""},"Lean.Meta.AbstractNestedProofs.isNonTrivialProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractNestedProofs.lean#L11-L16","name":"Lean.Meta.AbstractNestedProofs.isNonTrivialProof","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.isNonTrivialProof","doc":""},"Lean.Meta.AbstractNestedProofs.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractNestedProofs.lean#L21-L22","name":"Lean.Meta.AbstractNestedProofs.State","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State","doc":""},"Lean.Meta.AbstractNestedProofs.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractNestedProofs.lean#L24-L24","name":"Lean.Meta.AbstractNestedProofs.M","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.M","doc":""},"Lean.Meta.AbstractNestedProofs.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractNestedProofs.lean#L18-L19","name":"Lean.Meta.AbstractNestedProofs.Context","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context","doc":""},"Lean.Meta.AbstractMVarsResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractMVars.lean#L10-L14","name":"Lean.Meta.AbstractMVarsResult","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVarsResult","doc":""},"Lean.Meta.AbstractMVars.mkFreshId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractMVars.lean#L36-L40","name":"Lean.Meta.AbstractMVars.mkFreshId","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.mkFreshId","doc":""},"Lean.Meta.AbstractMVars.mkFreshFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractMVars.lean#L42-L43","name":"Lean.Meta.AbstractMVars.mkFreshFVarId","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.mkFreshFVarId","doc":""},"Lean.Meta.AbstractMVars.instMonadMCtxM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractMVars.lean#L32-L34","name":"Lean.Meta.AbstractMVars.instMonadMCtxM","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.instMonadMCtxM","doc":""},"Lean.Meta.AbstractMVars.abstractExprMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractMVars.lean#L69-L107","name":"Lean.Meta.AbstractMVars.abstractExprMVars","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.abstractExprMVars","doc":""},"Lean.Meta.AbstractMVars.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractMVars.lean#L20-L28","name":"Lean.Meta.AbstractMVars.State","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.State","doc":""},"Lean.Meta.AbstractMVars.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/AbstractMVars.lean#L30-L30","name":"Lean.Meta.AbstractMVars.M","docLink":"./Lean/Meta/AbstractMVars.html#Lean.Meta.AbstractMVars.M","doc":""},"Lean.Meta.ACLt.lt.someChildGe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ACLt.lean#L133-L134","name":"Lean.Meta.ACLt.lt.someChildGe","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt.someChildGe","doc":""},"Lean.Meta.ACLt.lt.ltPair":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ACLt.lean#L57-L63","name":"Lean.Meta.ACLt.lt.ltPair","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt.ltPair","doc":""},"Lean.Meta.ACLt.lt.ltApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ACLt.lean#L65-L93","name":"Lean.Meta.ACLt.lt.ltApp","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt.ltApp","doc":""},"Lean.Meta.ACLt.lt.lpo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ACLt.lean#L136-L151","name":"Lean.Meta.ACLt.lt.lpo","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt.lpo","doc":""},"Lean.Meta.ACLt.lt.lexSameCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ACLt.lean#L95-L111","name":"Lean.Meta.ACLt.lt.lexSameCtor","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt.lexSameCtor","doc":""},"Lean.Meta.ACLt.lt.allChildrenLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ACLt.lean#L113-L131","name":"Lean.Meta.ACLt.lt.allChildrenLt","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt.allChildrenLt","doc":""},"Lean.Meta.ACLt.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ACLt.lean#L46-L151","name":"Lean.Meta.ACLt.lt","docLink":"./Lean/Meta/ACLt.html#Lean.Meta.ACLt.lt","doc":"An AC-compatible ordering.\n\n  Recall that an AC-compatible ordering if it is monotonic, well-founded, and total.\n  Both KBO and LPO are AC-compatible. KBO is faster, but we do not cache the weight of\n  each expression in Lean 4. Even if we did, we would need to have a weight where implicit instace arguments are ignored.\n  So, we use a LPO-like term ordering.\n\n  Remark: this method is used to implement ordered rewriting. We ignore implicit instance\n  arguments to address an issue reported at issue #972.\n\n  Remark: the order is not really total on terms since\n   - We instance implicit arguments.\n   - We ignore metadata.\n   - We ignore universe parameterst at constants.\n"},"Lean.Meta.AC.toACExpr.toPreExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L73-L81","name":"Lean.Meta.AC.toACExpr.toPreExpr","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.toACExpr.toPreExpr","doc":""},"Lean.Meta.AC.toACExpr.toACExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L83-L85","name":"Lean.Meta.AC.toACExpr.toACExpr","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.toACExpr.toACExpr","doc":""},"Lean.Meta.AC.toACExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L64-L85","name":"Lean.Meta.AC.toACExpr","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.toACExpr","doc":""},"Lean.Meta.AC.rewriteUnnormalized.post":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L153-L170","name":"Lean.Meta.AC.rewriteUnnormalized.post","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.rewriteUnnormalized.post","doc":""},"Lean.Meta.AC.rewriteUnnormalized":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L141-L170","name":"Lean.Meta.AC.rewriteUnnormalized","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.rewriteUnnormalized","doc":""},"Lean.Meta.AC.preContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L46-L55","name":"Lean.Meta.AC.preContext","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.preContext","doc":""},"Lean.Meta.AC.instInhabitedPreContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L24-L24","name":"Lean.Meta.AC.instInhabitedPreContext","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.instInhabitedPreContext","doc":""},"Lean.Meta.AC.instEvalInformationPreContextACExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L31-L34","name":"Lean.Meta.AC.instEvalInformationPreContextACExpr","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.instEvalInformationPreContextACExpr","doc":""},"Lean.Meta.AC.instContextInformationProdPreContextArrayBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L26-L29","name":"Lean.Meta.AC.instContextInformationProdPreContextArrayBool","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.instContextInformationProdPreContextArrayBool","doc":""},"Lean.Meta.AC.getInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L36-L44","name":"Lean.Meta.AC.getInstance","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.getInstance","doc":""},"Lean.Meta.AC.buildNormProof.mkContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L100-L131","name":"Lean.Meta.AC.buildNormProof.mkContext","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.buildNormProof.mkContext","doc":""},"Lean.Meta.AC.buildNormProof.convertTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L137-L139","name":"Lean.Meta.AC.buildNormProof.convertTarget","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.buildNormProof.convertTarget","doc":""},"Lean.Meta.AC.buildNormProof.convert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L133-L135","name":"Lean.Meta.AC.buildNormProof.convert","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.buildNormProof.convert","doc":""},"Lean.Meta.AC.buildNormProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L87-L139","name":"Lean.Meta.AC.buildNormProof","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.buildNormProof","doc":""},"Lean.Meta.AC.bin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L61-L62","name":"Lean.Meta.AC.bin","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.bin","doc":""},"Lean.Meta.AC.acRflTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L172-L174","name":"Lean.Meta.AC.acRflTactic","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.acRflTactic","doc":""},"Lean.Meta.AC.PreExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L57-L59","name":"Lean.Meta.AC.PreExpr","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreExpr","doc":""},"Lean.Meta.AC.PreContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L18-L24","name":"Lean.Meta.AC.PreContext","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.PreContext","doc":""},"Lean.Meta.AC.ACExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/AC/Main.lean#L16-L16","name":"Lean.Meta.AC.ACExpr","docLink":"./Lean/Meta/Tactic/AC/Main.html#Lean.Meta.AC.ACExpr","doc":""},"Lean.MessageSeverity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L23-L25","name":"Lean.MessageSeverity","docLink":"./Lean/Message.html#Lean.MessageSeverity","doc":""},"Lean.MessageLog.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L247-L248","name":"Lean.MessageLog.toList","docLink":"./Lean/Message.html#Lean.MessageLog.toList","doc":""},"Lean.MessageLog.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L221-L222","name":"Lean.MessageLog.isEmpty","docLink":"./Lean/Message.html#Lean.MessageLog.isEmpty","doc":""},"Lean.MessageLog.instAppendMessageLog":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L230-L231","name":"Lean.MessageLog.instAppendMessageLog","docLink":"./Lean/Message.html#Lean.MessageLog.instAppendMessageLog","doc":""},"Lean.MessageLog.hasErrors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L233-L236","name":"Lean.MessageLog.hasErrors","docLink":"./Lean/Message.html#Lean.MessageLog.hasErrors","doc":""},"Lean.MessageLog.getInfoMessages":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L241-L242","name":"Lean.MessageLog.getInfoMessages","docLink":"./Lean/Message.html#Lean.MessageLog.getInfoMessages","doc":""},"Lean.MessageLog.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L244-L245","name":"Lean.MessageLog.forM","docLink":"./Lean/Message.html#Lean.MessageLog.forM","doc":""},"Lean.MessageLog.errorsToWarnings":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L238-L239","name":"Lean.MessageLog.errorsToWarnings","docLink":"./Lean/Message.html#Lean.MessageLog.errorsToWarnings","doc":""},"Lean.MessageLog.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L219-L219","name":"Lean.MessageLog.empty","docLink":"./Lean/Message.html#Lean.MessageLog.empty","doc":""},"Lean.MessageLog.append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L227-L228","name":"Lean.MessageLog.append","docLink":"./Lean/Message.html#Lean.MessageLog.append","doc":""},"Lean.MessageLog.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L224-L225","name":"Lean.MessageLog.add","docLink":"./Lean/Message.html#Lean.MessageLog.add","doc":""},"Lean.MessageLog":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L214-L216","name":"Lean.MessageLog","docLink":"./Lean/Message.html#Lean.MessageLog","doc":""},"Lean.MessageDataContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L27-L31","name":"Lean.MessageDataContext","docLink":"./Lean/Message.html#Lean.MessageDataContext","doc":""},"Lean.MessageData.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L146-L147","name":"Lean.MessageData.toString","docLink":"./Lean/Message.html#Lean.MessageData.toString","doc":""},"Lean.MessageData.sbracket":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L172-L172","name":"Lean.MessageData.sbracket","docLink":"./Lean/Message.html#Lean.MessageData.sbracket","doc":""},"Lean.MessageData.paren":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L171-L171","name":"Lean.MessageData.paren","docLink":"./Lean/Message.html#Lean.MessageData.paren","doc":""},"Lean.MessageData.ofList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L177-L179","name":"Lean.MessageData.ofList","docLink":"./Lean/Message.html#Lean.MessageData.ofList","doc":""},"Lean.MessageData.ofArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L180-L181","name":"Lean.MessageData.ofArray","docLink":"./Lean/Message.html#Lean.MessageData.ofArray","doc":""},"Lean.MessageData.nil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L102-L103","name":"Lean.MessageData.nil","docLink":"./Lean/Message.html#Lean.MessageData.nil","doc":""},"Lean.MessageData.nestD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L252-L253","name":"Lean.MessageData.nestD","docLink":"./Lean/Message.html#Lean.MessageData.nestD","doc":""},"Lean.MessageData.mkPPContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L113-L116","name":"Lean.MessageData.mkPPContext","docLink":"./Lean/Message.html#Lean.MessageData.mkPPContext","doc":""},"Lean.MessageData.joinSep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L173-L176","name":"Lean.MessageData.joinSep","docLink":"./Lean/Message.html#Lean.MessageData.joinSep","doc":""},"Lean.MessageData.isUnusedVariableWarning":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L257-L258","name":"Lean.MessageData.isUnusedVariableWarning","docLink":"./Lean/Linter/UnusedVariables.html#Lean.MessageData.isUnusedVariableWarning","doc":""},"Lean.MessageData.isNil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L105-L107","name":"Lean.MessageData.isNil","docLink":"./Lean/Message.html#Lean.MessageData.isNil","doc":""},"Lean.MessageData.isNest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L109-L111","name":"Lean.MessageData.isNest","docLink":"./Lean/Message.html#Lean.MessageData.isNest","doc":""},"Lean.MessageData.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L62-L71","name":"Lean.MessageData.isEmpty","docLink":"./Lean/Message.html#Lean.MessageData.isEmpty","doc":""},"Lean.MessageData.isDeprecationWarning":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Deprecated.lean#L27-L28","name":"Lean.MessageData.isDeprecationWarning","docLink":"./Lean/Deprecated.html#Lean.MessageData.isDeprecationWarning","doc":""},"Lean.MessageData.instantiateMVars.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L79-L89","name":"Lean.MessageData.instantiateMVars.visit","docLink":"./Lean/Message.html#Lean.MessageData.instantiateMVars.visit","doc":""},"Lean.MessageData.instantiateMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L76-L89","name":"Lean.MessageData.instantiateMVars","docLink":"./Lean/Message.html#Lean.MessageData.instantiateMVars","doc":""},"Lean.MessageData.instCoeSyntaxMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L156-L156","name":"Lean.MessageData.instCoeSyntaxMessageData","docLink":"./Lean/Message.html#Lean.MessageData.instCoeSyntaxMessageData","doc":""},"Lean.MessageData.instCoeStringMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L151-L151","name":"Lean.MessageData.instCoeStringMessageData","docLink":"./Lean/Message.html#Lean.MessageData.instCoeStringMessageData","doc":""},"Lean.MessageData.instCoeOptionExprMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L158-L158","name":"Lean.MessageData.instCoeOptionExprMessageData","docLink":"./Lean/Message.html#Lean.MessageData.instCoeOptionExprMessageData","doc":""},"Lean.MessageData.instCoeNameMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L155-L155","name":"Lean.MessageData.instCoeNameMessageData","docLink":"./Lean/Message.html#Lean.MessageData.instCoeNameMessageData","doc":""},"Lean.MessageData.instCoeMVarIdMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L157-L157","name":"Lean.MessageData.instCoeMVarIdMessageData","docLink":"./Lean/Message.html#Lean.MessageData.instCoeMVarIdMessageData","doc":""},"Lean.MessageData.instCoeListMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L183-L183","name":"Lean.MessageData.instCoeListMessageData","docLink":"./Lean/Message.html#Lean.MessageData.instCoeListMessageData","doc":""},"Lean.MessageData.instCoeListExprMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L184-L184","name":"Lean.MessageData.instCoeListExprMessageData","docLink":"./Lean/Message.html#Lean.MessageData.instCoeListExprMessageData","doc":""},"Lean.MessageData.instCoeLevelMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L153-L153","name":"Lean.MessageData.instCoeLevelMessageData","docLink":"./Lean/Message.html#Lean.MessageData.instCoeLevelMessageData","doc":""},"Lean.MessageData.instCoeFormatMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L152-L152","name":"Lean.MessageData.instCoeFormatMessageData","docLink":"./Lean/Message.html#Lean.MessageData.instCoeFormatMessageData","doc":""},"Lean.MessageData.instCoeExprMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L154-L154","name":"Lean.MessageData.instCoeExprMessageData","docLink":"./Lean/Message.html#Lean.MessageData.instCoeExprMessageData","doc":""},"Lean.MessageData.instCoeArrayExprMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L168-L168","name":"Lean.MessageData.instCoeArrayExprMessageData","docLink":"./Lean/Message.html#Lean.MessageData.instCoeArrayExprMessageData","doc":""},"Lean.MessageData.instAppendMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L149-L149","name":"Lean.MessageData.instAppendMessageData","docLink":"./Lean/Message.html#Lean.MessageData.instAppendMessageData","doc":""},"Lean.MessageData.hasTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L92-L100","name":"Lean.MessageData.hasTag","docLink":"./Lean/Message.html#Lean.MessageData.hasTag","doc":""},"Lean.MessageData.hasSyntheticSorry.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Sorry.lean#L46-L55","name":"Lean.MessageData.hasSyntheticSorry.visit","docLink":"./Lean/Util/Sorry.html#Lean.MessageData.hasSyntheticSorry.visit","doc":""},"Lean.MessageData.hasSyntheticSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Sorry.lean#L43-L55","name":"Lean.MessageData.hasSyntheticSorry","docLink":"./Lean/Util/Sorry.html#Lean.MessageData.hasSyntheticSorry","doc":""},"Lean.MessageData.hasSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Sorry.lean#L33-L41","name":"Lean.MessageData.hasSorry","docLink":"./Lean/Util/Sorry.html#Lean.MessageData.hasSorry","doc":""},"Lean.MessageData.formatAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L118-L141","name":"Lean.MessageData.formatAux","docLink":"./Lean/Message.html#Lean.MessageData.formatAux","doc":""},"Lean.MessageData.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L143-L144","name":"Lean.MessageData.format","docLink":"./Lean/Message.html#Lean.MessageData.format","doc":""},"Lean.MessageData.bracket":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L170-L170","name":"Lean.MessageData.bracket","docLink":"./Lean/Message.html#Lean.MessageData.bracket","doc":""},"Lean.MessageData.arrayExpr.toMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L160-L166","name":"Lean.MessageData.arrayExpr.toMessageData","docLink":"./Lean/Message.html#Lean.MessageData.arrayExpr.toMessageData","doc":""},"Lean.MessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L38-L58","name":"Lean.MessageData","docLink":"./Lean/Message.html#Lean.MessageData","doc":""},"Lean.Message.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L199-L210","name":"Lean.Message.toString","docLink":"./Lean/Message.html#Lean.Message.toString","doc":""},"Lean.Message":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L188-L195","name":"Lean.Message","docLink":"./Lean/Message.html#Lean.Message","doc":""},"Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L528-L529","name":"Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","doc":""},"Lean.MapDeclarationExtension.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L531-L533","name":"Lean.MapDeclarationExtension.insert","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.insert","doc":""},"Lean.MapDeclarationExtension.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L535-L541","name":"Lean.MapDeclarationExtension.find?","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.find?","doc":""},"Lean.MapDeclarationExtension.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L543-L546","name":"Lean.MapDeclarationExtension.contains","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.contains","doc":""},"Lean.MapDeclarationExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L516-L516","name":"Lean.MapDeclarationExtension","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension","doc":"Environment extension for mapping declarations to values.\nDeclarations must only be inserted into the mapping in the module where they were declared. "},"Lean.MacroScopesView.review":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2825-L2830","name":"Lean.MacroScopesView.review","docLink":"./Init/Prelude.html#Lean.MacroScopesView.review","doc":""},"Lean.MacroScopesView.isSuffixOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L201-L205","name":"Lean.MacroScopesView.isSuffixOf","docLink":"./Lean/Data/Name.html#Lean.MacroScopesView.isSuffixOf","doc":""},"Lean.MacroScopesView.isPrefixOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Name.lean#L195-L199","name":"Lean.MacroScopesView.isPrefixOf","docLink":"./Lean/Data/Name.html#Lean.MacroScopesView.isPrefixOf","doc":""},"Lean.MacroScopesView.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L24-L31","name":"Lean.MacroScopesView.format","docLink":"./Lean/Elab/Util.html#Lean.MacroScopesView.format","doc":""},"Lean.MacroScopesView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2816-L2820","name":"Lean.MacroScopesView","docLink":"./Init/Prelude.html#Lean.MacroScopesView","doc":""},"Lean.MacroScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2704-L2704","name":"Lean.MacroScope","docLink":"./Init/Prelude.html#Lean.MacroScope","doc":""},"Lean.MacroM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2946-L2946","name":"Lean.MacroM","docLink":"./Init/Prelude.html#Lean.MacroM","doc":""},"Lean.Macro.withIncRecDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2974-L2978","name":"Lean.Macro.withIncRecDepth","docLink":"./Init/Prelude.html#Lean.Macro.withIncRecDepth","doc":""},"Lean.Macro.withFreshMacroScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2970-L2972","name":"Lean.Macro.withFreshMacroScope","docLink":"./Init/Prelude.html#Lean.Macro.withFreshMacroScope","doc":""},"Lean.Macro.trace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L3024-L3025","name":"Lean.Macro.trace","docLink":"./Init/Prelude.html#Lean.Macro.trace","doc":""},"Lean.Macro.throwUnsupported":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2960-L2961","name":"Lean.Macro.throwUnsupported","docLink":"./Init/Prelude.html#Lean.Macro.throwUnsupported","doc":""},"Lean.Macro.throwErrorAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2967-L2968","name":"Lean.Macro.throwErrorAt","docLink":"./Init/Prelude.html#Lean.Macro.throwErrorAt","doc":""},"Lean.Macro.throwError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2963-L2965","name":"Lean.Macro.throwError","docLink":"./Init/Prelude.html#Lean.Macro.throwError","doc":""},"Lean.Macro.resolveNamespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L3018-L3019","name":"Lean.Macro.resolveNamespace","docLink":"./Init/Prelude.html#Lean.Macro.resolveNamespace","doc":""},"Lean.Macro.resolveGlobalName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L3021-L3022","name":"Lean.Macro.resolveGlobalName","docLink":"./Init/Prelude.html#Lean.Macro.resolveGlobalName","doc":""},"Lean.Macro.mkMethodsImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2993-L2994","name":"Lean.Macro.mkMethodsImp","docLink":"./Init/Prelude.html#Lean.Macro.mkMethodsImp","doc":""},"Lean.Macro.mkMethods":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2997-L2997","name":"Lean.Macro.mkMethods","docLink":"./Init/Prelude.html#Lean.Macro.mkMethods","doc":""},"Lean.Macro.instNonemptyMethodsRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2925-L2925","name":"Lean.Macro.instNonemptyMethodsRef","docLink":"./Init/Prelude.html#Lean.Macro.instNonemptyMethodsRef","doc":""},"Lean.Macro.instMonadRefMacroM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2952-L2954","name":"Lean.Macro.instMonadRefMacroM","docLink":"./Init/Prelude.html#Lean.Macro.instMonadRefMacroM","doc":""},"Lean.Macro.instMonadQuotationMacroM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2980-L2983","name":"Lean.Macro.instMonadQuotationMacroM","docLink":"./Init/Prelude.html#Lean.Macro.instMonadQuotationMacroM","doc":""},"Lean.Macro.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2942-L2942","name":"Lean.Macro.instInhabitedState","docLink":"./Init/Prelude.html#Lean.Macro.instInhabitedState","doc":""},"Lean.Macro.instInhabitedMethodsRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2999-L3000","name":"Lean.Macro.instInhabitedMethodsRef","docLink":"./Init/Prelude.html#Lean.Macro.instInhabitedMethodsRef","doc":""},"Lean.Macro.instInhabitedMethods":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2991-L2991","name":"Lean.Macro.instInhabitedMethods","docLink":"./Init/Prelude.html#Lean.Macro.instInhabitedMethods","doc":""},"Lean.Macro.hasDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L3012-L3013","name":"Lean.Macro.hasDecl","docLink":"./Init/Prelude.html#Lean.Macro.hasDecl","doc":"Return `true` if the environment contains a declaration with name `declName` "},"Lean.Macro.getMethodsImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L3002-L3003","name":"Lean.Macro.getMethodsImp","docLink":"./Init/Prelude.html#Lean.Macro.getMethodsImp","doc":""},"Lean.Macro.getMethods":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L3005-L3005","name":"Lean.Macro.getMethods","docLink":"./Init/Prelude.html#Lean.Macro.getMethods","doc":""},"Lean.Macro.getCurrNamespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L3015-L3016","name":"Lean.Macro.getCurrNamespace","docLink":"./Init/Prelude.html#Lean.Macro.getCurrNamespace","doc":""},"Lean.Macro.expandMacro?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L3008-L3009","name":"Lean.Macro.expandMacro?","docLink":"./Init/Prelude.html#Lean.Macro.expandMacro?","doc":"`expandMacro? stx` return `some stxNew` if `stx` is a macro, and `stxNew` is its expansion. "},"Lean.Macro.addMacroScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2956-L2958","name":"Lean.Macro.addMacroScope","docLink":"./Init/Prelude.html#Lean.Macro.addMacroScope","doc":""},"Lean.Macro.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2939-L2942","name":"Lean.Macro.State","docLink":"./Init/Prelude.html#Lean.Macro.State","doc":""},"Lean.Macro.Methods":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2985-L2991","name":"Lean.Macro.Methods","docLink":"./Init/Prelude.html#Lean.Macro.Methods","doc":""},"Lean.Macro.Exception":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2935-L2937","name":"Lean.Macro.Exception","docLink":"./Init/Prelude.html#Lean.Macro.Exception","doc":""},"Lean.Macro.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2927-L2933","name":"Lean.Macro.Context","docLink":"./Init/Prelude.html#Lean.Macro.Context","doc":""},"Lean.Macro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2948-L2948","name":"Lean.Macro","docLink":"./Init/Prelude.html#Lean.Macro","doc":""},"Lean.MVarIdSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L279-L280","name":"Lean.MVarIdSet","docLink":"./Lean/Expr.html#Lean.MVarIdSet","doc":""},"Lean.MVarIdMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L284-L284","name":"Lean.MVarIdMap","docLink":"./Lean/Expr.html#Lean.MVarIdMap","doc":""},"Lean.MVarId.withContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L1368-L1369","name":"Lean.MVarId.withContext","docLink":"./Lean/Meta/Basic.html#Lean.MVarId.withContext","doc":"Execute `x` using the given metavariable `LocalContext` and `LocalInstances`.\nThe type class resolution cache is flushed when executing `x` if its `LocalInstances` are\ndifferent from the current ones. "},"Lean.MVarId.tryClearMany":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Clear.lean#L55-L56","name":"Lean.MVarId.tryClearMany","docLink":"./Lean/Meta/Tactic/Clear.html#Lean.MVarId.tryClearMany","doc":"Try to erase the given free variables from the goal `mvarId`.\n"},"Lean.MVarId.tryClear":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Clear.lean#L45-L46","name":"Lean.MVarId.tryClear","docLink":"./Lean/Meta/Tactic/Clear.html#Lean.MVarId.tryClear","doc":"Try to erase the given free variable from the goal `mvarId`. It is no-op if the free variable\ncannot be erased due to forward dependencies.\n"},"Lean.MVarId.substEqs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L293-L297","name":"Lean.MVarId.substEqs","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.MVarId.substEqs","doc":"Applies `cases` to any hypothesis of the form `h : r = s`.\n"},"Lean.MVarId.splitAnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L150-L151","name":"Lean.MVarId.splitAnd","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.MVarId.splitAnd","doc":"Apply `And.intro` as much as possible to goal `mvarId`.\n"},"Lean.MVarId.setUserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L640-L641","name":"Lean.MVarId.setUserName","docLink":"./Lean/Meta/Basic.html#Lean.MVarId.setUserName","doc":"Set the user-facing name for the given metavariable.\n"},"Lean.MVarId.setType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L578-L579","name":"Lean.MVarId.setType","docLink":"./Lean/Meta/Basic.html#Lean.MVarId.setType","doc":"Update the type of the given metavariable. This function assumes the new type is\ndefinitionally equal to the current one "},"Lean.MVarId.setTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L21-L22","name":"Lean.MVarId.setTag","docLink":"./Lean/Meta/Tactic/Util.html#Lean.MVarId.setTag","doc":""},"Lean.MVarId.setKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L569-L570","name":"Lean.MVarId.setKind","docLink":"./Lean/Meta/Basic.html#Lean.MVarId.setKind","doc":"Set `mvarId` kind in the current metavariable context.\n"},"Lean.MVarId.rewrite":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Rewrite.lean#L22-L68","name":"Lean.MVarId.rewrite","docLink":"./Lean/Meta/Tactic/Rewrite.html#Lean.MVarId.rewrite","doc":"Rewrite goal `mvarId`\n"},"Lean.MVarId.revert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Revert.lean#L13-L44","name":"Lean.MVarId.revert","docLink":"./Lean/Meta/Tactic/Revert.html#Lean.MVarId.revert","doc":"Revert free variables `fvarIds` at goal `mvarId`.\n"},"Lean.MVarId.replaceTargetEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L20-L31","name":"Lean.MVarId.replaceTargetEq","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.MVarId.replaceTargetEq","doc":"Convert the given goal `Ctx |- target` into `Ctx |- targetNew` using an equality proof `eqProof : target = targetNew`.\nIt assumes `eqProof` has type `target = targetNew` "},"Lean.MVarId.replaceTargetDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L44-L55","name":"Lean.MVarId.replaceTargetDefEq","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.MVarId.replaceTargetDefEq","doc":"Convert the given goal `Ctx | target` into `Ctx |- targetNew`. It assumes the goals are definitionally equal.\nWe use the proof term\n```\n@id target mvarNew\n```\nto create a checkpoint. "},"Lean.MVarId.replaceLocalDeclDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L100-L109","name":"Lean.MVarId.replaceLocalDeclDefEq","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.MVarId.replaceLocalDeclDefEq","doc":"Replace the type of `fvarId` at `mvarId` with `typeNew`.\nRemark: this method assumes that `typeNew` is definitionally equal to the current type of `fvarId`.\n"},"Lean.MVarId.replaceLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L89-L90","name":"Lean.MVarId.replaceLocalDecl","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.MVarId.replaceLocalDecl","doc":"Replace type of the local declaration with id `fvarId` with one with the same user-facing name, but with type `typeNew`.\nThis method assumes `eqProof` is a proof that type of `fvarId` is equal to `typeNew`.\nThis tactic actually adds a new declaration and (try to) clear the old one.\nIf the old one cannot be cleared, then at least its user-facing name becomes inaccessible.\nRemark: the new declaration is added immediately after `fvarId`.\n`typeNew` must be well-formed at `fvarId`, but `eqProof` may contain variables declared after `fvarId`. "},"Lean.MVarId.rename":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Rename.lean#L13-L18","name":"Lean.MVarId.rename","docLink":"./Lean/Meta/Tactic/Rename.html#Lean.MVarId.rename","doc":"Rename the user-face naming for the free variable `fvarId` at `mvarId`.\n"},"Lean.MVarId.refl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Refl.lean#L21-L37","name":"Lean.MVarId.refl","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.refl","doc":"Close given goal using `Eq.refl`.\n"},"Lean.MVarId.modifyTargetEqLHS":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L175-L180","name":"Lean.MVarId.modifyTargetEqLHS","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.MVarId.modifyTargetEqLHS","doc":"Modify `mvarId` target type left-hand-side using `f`.\nThrow an error if target type is not an equality.\n"},"Lean.MVarId.modifyTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L162-L165","name":"Lean.MVarId.modifyTarget","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.MVarId.modifyTarget","doc":"Modify `mvarId` target type using `f`.\n"},"Lean.MVarId.isReadOnlyOrSyntheticOpaque":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L601-L605","name":"Lean.MVarId.isReadOnlyOrSyntheticOpaque","docLink":"./Lean/Meta/Basic.html#Lean.MVarId.isReadOnlyOrSyntheticOpaque","doc":"Return true if `mvarId.isReadOnly` return true or if `mvarId` is a synthetic opaque metavariable.\n\nRecall `isDefEq` will not assign a value to `mvarId` if `mvarId.isReadOnlyOrSyntheticOpaque`.\n"},"Lean.MVarId.isReadOnly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L589-L590","name":"Lean.MVarId.isReadOnly","docLink":"./Lean/Meta/Basic.html#Lean.MVarId.isReadOnly","doc":"Return true if the given metavariable is \"read-only\".\nThat is, its `depth` is different from the current metavariable context depth.\n"},"Lean.MVarId.isDelayedAssigned":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L354-L355","name":"Lean.MVarId.isDelayedAssigned","docLink":"./Lean/MetavarContext.html#Lean.MVarId.isDelayedAssigned","doc":""},"Lean.MVarId.isAssigned":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L347-L348","name":"Lean.MVarId.isAssigned","docLink":"./Lean/MetavarContext.html#Lean.MVarId.isAssigned","doc":"Return `true` if the give metavariable is already assigned. "},"Lean.MVarId.isAssignable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L372-L375","name":"Lean.MVarId.isAssignable","docLink":"./Lean/MetavarContext.html#Lean.MVarId.isAssignable","doc":""},"Lean.MVarId.intros":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L182-L189","name":"Lean.MVarId.intros","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.MVarId.intros","doc":"Introduce as many binders as possible without unfolding definitions.\n"},"Lean.MVarId.introNP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L129-L130","name":"Lean.MVarId.introNP","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.MVarId.introNP","doc":"Introduce `n` binders in the goal `mvarId`. The new hypotheses are named using the binder names.\nThe suffix `P` stands for \"preserving`.\n"},"Lean.MVarId.introN":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L118-L119","name":"Lean.MVarId.introN","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.MVarId.introN","doc":"Introduce `n` binders in the goal `mvarId`.\n"},"Lean.MVarId.intro1P":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L166-L167","name":"Lean.MVarId.intro1P","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.MVarId.intro1P","doc":"Introduce one object from the goal `mvarid`, preserving the name used in the binder.\nReturns a pair made of the newly introduced variable and the new goal.\nThis will fail if there is nothing to introduce, ie when the goal\ndoes not start with a forall, lambda or let. "},"Lean.MVarId.intro1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L155-L156","name":"Lean.MVarId.intro1","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.MVarId.intro1","doc":"Introduce one object from the goal `mvarid`, without preserving the name used in the binder.\nReturns a pair made of the newly introduced variable (which will have an inaccessible name)\nand the new goal. This will fail if there is nothing to introduce, ie when the goal\ndoes not start with a forall, lambda or let. "},"Lean.MVarId.intro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Intro.lean#L139-L141","name":"Lean.MVarId.intro","docLink":"./Lean/Meta/Tactic/Intro.html#Lean.MVarId.intro","doc":"Introduce one binder using `name` as the the new hypothesis name.\n"},"Lean.MVarId.inferInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L160-L164","name":"Lean.MVarId.inferInstance","docLink":"./Lean/Meta/Tactic/Util.html#Lean.MVarId.inferInstance","doc":""},"Lean.MVarId.induction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Induction.lean#L125-L207","name":"Lean.MVarId.induction","docLink":"./Lean/Meta/Tactic/Induction.html#Lean.MVarId.induction","doc":""},"Lean.MVarId.hrefl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Refl.lean#L58-L61","name":"Lean.MVarId.hrefl","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.hrefl","doc":"Close given goal using `HEq.refl`.\n"},"Lean.MVarId.heqOfEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Refl.lean#L50-L53","name":"Lean.MVarId.heqOfEq","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.heqOfEq","doc":"Try to apply `heq_of_eq`. If successful, then return new goal, otherwise return `mvarId`.\n"},"Lean.MVarId.headBetaType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L89-L90","name":"Lean.MVarId.headBetaType","docLink":"./Lean/Meta/Tactic/Util.html#Lean.MVarId.headBetaType","doc":"Beta reduce the metavariable type head "},"Lean.MVarId.hcongr?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Congr.lean#L55-L63","name":"Lean.MVarId.hcongr?","docLink":"./Lean/Meta/Tactic/Congr.html#Lean.MVarId.hcongr?","doc":"Try to apply a `hcongr` congruence theorem, and then tries to close resulting goals\nusing `Eq.refl`, `HEq.refl`, and assumption.\n"},"Lean.MVarId.getType'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L67-L68","name":"Lean.MVarId.getType'","docLink":"./Lean/Meta/Tactic/Util.html#Lean.MVarId.getType'","doc":"Get the type the given metavariable after instantiating metavariables and reducing to\nweak head normal form. "},"Lean.MVarId.getType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L58-L59","name":"Lean.MVarId.getType","docLink":"./Lean/Meta/Tactic/Util.html#Lean.MVarId.getType","doc":"Get the type the given metavariable. "},"Lean.MVarId.getTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L14-L15","name":"Lean.MVarId.getTag","docLink":"./Lean/Meta/Tactic/Util.html#Lean.MVarId.getTag","doc":"Get the user name of the given metavariable. "},"Lean.MVarId.getNondepPropHyps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L97-L124","name":"Lean.MVarId.getNondepPropHyps","docLink":"./Lean/Meta/Tactic/Util.html#Lean.MVarId.getNondepPropHyps","doc":"Collect nondependent hypotheses that are propositions. "},"Lean.MVarId.getKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L552-L553","name":"Lean.MVarId.getKind","docLink":"./Lean/Meta/Basic.html#Lean.MVarId.getKind","doc":"Return `mvarId` kind. Throw an exception if `mvarId` is not declarated in the current metavariable context.\n"},"Lean.MVarId.getDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L540-L543","name":"Lean.MVarId.getDecl","docLink":"./Lean/Meta/Basic.html#Lean.MVarId.getDecl","doc":"Return `mvarId` declaration in the current metavariable context.\nThrow an exception if `mvarId` is not declarated in the current metavariable context.\n"},"Lean.MVarId.generalize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Generalize.lean#L75-L76","name":"Lean.MVarId.generalize","docLink":"./Lean/Meta/Tactic/Generalize.html#Lean.MVarId.generalize","doc":"Telescopic `generalize` tactic. It can simultaneously generalize many terms.\nIt uses `kabstract` to occurrences of the terms that need to be generalized.\n"},"Lean.MVarId.findDecl?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L529-L530","name":"Lean.MVarId.findDecl?","docLink":"./Lean/Meta/Basic.html#Lean.MVarId.findDecl?","doc":"Return `some mvarDecl` where `mvarDecl` is `mvarId` declaration in the current metavariable context.\nReturn `none` if `mvarId` has no declaration in the current metavariable context.\n"},"Lean.MVarId.existsIntro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Constructor.lean#L34-L50","name":"Lean.MVarId.existsIntro","docLink":"./Lean/Meta/Tactic/Constructor.html#Lean.MVarId.existsIntro","doc":""},"Lean.MVarId.exfalso":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L157-L164","name":"Lean.MVarId.exfalso","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.MVarId.exfalso","doc":""},"Lean.MVarId.deltaTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Delta.lean#L29-L32","name":"Lean.MVarId.deltaTarget","docLink":"./Lean/Meta/Tactic/Delta.html#Lean.MVarId.deltaTarget","doc":"Delta expand declarations that satisfy `p` at `mvarId` type.\n"},"Lean.MVarId.deltaLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Delta.lean#L41-L44","name":"Lean.MVarId.deltaLocalDecl","docLink":"./Lean/Meta/Tactic/Delta.html#Lean.MVarId.deltaLocalDecl","doc":"Delta expand declarations that satisfy `p` at `fvarId` type.\n"},"Lean.MVarId.define":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assert.lean#L33-L41","name":"Lean.MVarId.define","docLink":"./Lean/Meta/Tactic/Assert.html#Lean.MVarId.define","doc":"Convert the given goal `Ctx |- target` into `Ctx |- let name : type := val; target`.\nIt assumes `val` has type `type` "},"Lean.MVarId.contradictionCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Contradiction.lean#L152-L211","name":"Lean.MVarId.contradictionCore","docLink":"./Lean/Meta/Tactic/Contradiction.html#Lean.MVarId.contradictionCore","doc":"Return `true` if goal `mvarId` has contradictory hypotheses.\nSee `MVarId.contradiction` for the list of tests performed by this method.\n"},"Lean.MVarId.contradiction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Contradiction.lean#L224-L226","name":"Lean.MVarId.contradiction","docLink":"./Lean/Meta/Tactic/Contradiction.html#Lean.MVarId.contradiction","doc":"Try to close the goal using \"contradictions\" such as\n- Contradictory hypotheses `h₁ : p` and `h₂ : ¬ p`.\n- Contradictory disequality `h : x ≠ x`.\n- Contradictory equality between different constructors, e.g., `h : List.nil = List.cons x xs`.\n- Empty inductive types, e.g., `x : Fin 0`.\n- Decidable propositions that evaluate to false, i.e., a hypothesis `h : p` s.t. `decide p` reduces to `false`.\n  This is only tried if `Config.useDecide = true`.\n\nThrow exception if goal failed to be closed.\n"},"Lean.MVarId.constructor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Constructor.lean#L16-L28","name":"Lean.MVarId.constructor","docLink":"./Lean/Meta/Tactic/Constructor.html#Lean.MVarId.constructor","doc":"When the goal `mvarId` type is an inductive datatype,\n`constructor` calls `apply` with the first matching constructor.\n"},"Lean.MVarId.congrN.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Congr.lean#L102-L108","name":"Lean.MVarId.congrN.go","docLink":"./Lean/Meta/Tactic/Congr.html#Lean.MVarId.congrN.go","doc":""},"Lean.MVarId.congrN":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Congr.lean#L95-L108","name":"Lean.MVarId.congrN","docLink":"./Lean/Meta/Tactic/Congr.html#Lean.MVarId.congrN","doc":"Applies `congr` recursively up to depth `n`.\n"},"Lean.MVarId.congrImplies?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Congr.lean#L68-L71","name":"Lean.MVarId.congrImplies?","docLink":"./Lean/Meta/Tactic/Congr.html#Lean.MVarId.congrImplies?","doc":"Try to apply `implies_congr`.\n"},"Lean.MVarId.congr?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Congr.lean#L41-L49","name":"Lean.MVarId.congr?","docLink":"./Lean/Meta/Tactic/Congr.html#Lean.MVarId.congr?","doc":"Try to apply a `simp` congruence theorem.\n"},"Lean.MVarId.congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Congr.lean#L78-L90","name":"Lean.MVarId.congr","docLink":"./Lean/Meta/Tactic/Congr.html#Lean.MVarId.congr","doc":"Given a goal of the form `⊢ f as = f bs`, `⊢ (p → q) = (p' → q')`, or `⊢ HEq (f as) (f bs)`, try to apply congruence.\nIt takes proof irrelevance into account, the fact that `Decidable p` is a subsingleton.\nIf `closeEasy := true`, it tries to close new subgoals using `Eq.refl`, `HEq.refl`, and `assumption`.\n"},"Lean.MVarId.clear":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Clear.lean#L13-L34","name":"Lean.MVarId.clear","docLink":"./Lean/Meta/Tactic/Clear.html#Lean.MVarId.clear","doc":"Erase the given free variable from the goal `mvarId`.\n"},"Lean.MVarId.cleanup":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cleanup.lean#L66-L67","name":"Lean.MVarId.cleanup","docLink":"./Lean/Meta/Tactic/Cleanup.html#Lean.MVarId.cleanup","doc":"Auxiliary tactic for cleaning the local context. It removes local declarations (aka hypotheses) that are *not* relevant.\nWe say a variable `x` is \"relevant\" if\n- It occurs in the target type, or\n- There is a relevant variable `y` that depends on `x`, or\n- The type of `x` is a proposition and it depends on a relevant variable `y`.\n"},"Lean.MVarId.checkNotAssigned":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L49-L51","name":"Lean.MVarId.checkNotAssigned","docLink":"./Lean/Meta/Tactic/Util.html#Lean.MVarId.checkNotAssigned","doc":"Throw a tactic exception with given tactic name if the given metavariable is assigned. "},"Lean.MVarId.changeLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L136-L153","name":"Lean.MVarId.changeLocalDecl","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.MVarId.changeLocalDecl","doc":"Replace the type of the free variable `fvarId` with `typeNew`.\nIf `checkDefEq = false`, this method assumes that `typeNew` is definitionally equal to `fvarId` type.\nIf `checkDefEq = true`, throw an error if `typeNew` is not definitionally equal to `fvarId` type.\n"},"Lean.MVarId.change":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Replace.lean#L120-L125","name":"Lean.MVarId.change","docLink":"./Lean/Meta/Tactic/Replace.html#Lean.MVarId.change","doc":"Replace the target type of `mvarId` with `typeNew`.\nIf `checkDefEq = false`, this method assumes that `typeNew` is definitionally equal to the current target type.\nIf `checkDefEq = true`, throw an error if `typeNew` is not definitionally equal to the current target type.\n"},"Lean.MVarId.casesRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L271-L281","name":"Lean.MVarId.casesRec","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.MVarId.casesRec","doc":"Keep applying `cases` on any hypothesis that satisfies `p`.\n"},"Lean.MVarId.casesAnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L286-L288","name":"Lean.MVarId.casesAnd","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.MVarId.casesAnd","doc":"Applies `cases` (recursively) to any hypothesis of the form `h : p ∧ q`.\n"},"Lean.MVarId.cases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L261-L262","name":"Lean.MVarId.cases","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.MVarId.cases","doc":"Apply `casesOn` using the free variable `majorFVarId` as the major premise (aka discriminant).\n`giveNames` contains user-facing names for each alternative.\n"},"Lean.MVarId.byCases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Cases.lean#L311-L316","name":"Lean.MVarId.byCases","docLink":"./Lean/Meta/Tactic/Cases.html#Lean.MVarId.byCases","doc":"Split the goal in two subgoals: one containing the hypothesis `h : p` and another containing `h : ¬ p`.\n"},"Lean.MVarId.assumptionCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assumption.lean#L21-L26","name":"Lean.MVarId.assumptionCore","docLink":"./Lean/Meta/Tactic/Assumption.html#Lean.MVarId.assumptionCore","doc":"Return `true` if managed to close goal `mvarId` using an assumption. "},"Lean.MVarId.assumption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assumption.lean#L33-L35","name":"Lean.MVarId.assumption","docLink":"./Lean/Meta/Tactic/Assumption.html#Lean.MVarId.assumption","doc":"Close goal `mvarId` using an assumption. Throw error message if failed. "},"Lean.MVarId.assign":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L444-L445","name":"Lean.MVarId.assign","docLink":"./Lean/MetavarContext.html#Lean.MVarId.assign","doc":"Add `mvarId := x` to the metavariable assignment.\nThis method does not check whether `mvarId` is already assigned, nor it checks whether\na cycle is being introduced, or whether the expression has the right type.\nThis is a low-level API, and it is safer to use `isDefEq (mkMVar mvarId) x`.\n"},"Lean.MVarId.assertHypotheses":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assert.lean#L111-L123","name":"Lean.MVarId.assertHypotheses","docLink":"./Lean/Meta/Tactic/Assert.html#Lean.MVarId.assertHypotheses","doc":"Convert the given goal `Ctx |- target` into `Ctx, (hs[0].userName : hs[0].type) ... |-target`.\nIt assumes `hs[i].val` has type `hs[i].type`. "},"Lean.MVarId.assertExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assert.lean#L50-L61","name":"Lean.MVarId.assertExt","docLink":"./Lean/Meta/Tactic/Assert.html#Lean.MVarId.assertExt","doc":"Convert the given goal `Ctx |- target` into `Ctx |- (hName : type) -> hName = val -> target`.\nIt assumes `val` has type `type` "},"Lean.MVarId.assertAfter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assert.lean#L76-L97","name":"Lean.MVarId.assertAfter","docLink":"./Lean/Meta/Tactic/Assert.html#Lean.MVarId.assertAfter","doc":"Convert the given goal `Ctx |- target` into a goal containing `(userName : type)` after the local declaration with if `fvarId`.\nIt assumes `val` has type `type`, and that `type` is well-formed after `fvarId`.\nNote that `val` does not need to be well-formed after `fvarId`. That is, it may contain variables that are defined after `fvarId`. "},"Lean.MVarId.assert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Assert.lean#L16-L24","name":"Lean.MVarId.assert","docLink":"./Lean/Meta/Tactic/Assert.html#Lean.MVarId.assert","doc":"Convert the given goal `Ctx |- target` into `Ctx |- type -> target`.\nIt assumes `val` has type `type` "},"Lean.MVarId.applyRefl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Refl.lean#L44-L45","name":"Lean.MVarId.applyRefl","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.applyRefl","doc":""},"Lean.MVarId.apply":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Apply.lean#L98-L118","name":"Lean.MVarId.apply","docLink":"./Lean/Meta/Tactic/Apply.html#Lean.MVarId.apply","doc":"Close the give goal using `apply e`.\n"},"Lean.MVarId.admit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Util.lean#L77-L82","name":"Lean.MVarId.admit","docLink":"./Lean/Meta/Tactic/Util.html#Lean.MVarId.admit","doc":"Assign `mvarId` to `sorryAx` "},"Lean.MVarId.acyclic.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Acyclic.lean#L33-L51","name":"Lean.MVarId.acyclic.go","docLink":"./Lean/Meta/Tactic/Acyclic.html#Lean.MVarId.acyclic.go","doc":""},"Lean.MVarId.acyclic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Acyclic.lean#L22-L51","name":"Lean.MVarId.acyclic","docLink":"./Lean/Meta/Tactic/Acyclic.html#Lean.MVarId.acyclic","doc":"Close the given goal if `h` is a proof for an equality such as `as = a :: as`.\nInductive datatypes in Lean are acyclic.\n"},"Lean.MVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L272-L274","name":"Lean.MVarId","docLink":"./Lean/Expr.html#Lean.MVarId","doc":"Universe metavariable Id   "},"Lean.MData.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L129-L129","name":"Lean.MData.empty","docLink":"./Lean/Expr.html#Lean.MData.empty","doc":""},"Lean.MData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L128-L128","name":"Lean.MData","docLink":"./Lean/Expr.html#Lean.MData","doc":"Expression metadata. Used with the `Expr.mdata` constructor. "},"Lean.Lsp.instToStringTextDocumentPositionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L116-L117","name":"Lean.Lsp.instToStringTextDocumentPositionParams","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToStringTextDocumentPositionParams","doc":""},"Lean.Lsp.instToStringRpcRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L97-L98","name":"Lean.Lsp.instToStringRpcRef","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToStringRpcRef","doc":""},"Lean.Lsp.instToStringPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L36-L37","name":"Lean.Lsp.instToStringPosition","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToStringPosition","doc":""},"Lean.Lsp.instToJsonWorkspaceSymbolParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L102-L102","name":"Lean.Lsp.instToJsonWorkspaceSymbolParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonWorkspaceSymbolParams","doc":""},"Lean.Lsp.instToJsonWorkspaceFolder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L18-L18","name":"Lean.Lsp.instToJsonWorkspaceFolder","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.instToJsonWorkspaceFolder","doc":""},"Lean.Lsp.instToJsonWorkDoneProgressReport":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L168-L168","name":"Lean.Lsp.instToJsonWorkDoneProgressReport","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonWorkDoneProgressReport","doc":""},"Lean.Lsp.instToJsonWorkDoneProgressEnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L178-L178","name":"Lean.Lsp.instToJsonWorkDoneProgressEnd","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonWorkDoneProgressEnd","doc":""},"Lean.Lsp.instToJsonWorkDoneProgressBegin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L173-L173","name":"Lean.Lsp.instToJsonWorkDoneProgressBegin","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonWorkDoneProgressBegin","doc":""},"Lean.Lsp.instToJsonWindowClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L38-L38","name":"Lean.Lsp.instToJsonWindowClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instToJsonWindowClientCapabilities","doc":""},"Lean.Lsp.instToJsonWaitForDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L25-L25","name":"Lean.Lsp.instToJsonWaitForDiagnosticsParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonWaitForDiagnosticsParams","doc":""},"Lean.Lsp.instToJsonWaitForDiagnostics":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L33-L34","name":"Lean.Lsp.instToJsonWaitForDiagnostics","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonWaitForDiagnostics","doc":""},"Lean.Lsp.instToJsonVersionedTextDocumentIdentifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L92-L92","name":"Lean.Lsp.instToJsonVersionedTextDocumentIdentifier","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonVersionedTextDocumentIdentifier","doc":""},"Lean.Lsp.instToJsonTypeDefinitionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L90-L90","name":"Lean.Lsp.instToJsonTypeDefinitionParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonTypeDefinitionParams","doc":""},"Lean.Lsp.instToJsonTextEditBatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L82-L83","name":"Lean.Lsp.instToJsonTextEditBatch","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonTextEditBatch","doc":""},"Lean.Lsp.instToJsonTextEdit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L75-L75","name":"Lean.Lsp.instToJsonTextEdit","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonTextEdit","doc":""},"Lean.Lsp.instToJsonTextDocumentSyncOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L88-L88","name":"Lean.Lsp.instToJsonTextDocumentSyncOptions","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instToJsonTextDocumentSyncOptions","doc":""},"Lean.Lsp.instToJsonTextDocumentSyncKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L29-L32","name":"Lean.Lsp.instToJsonTextDocumentSyncKind","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instToJsonTextDocumentSyncKind","doc":""},"Lean.Lsp.instToJsonTextDocumentRegistrationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L139-L139","name":"Lean.Lsp.instToJsonTextDocumentRegistrationOptions","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonTextDocumentRegistrationOptions","doc":""},"Lean.Lsp.instToJsonTextDocumentPositionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L114-L114","name":"Lean.Lsp.instToJsonTextDocumentPositionParams","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonTextDocumentPositionParams","doc":""},"Lean.Lsp.instToJsonTextDocumentItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L109-L109","name":"Lean.Lsp.instToJsonTextDocumentItem","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonTextDocumentItem","doc":""},"Lean.Lsp.instToJsonTextDocumentIdentifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L87-L87","name":"Lean.Lsp.instToJsonTextDocumentIdentifier","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonTextDocumentIdentifier","doc":""},"Lean.Lsp.instToJsonTextDocumentEdit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L97-L97","name":"Lean.Lsp.instToJsonTextDocumentEdit","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonTextDocumentEdit","doc":""},"Lean.Lsp.instToJsonTextDocumentClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L30-L30","name":"Lean.Lsp.instToJsonTextDocumentClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instToJsonTextDocumentClientCapabilities","doc":""},"Lean.Lsp.instToJsonSymbolTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L216-L218","name":"Lean.Lsp.instToJsonSymbolTag","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonSymbolTag","doc":""},"Lean.Lsp.instToJsonSymbolKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L157-L184","name":"Lean.Lsp.instToJsonSymbolKind","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonSymbolKind","doc":""},"Lean.Lsp.instToJsonSymbolInformation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L226-L226","name":"Lean.Lsp.instToJsonSymbolInformation","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonSymbolInformation","doc":""},"Lean.Lsp.instToJsonStaticRegistrationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L135-L135","name":"Lean.Lsp.instToJsonStaticRegistrationOptions","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonStaticRegistrationOptions","doc":""},"Lean.Lsp.instToJsonShowDocumentClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L34-L34","name":"Lean.Lsp.instToJsonShowDocumentClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instToJsonShowDocumentClientCapabilities","doc":""},"Lean.Lsp.instToJsonServerInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L103-L103","name":"Lean.Lsp.instToJsonServerInfo","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instToJsonServerInfo","doc":""},"Lean.Lsp.instToJsonServerCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L59-L59","name":"Lean.Lsp.instToJsonServerCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instToJsonServerCapabilities","doc":""},"Lean.Lsp.instToJsonSemanticTokensRangeParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L323-L323","name":"Lean.Lsp.instToJsonSemanticTokensRangeParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonSemanticTokensRangeParams","doc":""},"Lean.Lsp.instToJsonSemanticTokensParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L318-L318","name":"Lean.Lsp.instToJsonSemanticTokensParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonSemanticTokensParams","doc":""},"Lean.Lsp.instToJsonSemanticTokensOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L314-L314","name":"Lean.Lsp.instToJsonSemanticTokensOptions","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonSemanticTokensOptions","doc":""},"Lean.Lsp.instToJsonSemanticTokensLegend":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L306-L306","name":"Lean.Lsp.instToJsonSemanticTokensLegend","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonSemanticTokensLegend","doc":""},"Lean.Lsp.instToJsonSemanticTokens":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L328-L328","name":"Lean.Lsp.instToJsonSemanticTokens","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonSemanticTokens","doc":""},"Lean.Lsp.instToJsonSemanticTokenType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L255-L255","name":"Lean.Lsp.instToJsonSemanticTokenType","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonSemanticTokenType","doc":""},"Lean.Lsp.instToJsonSemanticTokenModifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L288-L288","name":"Lean.Lsp.instToJsonSemanticTokenModifier","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonSemanticTokenModifier","doc":""},"Lean.Lsp.instToJsonSaveOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L73-L73","name":"Lean.Lsp.instToJsonSaveOptions","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instToJsonSaveOptions","doc":""},"Lean.Lsp.instToJsonRpcReleaseParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L141-L141","name":"Lean.Lsp.instToJsonRpcReleaseParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonRpcReleaseParams","doc":""},"Lean.Lsp.instToJsonRpcRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L95-L95","name":"Lean.Lsp.instToJsonRpcRef","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonRpcRef","doc":""},"Lean.Lsp.instToJsonRpcKeepAliveParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L151-L151","name":"Lean.Lsp.instToJsonRpcKeepAliveParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonRpcKeepAliveParams","doc":""},"Lean.Lsp.instToJsonRpcConnected":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L117-L117","name":"Lean.Lsp.instToJsonRpcConnected","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonRpcConnected","doc":""},"Lean.Lsp.instToJsonRpcConnectParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L110-L110","name":"Lean.Lsp.instToJsonRpcConnectParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonRpcConnectParams","doc":""},"Lean.Lsp.instToJsonRpcCallParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L131-L131","name":"Lean.Lsp.instToJsonRpcCallParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonRpcCallParams","doc":""},"Lean.Lsp.instToJsonRegistrationParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Client.lean#L24-L24","name":"Lean.Lsp.instToJsonRegistrationParams","docLink":"./Lean/Data/Lsp/Client.html#Lean.Lsp.instToJsonRegistrationParams","doc":""},"Lean.Lsp.instToJsonRegistration":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Client.lean#L20-L20","name":"Lean.Lsp.instToJsonRegistration","docLink":"./Lean/Data/Lsp/Client.html#Lean.Lsp.instToJsonRegistration","doc":""},"Lean.Lsp.instToJsonReferenceParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L98-L98","name":"Lean.Lsp.instToJsonReferenceParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonReferenceParams","doc":""},"Lean.Lsp.instToJsonReferenceContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L94-L94","name":"Lean.Lsp.instToJsonReferenceContext","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonReferenceContext","doc":""},"Lean.Lsp.instToJsonRefInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L52-L59","name":"Lean.Lsp.instToJsonRefInfo","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.instToJsonRefInfo","doc":""},"Lean.Lsp.instToJsonRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L45-L45","name":"Lean.Lsp.instToJsonRange","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonRange","doc":""},"Lean.Lsp.instToJsonPublishDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L94-L94","name":"Lean.Lsp.instToJsonPublishDiagnosticsParams","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instToJsonPublishDiagnosticsParams","doc":""},"Lean.Lsp.instToJsonProgressParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L161-L161","name":"Lean.Lsp.instToJsonProgressParams","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonProgressParams","doc":""},"Lean.Lsp.instToJsonPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L34-L34","name":"Lean.Lsp.instToJsonPosition","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonPosition","doc":""},"Lean.Lsp.instToJsonPlainTermGoalParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L82-L82","name":"Lean.Lsp.instToJsonPlainTermGoalParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonPlainTermGoalParams","doc":""},"Lean.Lsp.instToJsonPlainTermGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L88-L88","name":"Lean.Lsp.instToJsonPlainTermGoal","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonPlainTermGoal","doc":""},"Lean.Lsp.instToJsonPlainGoalParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L68-L68","name":"Lean.Lsp.instToJsonPlainGoalParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonPlainGoalParams","doc":""},"Lean.Lsp.instToJsonPlainGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L76-L76","name":"Lean.Lsp.instToJsonPlainGoal","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonPlainGoal","doc":""},"Lean.Lsp.instToJsonModuleRefs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L77-L78","name":"Lean.Lsp.instToJsonModuleRefs","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.instToJsonModuleRefs","doc":""},"Lean.Lsp.instToJsonMarkupKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L149-L151","name":"Lean.Lsp.instToJsonMarkupKind","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonMarkupKind","doc":""},"Lean.Lsp.instToJsonMarkupContent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L156-L156","name":"Lean.Lsp.instToJsonMarkupContent","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonMarkupContent","doc":""},"Lean.Lsp.instToJsonLocationLink":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L60-L60","name":"Lean.Lsp.instToJsonLocationLink","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonLocationLink","doc":""},"Lean.Lsp.instToJsonLocation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L53-L53","name":"Lean.Lsp.instToJsonLocation","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonLocation","doc":""},"Lean.Lsp.instToJsonLineRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L159-L159","name":"Lean.Lsp.instToJsonLineRange","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonLineRange","doc":""},"Lean.Lsp.instToJsonLeanIleanInfoParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L93-L93","name":"Lean.Lsp.instToJsonLeanIleanInfoParams","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.instToJsonLeanIleanInfoParams","doc":""},"Lean.Lsp.instToJsonLeanFileProgressProcessingInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L53-L53","name":"Lean.Lsp.instToJsonLeanFileProgressProcessingInfo","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonLeanFileProgressProcessingInfo","doc":""},"Lean.Lsp.instToJsonLeanFileProgressParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L61-L61","name":"Lean.Lsp.instToJsonLeanFileProgressParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonLeanFileProgressParams","doc":""},"Lean.Lsp.instToJsonLeanFileProgressKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L46-L48","name":"Lean.Lsp.instToJsonLeanFileProgressKind","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instToJsonLeanFileProgressKind","doc":""},"Lean.Lsp.instToJsonInsertReplaceEdit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L41-L41","name":"Lean.Lsp.instToJsonInsertReplaceEdit","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonInsertReplaceEdit","doc":""},"Lean.Lsp.instToJsonInitializedParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L97-L98","name":"Lean.Lsp.instToJsonInitializedParams","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instToJsonInitializedParams","doc":""},"Lean.Lsp.instToJsonInitializeResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L108-L108","name":"Lean.Lsp.instToJsonInitializeResult","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instToJsonInitializeResult","doc":""},"Lean.Lsp.instToJsonInitializeParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L64-L64","name":"Lean.Lsp.instToJsonInitializeParams","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instToJsonInitializeParams","doc":""},"Lean.Lsp.instToJsonInitializationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L51-L51","name":"Lean.Lsp.instToJsonInitializationOptions","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instToJsonInitializationOptions","doc":""},"Lean.Lsp.instToJsonHoverParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L81-L81","name":"Lean.Lsp.instToJsonHoverParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonHoverParams","doc":""},"Lean.Lsp.instToJsonHover":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L78-L78","name":"Lean.Lsp.instToJsonHover","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonHover","doc":""},"Lean.Lsp.instToJsonFoldingRangeParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L332-L332","name":"Lean.Lsp.instToJsonFoldingRangeParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonFoldingRangeParams","doc":""},"Lean.Lsp.instToJsonFoldingRangeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L339-L343","name":"Lean.Lsp.instToJsonFoldingRangeKind","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonFoldingRangeKind","doc":""},"Lean.Lsp.instToJsonFoldingRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L349-L349","name":"Lean.Lsp.instToJsonFoldingRange","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonFoldingRange","doc":""},"Lean.Lsp.instToJsonFileSystemWatcher":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L28-L28","name":"Lean.Lsp.instToJsonFileSystemWatcher","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.instToJsonFileSystemWatcher","doc":""},"Lean.Lsp.instToJsonFileEvent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L65-L65","name":"Lean.Lsp.instToJsonFileEvent","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.instToJsonFileEvent","doc":""},"Lean.Lsp.instToJsonFileChangeType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L56-L60","name":"Lean.Lsp.instToJsonFileChangeType","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.instToJsonFileChangeType","doc":""},"Lean.Lsp.instToJsonDocumentSymbolResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L210-L211","name":"Lean.Lsp.instToJsonDocumentSymbolResult","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonDocumentSymbolResult","doc":""},"Lean.Lsp.instToJsonDocumentSymbolParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L127-L127","name":"Lean.Lsp.instToJsonDocumentSymbolParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonDocumentSymbolParams","doc":""},"Lean.Lsp.instToJsonDocumentSymbolAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L194-L194","name":"Lean.Lsp.instToJsonDocumentSymbolAux","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonDocumentSymbolAux","doc":""},"Lean.Lsp.instToJsonDocumentSymbol.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L201-L204","name":"Lean.Lsp.instToJsonDocumentSymbol.go","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonDocumentSymbol.go","doc":""},"Lean.Lsp.instToJsonDocumentSymbol":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L199-L205","name":"Lean.Lsp.instToJsonDocumentSymbol","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonDocumentSymbol","doc":""},"Lean.Lsp.instToJsonDocumentSelector":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L130-L131","name":"Lean.Lsp.instToJsonDocumentSelector","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonDocumentSelector","doc":""},"Lean.Lsp.instToJsonDocumentHighlightParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L105-L105","name":"Lean.Lsp.instToJsonDocumentHighlightParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonDocumentHighlightParams","doc":""},"Lean.Lsp.instToJsonDocumentHighlightKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L112-L116","name":"Lean.Lsp.instToJsonDocumentHighlightKind","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonDocumentHighlightKind","doc":""},"Lean.Lsp.instToJsonDocumentHighlight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L121-L121","name":"Lean.Lsp.instToJsonDocumentHighlight","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonDocumentHighlight","doc":""},"Lean.Lsp.instToJsonDocumentFilter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L123-L123","name":"Lean.Lsp.instToJsonDocumentFilter","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonDocumentFilter","doc":""},"Lean.Lsp.instToJsonDidOpenTextDocumentParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L36-L36","name":"Lean.Lsp.instToJsonDidOpenTextDocumentParams","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instToJsonDidOpenTextDocumentParams","doc":""},"Lean.Lsp.instToJsonDidCloseTextDocumentParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L77-L77","name":"Lean.Lsp.instToJsonDidCloseTextDocumentParams","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instToJsonDidCloseTextDocumentParams","doc":""},"Lean.Lsp.instToJsonDidChangeWatchedFilesRegistrationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L41-L41","name":"Lean.Lsp.instToJsonDidChangeWatchedFilesRegistrationOptions","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.instToJsonDidChangeWatchedFilesRegistrationOptions","doc":""},"Lean.Lsp.instToJsonDidChangeWatchedFilesParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L69-L69","name":"Lean.Lsp.instToJsonDidChangeWatchedFilesParams","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.instToJsonDidChangeWatchedFilesParams","doc":""},"Lean.Lsp.instToJsonDidChangeTextDocumentParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L65-L65","name":"Lean.Lsp.instToJsonDidChangeTextDocumentParams","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instToJsonDidChangeTextDocumentParams","doc":""},"Lean.Lsp.instToJsonDiagnosticWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L86-L86","name":"Lean.Lsp.instToJsonDiagnosticWith","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instToJsonDiagnosticWith","doc":""},"Lean.Lsp.instToJsonDiagnosticTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L64-L66","name":"Lean.Lsp.instToJsonDiagnosticTag","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instToJsonDiagnosticTag","doc":""},"Lean.Lsp.instToJsonDiagnosticSeverity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L33-L37","name":"Lean.Lsp.instToJsonDiagnosticSeverity","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instToJsonDiagnosticSeverity","doc":""},"Lean.Lsp.instToJsonDiagnosticRelatedInformation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L71-L71","name":"Lean.Lsp.instToJsonDiagnosticRelatedInformation","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instToJsonDiagnosticRelatedInformation","doc":""},"Lean.Lsp.instToJsonDiagnosticCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L49-L51","name":"Lean.Lsp.instToJsonDiagnosticCode","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instToJsonDiagnosticCode","doc":""},"Lean.Lsp.instToJsonDefinitionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L87-L87","name":"Lean.Lsp.instToJsonDefinitionParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonDefinitionParams","doc":""},"Lean.Lsp.instToJsonDeclarationParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L84-L84","name":"Lean.Lsp.instToJsonDeclarationParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonDeclarationParams","doc":""},"Lean.Lsp.instToJsonCompletionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L71-L71","name":"Lean.Lsp.instToJsonCompletionParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonCompletionParams","doc":""},"Lean.Lsp.instToJsonCompletionOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L19-L19","name":"Lean.Lsp.instToJsonCompletionOptions","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonCompletionOptions","doc":""},"Lean.Lsp.instToJsonCompletionList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L67-L67","name":"Lean.Lsp.instToJsonCompletionList","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonCompletionList","doc":""},"Lean.Lsp.instToJsonCompletionItemKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L29-L30","name":"Lean.Lsp.instToJsonCompletionItemKind","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonCompletionItemKind","doc":""},"Lean.Lsp.instToJsonCompletionItemCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L22-L22","name":"Lean.Lsp.instToJsonCompletionItemCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instToJsonCompletionItemCapabilities","doc":""},"Lean.Lsp.instToJsonCompletionItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L62-L62","name":"Lean.Lsp.instToJsonCompletionItem","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instToJsonCompletionItem","doc":""},"Lean.Lsp.instToJsonCompletionClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L26-L26","name":"Lean.Lsp.instToJsonCompletionClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instToJsonCompletionClientCapabilities","doc":""},"Lean.Lsp.instToJsonCommand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L70-L70","name":"Lean.Lsp.instToJsonCommand","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonCommand","doc":""},"Lean.Lsp.instToJsonClientInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L22-L22","name":"Lean.Lsp.instToJsonClientInfo","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instToJsonClientInfo","doc":""},"Lean.Lsp.instToJsonClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L43-L43","name":"Lean.Lsp.instToJsonClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instToJsonClientCapabilities","doc":""},"Lean.Lsp.instToJsonCancelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L23-L23","name":"Lean.Lsp.instToJsonCancelParams","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instToJsonCancelParams","doc":""},"Lean.Lsp.instRpcEncodingDiagnosticWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Widget/InteractiveDiagnostic.lean#L25-L25","name":"Lean.Lsp.instRpcEncodingDiagnosticWith","docLink":"./Lean/Widget/InteractiveDiagnostic.html#Lean.Lsp.instRpcEncodingDiagnosticWith","doc":""},"Lean.Lsp.instReprLineRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L159-L159","name":"Lean.Lsp.instReprLineRange","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instReprLineRange","doc":""},"Lean.Lsp.instReprCompletionItemKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L27-L27","name":"Lean.Lsp.instReprCompletionItemKind","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instReprCompletionItemKind","doc":""},"Lean.Lsp.instOrdRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L45-L45","name":"Lean.Lsp.instOrdRange","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instOrdRange","doc":""},"Lean.Lsp.instOrdPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L34-L34","name":"Lean.Lsp.instOrdPosition","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instOrdPosition","doc":""},"Lean.Lsp.instLTRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L47-L47","name":"Lean.Lsp.instLTRange","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instLTRange","doc":""},"Lean.Lsp.instLTPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L39-L39","name":"Lean.Lsp.instLTPosition","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instLTPosition","doc":""},"Lean.Lsp.instLERange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L48-L48","name":"Lean.Lsp.instLERange","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instLERange","doc":""},"Lean.Lsp.instLEPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L40-L40","name":"Lean.Lsp.instLEPosition","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instLEPosition","doc":""},"Lean.Lsp.instInhabitedRefIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L24-L24","name":"Lean.Lsp.instInhabitedRefIdent","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.instInhabitedRefIdent","doc":""},"Lean.Lsp.instInhabitedRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L45-L45","name":"Lean.Lsp.instInhabitedRange","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instInhabitedRange","doc":""},"Lean.Lsp.instInhabitedPublishDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L94-L94","name":"Lean.Lsp.instInhabitedPublishDiagnosticsParams","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instInhabitedPublishDiagnosticsParams","doc":""},"Lean.Lsp.instInhabitedPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L34-L34","name":"Lean.Lsp.instInhabitedPosition","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instInhabitedPosition","doc":""},"Lean.Lsp.instInhabitedLocation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L53-L53","name":"Lean.Lsp.instInhabitedLocation","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instInhabitedLocation","doc":""},"Lean.Lsp.instInhabitedLineRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L159-L159","name":"Lean.Lsp.instInhabitedLineRange","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instInhabitedLineRange","doc":""},"Lean.Lsp.instInhabitedLeanFileProgressKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L38-L38","name":"Lean.Lsp.instInhabitedLeanFileProgressKind","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instInhabitedLeanFileProgressKind","doc":""},"Lean.Lsp.instInhabitedDiagnosticWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L86-L86","name":"Lean.Lsp.instInhabitedDiagnosticWith","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instInhabitedDiagnosticWith","doc":""},"Lean.Lsp.instInhabitedDiagnosticTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L56-L56","name":"Lean.Lsp.instInhabitedDiagnosticTag","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instInhabitedDiagnosticTag","doc":""},"Lean.Lsp.instInhabitedDiagnosticSeverity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L23-L23","name":"Lean.Lsp.instInhabitedDiagnosticSeverity","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instInhabitedDiagnosticSeverity","doc":""},"Lean.Lsp.instInhabitedDiagnosticRelatedInformation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L71-L71","name":"Lean.Lsp.instInhabitedDiagnosticRelatedInformation","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instInhabitedDiagnosticRelatedInformation","doc":""},"Lean.Lsp.instInhabitedDiagnosticCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L42-L42","name":"Lean.Lsp.instInhabitedDiagnosticCode","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instInhabitedDiagnosticCode","doc":""},"Lean.Lsp.instInhabitedCompletionItemKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L27-L27","name":"Lean.Lsp.instInhabitedCompletionItemKind","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instInhabitedCompletionItemKind","doc":""},"Lean.Lsp.instInhabitedCompletionItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L62-L62","name":"Lean.Lsp.instInhabitedCompletionItem","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instInhabitedCompletionItem","doc":""},"Lean.Lsp.instInhabitedCancelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L23-L23","name":"Lean.Lsp.instInhabitedCancelParams","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instInhabitedCancelParams","doc":""},"Lean.Lsp.instHashableRpcRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L95-L95","name":"Lean.Lsp.instHashableRpcRef","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instHashableRpcRef","doc":""},"Lean.Lsp.instHashableRefIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L24-L24","name":"Lean.Lsp.instHashableRefIdent","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.instHashableRefIdent","doc":""},"Lean.Lsp.instHashableRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L45-L45","name":"Lean.Lsp.instHashableRange","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instHashableRange","doc":""},"Lean.Lsp.instHashablePosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L34-L34","name":"Lean.Lsp.instHashablePosition","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instHashablePosition","doc":""},"Lean.Lsp.instFromJsonWorkspaceSymbolParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L102-L102","name":"Lean.Lsp.instFromJsonWorkspaceSymbolParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonWorkspaceSymbolParams","doc":""},"Lean.Lsp.instFromJsonWorkspaceFolder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L18-L18","name":"Lean.Lsp.instFromJsonWorkspaceFolder","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.instFromJsonWorkspaceFolder","doc":""},"Lean.Lsp.instFromJsonWindowClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L38-L38","name":"Lean.Lsp.instFromJsonWindowClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instFromJsonWindowClientCapabilities","doc":""},"Lean.Lsp.instFromJsonWaitForDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L25-L25","name":"Lean.Lsp.instFromJsonWaitForDiagnosticsParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonWaitForDiagnosticsParams","doc":""},"Lean.Lsp.instFromJsonWaitForDiagnostics":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L30-L31","name":"Lean.Lsp.instFromJsonWaitForDiagnostics","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonWaitForDiagnostics","doc":""},"Lean.Lsp.instFromJsonVersionedTextDocumentIdentifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L92-L92","name":"Lean.Lsp.instFromJsonVersionedTextDocumentIdentifier","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonVersionedTextDocumentIdentifier","doc":""},"Lean.Lsp.instFromJsonTypeDefinitionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L90-L90","name":"Lean.Lsp.instFromJsonTypeDefinitionParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonTypeDefinitionParams","doc":""},"Lean.Lsp.instFromJsonTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L29-L34","name":"Lean.Lsp.instFromJsonTrace","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instFromJsonTrace","doc":""},"Lean.Lsp.instFromJsonTextEditBatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L79-L80","name":"Lean.Lsp.instFromJsonTextEditBatch","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonTextEditBatch","doc":""},"Lean.Lsp.instFromJsonTextEdit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L75-L75","name":"Lean.Lsp.instFromJsonTextEdit","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonTextEdit","doc":""},"Lean.Lsp.instFromJsonTextDocumentSyncOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L88-L88","name":"Lean.Lsp.instFromJsonTextDocumentSyncOptions","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instFromJsonTextDocumentSyncOptions","doc":""},"Lean.Lsp.instFromJsonTextDocumentSyncKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L22-L27","name":"Lean.Lsp.instFromJsonTextDocumentSyncKind","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instFromJsonTextDocumentSyncKind","doc":""},"Lean.Lsp.instFromJsonTextDocumentRegistrationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L139-L139","name":"Lean.Lsp.instFromJsonTextDocumentRegistrationOptions","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonTextDocumentRegistrationOptions","doc":""},"Lean.Lsp.instFromJsonTextDocumentPositionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L114-L114","name":"Lean.Lsp.instFromJsonTextDocumentPositionParams","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonTextDocumentPositionParams","doc":""},"Lean.Lsp.instFromJsonTextDocumentItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L109-L109","name":"Lean.Lsp.instFromJsonTextDocumentItem","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonTextDocumentItem","doc":""},"Lean.Lsp.instFromJsonTextDocumentIdentifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L87-L87","name":"Lean.Lsp.instFromJsonTextDocumentIdentifier","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonTextDocumentIdentifier","doc":""},"Lean.Lsp.instFromJsonTextDocumentEdit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L97-L97","name":"Lean.Lsp.instFromJsonTextDocumentEdit","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonTextDocumentEdit","doc":""},"Lean.Lsp.instFromJsonTextDocumentContentChangeEvent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L48-L55","name":"Lean.Lsp.instFromJsonTextDocumentContentChangeEvent","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instFromJsonTextDocumentContentChangeEvent","doc":""},"Lean.Lsp.instFromJsonTextDocumentClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L30-L30","name":"Lean.Lsp.instFromJsonTextDocumentClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instFromJsonTextDocumentClientCapabilities","doc":""},"Lean.Lsp.instFromJsonTextDocumentChangeRegistrationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L41-L41","name":"Lean.Lsp.instFromJsonTextDocumentChangeRegistrationOptions","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instFromJsonTextDocumentChangeRegistrationOptions","doc":""},"Lean.Lsp.instFromJsonStaticRegistrationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L135-L135","name":"Lean.Lsp.instFromJsonStaticRegistrationOptions","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonStaticRegistrationOptions","doc":""},"Lean.Lsp.instFromJsonShowDocumentClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L34-L34","name":"Lean.Lsp.instFromJsonShowDocumentClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instFromJsonShowDocumentClientCapabilities","doc":""},"Lean.Lsp.instFromJsonServerInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L103-L103","name":"Lean.Lsp.instFromJsonServerInfo","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instFromJsonServerInfo","doc":""},"Lean.Lsp.instFromJsonServerCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L59-L59","name":"Lean.Lsp.instFromJsonServerCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instFromJsonServerCapabilities","doc":""},"Lean.Lsp.instFromJsonSemanticTokensRangeParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L323-L323","name":"Lean.Lsp.instFromJsonSemanticTokensRangeParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonSemanticTokensRangeParams","doc":""},"Lean.Lsp.instFromJsonSemanticTokensParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L318-L318","name":"Lean.Lsp.instFromJsonSemanticTokensParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonSemanticTokensParams","doc":""},"Lean.Lsp.instFromJsonSemanticTokensOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L314-L314","name":"Lean.Lsp.instFromJsonSemanticTokensOptions","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonSemanticTokensOptions","doc":""},"Lean.Lsp.instFromJsonSemanticTokensLegend":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L306-L306","name":"Lean.Lsp.instFromJsonSemanticTokensLegend","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonSemanticTokensLegend","doc":""},"Lean.Lsp.instFromJsonSemanticTokens":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L328-L328","name":"Lean.Lsp.instFromJsonSemanticTokens","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonSemanticTokens","doc":""},"Lean.Lsp.instFromJsonSemanticTokenType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L255-L255","name":"Lean.Lsp.instFromJsonSemanticTokenType","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonSemanticTokenType","doc":""},"Lean.Lsp.instFromJsonSemanticTokenModifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L288-L288","name":"Lean.Lsp.instFromJsonSemanticTokenModifier","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonSemanticTokenModifier","doc":""},"Lean.Lsp.instFromJsonSaveOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L73-L73","name":"Lean.Lsp.instFromJsonSaveOptions","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instFromJsonSaveOptions","doc":""},"Lean.Lsp.instFromJsonRpcReleaseParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L141-L141","name":"Lean.Lsp.instFromJsonRpcReleaseParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonRpcReleaseParams","doc":""},"Lean.Lsp.instFromJsonRpcRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L95-L95","name":"Lean.Lsp.instFromJsonRpcRef","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonRpcRef","doc":""},"Lean.Lsp.instFromJsonRpcKeepAliveParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L151-L151","name":"Lean.Lsp.instFromJsonRpcKeepAliveParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonRpcKeepAliveParams","doc":""},"Lean.Lsp.instFromJsonRpcConnected":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L117-L117","name":"Lean.Lsp.instFromJsonRpcConnected","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonRpcConnected","doc":""},"Lean.Lsp.instFromJsonRpcConnectParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L110-L110","name":"Lean.Lsp.instFromJsonRpcConnectParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonRpcConnectParams","doc":""},"Lean.Lsp.instFromJsonRpcCallParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L131-L131","name":"Lean.Lsp.instFromJsonRpcCallParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonRpcCallParams","doc":""},"Lean.Lsp.instFromJsonRegistrationParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Client.lean#L24-L24","name":"Lean.Lsp.instFromJsonRegistrationParams","docLink":"./Lean/Data/Lsp/Client.html#Lean.Lsp.instFromJsonRegistrationParams","doc":""},"Lean.Lsp.instFromJsonRegistration":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Client.lean#L20-L20","name":"Lean.Lsp.instFromJsonRegistration","docLink":"./Lean/Data/Lsp/Client.html#Lean.Lsp.instFromJsonRegistration","doc":""},"Lean.Lsp.instFromJsonReferenceParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L98-L98","name":"Lean.Lsp.instFromJsonReferenceParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonReferenceParams","doc":""},"Lean.Lsp.instFromJsonReferenceContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L94-L94","name":"Lean.Lsp.instFromJsonReferenceContext","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonReferenceContext","doc":""},"Lean.Lsp.instFromJsonRefInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L61-L72","name":"Lean.Lsp.instFromJsonRefInfo","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.instFromJsonRefInfo","doc":""},"Lean.Lsp.instFromJsonRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L45-L45","name":"Lean.Lsp.instFromJsonRange","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonRange","doc":""},"Lean.Lsp.instFromJsonPublishDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L94-L94","name":"Lean.Lsp.instFromJsonPublishDiagnosticsParams","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instFromJsonPublishDiagnosticsParams","doc":""},"Lean.Lsp.instFromJsonPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L34-L34","name":"Lean.Lsp.instFromJsonPosition","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonPosition","doc":""},"Lean.Lsp.instFromJsonPlainTermGoalParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L82-L82","name":"Lean.Lsp.instFromJsonPlainTermGoalParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonPlainTermGoalParams","doc":""},"Lean.Lsp.instFromJsonPlainTermGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L88-L88","name":"Lean.Lsp.instFromJsonPlainTermGoal","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonPlainTermGoal","doc":""},"Lean.Lsp.instFromJsonPlainGoalParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L68-L68","name":"Lean.Lsp.instFromJsonPlainGoalParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonPlainGoalParams","doc":""},"Lean.Lsp.instFromJsonPlainGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L76-L76","name":"Lean.Lsp.instFromJsonPlainGoal","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonPlainGoal","doc":""},"Lean.Lsp.instFromJsonModuleRefs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L80-L84","name":"Lean.Lsp.instFromJsonModuleRefs","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.instFromJsonModuleRefs","doc":""},"Lean.Lsp.instFromJsonMarkupKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L144-L147","name":"Lean.Lsp.instFromJsonMarkupKind","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonMarkupKind","doc":""},"Lean.Lsp.instFromJsonMarkupContent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L156-L156","name":"Lean.Lsp.instFromJsonMarkupContent","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonMarkupContent","doc":""},"Lean.Lsp.instFromJsonLocationLink":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L60-L60","name":"Lean.Lsp.instFromJsonLocationLink","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonLocationLink","doc":""},"Lean.Lsp.instFromJsonLocation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L53-L53","name":"Lean.Lsp.instFromJsonLocation","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonLocation","doc":""},"Lean.Lsp.instFromJsonLineRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L159-L159","name":"Lean.Lsp.instFromJsonLineRange","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonLineRange","doc":""},"Lean.Lsp.instFromJsonLeanIleanInfoParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L93-L93","name":"Lean.Lsp.instFromJsonLeanIleanInfoParams","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.instFromJsonLeanIleanInfoParams","doc":""},"Lean.Lsp.instFromJsonLeanFileProgressProcessingInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L53-L53","name":"Lean.Lsp.instFromJsonLeanFileProgressProcessingInfo","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonLeanFileProgressProcessingInfo","doc":""},"Lean.Lsp.instFromJsonLeanFileProgressParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L61-L61","name":"Lean.Lsp.instFromJsonLeanFileProgressParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonLeanFileProgressParams","doc":""},"Lean.Lsp.instFromJsonLeanFileProgressKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L40-L44","name":"Lean.Lsp.instFromJsonLeanFileProgressKind","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instFromJsonLeanFileProgressKind","doc":""},"Lean.Lsp.instFromJsonInsertReplaceEdit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L41-L41","name":"Lean.Lsp.instFromJsonInsertReplaceEdit","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonInsertReplaceEdit","doc":""},"Lean.Lsp.instFromJsonInitializedParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L94-L95","name":"Lean.Lsp.instFromJsonInitializedParams","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instFromJsonInitializedParams","doc":""},"Lean.Lsp.instFromJsonInitializeResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L108-L108","name":"Lean.Lsp.instFromJsonInitializeResult","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instFromJsonInitializeResult","doc":""},"Lean.Lsp.instFromJsonInitializeParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L66-L89","name":"Lean.Lsp.instFromJsonInitializeParams","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instFromJsonInitializeParams","doc":""},"Lean.Lsp.instFromJsonInitializationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L51-L51","name":"Lean.Lsp.instFromJsonInitializationOptions","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instFromJsonInitializationOptions","doc":""},"Lean.Lsp.instFromJsonHoverParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L81-L81","name":"Lean.Lsp.instFromJsonHoverParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonHoverParams","doc":""},"Lean.Lsp.instFromJsonHover":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L78-L78","name":"Lean.Lsp.instFromJsonHover","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonHover","doc":""},"Lean.Lsp.instFromJsonFoldingRangeParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L332-L332","name":"Lean.Lsp.instFromJsonFoldingRangeParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonFoldingRangeParams","doc":""},"Lean.Lsp.instFromJsonFileSystemWatcher":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L28-L28","name":"Lean.Lsp.instFromJsonFileSystemWatcher","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.instFromJsonFileSystemWatcher","doc":""},"Lean.Lsp.instFromJsonFileEvent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L65-L65","name":"Lean.Lsp.instFromJsonFileEvent","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.instFromJsonFileEvent","doc":""},"Lean.Lsp.instFromJsonFileChangeType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L48-L54","name":"Lean.Lsp.instFromJsonFileChangeType","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.instFromJsonFileChangeType","doc":""},"Lean.Lsp.instFromJsonDocumentSymbolParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L127-L127","name":"Lean.Lsp.instFromJsonDocumentSymbolParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonDocumentSymbolParams","doc":""},"Lean.Lsp.instFromJsonDocumentSelector":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L127-L128","name":"Lean.Lsp.instFromJsonDocumentSelector","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonDocumentSelector","doc":""},"Lean.Lsp.instFromJsonDocumentHighlightParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L105-L105","name":"Lean.Lsp.instFromJsonDocumentHighlightParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonDocumentHighlightParams","doc":""},"Lean.Lsp.instFromJsonDocumentFilter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L123-L123","name":"Lean.Lsp.instFromJsonDocumentFilter","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonDocumentFilter","doc":""},"Lean.Lsp.instFromJsonDidOpenTextDocumentParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L36-L36","name":"Lean.Lsp.instFromJsonDidOpenTextDocumentParams","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instFromJsonDidOpenTextDocumentParams","doc":""},"Lean.Lsp.instFromJsonDidCloseTextDocumentParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L77-L77","name":"Lean.Lsp.instFromJsonDidCloseTextDocumentParams","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instFromJsonDidCloseTextDocumentParams","doc":""},"Lean.Lsp.instFromJsonDidChangeWatchedFilesRegistrationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L41-L41","name":"Lean.Lsp.instFromJsonDidChangeWatchedFilesRegistrationOptions","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.instFromJsonDidChangeWatchedFilesRegistrationOptions","doc":""},"Lean.Lsp.instFromJsonDidChangeWatchedFilesParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L69-L69","name":"Lean.Lsp.instFromJsonDidChangeWatchedFilesParams","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.instFromJsonDidChangeWatchedFilesParams","doc":""},"Lean.Lsp.instFromJsonDidChangeTextDocumentParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L65-L65","name":"Lean.Lsp.instFromJsonDidChangeTextDocumentParams","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.instFromJsonDidChangeTextDocumentParams","doc":""},"Lean.Lsp.instFromJsonDiagnosticWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L86-L86","name":"Lean.Lsp.instFromJsonDiagnosticWith","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instFromJsonDiagnosticWith","doc":""},"Lean.Lsp.instFromJsonDiagnosticTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L58-L62","name":"Lean.Lsp.instFromJsonDiagnosticTag","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instFromJsonDiagnosticTag","doc":""},"Lean.Lsp.instFromJsonDiagnosticSeverity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L25-L31","name":"Lean.Lsp.instFromJsonDiagnosticSeverity","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instFromJsonDiagnosticSeverity","doc":""},"Lean.Lsp.instFromJsonDiagnosticRelatedInformation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L71-L71","name":"Lean.Lsp.instFromJsonDiagnosticRelatedInformation","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instFromJsonDiagnosticRelatedInformation","doc":""},"Lean.Lsp.instFromJsonDiagnosticCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L44-L47","name":"Lean.Lsp.instFromJsonDiagnosticCode","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instFromJsonDiagnosticCode","doc":""},"Lean.Lsp.instFromJsonDefinitionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L87-L87","name":"Lean.Lsp.instFromJsonDefinitionParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonDefinitionParams","doc":""},"Lean.Lsp.instFromJsonDeclarationParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L84-L84","name":"Lean.Lsp.instFromJsonDeclarationParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonDeclarationParams","doc":""},"Lean.Lsp.instFromJsonCompletionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L71-L71","name":"Lean.Lsp.instFromJsonCompletionParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonCompletionParams","doc":""},"Lean.Lsp.instFromJsonCompletionOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L19-L19","name":"Lean.Lsp.instFromJsonCompletionOptions","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonCompletionOptions","doc":""},"Lean.Lsp.instFromJsonCompletionList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L67-L67","name":"Lean.Lsp.instFromJsonCompletionList","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonCompletionList","doc":""},"Lean.Lsp.instFromJsonCompletionItemKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L32-L35","name":"Lean.Lsp.instFromJsonCompletionItemKind","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonCompletionItemKind","doc":""},"Lean.Lsp.instFromJsonCompletionItemCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L22-L22","name":"Lean.Lsp.instFromJsonCompletionItemCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instFromJsonCompletionItemCapabilities","doc":""},"Lean.Lsp.instFromJsonCompletionItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L62-L62","name":"Lean.Lsp.instFromJsonCompletionItem","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instFromJsonCompletionItem","doc":""},"Lean.Lsp.instFromJsonCompletionClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L26-L26","name":"Lean.Lsp.instFromJsonCompletionClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instFromJsonCompletionClientCapabilities","doc":""},"Lean.Lsp.instFromJsonCommand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L70-L70","name":"Lean.Lsp.instFromJsonCommand","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonCommand","doc":""},"Lean.Lsp.instFromJsonClientInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L22-L22","name":"Lean.Lsp.instFromJsonClientInfo","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.instFromJsonClientInfo","doc":""},"Lean.Lsp.instFromJsonClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L43-L43","name":"Lean.Lsp.instFromJsonClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.instFromJsonClientCapabilities","doc":""},"Lean.Lsp.instFromJsonCancelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L23-L23","name":"Lean.Lsp.instFromJsonCancelParams","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instFromJsonCancelParams","doc":""},"Lean.Lsp.instFileSourceWaitForDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L60-L61","name":"Lean.Lsp.instFileSourceWaitForDiagnosticsParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceWaitForDiagnosticsParams","doc":""},"Lean.Lsp.instFileSourceVersionedTextDocumentIdentifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L21-L22","name":"Lean.Lsp.instFileSourceVersionedTextDocumentIdentifier","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceVersionedTextDocumentIdentifier","doc":""},"Lean.Lsp.instFileSourceTypeDefinitionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L54-L55","name":"Lean.Lsp.instFileSourceTypeDefinitionParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceTypeDefinitionParams","doc":""},"Lean.Lsp.instFileSourceTextDocumentPositionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L30-L31","name":"Lean.Lsp.instFileSourceTextDocumentPositionParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceTextDocumentPositionParams","doc":""},"Lean.Lsp.instFileSourceTextDocumentItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L27-L28","name":"Lean.Lsp.instFileSourceTextDocumentItem","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceTextDocumentItem","doc":""},"Lean.Lsp.instFileSourceTextDocumentIdentifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L18-L19","name":"Lean.Lsp.instFileSourceTextDocumentIdentifier","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceTextDocumentIdentifier","doc":""},"Lean.Lsp.instFileSourceTextDocumentEdit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L24-L25","name":"Lean.Lsp.instFileSourceTextDocumentEdit","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceTextDocumentEdit","doc":""},"Lean.Lsp.instFileSourceSemanticTokensRangeParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L72-L73","name":"Lean.Lsp.instFileSourceSemanticTokensRangeParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceSemanticTokensRangeParams","doc":""},"Lean.Lsp.instFileSourceSemanticTokensParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L69-L70","name":"Lean.Lsp.instFileSourceSemanticTokensParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceSemanticTokensParams","doc":""},"Lean.Lsp.instFileSourceRpcReleaseParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L90-L91","name":"Lean.Lsp.instFileSourceRpcReleaseParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceRpcReleaseParams","doc":""},"Lean.Lsp.instFileSourceRpcKeepAliveParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L93-L94","name":"Lean.Lsp.instFileSourceRpcKeepAliveParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceRpcKeepAliveParams","doc":""},"Lean.Lsp.instFileSourceRpcConnectParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L84-L85","name":"Lean.Lsp.instFileSourceRpcConnectParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceRpcConnectParams","doc":""},"Lean.Lsp.instFileSourceRpcCallParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L87-L88","name":"Lean.Lsp.instFileSourceRpcCallParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceRpcCallParams","doc":""},"Lean.Lsp.instFileSourceReferenceParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L57-L58","name":"Lean.Lsp.instFileSourceReferenceParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceReferenceParams","doc":""},"Lean.Lsp.instFileSourcePlainTermGoalParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L81-L82","name":"Lean.Lsp.instFileSourcePlainTermGoalParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourcePlainTermGoalParams","doc":""},"Lean.Lsp.instFileSourcePlainGoalParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L78-L79","name":"Lean.Lsp.instFileSourcePlainGoalParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourcePlainGoalParams","doc":""},"Lean.Lsp.instFileSourceLocation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L15-L16","name":"Lean.Lsp.instFileSourceLocation","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceLocation","doc":""},"Lean.Lsp.instFileSourceHoverParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L45-L46","name":"Lean.Lsp.instFileSourceHoverParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceHoverParams","doc":""},"Lean.Lsp.instFileSourceFoldingRangeParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L75-L76","name":"Lean.Lsp.instFileSourceFoldingRangeParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceFoldingRangeParams","doc":""},"Lean.Lsp.instFileSourceDocumentSymbolParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L66-L67","name":"Lean.Lsp.instFileSourceDocumentSymbolParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceDocumentSymbolParams","doc":""},"Lean.Lsp.instFileSourceDocumentHighlightParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L63-L64","name":"Lean.Lsp.instFileSourceDocumentHighlightParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceDocumentHighlightParams","doc":""},"Lean.Lsp.instFileSourceDidOpenTextDocumentParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L33-L34","name":"Lean.Lsp.instFileSourceDidOpenTextDocumentParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceDidOpenTextDocumentParams","doc":""},"Lean.Lsp.instFileSourceDidCloseTextDocumentParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L39-L40","name":"Lean.Lsp.instFileSourceDidCloseTextDocumentParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceDidCloseTextDocumentParams","doc":""},"Lean.Lsp.instFileSourceDidChangeTextDocumentParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L36-L37","name":"Lean.Lsp.instFileSourceDidChangeTextDocumentParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceDidChangeTextDocumentParams","doc":""},"Lean.Lsp.instFileSourceDefinitionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L51-L52","name":"Lean.Lsp.instFileSourceDefinitionParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceDefinitionParams","doc":""},"Lean.Lsp.instFileSourceDeclarationParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L48-L49","name":"Lean.Lsp.instFileSourceDeclarationParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceDeclarationParams","doc":""},"Lean.Lsp.instFileSourceCompletionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L42-L43","name":"Lean.Lsp.instFileSourceCompletionParams","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.instFileSourceCompletionParams","doc":""},"Lean.Lsp.instDecidableEqCompletionItemKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L27-L27","name":"Lean.Lsp.instDecidableEqCompletionItemKind","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.instDecidableEqCompletionItemKind","doc":""},"Lean.Lsp.instBEqRpcRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L95-L95","name":"Lean.Lsp.instBEqRpcRef","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instBEqRpcRef","doc":""},"Lean.Lsp.instBEqRefIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L24-L24","name":"Lean.Lsp.instBEqRefIdent","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.instBEqRefIdent","doc":""},"Lean.Lsp.instBEqRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L45-L45","name":"Lean.Lsp.instBEqRange","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instBEqRange","doc":""},"Lean.Lsp.instBEqPublishDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L94-L94","name":"Lean.Lsp.instBEqPublishDiagnosticsParams","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instBEqPublishDiagnosticsParams","doc":""},"Lean.Lsp.instBEqPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L34-L34","name":"Lean.Lsp.instBEqPosition","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instBEqPosition","doc":""},"Lean.Lsp.instBEqLocation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L53-L53","name":"Lean.Lsp.instBEqLocation","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instBEqLocation","doc":""},"Lean.Lsp.instBEqLeanFileProgressKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L38-L38","name":"Lean.Lsp.instBEqLeanFileProgressKind","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.instBEqLeanFileProgressKind","doc":""},"Lean.Lsp.instBEqDiagnosticWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L86-L86","name":"Lean.Lsp.instBEqDiagnosticWith","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instBEqDiagnosticWith","doc":""},"Lean.Lsp.instBEqDiagnosticTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L56-L56","name":"Lean.Lsp.instBEqDiagnosticTag","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instBEqDiagnosticTag","doc":""},"Lean.Lsp.instBEqDiagnosticSeverity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L23-L23","name":"Lean.Lsp.instBEqDiagnosticSeverity","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instBEqDiagnosticSeverity","doc":""},"Lean.Lsp.instBEqDiagnosticRelatedInformation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L71-L71","name":"Lean.Lsp.instBEqDiagnosticRelatedInformation","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instBEqDiagnosticRelatedInformation","doc":""},"Lean.Lsp.instBEqDiagnosticCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L42-L42","name":"Lean.Lsp.instBEqDiagnosticCode","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.instBEqDiagnosticCode","doc":""},"Lean.Lsp.instBEqCancelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L23-L23","name":"Lean.Lsp.instBEqCancelParams","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.instBEqCancelParams","doc":""},"Lean.Lsp.WorkspaceSymbolParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L100-L102","name":"Lean.Lsp.WorkspaceSymbolParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.WorkspaceSymbolParams","doc":""},"Lean.Lsp.WorkspaceFolder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L15-L18","name":"Lean.Lsp.WorkspaceFolder","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.WorkspaceFolder","doc":""},"Lean.Lsp.WorkDoneProgressReport":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L163-L168","name":"Lean.Lsp.WorkDoneProgressReport","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.WorkDoneProgressReport","doc":""},"Lean.Lsp.WorkDoneProgressEnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L175-L178","name":"Lean.Lsp.WorkDoneProgressEnd","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.WorkDoneProgressEnd","doc":""},"Lean.Lsp.WorkDoneProgressBegin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L170-L173","name":"Lean.Lsp.WorkDoneProgressBegin","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.WorkDoneProgressBegin","doc":""},"Lean.Lsp.WindowClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L36-L38","name":"Lean.Lsp.WindowClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.WindowClientCapabilities","doc":""},"Lean.Lsp.WaitForDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L22-L25","name":"Lean.Lsp.WaitForDiagnosticsParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.WaitForDiagnosticsParams","doc":"`textDocument/waitForDiagnostics` client->server request.\n\nYields a response when all the diagnostics for a version of the document greater or equal to the\nspecified one have been emitted. If the request specifies a version above the most recently\nprocessed one, the server will delay the response until it does receive the specified version.\nExists for synchronization purposes, e.g. during testing or when external tools might want to use\nour LSP server. "},"Lean.Lsp.WaitForDiagnostics":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L28-L28","name":"Lean.Lsp.WaitForDiagnostics","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.WaitForDiagnostics","doc":"`textDocument/waitForDiagnostics` client<-server reply. "},"Lean.Lsp.VersionedTextDocumentIdentifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L89-L92","name":"Lean.Lsp.VersionedTextDocumentIdentifier","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.VersionedTextDocumentIdentifier","doc":""},"Lean.Lsp.TypeDefinitionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L89-L90","name":"Lean.Lsp.TypeDefinitionParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.TypeDefinitionParams","doc":""},"Lean.Lsp.Trace.hasToJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L36-L40","name":"Lean.Lsp.Trace.hasToJson","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.Trace.hasToJson","doc":""},"Lean.Lsp.Trace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L24-L27","name":"Lean.Lsp.Trace","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.Trace","doc":""},"Lean.Lsp.TextEditBatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L77-L77","name":"Lean.Lsp.TextEditBatch","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.TextEditBatch","doc":""},"Lean.Lsp.TextEdit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L72-L75","name":"Lean.Lsp.TextEdit","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.TextEdit","doc":""},"Lean.Lsp.TextDocumentSyncOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L82-L88","name":"Lean.Lsp.TextDocumentSyncOptions","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.TextDocumentSyncOptions","doc":"NOTE: This is defined twice in the spec. The latter version has more fields. "},"Lean.Lsp.TextDocumentSyncKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L17-L20","name":"Lean.Lsp.TextDocumentSyncKind","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.TextDocumentSyncKind","doc":""},"Lean.Lsp.TextDocumentRegistrationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L137-L139","name":"Lean.Lsp.TextDocumentRegistrationOptions","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.TextDocumentRegistrationOptions","doc":""},"Lean.Lsp.TextDocumentPositionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L111-L114","name":"Lean.Lsp.TextDocumentPositionParams","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.TextDocumentPositionParams","doc":""},"Lean.Lsp.TextDocumentItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L104-L109","name":"Lean.Lsp.TextDocumentItem","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.TextDocumentItem","doc":""},"Lean.Lsp.TextDocumentIdentifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L85-L87","name":"Lean.Lsp.TextDocumentIdentifier","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.TextDocumentIdentifier","doc":""},"Lean.Lsp.TextDocumentEdit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L94-L97","name":"Lean.Lsp.TextDocumentEdit","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.TextDocumentEdit","doc":""},"Lean.Lsp.TextDocumentContentChangeEvent.hasToJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L57-L60","name":"Lean.Lsp.TextDocumentContentChangeEvent.hasToJson","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.TextDocumentContentChangeEvent.hasToJson","doc":""},"Lean.Lsp.TextDocumentContentChangeEvent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L43-L46","name":"Lean.Lsp.TextDocumentContentChangeEvent","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.TextDocumentContentChangeEvent","doc":""},"Lean.Lsp.TextDocumentClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L28-L30","name":"Lean.Lsp.TextDocumentClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.TextDocumentClientCapabilities","doc":""},"Lean.Lsp.TextDocumentChangeRegistrationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L38-L41","name":"Lean.Lsp.TextDocumentChangeRegistrationOptions","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.TextDocumentChangeRegistrationOptions","doc":""},"Lean.Lsp.SymbolTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L213-L214","name":"Lean.Lsp.SymbolTag","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SymbolTag","doc":""},"Lean.Lsp.SymbolKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L129-L155","name":"Lean.Lsp.SymbolKind","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SymbolKind","doc":""},"Lean.Lsp.SymbolInformation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L220-L226","name":"Lean.Lsp.SymbolInformation","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SymbolInformation","doc":""},"Lean.Lsp.StaticRegistrationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L133-L135","name":"Lean.Lsp.StaticRegistrationOptions","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.StaticRegistrationOptions","doc":""},"Lean.Lsp.ShowDocumentClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L32-L34","name":"Lean.Lsp.ShowDocumentClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.ShowDocumentClientCapabilities","doc":""},"Lean.Lsp.ServerInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L100-L103","name":"Lean.Lsp.ServerInfo","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.ServerInfo","doc":""},"Lean.Lsp.ServerCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L46-L59","name":"Lean.Lsp.ServerCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.ServerCapabilities","doc":""},"Lean.Lsp.SemanticTokensRangeParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L320-L323","name":"Lean.Lsp.SemanticTokensRangeParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SemanticTokensRangeParams","doc":""},"Lean.Lsp.SemanticTokensParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L316-L318","name":"Lean.Lsp.SemanticTokensParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SemanticTokensParams","doc":""},"Lean.Lsp.SemanticTokensOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L308-L314","name":"Lean.Lsp.SemanticTokensOptions","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SemanticTokensOptions","doc":""},"Lean.Lsp.SemanticTokensLegend":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L303-L306","name":"Lean.Lsp.SemanticTokensLegend","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SemanticTokensLegend","doc":""},"Lean.Lsp.SemanticTokens":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L325-L328","name":"Lean.Lsp.SemanticTokens","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SemanticTokens","doc":""},"Lean.Lsp.SemanticTokenType.toNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L264-L265","name":"Lean.Lsp.SemanticTokenType.toNat","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SemanticTokenType.toNat","doc":""},"Lean.Lsp.SemanticTokenType.names":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L258-L262","name":"Lean.Lsp.SemanticTokenType.names","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SemanticTokenType.names","doc":""},"Lean.Lsp.SemanticTokenType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L228-L255","name":"Lean.Lsp.SemanticTokenType","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SemanticTokenType","doc":""},"Lean.Lsp.SemanticTokenModifier.toNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L295-L296","name":"Lean.Lsp.SemanticTokenModifier.toNat","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SemanticTokenModifier.toNat","doc":""},"Lean.Lsp.SemanticTokenModifier.names":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L291-L293","name":"Lean.Lsp.SemanticTokenModifier.names","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SemanticTokenModifier.names","doc":""},"Lean.Lsp.SemanticTokenModifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L277-L288","name":"Lean.Lsp.SemanticTokenModifier","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.SemanticTokenModifier","doc":"The semantic token modifiers included by default in the LSP specification.\nNot used by the Lean core, but implementing them here allows them to be\nutilized by users extending the Lean server.\n"},"Lean.Lsp.SaveOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L71-L73","name":"Lean.Lsp.SaveOptions","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.SaveOptions","doc":""},"Lean.Lsp.RpcReleaseParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L137-L141","name":"Lean.Lsp.RpcReleaseParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.RpcReleaseParams","doc":"`$/lean/rpc/release` client->server notification.\n\nA notification to release remote references. Should be sent by the client when it no longer needs\n`RpcRef`s it has previously received from the server. Not doing so is safe but will leak memory. "},"Lean.Lsp.RpcRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L91-L95","name":"Lean.Lsp.RpcRef","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.RpcRef","doc":"An object which RPC clients can refer to without marshalling. "},"Lean.Lsp.RpcKeepAliveParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L148-L151","name":"Lean.Lsp.RpcKeepAliveParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.RpcKeepAliveParams","doc":"`$/lean/rpc/keepAlive` client->server notification.\n\nThe client must send an RPC notification every 10s in order to keep the RPC session alive.\nThis is the simplest one. On not seeing any notifications for three 10s periods, the server\nwill drop the RPC session and its associated references. "},"Lean.Lsp.RpcConnected":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L115-L117","name":"Lean.Lsp.RpcConnected","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.RpcConnected","doc":"`$/lean/rpc/connect` client<-server reply.\n\nIndicates that an RPC connection had been made and a session started for it. "},"Lean.Lsp.RpcConnectParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L108-L110","name":"Lean.Lsp.RpcConnectParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.RpcConnectParams","doc":"`$/lean/rpc/connect` client->server request.\n\nStarts an RPC session at the given file's worker, replying with the new session ID.\nMultiple sessions may be started and operating concurrently.\n\nA session may be destroyed by the server at any time (e.g. due to a crash), in which case further\nRPC requests for that session will reply with `RpcNeedsReconnect` errors. The client should discard\nreferences held from that session and `connect` again. "},"Lean.Lsp.RpcCallParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L126-L131","name":"Lean.Lsp.RpcCallParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.RpcCallParams","doc":"`$/lean/rpc/call` client->server request.\n\nA request to execute a procedure bound for RPC. If an incorrect session ID is present, the server\nerrors with `RpcNeedsReconnect`.\n\nExtending TDPP is weird. But in Lean, symbols exist in the context of a position within a source\nfile. So we need this to refer to code in the environment at that position. "},"Lean.Lsp.RegistrationParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Client.lean#L22-L24","name":"Lean.Lsp.RegistrationParams","docLink":"./Lean/Data/Lsp/Client.html#Lean.Lsp.RegistrationParams","doc":""},"Lean.Lsp.Registration":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Client.lean#L16-L20","name":"Lean.Lsp.Registration","docLink":"./Lean/Data/Lsp/Client.html#Lean.Lsp.Registration","doc":""},"Lean.Lsp.ReferenceParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L96-L98","name":"Lean.Lsp.ReferenceParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.ReferenceParams","doc":""},"Lean.Lsp.ReferenceContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L92-L94","name":"Lean.Lsp.ReferenceContext","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.ReferenceContext","doc":""},"Lean.Lsp.RefInfo.merge":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L69-L73","name":"Lean.Lsp.RefInfo.merge","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.merge","doc":""},"Lean.Lsp.RefInfo.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L67-L67","name":"Lean.Lsp.RefInfo.empty","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.empty","doc":""},"Lean.Lsp.RefInfo.contains.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L84-L85","name":"Lean.Lsp.RefInfo.contains.contains","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.contains.contains","doc":""},"Lean.Lsp.RefInfo.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L75-L85","name":"Lean.Lsp.RefInfo.contains","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.contains","doc":""},"Lean.Lsp.RefInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L48-L50","name":"Lean.Lsp.RefInfo","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo","doc":""},"Lean.Lsp.RefIdent.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L28-L30","name":"Lean.Lsp.RefIdent.toString","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent.toString","doc":""},"Lean.Lsp.RefIdent.fromString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L32-L44","name":"Lean.Lsp.RefIdent.fromString","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent.fromString","doc":""},"Lean.Lsp.RefIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L21-L24","name":"Lean.Lsp.RefIdent","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent","doc":""},"Lean.Lsp.Range":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L42-L45","name":"Lean.Lsp.Range","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range","doc":""},"Lean.Lsp.PublishDiagnosticsParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L90-L94","name":"Lean.Lsp.PublishDiagnosticsParams","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.PublishDiagnosticsParams","doc":""},"Lean.Lsp.ProgressParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L158-L161","name":"Lean.Lsp.ProgressParams","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.ProgressParams","doc":""},"Lean.Lsp.Position":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L31-L34","name":"Lean.Lsp.Position","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position","doc":"We adopt the convention that zero-based UTF-16 positions as sent by LSP clients\nare represented by `Lsp.Position` while internally we mostly use `String.Pos` UTF-8\noffsets. For diagnostics, one-based `Lean.Position`s are used internally.\n`character` is accepted liberally: actual character := min(line length, character) "},"Lean.Lsp.PlainTermGoalParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L81-L82","name":"Lean.Lsp.PlainTermGoalParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.PlainTermGoalParams","doc":"`$/lean/plainTermGoal` client->server request.\n\nReturns the expected type at the specified position, pretty-printed as a string. "},"Lean.Lsp.PlainTermGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L85-L88","name":"Lean.Lsp.PlainTermGoal","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.PlainTermGoal","doc":"`$/lean/plainTermGoal` client<-server reply. "},"Lean.Lsp.PlainGoalParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L67-L68","name":"Lean.Lsp.PlainGoalParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.PlainGoalParams","doc":"`$/lean/plainGoal` client->server request.\n\nIf there is a tactic proof at the specified position, returns the current goals.\nOtherwise returns `null`. "},"Lean.Lsp.PlainGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L71-L76","name":"Lean.Lsp.PlainGoal","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.PlainGoal","doc":"`$/lean/plainGoal` client<-server reply. "},"Lean.Lsp.ModuleRefs.findAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/References.lean#L92-L97","name":"Lean.Lsp.ModuleRefs.findAt","docLink":"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findAt","doc":""},"Lean.Lsp.ModuleRefs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L75-L75","name":"Lean.Lsp.ModuleRefs","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs","doc":"References from a single module/file "},"Lean.Lsp.MarkupKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L141-L142","name":"Lean.Lsp.MarkupKind","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.MarkupKind","doc":""},"Lean.Lsp.MarkupContent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L153-L156","name":"Lean.Lsp.MarkupContent","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.MarkupContent","doc":""},"Lean.Lsp.LocationLink":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L55-L60","name":"Lean.Lsp.LocationLink","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.LocationLink","doc":""},"Lean.Lsp.Location":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L50-L53","name":"Lean.Lsp.Location","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Location","doc":""},"Lean.Lsp.LineRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L156-L159","name":"Lean.Lsp.LineRange","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.LineRange","doc":"Range of lines in a document, including `start` but excluding `end`.\n"},"Lean.Lsp.LeanIleanInfoParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Internal.lean#L89-L93","name":"Lean.Lsp.LeanIleanInfoParams","docLink":"./Lean/Data/Lsp/Internal.html#Lean.Lsp.LeanIleanInfoParams","doc":"`$/lean/ileanInfoUpdate` and `$/lean/ileanInfoFinal` watchdog<-worker notifications.\n\nContains the file's definitions and references. "},"Lean.Lsp.LeanFileProgressProcessingInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L50-L53","name":"Lean.Lsp.LeanFileProgressProcessingInfo","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.LeanFileProgressProcessingInfo","doc":""},"Lean.Lsp.LeanFileProgressParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L58-L61","name":"Lean.Lsp.LeanFileProgressParams","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.LeanFileProgressParams","doc":"`$/lean/fileProgress` client<-server notification.\n\nContains the ranges of the document that are currently being processed by the server. "},"Lean.Lsp.LeanFileProgressKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Extra.lean#L36-L38","name":"Lean.Lsp.LeanFileProgressKind","docLink":"./Lean/Data/Lsp/Extra.html#Lean.Lsp.LeanFileProgressKind","doc":""},"Lean.Lsp.Ipc.writeRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L36-L37","name":"Lean.Lsp.Ipc.writeRequest","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.writeRequest","doc":""},"Lean.Lsp.Ipc.writeNotification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L39-L40","name":"Lean.Lsp.Ipc.writeNotification","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.writeNotification","doc":""},"Lean.Lsp.Ipc.waitForExit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L51-L52","name":"Lean.Lsp.Ipc.waitForExit","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.waitForExit","doc":""},"Lean.Lsp.Ipc.stdout":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L33-L34","name":"Lean.Lsp.Ipc.stdout","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.stdout","doc":""},"Lean.Lsp.Ipc.stdin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L30-L31","name":"Lean.Lsp.Ipc.stdin","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.stdin","doc":""},"Lean.Lsp.Ipc.runWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L75-L80","name":"Lean.Lsp.Ipc.runWith","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.runWith","doc":""},"Lean.Lsp.Ipc.readResponseAs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L48-L49","name":"Lean.Lsp.Ipc.readResponseAs","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.readResponseAs","doc":""},"Lean.Lsp.Ipc.readRequestAs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L45-L46","name":"Lean.Lsp.Ipc.readRequestAs","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.readRequestAs","doc":""},"Lean.Lsp.Ipc.readMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L42-L43","name":"Lean.Lsp.Ipc.readMessage","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.readMessage","doc":""},"Lean.Lsp.Ipc.ipcStdioConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L21-L24","name":"Lean.Lsp.Ipc.ipcStdioConfig","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.ipcStdioConfig","doc":""},"Lean.Lsp.Ipc.collectDiagnostics.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L59-L72","name":"Lean.Lsp.Ipc.collectDiagnostics.loop","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.collectDiagnostics.loop","doc":""},"Lean.Lsp.Ipc.collectDiagnostics":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L56-L73","name":"Lean.Lsp.Ipc.collectDiagnostics","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.collectDiagnostics","doc":"Waits for the worker to emit all diagnostics for the current document version\nand returns them as a list. "},"Lean.Lsp.Ipc.IpcM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Ipc.lean#L26-L26","name":"Lean.Lsp.Ipc.IpcM","docLink":"./Lean/Data/Lsp/Ipc.html#Lean.Lsp.Ipc.IpcM","doc":""},"Lean.Lsp.InsertReplaceEdit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L37-L41","name":"Lean.Lsp.InsertReplaceEdit","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.InsertReplaceEdit","doc":""},"Lean.Lsp.InitializedParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L91-L92","name":"Lean.Lsp.InitializedParams","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.InitializedParams","doc":""},"Lean.Lsp.InitializeResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L105-L108","name":"Lean.Lsp.InitializeResult","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.InitializeResult","doc":""},"Lean.Lsp.InitializeParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L53-L64","name":"Lean.Lsp.InitializeParams","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.InitializeParams","doc":""},"Lean.Lsp.InitializationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L43-L51","name":"Lean.Lsp.InitializationOptions","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.InitializationOptions","doc":"Lean-specific initialization options. "},"Lean.Lsp.HoverParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L80-L81","name":"Lean.Lsp.HoverParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.HoverParams","doc":""},"Lean.Lsp.Hover":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L73-L78","name":"Lean.Lsp.Hover","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.Hover","doc":""},"Lean.Lsp.FoldingRangeParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L330-L332","name":"Lean.Lsp.FoldingRangeParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.FoldingRangeParams","doc":""},"Lean.Lsp.FoldingRangeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L334-L337","name":"Lean.Lsp.FoldingRangeKind","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.FoldingRangeKind","doc":""},"Lean.Lsp.FoldingRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L345-L349","name":"Lean.Lsp.FoldingRange","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.FoldingRange","doc":""},"Lean.Lsp.FileSystemWatcher.delete":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L35-L35","name":"Lean.Lsp.FileSystemWatcher.delete","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.FileSystemWatcher.delete","doc":""},"Lean.Lsp.FileSystemWatcher.create":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L33-L33","name":"Lean.Lsp.FileSystemWatcher.create","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.FileSystemWatcher.create","doc":""},"Lean.Lsp.FileSystemWatcher.change":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L34-L34","name":"Lean.Lsp.FileSystemWatcher.change","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.FileSystemWatcher.change","doc":""},"Lean.Lsp.FileSystemWatcher":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L25-L28","name":"Lean.Lsp.FileSystemWatcher","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.FileSystemWatcher","doc":""},"Lean.Lsp.FileSource":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/FileSource.lean#L11-L12","name":"Lean.Lsp.FileSource","docLink":"./Lean/Server/FileSource.html#Lean.Lsp.FileSource","doc":""},"Lean.Lsp.FileEvent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L62-L65","name":"Lean.Lsp.FileEvent","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.FileEvent","doc":""},"Lean.Lsp.FileChangeType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L43-L46","name":"Lean.Lsp.FileChangeType","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.FileChangeType","doc":""},"Lean.Lsp.DocumentUri.toPath?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L79-L85","name":"Lean.Lsp.DocumentUri.toPath?","docLink":"./Lean/Server/Utils.html#Lean.Lsp.DocumentUri.toPath?","doc":"Return local path from file:// URI, if any. "},"Lean.Lsp.DocumentUri.ofPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L68-L76","name":"Lean.Lsp.DocumentUri.ofPath","docLink":"./Lean/Server/Utils.html#Lean.Lsp.DocumentUri.ofPath","doc":"Transform the given path to a file:// URI. "},"Lean.Lsp.DocumentUri":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L25-L25","name":"Lean.Lsp.DocumentUri","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.DocumentUri","doc":""},"Lean.Lsp.DocumentSymbolResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L207-L208","name":"Lean.Lsp.DocumentSymbolResult","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.DocumentSymbolResult","doc":""},"Lean.Lsp.DocumentSymbolParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L125-L127","name":"Lean.Lsp.DocumentSymbolParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.DocumentSymbolParams","doc":""},"Lean.Lsp.DocumentSymbolAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L186-L194","name":"Lean.Lsp.DocumentSymbolAux","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.DocumentSymbolAux","doc":""},"Lean.Lsp.DocumentSymbol":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L196-L197","name":"Lean.Lsp.DocumentSymbol","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.DocumentSymbol","doc":""},"Lean.Lsp.DocumentSelector":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L125-L125","name":"Lean.Lsp.DocumentSelector","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.DocumentSelector","doc":""},"Lean.Lsp.DocumentHighlightResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L123-L123","name":"Lean.Lsp.DocumentHighlightResult","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.DocumentHighlightResult","doc":""},"Lean.Lsp.DocumentHighlightParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L104-L105","name":"Lean.Lsp.DocumentHighlightParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.DocumentHighlightParams","doc":""},"Lean.Lsp.DocumentHighlightKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L107-L110","name":"Lean.Lsp.DocumentHighlightKind","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.DocumentHighlightKind","doc":""},"Lean.Lsp.DocumentHighlight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L118-L121","name":"Lean.Lsp.DocumentHighlight","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.DocumentHighlight","doc":""},"Lean.Lsp.DocumentFilter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L119-L123","name":"Lean.Lsp.DocumentFilter","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.DocumentFilter","doc":""},"Lean.Lsp.DidOpenTextDocumentParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L34-L36","name":"Lean.Lsp.DidOpenTextDocumentParams","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.DidOpenTextDocumentParams","doc":""},"Lean.Lsp.DidCloseTextDocumentParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L75-L77","name":"Lean.Lsp.DidCloseTextDocumentParams","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.DidCloseTextDocumentParams","doc":""},"Lean.Lsp.DidChangeWatchedFilesRegistrationOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L39-L41","name":"Lean.Lsp.DidChangeWatchedFilesRegistrationOptions","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.DidChangeWatchedFilesRegistrationOptions","doc":""},"Lean.Lsp.DidChangeWatchedFilesParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Workspace.lean#L67-L69","name":"Lean.Lsp.DidChangeWatchedFilesParams","docLink":"./Lean/Data/Lsp/Workspace.html#Lean.Lsp.DidChangeWatchedFilesParams","doc":""},"Lean.Lsp.DidChangeTextDocumentParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/TextSync.lean#L62-L65","name":"Lean.Lsp.DidChangeTextDocumentParams","docLink":"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.DidChangeTextDocumentParams","doc":""},"Lean.Lsp.DiagnosticWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L73-L86","name":"Lean.Lsp.DiagnosticWith","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.DiagnosticWith","doc":""},"Lean.Lsp.DiagnosticTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L53-L56","name":"Lean.Lsp.DiagnosticTag","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.DiagnosticTag","doc":""},"Lean.Lsp.DiagnosticSeverity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L21-L23","name":"Lean.Lsp.DiagnosticSeverity","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.DiagnosticSeverity","doc":""},"Lean.Lsp.DiagnosticRelatedInformation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L68-L71","name":"Lean.Lsp.DiagnosticRelatedInformation","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.DiagnosticRelatedInformation","doc":""},"Lean.Lsp.DiagnosticCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L39-L42","name":"Lean.Lsp.DiagnosticCode","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.DiagnosticCode","doc":""},"Lean.Lsp.Diagnostic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Diagnostics.lean#L88-L88","name":"Lean.Lsp.Diagnostic","docLink":"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.Diagnostic","doc":""},"Lean.Lsp.DefinitionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L86-L87","name":"Lean.Lsp.DefinitionParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.DefinitionParams","doc":""},"Lean.Lsp.DeclarationParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L83-L84","name":"Lean.Lsp.DeclarationParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.DeclarationParams","doc":""},"Lean.Lsp.CompletionParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L69-L71","name":"Lean.Lsp.CompletionParams","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.CompletionParams","doc":""},"Lean.Lsp.CompletionOptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L15-L19","name":"Lean.Lsp.CompletionOptions","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.CompletionOptions","doc":""},"Lean.Lsp.CompletionList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L64-L67","name":"Lean.Lsp.CompletionList","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.CompletionList","doc":""},"Lean.Lsp.CompletionItemKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L21-L27","name":"Lean.Lsp.CompletionItemKind","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.CompletionItemKind","doc":""},"Lean.Lsp.CompletionItemCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L20-L22","name":"Lean.Lsp.CompletionItemCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.CompletionItemCapabilities","doc":""},"Lean.Lsp.CompletionItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/LanguageFeatures.lean#L43-L62","name":"Lean.Lsp.CompletionItem","docLink":"./Lean/Data/Lsp/LanguageFeatures.html#Lean.Lsp.CompletionItem","doc":""},"Lean.Lsp.CompletionClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L24-L26","name":"Lean.Lsp.CompletionClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.CompletionClientCapabilities","doc":""},"Lean.Lsp.Command":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L66-L70","name":"Lean.Lsp.Command","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Command","doc":"NOTE: No specific commands are specified by LSP, hence\npossible commands need to be announced as capabilities. "},"Lean.Lsp.ClientInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/InitShutdown.lean#L19-L22","name":"Lean.Lsp.ClientInfo","docLink":"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.ClientInfo","doc":""},"Lean.Lsp.ClientCapabilities":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Capabilities.lean#L40-L43","name":"Lean.Lsp.ClientCapabilities","docLink":"./Lean/Data/Lsp/Capabilities.html#Lean.Lsp.ClientCapabilities","doc":""},"Lean.Lsp.CancelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Basic.lean#L21-L23","name":"Lean.Lsp.CancelParams","docLink":"./Lean/Data/Lsp/Basic.html#Lean.Lsp.CancelParams","doc":""},"Lean.Loop.forIn.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L297-L300","name":"Lean.Loop.forIn.loop","docLink":"./Init/NotationExtra.html#Lean.Loop.forIn.loop","doc":""},"Lean.Loop.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L296-L301","name":"Lean.Loop.forIn","docLink":"./Init/NotationExtra.html#Lean.Loop.forIn","doc":""},"Lean.Loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/NotationExtra.lean#L292-L293","name":"Lean.Loop","docLink":"./Init/NotationExtra.html#Lean.Loop","doc":""},"Lean.LocalInstances.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L238-L241","name":"Lean.LocalInstances.erase","docLink":"./Lean/MetavarContext.html#Lean.LocalInstances.erase","doc":"Remove local instance with the given `fvarId`. Do nothing if `localInsts` does not contain any free variable with id `fvarId`. "},"Lean.LocalInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L232-L232","name":"Lean.LocalInstances","docLink":"./Lean/MetavarContext.html#Lean.LocalInstances","doc":""},"Lean.LocalInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L227-L230","name":"Lean.LocalInstance","docLink":"./Lean/MetavarContext.html#Lean.LocalInstance","doc":"`LocalInstance` represents a local typeclass instance registered by and for\nthe elaborator. It stores the name of the typeclass in `className`, and the\nconcrete typeclass instance in `fvar`. Note that the kernel does not care about\nthis information, since typeclasses are entirely eliminated during elaboration.\n"},"Lean.LocalDecl.value?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L72-L74","name":"Lean.LocalDecl.value?","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.value?","doc":""},"Lean.LocalDecl.value":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L76-L78","name":"Lean.LocalDecl.value","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.value","doc":""},"Lean.LocalDecl.userName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L53-L55","name":"Lean.LocalDecl.userName","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.userName","doc":""},"Lean.LocalDecl.type":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L57-L59","name":"Lean.LocalDecl.type","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.type","doc":""},"Lean.LocalDecl.toExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L96-L97","name":"Lean.LocalDecl.toExpr","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.toExpr","doc":""},"Lean.LocalDecl.setValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L84-L86","name":"Lean.LocalDecl.setValue","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.setValue","doc":""},"Lean.LocalDecl.setUserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L88-L90","name":"Lean.LocalDecl.setUserName","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.setUserName","doc":""},"Lean.LocalDecl.setType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L61-L63","name":"Lean.LocalDecl.setType","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.setType","doc":""},"Lean.LocalDecl.setIndex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L45-L47","name":"Lean.LocalDecl.setIndex","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.setIndex","doc":""},"Lean.LocalDecl.setBinderInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L92-L94","name":"Lean.LocalDecl.setBinderInfo","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.setBinderInfo","doc":""},"Lean.LocalDecl.replaceFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L426-L430","name":"Lean.LocalDecl.replaceFVarId","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.replaceFVarId","doc":""},"Lean.LocalDecl.isLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L37-L39","name":"Lean.LocalDecl.isLet","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.isLet","doc":""},"Lean.LocalDecl.isAuxDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L69-L70","name":"Lean.LocalDecl.isAuxDecl","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.isAuxDecl","doc":""},"Lean.LocalDecl.index":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L41-L43","name":"Lean.LocalDecl.index","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.index","doc":""},"Lean.LocalDecl.hasValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L80-L82","name":"Lean.LocalDecl.hasValue","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.hasValue","doc":""},"Lean.LocalDecl.hasExprMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L99-L101","name":"Lean.LocalDecl.hasExprMVar","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.hasExprMVar","doc":""},"Lean.LocalDecl.fvarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L49-L51","name":"Lean.LocalDecl.fvarId","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.fvarId","doc":""},"Lean.LocalDecl.collectFVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CollectFVars.lean#L17-L20","name":"Lean.LocalDecl.collectFVars","docLink":"./Lean/Meta/CollectFVars.html#Lean.LocalDecl.collectFVars","doc":""},"Lean.LocalDecl.binderInfoEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L32-L34","name":"Lean.LocalDecl.binderInfoEx","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.binderInfoEx","doc":""},"Lean.LocalDecl.binderInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L65-L67","name":"Lean.LocalDecl.binderInfo","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.binderInfo","doc":""},"Lean.LocalDecl.applyFVarSubst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L69-L71","name":"Lean.LocalDecl.applyFVarSubst","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.LocalDecl.applyFVarSubst","doc":""},"Lean.LocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L20-L23","name":"Lean.LocalDecl","docLink":"./Lean/LocalContext.html#Lean.LocalDecl","doc":"A declaration for a LocalContext. This is used to register which free variables are in scope.\nEach declaration comes with\n- `index` the position of the decl in the local context\n- `fvarId` the unique id of the free variables\n- `userName` the pretty-printable name of the variable\n- `type` the type.\nA `cdecl` is a local variable, a `ldecl` is a let-bound free variable with a `value : Expr`.\n"},"Lean.LocalContext.usesUserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L225-L226","name":"Lean.LocalContext.usesUserName","docLink":"./Lean/LocalContext.html#Lean.LocalContext.usesUserName","doc":""},"Lean.LocalContext.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L321-L322","name":"Lean.LocalContext.size","docLink":"./Lean/LocalContext.html#Lean.LocalContext.size","doc":""},"Lean.LocalContext.setUserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L243-L247","name":"Lean.LocalContext.setUserName","docLink":"./Lean/LocalContext.html#Lean.LocalContext.setUserName","doc":""},"Lean.LocalContext.setBinderInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L274-L275","name":"Lean.LocalContext.setBinderInfo","docLink":"./Lean/LocalContext.html#Lean.LocalContext.setBinderInfo","doc":""},"Lean.LocalContext.sanitizeNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L399-L413","name":"Lean.LocalContext.sanitizeNames","docLink":"./Lean/LocalContext.html#Lean.LocalContext.sanitizeNames","doc":"If option `pp.sanitizeNames` is set to `true`, add tombstone to shadowed local declaration names and ones contains macroscopes. "},"Lean.LocalContext.replaceFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L432-L435","name":"Lean.LocalContext.replaceFVarId","docLink":"./Lean/LocalContext.html#Lean.LocalContext.replaceFVarId","doc":""},"Lean.LocalContext.renameUserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L250-L258","name":"Lean.LocalContext.renameUserName","docLink":"./Lean/LocalContext.html#Lean.LocalContext.renameUserName","doc":""},"Lean.LocalContext.pop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L209-L215","name":"Lean.LocalContext.pop","docLink":"./Lean/LocalContext.html#Lean.LocalContext.pop","doc":""},"Lean.LocalContext.numIndices":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L278-L279","name":"Lean.LocalContext.numIndices","docLink":"./Lean/LocalContext.html#Lean.LocalContext.numIndices","doc":""},"Lean.LocalContext.modifyLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L264-L272","name":"Lean.LocalContext.modifyLocalDecl","docLink":"./Lean/LocalContext.html#Lean.LocalContext.modifyLocalDecl","doc":"Low-level function for updating the local context.\nAssumptions about `f`, the resulting nested expressions must be definitionally equal to their original values,\nthe `index` nor `fvarId` are modified.  "},"Lean.LocalContext.mkLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L135-L140","name":"Lean.LocalContext.mkLocalDecl","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mkLocalDecl","doc":"Low level API for creating local declarations.\nIt is used to implement actions in the monads `Elab` and `Tactic`.\nIt should not be used directly since the argument `(fvarId : FVarId)` is\nassumed to be unique. You can create a unique fvarId with `mkFreshFVarId`. "},"Lean.LocalContext.mkLetDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L144-L149","name":"Lean.LocalContext.mkLetDecl","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mkLetDecl","doc":"Low level API for let declarations. Do not use directly."},"Lean.LocalContext.mkLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L372-L373","name":"Lean.LocalContext.mkLambda","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mkLambda","doc":"Creates the expression `fun x₁ .. xₙ => b` for free variables `xs = #[x₁, .., xₙ]`,\nsuitably abstracting `b` and the types for each of the `xᵢ`. "},"Lean.LocalContext.mkForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L377-L378","name":"Lean.LocalContext.mkForall","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mkForall","doc":"Creates the expression `(x₁:α₁) → .. → (xₙ:αₙ) → b` for free variables `xs = #[x₁, .., xₙ]`,\nsuitably abstracting `b` and the types for each of the `xᵢ`, `αᵢ`. "},"Lean.LocalContext.mkEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L122-L122","name":"Lean.LocalContext.mkEmpty","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mkEmpty","doc":""},"Lean.LocalContext.mkBinding":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L350-L368","name":"Lean.LocalContext.mkBinding","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mkBinding","doc":""},"Lean.LocalContext.lastDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L240-L241","name":"Lean.LocalContext.lastDecl","docLink":"./Lean/LocalContext.html#Lean.LocalContext.lastDecl","doc":""},"Lean.LocalContext.isSubPrefixOfAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L330-L342","name":"Lean.LocalContext.isSubPrefixOfAux","docLink":"./Lean/LocalContext.html#Lean.LocalContext.isSubPrefixOfAux","doc":""},"Lean.LocalContext.isSubPrefixOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L347-L348","name":"Lean.LocalContext.isSubPrefixOf","docLink":"./Lean/LocalContext.html#Lean.LocalContext.isSubPrefixOf","doc":"Given `lctx₁ - exceptFVars` of the form `(x_1 : A_1) ... (x_n : A_n)`, then return true\niff there is a local context `B_1* (x_1 : A_1) ... B_n* (x_n : A_n)` which is a prefix\nof `lctx₂` where `B_i`'s are (possibly empty) sequences of local declarations. "},"Lean.LocalContext.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L127-L128","name":"Lean.LocalContext.isEmpty","docLink":"./Lean/LocalContext.html#Lean.LocalContext.isEmpty","doc":""},"Lean.LocalContext.instForInLocalContextLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L310-L313","name":"Lean.LocalContext.instForInLocalContextLocalDecl","docLink":"./Lean/LocalContext.html#Lean.LocalContext.instForInLocalContextLocalDecl","doc":""},"Lean.LocalContext.getUnusedName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L234-L237","name":"Lean.LocalContext.getUnusedName","docLink":"./Lean/LocalContext.html#Lean.LocalContext.getUnusedName","doc":""},"Lean.LocalContext.getFVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L191-L192","name":"Lean.LocalContext.getFVars","docLink":"./Lean/LocalContext.html#Lean.LocalContext.getFVars","doc":"Return all of the free variables in the given context. "},"Lean.LocalContext.getFVarIds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L185-L188","name":"Lean.LocalContext.getFVarIds","docLink":"./Lean/LocalContext.html#Lean.LocalContext.getFVarIds","doc":""},"Lean.LocalContext.getFVar!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L174-L175","name":"Lean.LocalContext.getFVar!","docLink":"./Lean/LocalContext.html#Lean.LocalContext.getFVar!","doc":"Gets the declaration for expression `e` in the local context.\nIf `e` is not a free variable or not present then panics. "},"Lean.LocalContext.getAt?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L282-L283","name":"Lean.LocalContext.getAt?","docLink":"./Lean/LocalContext.html#Lean.LocalContext.getAt?","doc":""},"Lean.LocalContext.get!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L167-L170","name":"Lean.LocalContext.get!","docLink":"./Lean/LocalContext.html#Lean.LocalContext.get!","doc":""},"Lean.LocalContext.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L295-L298","name":"Lean.LocalContext.forM","docLink":"./Lean/LocalContext.html#Lean.LocalContext.forM","doc":""},"Lean.LocalContext.foldrM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L290-L293","name":"Lean.LocalContext.foldrM","docLink":"./Lean/LocalContext.html#Lean.LocalContext.foldrM","doc":""},"Lean.LocalContext.foldr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L318-L319","name":"Lean.LocalContext.foldr","docLink":"./Lean/LocalContext.html#Lean.LocalContext.foldr","doc":""},"Lean.LocalContext.foldlM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L285-L288","name":"Lean.LocalContext.foldlM","docLink":"./Lean/LocalContext.html#Lean.LocalContext.foldlM","doc":""},"Lean.LocalContext.foldl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L315-L316","name":"Lean.LocalContext.foldl","docLink":"./Lean/LocalContext.html#Lean.LocalContext.foldl","doc":""},"Lean.LocalContext.findFromUserName?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L218-L222","name":"Lean.LocalContext.findFromUserName?","docLink":"./Lean/LocalContext.html#Lean.LocalContext.findFromUserName?","doc":""},"Lean.LocalContext.findFVar?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L164-L165","name":"Lean.LocalContext.findFVar?","docLink":"./Lean/LocalContext.html#Lean.LocalContext.findFVar?","doc":""},"Lean.LocalContext.findDeclRevM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L305-L308","name":"Lean.LocalContext.findDeclRevM?","docLink":"./Lean/LocalContext.html#Lean.LocalContext.findDeclRevM?","doc":""},"Lean.LocalContext.findDeclRev?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L327-L328","name":"Lean.LocalContext.findDeclRev?","docLink":"./Lean/LocalContext.html#Lean.LocalContext.findDeclRev?","doc":""},"Lean.LocalContext.findDeclM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L300-L303","name":"Lean.LocalContext.findDeclM?","docLink":"./Lean/LocalContext.html#Lean.LocalContext.findDeclM?","doc":""},"Lean.LocalContext.findDecl?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L324-L325","name":"Lean.LocalContext.findDecl?","docLink":"./Lean/LocalContext.html#Lean.LocalContext.findDecl?","doc":""},"Lean.LocalContext.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L161-L162","name":"Lean.LocalContext.find?","docLink":"./Lean/LocalContext.html#Lean.LocalContext.find?","doc":""},"Lean.LocalContext.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L201-L206","name":"Lean.LocalContext.erase","docLink":"./Lean/LocalContext.html#Lean.LocalContext.erase","doc":""},"Lean.LocalContext.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L124-L124","name":"Lean.LocalContext.empty","docLink":"./Lean/LocalContext.html#Lean.LocalContext.empty","doc":""},"Lean.LocalContext.containsFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L182-L183","name":"Lean.LocalContext.containsFVar","docLink":"./Lean/LocalContext.html#Lean.LocalContext.containsFVar","doc":"Returns true when the lctx contains the free variable `e`.\nPanics if `e` is not an fvar. "},"Lean.LocalContext.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L177-L178","name":"Lean.LocalContext.contains","docLink":"./Lean/LocalContext.html#Lean.LocalContext.contains","doc":""},"Lean.LocalContext.anyM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L380-L383","name":"Lean.LocalContext.anyM","docLink":"./Lean/LocalContext.html#Lean.LocalContext.anyM","doc":""},"Lean.LocalContext.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L391-L392","name":"Lean.LocalContext.any","docLink":"./Lean/LocalContext.html#Lean.LocalContext.any","doc":"Return `true` if `lctx` contains a local declaration satisfying `p`. "},"Lean.LocalContext.allM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L385-L388","name":"Lean.LocalContext.allM","docLink":"./Lean/LocalContext.html#Lean.LocalContext.allM","doc":""},"Lean.LocalContext.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L395-L396","name":"Lean.LocalContext.all","docLink":"./Lean/LocalContext.html#Lean.LocalContext.all","doc":"Return `true` if all declarations in `lctx` satisfy `p`. "},"Lean.LocalContext.addDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L153-L158","name":"Lean.LocalContext.addDecl","docLink":"./Lean/LocalContext.html#Lean.LocalContext.addDecl","doc":"Low level API for adding a local declaration.\nDo not use directly. "},"Lean.LocalContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LocalContext.lean#L114-L117","name":"Lean.LocalContext","docLink":"./Lean/LocalContext.html#Lean.LocalContext","doc":"A LocalContext is an ordered set of local variable declarations.\nIt is used to store the free variables (also known as local constants) that\nare in scope.\n\nWhen inspecting a goal or expected type in the infoview, the local\ncontext is all of the variables above the `⊢` symbol.\n "},"Lean.Literal.typeEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L583-L583","name":"Lean.Literal.typeEx","docLink":"./Lean/Expr.html#Lean.Literal.typeEx","doc":""},"Lean.Literal.type":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L578-L580","name":"Lean.Literal.type","docLink":"./Lean/Expr.html#Lean.Literal.type","doc":"Return the type of a literal value. "},"Lean.Literal.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L29-L33","name":"Lean.Literal.lt","docLink":"./Lean/Expr.html#Lean.Literal.lt","doc":"Total order on `Expr` literal values.\nNatural number values are smaller than string literal values.\n"},"Lean.Literal.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L19-L21","name":"Lean.Literal.hash","docLink":"./Lean/Expr.html#Lean.Literal.hash","doc":""},"Lean.Literal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L12-L17","name":"Lean.Literal","docLink":"./Lean/Expr.html#Lean.Literal","doc":"Literal values for `Expr`. "},"Lean.List.toSMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/SMap.lean#L102-L103","name":"Lean.List.toSMap","docLink":"./Lean/Data/SMap.html#Lean.List.toSMap","doc":""},"Lean.Linter.unusedVariablesIgnoreFnsExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L110-L110","name":"Lean.Linter.unusedVariablesIgnoreFnsExt","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.unusedVariablesIgnoreFnsExt","doc":""},"Lean.Linter.unusedVariables.skipDeclIdIfPresent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L242-L246","name":"Lean.Linter.unusedVariables.skipDeclIdIfPresent","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.unusedVariables.skipDeclIdIfPresent","doc":""},"Lean.Linter.unusedVariables.isTopLevelDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L247-L251","name":"Lean.Linter.unusedVariables.isTopLevelDecl","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.unusedVariables.isTopLevelDecl","doc":""},"Lean.Linter.unusedVariables":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L139-L251","name":"Lean.Linter.unusedVariables","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.unusedVariables","doc":""},"Lean.Linter.suspiciousUnexpanderPatterns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Builtin.lean#L12-L29","name":"Lean.Linter.suspiciousUnexpanderPatterns","docLink":"./Lean/Linter/Builtin.html#Lean.Linter.suspiciousUnexpanderPatterns","doc":""},"Lean.Linter.stackMatches":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Util.lean#L80-L84","name":"Lean.Linter.stackMatches","docLink":"./Lean/Linter/Util.html#Lean.Linter.stackMatches","doc":"Compare the `SyntaxNodeKind`s in `pattern` to those of the `Syntax`\nelements in `stack`. Return `false` if `stack` is shorter than `pattern`. "},"Lean.Linter.logLint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Util.lean#L18-L19","name":"Lean.Linter.logLint","docLink":"./Lean/Linter/Util.html#Lean.Linter.logLint","doc":""},"Lean.Linter.linter.unusedVariables.patternVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L19-L19","name":"Lean.Linter.linter.unusedVariables.patternVars","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.linter.unusedVariables.patternVars","doc":""},"Lean.Linter.linter.unusedVariables.funArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L15-L15","name":"Lean.Linter.linter.unusedVariables.funArgs","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.linter.unusedVariables.funArgs","doc":""},"Lean.Linter.linter.unusedVariables":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L11-L11","name":"Lean.Linter.linter.unusedVariables","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.linter.unusedVariables","doc":""},"Lean.Linter.linter.suspiciousUnexpanderPatterns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Builtin.lean#L5-L5","name":"Lean.Linter.linter.suspiciousUnexpanderPatterns","docLink":"./Lean/Linter/Builtin.html#Lean.Linter.linter.suspiciousUnexpanderPatterns","doc":""},"Lean.Linter.linter.missingDocs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L13-L13","name":"Lean.Linter.linter.missingDocs","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.linter.missingDocs","doc":""},"Lean.Linter.linter.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Util.lean#L7-L7","name":"Lean.Linter.linter.all","docLink":"./Lean/Linter/Util.html#Lean.Linter.linter.all","doc":""},"Lean.Linter.getUnusedVariablesIgnoreFnsImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L130-L133","name":"Lean.Linter.getUnusedVariablesIgnoreFnsImpl","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.getUnusedVariablesIgnoreFnsImpl","doc":""},"Lean.Linter.getUnusedVariablesIgnoreFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L136-L136","name":"Lean.Linter.getUnusedVariablesIgnoreFns","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.getUnusedVariablesIgnoreFns","doc":""},"Lean.Linter.getLinterValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Util.lean#L14-L14","name":"Lean.Linter.getLinterValue","docLink":"./Lean/Linter/Util.html#Lean.Linter.getLinterValue","doc":""},"Lean.Linter.getLinterUnusedVariablesPatternVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L26-L26","name":"Lean.Linter.getLinterUnusedVariablesPatternVars","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.getLinterUnusedVariablesPatternVars","doc":""},"Lean.Linter.getLinterUnusedVariablesFunArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L25-L25","name":"Lean.Linter.getLinterUnusedVariablesFunArgs","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.getLinterUnusedVariablesFunArgs","doc":""},"Lean.Linter.getLinterUnusedVariables":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L24-L24","name":"Lean.Linter.getLinterUnusedVariables","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.getLinterUnusedVariables","doc":""},"Lean.Linter.getLinterSuspiciousUnexpanderPatterns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Builtin.lean#L10-L10","name":"Lean.Linter.getLinterSuspiciousUnexpanderPatterns","docLink":"./Lean/Linter/Builtin.html#Lean.Linter.getLinterSuspiciousUnexpanderPatterns","doc":""},"Lean.Linter.getLinterMissingDocs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L18-L18","name":"Lean.Linter.getLinterMissingDocs","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.getLinterMissingDocs","doc":""},"Lean.Linter.getLinterAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Util.lean#L12-L12","name":"Lean.Linter.getLinterAll","docLink":"./Lean/Linter/Util.html#Lean.Linter.getLinterAll","doc":""},"Lean.Linter.findSyntaxStack?.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Util.lean#L63-L75","name":"Lean.Linter.findSyntaxStack?.go","docLink":"./Lean/Linter/Util.html#Lean.Linter.findSyntaxStack?.go","doc":""},"Lean.Linter.findSyntaxStack?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Util.lean#L60-L76","name":"Lean.Linter.findSyntaxStack?","docLink":"./Lean/Linter/Util.html#Lean.Linter.findSyntaxStack?","doc":"Go upwards through the given `root` syntax starting from `child` and\ncollect all `Syntax` nodes on the way up.\n\nReturn `none` if the `child` is not found in `root`. "},"Lean.Linter.collectMacroExpansions?.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Util.lean#L34-L49","name":"Lean.Linter.collectMacroExpansions?.go","docLink":"./Lean/Linter/Util.html#Lean.Linter.collectMacroExpansions?.go","doc":""},"Lean.Linter.collectMacroExpansions?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Util.lean#L28-L49","name":"Lean.Linter.collectMacroExpansions?","docLink":"./Lean/Linter/Util.html#Lean.Linter.collectMacroExpansions?","doc":"Go upwards through the given `tree` starting from the smallest node that\ncontains the given `range` and collect all `MacroExpansionInfo`s on the way up.\nThe result is `some []` if no `MacroExpansionInfo` was found on the way and\n`none` if no `InfoTree` node was found that covers the given `range`.\n\nReturn the result reversed, s.t. the macro expansion that would be applied to\nthe original syntax first is the first element of the returned list. "},"Lean.Linter.builtinUnusedVariablesIgnoreFnsRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L29-L29","name":"Lean.Linter.builtinUnusedVariablesIgnoreFnsRef","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.builtinUnusedVariablesIgnoreFnsRef","doc":""},"Lean.Linter.addBuiltinUnusedVariablesIgnoreFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/UnusedVariables.lean#L31-L32","name":"Lean.Linter.addBuiltinUnusedVariablesIgnoreFn","docLink":"./Lean/Linter/UnusedVariables.html#Lean.Linter.addBuiltinUnusedVariablesIgnoreFn","doc":""},"Lean.Linter.SyntaxStack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Util.lean#L54-L54","name":"Lean.Linter.SyntaxStack","docLink":"./Lean/Linter/Util.html#Lean.Linter.SyntaxStack","doc":"List of `Syntax` nodes in which each succeeding element is the parent of\nthe current. The associated index is the index of the preceding element in the\nlist of children of the current element. "},"Lean.Linter.MissingDocs.mkSimpleHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L176-L178","name":"Lean.Linter.MissingDocs.mkSimpleHandler","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.mkSimpleHandler","doc":""},"Lean.Linter.MissingDocs.mkHandlerUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L29-L40","name":"Lean.Linter.MissingDocs.mkHandlerUnsafe","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.mkHandlerUnsafe","doc":""},"Lean.Linter.MissingDocs.mkHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L43-L43","name":"Lean.Linter.MissingDocs.mkHandler","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.mkHandler","doc":""},"Lean.Linter.MissingDocs.missingDocsExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L47-L48","name":"Lean.Linter.MissingDocs.missingDocsExt","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.missingDocsExt","doc":""},"Lean.Linter.MissingDocs.missingDocs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L65-L67","name":"Lean.Linter.MissingDocs.missingDocs","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.missingDocs","doc":""},"Lean.Linter.MissingDocs.lintStructField":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L110-L111","name":"Lean.Linter.MissingDocs.lintStructField","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.lintStructField","doc":""},"Lean.Linter.MissingDocs.lintNamed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L104-L105","name":"Lean.Linter.MissingDocs.lintNamed","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.lintNamed","doc":""},"Lean.Linter.MissingDocs.lintField":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L107-L108","name":"Lean.Linter.MissingDocs.lintField","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.lintField","doc":""},"Lean.Linter.MissingDocs.lintDeclHead":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L113-L120","name":"Lean.Linter.MissingDocs.lintDeclHead","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.lintDeclHead","doc":""},"Lean.Linter.MissingDocs.lint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L101-L102","name":"Lean.Linter.MissingDocs.lint","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.lint","doc":""},"Lean.Linter.MissingDocs.handleMutual":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L226-L227","name":"Lean.Linter.MissingDocs.handleMutual","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.handleMutual","doc":""},"Lean.Linter.MissingDocs.handleIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L217-L223","name":"Lean.Linter.MissingDocs.handleIn","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.handleIn","doc":""},"Lean.Linter.MissingDocs.getHandlers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L63-L63","name":"Lean.Linter.MissingDocs.getHandlers","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.getHandlers","doc":""},"Lean.Linter.MissingDocs.checkSyntaxCat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L184-L184","name":"Lean.Linter.MissingDocs.checkSyntaxCat","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.checkSyntaxCat","doc":""},"Lean.Linter.MissingDocs.checkSyntaxAbbrev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L181-L181","name":"Lean.Linter.MissingDocs.checkSyntaxAbbrev","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.checkSyntaxAbbrev","doc":""},"Lean.Linter.MissingDocs.checkSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L171-L174","name":"Lean.Linter.MissingDocs.checkSyntax","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.checkSyntax","doc":""},"Lean.Linter.MissingDocs.checkSimpLike":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L205-L205","name":"Lean.Linter.MissingDocs.checkSimpLike","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.checkSimpLike","doc":""},"Lean.Linter.MissingDocs.checkRegisterSimpAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L214-L214","name":"Lean.Linter.MissingDocs.checkRegisterSimpAttr","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.checkRegisterSimpAttr","doc":""},"Lean.Linter.MissingDocs.checkRegisterOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L211-L211","name":"Lean.Linter.MissingDocs.checkRegisterOption","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.checkRegisterOption","doc":""},"Lean.Linter.MissingDocs.checkRegisterBuiltinOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L208-L208","name":"Lean.Linter.MissingDocs.checkRegisterBuiltinOption","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.checkRegisterBuiltinOption","doc":""},"Lean.Linter.MissingDocs.checkMacro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L187-L190","name":"Lean.Linter.MissingDocs.checkMacro","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.checkMacro","doc":""},"Lean.Linter.MissingDocs.checkInit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L165-L168","name":"Lean.Linter.MissingDocs.checkInit","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.checkInit","doc":""},"Lean.Linter.MissingDocs.checkElab":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L193-L196","name":"Lean.Linter.MissingDocs.checkElab","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.checkElab","doc":""},"Lean.Linter.MissingDocs.checkDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L123-L162","name":"Lean.Linter.MissingDocs.checkDecl","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.checkDecl","doc":""},"Lean.Linter.MissingDocs.checkClassAbbrev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L199-L202","name":"Lean.Linter.MissingDocs.checkClassAbbrev","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.checkClassAbbrev","doc":""},"Lean.Linter.MissingDocs.builtinHandlersRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L45-L45","name":"Lean.Linter.MissingDocs.builtinHandlersRef","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.builtinHandlersRef","doc":""},"Lean.Linter.MissingDocs.addHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L60-L61","name":"Lean.Linter.MissingDocs.addHandler","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.addHandler","doc":""},"Lean.Linter.MissingDocs.addBuiltinHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L71-L72","name":"Lean.Linter.MissingDocs.addBuiltinHandler","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.addBuiltinHandler","doc":""},"Lean.Linter.MissingDocs.SimpleHandler.toHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L26-L27","name":"Lean.Linter.MissingDocs.SimpleHandler.toHandler","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.SimpleHandler.toHandler","doc":""},"Lean.Linter.MissingDocs.SimpleHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L23-L23","name":"Lean.Linter.MissingDocs.SimpleHandler","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.SimpleHandler","doc":""},"Lean.Linter.MissingDocs.Handler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/MissingDocs.lean#L24-L24","name":"Lean.Linter.MissingDocs.Handler","docLink":"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.Handler","doc":""},"Lean.Linter.IgnoreFunction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Linter/Util.lean#L86-L86","name":"Lean.Linter.IgnoreFunction","docLink":"./Lean/Linter/Util.html#Lean.Linter.IgnoreFunction","doc":""},"Lean.LevelSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L605-L605","name":"Lean.LevelSet","docLink":"./Lean/Level.html#Lean.LevelSet","doc":""},"Lean.LevelMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L603-L603","name":"Lean.LevelMap","docLink":"./Lean/Level.html#Lean.LevelMap","doc":""},"Lean.LevelMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L65-L67","name":"Lean.LevelMVarId","docLink":"./Lean/Level.html#Lean.LevelMVarId","doc":"Universe level metavariable Id   "},"Lean.Level.updateSucc!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L537-L540","name":"Lean.Level.updateSucc!","docLink":"./Lean/Level.html#Lean.Level.updateSucc!","doc":""},"Lean.Level.updateMax!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L548-L551","name":"Lean.Level.updateMax!","docLink":"./Lean/Level.html#Lean.Level.updateMax!","doc":""},"Lean.Level.updateIMax!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L559-L562","name":"Lean.Level.updateIMax!","docLink":"./Lean/Level.html#Lean.Level.updateIMax!","doc":""},"Lean.Level.toNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L231-L234","name":"Lean.Level.toNat","docLink":"./Lean/Level.html#Lean.Level.toNat","doc":""},"Lean.Level.replace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceLevel.lean#L11-L18","name":"Lean.Level.replace","docLink":"./Lean/Util/ReplaceLevel.html#Lean.Level.replace","doc":""},"Lean.Level.quote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L478-L479","name":"Lean.Level.quote","docLink":"./Lean/Level.html#Lean.Level.quote","doc":""},"Lean.Level.ofNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L204-L206","name":"Lean.Level.ofNat","docLink":"./Lean/Level.html#Lean.Level.ofNat","doc":""},"Lean.Level.occurs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L242-L246","name":"Lean.Level.occurs","docLink":"./Lean/Level.html#Lean.Level.occurs","doc":"`occurs u l` return `true` iff `u` occurs in `l`. "},"Lean.Level.normalize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L361-L383","name":"Lean.Level.normalize","docLink":"./Lean/Level.html#Lean.Level.normalize","doc":""},"Lean.Level.normLtAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L257-L276","name":"Lean.Level.normLtAux","docLink":"./Lean/Level.html#Lean.Level.normLtAux","doc":""},"Lean.Level.normLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L283-L284","name":"Lean.Level.normLt","docLink":"./Lean/Level.html#Lean.Level.normLt","doc":"A total order on level expressions that has the following properties\n - `succ l` is an immediate successor of `l`.\n - `zero` is the minimal element.\nThis total order is used in the normalization procedure. "},"Lean.Level.mvarId!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L190-L192","name":"Lean.Level.mvarId!","docLink":"./Lean/Level.html#Lean.Level.mvarId!","doc":""},"Lean.Level.mkNaryMax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L564-L567","name":"Lean.Level.mkNaryMax","docLink":"./Lean/Level.html#Lean.Level.mkNaryMax","doc":""},"Lean.Level.mkData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L45-L49","name":"Lean.Level.mkData","docLink":"./Lean/Level.html#Lean.Level.mkData","doc":""},"Lean.Level.isZero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L161-L163","name":"Lean.Level.isZero","docLink":"./Lean/Level.html#Lean.Level.isZero","doc":""},"Lean.Level.isSucc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L165-L167","name":"Lean.Level.isSucc","docLink":"./Lean/Level.html#Lean.Level.isSucc","doc":""},"Lean.Level.isParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L182-L184","name":"Lean.Level.isParam","docLink":"./Lean/Level.html#Lean.Level.isParam","doc":""},"Lean.Level.isNeverZero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L196-L202","name":"Lean.Level.isNeverZero","docLink":"./Lean/Level.html#Lean.Level.isNeverZero","doc":"If result is true, then forall assignments `A` which assigns all parameters and metavariables occuring\nin `l`, `l[A] != zero` "},"Lean.Level.isMaxIMax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L177-L180","name":"Lean.Level.isMaxIMax","docLink":"./Lean/Level.html#Lean.Level.isMaxIMax","doc":""},"Lean.Level.isMax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L169-L171","name":"Lean.Level.isMax","docLink":"./Lean/Level.html#Lean.Level.isMax","doc":""},"Lean.Level.isMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L186-L188","name":"Lean.Level.isMVar","docLink":"./Lean/Level.html#Lean.Level.isMVar","doc":""},"Lean.Level.isIMax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L173-L175","name":"Lean.Level.isIMax","docLink":"./Lean/Level.html#Lean.Level.isIMax","doc":""},"Lean.Level.isExplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L215-L218","name":"Lean.Level.isExplicit","docLink":"./Lean/Level.html#Lean.Level.isExplicit","doc":""},"Lean.Level.isEquiv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L389-L390","name":"Lean.Level.isEquiv","docLink":"./Lean/Level.html#Lean.Level.isEquiv","doc":"Return true if `u` and `v` denote the same level.\nCheck is currently incomplete.\n"},"Lean.Level.instantiateParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L571-L579","name":"Lean.Level.instantiateParams","docLink":"./Lean/Level.html#Lean.Level.instantiateParams","doc":""},"Lean.Level.instToStringLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L475-L476","name":"Lean.Level.instToStringLevel","docLink":"./Lean/Level.html#Lean.Level.instToStringLevel","doc":""},"Lean.Level.instToFormatLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L472-L473","name":"Lean.Level.instToFormatLevel","docLink":"./Lean/Level.html#Lean.Level.instToFormatLevel","doc":""},"Lean.Level.instQuoteLevelStrAnonymous":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L481-L482","name":"Lean.Level.instQuoteLevelStrAnonymous","docLink":"./Lean/Level.html#Lean.Level.instQuoteLevelStrAnonymous","doc":""},"Lean.Level.instHashableLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L114-L114","name":"Lean.Level.instHashableLevel","docLink":"./Lean/Level.html#Lean.Level.instHashableLevel","doc":""},"Lean.Level.instBEqLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L239-L239","name":"Lean.Level.instBEqLevel","docLink":"./Lean/Level.html#Lean.Level.instBEqLevel","doc":""},"Lean.Level.hashEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L125-L125","name":"Lean.Level.hashEx","docLink":"./Lean/Level.html#Lean.Level.hashEx","doc":""},"Lean.Level.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L111-L112","name":"Lean.Level.hash","docLink":"./Lean/Level.html#Lean.Level.hash","doc":""},"Lean.Level.hasParamEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L127-L127","name":"Lean.Level.hasParamEx","docLink":"./Lean/Level.html#Lean.Level.hasParamEx","doc":""},"Lean.Level.hasParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L122-L123","name":"Lean.Level.hasParam","docLink":"./Lean/Level.html#Lean.Level.hasParam","doc":""},"Lean.Level.hasMVarEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L126-L126","name":"Lean.Level.hasMVarEx","docLink":"./Lean/Level.html#Lean.Level.hasMVarEx","doc":""},"Lean.Level.hasMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L119-L120","name":"Lean.Level.hasMVar","docLink":"./Lean/Level.html#Lean.Level.hasMVar","doc":""},"Lean.Level.getOffsetAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L220-L222","name":"Lean.Level.getOffsetAux","docLink":"./Lean/Level.html#Lean.Level.getOffsetAux","doc":""},"Lean.Level.getOffset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L224-L225","name":"Lean.Level.getOffset","docLink":"./Lean/Level.html#Lean.Level.getOffset","doc":""},"Lean.Level.getLevelOffset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L227-L229","name":"Lean.Level.getLevelOffset","docLink":"./Lean/Level.html#Lean.Level.getLevelOffset","doc":""},"Lean.Level.geq.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L584-L596","name":"Lean.Level.geq.go","docLink":"./Lean/Level.html#Lean.Level.geq.go","doc":""},"Lean.Level.geq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L581-L597","name":"Lean.Level.geq","docLink":"./Lean/Level.html#Lean.Level.geq","doc":""},"Lean.Level.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L469-L470","name":"Lean.Level.format","docLink":"./Lean/Level.html#Lean.Level.format","doc":""},"Lean.Level.find?.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L618-L625","name":"Lean.Level.find?.visit","docLink":"./Lean/Level.html#Lean.Level.find?.visit","doc":""},"Lean.Level.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L617-L626","name":"Lean.Level.find?","docLink":"./Lean/Level.html#Lean.Level.find?","doc":""},"Lean.Level.depthEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L128-L128","name":"Lean.Level.depthEx","docLink":"./Lean/Level.html#Lean.Level.depthEx","doc":""},"Lean.Level.depth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L116-L117","name":"Lean.Level.depth","docLink":"./Lean/Level.html#Lean.Level.depth","doc":""},"Lean.Level.dec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L393-L401","name":"Lean.Level.dec","docLink":"./Lean/Level.html#Lean.Level.dec","doc":"Reduce (if possible) universe level by 1 "},"Lean.Level.data":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L97-L105","name":"Lean.Level.data","docLink":"./Lean/Level.html#Lean.Level.data","doc":""},"Lean.Level.ctorToNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L248-L254","name":"Lean.Level.ctorToNat","docLink":"./Lean/Level.html#Lean.Level.ctorToNat","doc":""},"Lean.Level.collectMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L609-L615","name":"Lean.Level.collectMVars","docLink":"./Lean/Level.html#Lean.Level.collectMVars","doc":""},"Lean.Level.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L237-L237","name":"Lean.Level.beq","docLink":"./Lean/Level.html#Lean.Level.beq","doc":""},"Lean.Level.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L628-L629","name":"Lean.Level.any","docLink":"./Lean/Level.html#Lean.Level.any","doc":""},"Lean.Level.addOffsetAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L208-L210","name":"Lean.Level.addOffsetAux","docLink":"./Lean/Level.html#Lean.Level.addOffsetAux","doc":""},"Lean.Level.addOffset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L212-L213","name":"Lean.Level.addOffset","docLink":"./Lean/Level.html#Lean.Level.addOffset","doc":""},"Lean.Level.PP.toResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L426-L434","name":"Lean.Level.PP.toResult","docLink":"./Lean/Level.html#Lean.Level.PP.toResult","doc":""},"Lean.Level.PP.Result.succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L413-L416","name":"Lean.Level.PP.Result.succ","docLink":"./Lean/Level.html#Lean.Level.PP.Result.succ","doc":""},"Lean.Level.PP.Result.quote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L456-L465","name":"Lean.Level.PP.Result.quote","docLink":"./Lean/Level.html#Lean.Level.PP.Result.quote","doc":""},"Lean.Level.PP.Result.max":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L418-L420","name":"Lean.Level.PP.Result.max","docLink":"./Lean/Level.html#Lean.Level.PP.Result.max","doc":""},"Lean.Level.PP.Result.imax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L422-L424","name":"Lean.Level.PP.Result.imax","docLink":"./Lean/Level.html#Lean.Level.PP.Result.imax","doc":""},"Lean.Level.PP.Result.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L445-L453","name":"Lean.Level.PP.Result.format","docLink":"./Lean/Level.html#Lean.Level.PP.Result.format","doc":""},"Lean.Level.PP.Result":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L406-L411","name":"Lean.Level.PP.Result","docLink":"./Lean/Level.html#Lean.Level.PP.Result","doc":""},"Lean.Level.Data.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L30-L31","name":"Lean.Level.Data.hash","docLink":"./Lean/Level.html#Lean.Level.Data.hash","doc":""},"Lean.Level.Data.hasParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L42-L43","name":"Lean.Level.Data.hasParam","docLink":"./Lean/Level.html#Lean.Level.Data.hasParam","doc":""},"Lean.Level.Data.hasMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L39-L40","name":"Lean.Level.Data.hasMVar","docLink":"./Lean/Level.html#Lean.Level.Data.hasMVar","doc":""},"Lean.Level.Data.depth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L36-L37","name":"Lean.Level.Data.depth","docLink":"./Lean/Level.html#Lean.Level.Data.depth","doc":""},"Lean.Level.Data":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L25-L25","name":"Lean.Level.Data","docLink":"./Lean/Level.html#Lean.Level.Data","doc":"Cached hash code, cached results, and other data for `Level`.\nhash      : 32-bits\nhasMVar   : 1-bit\nhasParam  : 1-bit\ndepth     : 24-bits "},"Lean.Level":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L89-L107","name":"Lean.Level","docLink":"./Lean/Level.html#Lean.Level","doc":""},"Lean.LeanPaths":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Paths.lean#L16-L20","name":"Lean.LeanPaths","docLink":"./Lean/Util/Paths.html#Lean.LeanPaths","doc":""},"Lean.LazyInitExtension.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LazyInitExtension.lean#L33-L39","name":"Lean.LazyInitExtension.get","docLink":"./Lean/LazyInitExtension.html#Lean.LazyInitExtension.get","doc":""},"Lean.LazyInitExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/LazyInitExtension.lean#L10-L12","name":"Lean.LazyInitExtension","docLink":"./Lean/LazyInitExtension.html#Lean.LazyInitExtension","doc":""},"Lean.LOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LOption.lean#L10-L14","name":"Lean.LOption","docLink":"./Lean/Data/LOption.html#Lean.LOption","doc":""},"Lean.LMVarIdSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L75-L76","name":"Lean.LMVarIdSet","docLink":"./Lean/Level.html#Lean.LMVarIdSet","doc":""},"Lean.LMVarIdMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L80-L80","name":"Lean.LMVarIdMap","docLink":"./Lean/Level.html#Lean.LMVarIdMap","doc":""},"Lean.LMVarId.isReadOnly":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L627-L631","name":"Lean.LMVarId.isReadOnly","docLink":"./Lean/Meta/Basic.html#Lean.LMVarId.isReadOnly","doc":"Return true if the given universe metavariable is \"read-only\".\nThat is, its `depth` is different from the current metavariable context depth.\n"},"Lean.LMVarId.getLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L614-L617","name":"Lean.LMVarId.getLevel","docLink":"./Lean/Meta/Basic.html#Lean.LMVarId.getLevel","doc":"Return the level of the given universe level metavariable.\n"},"Lean.LMVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Level.lean#L70-L70","name":"Lean.LMVarId","docLink":"./Lean/Level.html#Lean.LMVarId","doc":"Short for `LevelMVarId` "},"Lean.LBool.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LBool.lean#L26-L29","name":"Lean.LBool.toString","docLink":"./Lean/Data/LBool.html#Lean.LBool.toString","doc":""},"Lean.LBool.neg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LBool.lean#L17-L20","name":"Lean.LBool.neg","docLink":"./Lean/Data/LBool.html#Lean.LBool.neg","doc":""},"Lean.LBool.instToStringLBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LBool.lean#L31-L31","name":"Lean.LBool.instToStringLBool","docLink":"./Lean/Data/LBool.html#Lean.LBool.instToStringLBool","doc":""},"Lean.LBool.and":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LBool.lean#L22-L24","name":"Lean.LBool.and","docLink":"./Lean/Data/LBool.html#Lean.LBool.and","doc":""},"Lean.LBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LBool.lean#L9-L13","name":"Lean.LBool","docLink":"./Lean/Data/LBool.html#Lean.LBool","doc":""},"Lean.KeyedDeclsAttribute.mkStateOfTable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L95-L98","name":"Lean.KeyedDeclsAttribute.mkStateOfTable","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.mkStateOfTable","doc":""},"Lean.KeyedDeclsAttribute.instInhabitedOLeanEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L48-L48","name":"Lean.KeyedDeclsAttribute.instInhabitedOLeanEntry","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.instInhabitedOLeanEntry","doc":""},"Lean.KeyedDeclsAttribute.instInhabitedExtensionState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L62-L62","name":"Lean.KeyedDeclsAttribute.instInhabitedExtensionState","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.instInhabitedExtensionState","doc":""},"Lean.KeyedDeclsAttribute.instInhabitedDef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L42-L42","name":"Lean.KeyedDeclsAttribute.instInhabitedDef","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.instInhabitedDef","doc":""},"Lean.KeyedDeclsAttribute.init":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L105-L158","name":"Lean.KeyedDeclsAttribute.init","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.init","doc":""},"Lean.KeyedDeclsAttribute.getValues":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L170-L171","name":"Lean.KeyedDeclsAttribute.getValues","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.getValues","doc":"Retrieve values tagged with `[attr key]` or `[builtinAttr key]`. "},"Lean.KeyedDeclsAttribute.getEntries":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L161-L167","name":"Lean.KeyedDeclsAttribute.getEntries","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.getEntries","doc":"Retrieve entries tagged with `[attr key]` or `[builtinAttr key]`. "},"Lean.KeyedDeclsAttribute.addBuiltin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L92-L93","name":"Lean.KeyedDeclsAttribute.addBuiltin","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.addBuiltin","doc":""},"Lean.KeyedDeclsAttribute.Table":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L55-L55","name":"Lean.KeyedDeclsAttribute.Table","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.Table","doc":""},"Lean.KeyedDeclsAttribute.OLeanEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L44-L48","name":"Lean.KeyedDeclsAttribute.OLeanEntry","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.OLeanEntry","doc":""},"Lean.KeyedDeclsAttribute.Key":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L25-L25","name":"Lean.KeyedDeclsAttribute.Key","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.Key","doc":""},"Lean.KeyedDeclsAttribute.ExtensionState.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L85-L90","name":"Lean.KeyedDeclsAttribute.ExtensionState.insert","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.ExtensionState.insert","doc":""},"Lean.KeyedDeclsAttribute.ExtensionState.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L100-L103","name":"Lean.KeyedDeclsAttribute.ExtensionState.erase","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.ExtensionState.erase","doc":""},"Lean.KeyedDeclsAttribute.ExtensionState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L57-L62","name":"Lean.KeyedDeclsAttribute.ExtensionState","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.ExtensionState","doc":""},"Lean.KeyedDeclsAttribute.Extension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L64-L64","name":"Lean.KeyedDeclsAttribute.Extension","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.Extension","doc":""},"Lean.KeyedDeclsAttribute.Def":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L31-L42","name":"Lean.KeyedDeclsAttribute.Def","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.Def","doc":"`KeyedDeclsAttribute` definition.\n\n Important: `mkConst valueTypeName` and `γ` must be definitionally equal. "},"Lean.KeyedDeclsAttribute.AttributeEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L50-L53","name":"Lean.KeyedDeclsAttribute.AttributeEntry","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute.AttributeEntry","doc":""},"Lean.KeyedDeclsAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/KeyedDeclsAttribute.lean#L68-L73","name":"Lean.KeyedDeclsAttribute","docLink":"./Lean/KeyedDeclsAttribute.html#Lean.KeyedDeclsAttribute","doc":""},"Lean.KernelException.toMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L320-L341","name":"Lean.KernelException.toMessageData","docLink":"./Lean/Message.html#Lean.KernelException.toMessageData","doc":""},"Lean.KernelException":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L176-L188","name":"Lean.KernelException","docLink":"./Lean/Environment.html#Lean.KernelException","doc":"Exceptions that can be raised by the Kernel when type checking new declarations. "},"Lean.Kernel.whnf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L827-L827","name":"Lean.Kernel.whnf","docLink":"./Lean/Environment.html#Lean.Kernel.whnf","doc":"Kernel WHNF function. We use it mainly for debugging purposes.\nRecall that the Kernel type checker does not support metavariables.\nWhen implementing automation, consider using the `MetaM` methods. "},"Lean.Kernel.isDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L820-L820","name":"Lean.Kernel.isDefEq","docLink":"./Lean/Environment.html#Lean.Kernel.isDefEq","doc":"Kernel isDefEq predicate. We use it mainly for debugging purposes.\nRecall that the Kernel type checker does not support metavariables.\nWhen implementing automation, consider using the `MetaM` methods. "},"Lean.KVMap.subsetAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L155-L160","name":"Lean.KVMap.subsetAux","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.subsetAux","doc":""},"Lean.KVMap.subset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L162-L163","name":"Lean.KVMap.subset","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.subset","doc":""},"Lean.KVMap.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L77-L78","name":"Lean.KVMap.size","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.size","doc":""},"Lean.KVMap.setSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L145-L146","name":"Lean.KVMap.setSyntax","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.setSyntax","doc":""},"Lean.KVMap.setString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L130-L131","name":"Lean.KVMap.setString","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.setString","doc":""},"Lean.KVMap.setNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L133-L134","name":"Lean.KVMap.setNat","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.setNat","doc":""},"Lean.KVMap.setName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L142-L143","name":"Lean.KVMap.setName","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.setName","doc":""},"Lean.KVMap.setInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L136-L137","name":"Lean.KVMap.setInt","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.setInt","doc":""},"Lean.KVMap.setBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L139-L140","name":"Lean.KVMap.setBool","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.setBool","doc":""},"Lean.KVMap.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L181-L182","name":"Lean.KVMap.set","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.set","doc":""},"Lean.KVMap.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L74-L75","name":"Lean.KVMap.isEmpty","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.isEmpty","doc":""},"Lean.KVMap.instValueSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L218-L222","name":"Lean.KVMap.instValueSyntax","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.instValueSyntax","doc":""},"Lean.KVMap.instValueString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L212-L216","name":"Lean.KVMap.instValueString","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.instValueString","doc":""},"Lean.KVMap.instValueNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L194-L198","name":"Lean.KVMap.instValueNat","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.instValueNat","doc":""},"Lean.KVMap.instValueName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L206-L210","name":"Lean.KVMap.instValueName","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.instValueName","doc":""},"Lean.KVMap.instValueInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L200-L204","name":"Lean.KVMap.instValueInt","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.instValueInt","doc":""},"Lean.KVMap.instValueDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L184-L186","name":"Lean.KVMap.instValueDataValue","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.instValueDataValue","doc":""},"Lean.KVMap.instValueBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L188-L192","name":"Lean.KVMap.instValueBool","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.instValueBool","doc":""},"Lean.KVMap.instToStringKVMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L69-L69","name":"Lean.KVMap.instToStringKVMap","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.instToStringKVMap","doc":""},"Lean.KVMap.instForInKVMapProdNameDataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L152-L153","name":"Lean.KVMap.instForInKVMapProdNameDataValue","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.instForInKVMapProdNameDataValue","doc":""},"Lean.KVMap.instBEqKVMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L168-L169","name":"Lean.KVMap.instBEqKVMap","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.instBEqKVMap","doc":""},"Lean.KVMap.insertCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L90-L92","name":"Lean.KVMap.insertCore","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.insertCore","doc":""},"Lean.KVMap.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L94-L95","name":"Lean.KVMap.insert","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.insert","doc":""},"Lean.KVMap.getSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L125-L128","name":"Lean.KVMap.getSyntax","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.getSyntax","doc":""},"Lean.KVMap.getString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L100-L103","name":"Lean.KVMap.getString","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.getString","doc":""},"Lean.KVMap.getNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L105-L108","name":"Lean.KVMap.getNat","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.getNat","doc":""},"Lean.KVMap.getName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L120-L123","name":"Lean.KVMap.getName","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.getName","doc":""},"Lean.KVMap.getInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L110-L113","name":"Lean.KVMap.getInt","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.getInt","doc":""},"Lean.KVMap.getBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L115-L118","name":"Lean.KVMap.getBool","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.getBool","doc":""},"Lean.KVMap.get?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L175-L176","name":"Lean.KVMap.get?","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.get?","doc":""},"Lean.KVMap.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L178-L179","name":"Lean.KVMap.get","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.get","doc":""},"Lean.KVMap.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L148-L150","name":"Lean.KVMap.forIn","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.forIn","doc":""},"Lean.KVMap.findD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L87-L88","name":"Lean.KVMap.findD","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.findD","doc":""},"Lean.KVMap.findCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L80-L82","name":"Lean.KVMap.findCore","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.findCore","doc":""},"Lean.KVMap.find":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L84-L85","name":"Lean.KVMap.find","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.find","doc":""},"Lean.KVMap.eqv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L165-L166","name":"Lean.KVMap.eqv","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.eqv","doc":""},"Lean.KVMap.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L71-L72","name":"Lean.KVMap.empty","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.empty","doc":""},"Lean.KVMap.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L97-L98","name":"Lean.KVMap.contains","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.contains","doc":""},"Lean.KVMap.Value":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L171-L173","name":"Lean.KVMap.Value","docLink":"./Lean/Data/KVMap.html#Lean.KVMap.Value","doc":""},"Lean.KVMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L64-L66","name":"Lean.KVMap","docLink":"./Lean/Data/KVMap.html#Lean.KVMap","doc":"A key-value map. We use it to represent user-selected options and `Expr.mdata`.\n\nRemark: we do not use `RBMap` here because we need to manipulate `KVMap` objects in\nC++ and `RBMap` is implemented in Lean. So, we use just a `List` until we can\ngenerate C++ code from Lean code.\n"},"Lean.JsonRpc.instToStringRequestID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L28-L32","name":"Lean.JsonRpc.instToStringRequestID","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instToStringRequestID","doc":""},"Lean.JsonRpc.instToJsonRequestID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L154-L158","name":"Lean.JsonRpc.instToJsonRequestID","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instToJsonRequestID","doc":""},"Lean.JsonRpc.instToJsonMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L160-L178","name":"Lean.JsonRpc.instToJsonMessage","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instToJsonMessage","doc":""},"Lean.JsonRpc.instToJsonErrorCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L67-L79","name":"Lean.JsonRpc.instToJsonErrorCode","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instToJsonErrorCode","doc":""},"Lean.JsonRpc.instOrdRequestID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L24-L24","name":"Lean.JsonRpc.instOrdRequestID","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instOrdRequestID","doc":""},"Lean.JsonRpc.instOfNatRequestID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L26-L26","name":"Lean.JsonRpc.instOfNatRequestID","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instOfNatRequestID","doc":""},"Lean.JsonRpc.instLTRequestID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L142-L143","name":"Lean.JsonRpc.instLTRequestID","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instLTRequestID","doc":""},"Lean.JsonRpc.instInhabitedResponseError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L123-L123","name":"Lean.JsonRpc.instInhabitedResponseError","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedResponseError","doc":""},"Lean.JsonRpc.instInhabitedResponse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L113-L113","name":"Lean.JsonRpc.instInhabitedResponse","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedResponse","doc":""},"Lean.JsonRpc.instInhabitedRequestID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L24-L24","name":"Lean.JsonRpc.instInhabitedRequestID","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedRequestID","doc":""},"Lean.JsonRpc.instInhabitedRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L97-L97","name":"Lean.JsonRpc.instInhabitedRequest","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedRequest","doc":""},"Lean.JsonRpc.instInhabitedNotification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L105-L105","name":"Lean.JsonRpc.instInhabitedNotification","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedNotification","doc":""},"Lean.JsonRpc.instInhabitedErrorCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L50-L50","name":"Lean.JsonRpc.instInhabitedErrorCode","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedErrorCode","doc":""},"Lean.JsonRpc.instFromJsonRequestID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L148-L152","name":"Lean.JsonRpc.instFromJsonRequestID","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instFromJsonRequestID","doc":""},"Lean.JsonRpc.instFromJsonNotification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L201-L208","name":"Lean.JsonRpc.instFromJsonNotification","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instFromJsonNotification","doc":""},"Lean.JsonRpc.instFromJsonMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L180-L198","name":"Lean.JsonRpc.instFromJsonMessage","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instFromJsonMessage","doc":""},"Lean.JsonRpc.instFromJsonErrorCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L52-L65","name":"Lean.JsonRpc.instFromJsonErrorCode","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instFromJsonErrorCode","doc":""},"Lean.JsonRpc.instDecidableLtRequestIDInstLTRequestID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L145-L146","name":"Lean.JsonRpc.instDecidableLtRequestIDInstLTRequestID","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instDecidableLtRequestIDInstLTRequestID","doc":""},"Lean.JsonRpc.instCoeStringRequestID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L128-L128","name":"Lean.JsonRpc.instCoeStringRequestID","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeStringRequestID","doc":""},"Lean.JsonRpc.instCoeResponseMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L115-L116","name":"Lean.JsonRpc.instCoeResponseMessage","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeResponseMessage","doc":""},"Lean.JsonRpc.instCoeResponseErrorMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L125-L126","name":"Lean.JsonRpc.instCoeResponseErrorMessage","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeResponseErrorMessage","doc":""},"Lean.JsonRpc.instCoeRequestMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L99-L100","name":"Lean.JsonRpc.instCoeRequestMessage","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeRequestMessage","doc":""},"Lean.JsonRpc.instCoeNotificationMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L107-L108","name":"Lean.JsonRpc.instCoeNotificationMessage","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeNotificationMessage","doc":""},"Lean.JsonRpc.instCoeJsonNumberRequestID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L129-L129","name":"Lean.JsonRpc.instCoeJsonNumberRequestID","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeJsonNumberRequestID","doc":""},"Lean.JsonRpc.instBEqResponseError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L123-L123","name":"Lean.JsonRpc.instBEqResponseError","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqResponseError","doc":""},"Lean.JsonRpc.instBEqResponse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L113-L113","name":"Lean.JsonRpc.instBEqResponse","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqResponse","doc":""},"Lean.JsonRpc.instBEqRequestID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L24-L24","name":"Lean.JsonRpc.instBEqRequestID","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqRequestID","doc":""},"Lean.JsonRpc.instBEqRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L97-L97","name":"Lean.JsonRpc.instBEqRequest","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqRequest","doc":""},"Lean.JsonRpc.instBEqNotification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L105-L105","name":"Lean.JsonRpc.instBEqNotification","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqNotification","doc":""},"Lean.JsonRpc.instBEqErrorCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L50-L50","name":"Lean.JsonRpc.instBEqErrorCode","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqErrorCode","doc":""},"Lean.JsonRpc.ResponseError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L118-L123","name":"Lean.JsonRpc.ResponseError","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError","doc":""},"Lean.JsonRpc.Response":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L110-L113","name":"Lean.JsonRpc.Response","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response","doc":""},"Lean.JsonRpc.RequestID":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L20-L24","name":"Lean.JsonRpc.RequestID","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID","doc":""},"Lean.JsonRpc.Request":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L93-L97","name":"Lean.JsonRpc.Request","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request","doc":""},"Lean.JsonRpc.Notification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L102-L105","name":"Lean.JsonRpc.Notification","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification","doc":""},"Lean.JsonRpc.Message":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L83-L87","name":"Lean.JsonRpc.Message","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message","doc":"Uses separate constructors for notifications and errors because client and server\nbehavior is expected to be wildly different for both. "},"Lean.JsonRpc.ErrorCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L35-L50","name":"Lean.JsonRpc.ErrorCode","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode","doc":"Error codes defined by JSON-RPC and LSP. "},"Lean.JsonRpc.Batch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L89-L89","name":"Lean.JsonRpc.Batch","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Batch","doc":""},"Lean.JsonNumber.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L89-L108","name":"Lean.JsonNumber.toString","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.toString","doc":""},"Lean.JsonNumber.shiftr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L118-L119","name":"Lean.JsonNumber.shiftr","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.shiftr","doc":""},"Lean.JsonNumber.shiftl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L111-L115","name":"Lean.JsonNumber.shiftl","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.shiftl","doc":""},"Lean.JsonNumber.normalize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L34-L47","name":"Lean.JsonNumber.normalize","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.normalize","doc":""},"Lean.JsonNumber.ltProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L74-L75","name":"Lean.JsonNumber.ltProp","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.ltProp","doc":""},"Lean.JsonNumber.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L50-L72","name":"Lean.JsonNumber.lt","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.lt","doc":""},"Lean.JsonNumber.instToStringJsonNumber":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L121-L121","name":"Lean.JsonNumber.instToStringJsonNumber","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.instToStringJsonNumber","doc":""},"Lean.JsonNumber.instReprJsonNumber":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L123-L124","name":"Lean.JsonNumber.instReprJsonNumber","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.instReprJsonNumber","doc":""},"Lean.JsonNumber.instOrdJsonNumber":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L83-L87","name":"Lean.JsonNumber.instOrdJsonNumber","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.instOrdJsonNumber","doc":""},"Lean.JsonNumber.instOfNatJsonNumber":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L23-L23","name":"Lean.JsonNumber.instOfNatJsonNumber","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.instOfNatJsonNumber","doc":""},"Lean.JsonNumber.instLTJsonNumber":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L77-L78","name":"Lean.JsonNumber.instLTJsonNumber","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.instLTJsonNumber","doc":""},"Lean.JsonNumber.instDecidableLtJsonNumberInstLTJsonNumber":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L80-L81","name":"Lean.JsonNumber.instDecidableLtJsonNumberInstLTJsonNumber","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.instDecidableLtJsonNumberInstLTJsonNumber","doc":""},"Lean.JsonNumber.instCoeNatJsonNumber":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L21-L21","name":"Lean.JsonNumber.instCoeNatJsonNumber","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.instCoeNatJsonNumber","doc":""},"Lean.JsonNumber.instCoeIntJsonNumber":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L22-L22","name":"Lean.JsonNumber.instCoeIntJsonNumber","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.instCoeIntJsonNumber","doc":""},"Lean.JsonNumber.fromNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L18-L18","name":"Lean.JsonNumber.fromNat","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.fromNat","doc":""},"Lean.JsonNumber.fromInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L19-L19","name":"Lean.JsonNumber.fromInt","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber.fromInt","doc":""},"Lean.JsonNumber":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L11-L14","name":"Lean.JsonNumber","docLink":"./Lean/Data/Json/Basic.html#Lean.JsonNumber","doc":""},"Lean.Json.toStructured?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L133-L134","name":"Lean.Json.toStructured?","docLink":"./Lean/Data/Json/FromToJson.html#Lean.Json.toStructured?","doc":""},"Lean.Json.setObjVal!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L230-L232","name":"Lean.Json.setObjVal!","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.setObjVal!","doc":""},"Lean.Json.renderString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Printer.lean#L43-L44","name":"Lean.Json.renderString","docLink":"./Lean/Data/Json/Printer.html#Lean.Json.renderString","doc":""},"Lean.Json.render":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Printer.lean#L48-L61","name":"Lean.Json.render","docLink":"./Lean/Data/Json/Printer.html#Lean.Json.render","doc":""},"Lean.Json.pretty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Printer.lean#L64-L65","name":"Lean.Json.pretty","docLink":"./Lean/Data/Json/Printer.html#Lean.Json.pretty","doc":""},"Lean.Json.parseTagged":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L144-L174","name":"Lean.Json.parseTagged","docLink":"./Lean/Data/Json/FromToJson.html#Lean.Json.parseTagged","doc":"Parses a JSON-encoded `structure` or `inductive` constructor. Used mostly by `deriving FromJson`. "},"Lean.Json.parse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L218-L221","name":"Lean.Json.parse","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.parse","doc":""},"Lean.Json.opt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L139-L141","name":"Lean.Json.opt","docLink":"./Lean/Data/Json/FromToJson.html#Lean.Json.opt","doc":""},"Lean.Json.mkObj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L168-L173","name":"Lean.Json.mkObj","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.mkObj","doc":""},"Lean.Json.isNull":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L181-L183","name":"Lean.Json.isNull","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.isNull","doc":""},"Lean.Json.instToStringJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Printer.lean#L98-L98","name":"Lean.Json.instToStringJson","docLink":"./Lean/Data/Json/Printer.html#Lean.Json.instToStringJson","doc":""},"Lean.Json.instToJsonStructured":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L129-L131","name":"Lean.Json.instToJsonStructured","docLink":"./Lean/Data/Json/FromToJson.html#Lean.Json.instToJsonStructured","doc":""},"Lean.Json.instToFormatJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Printer.lean#L97-L97","name":"Lean.Json.instToFormatJson","docLink":"./Lean/Data/Json/Printer.html#Lean.Json.instToFormatJson","doc":""},"Lean.Json.instOfNatJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L179-L179","name":"Lean.Json.instOfNatJson","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.instOfNatJson","doc":""},"Lean.Json.instFromJsonStructured":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L124-L127","name":"Lean.Json.instFromJsonStructured","docLink":"./Lean/Data/Json/FromToJson.html#Lean.Json.instFromJsonStructured","doc":""},"Lean.Json.instCoeStringJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L177-L177","name":"Lean.Json.instCoeStringJson","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.instCoeStringJson","doc":""},"Lean.Json.instCoeRBNodeStringJsonStructured":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L239-L239","name":"Lean.Json.instCoeRBNodeStringJsonStructured","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.instCoeRBNodeStringJsonStructured","doc":""},"Lean.Json.instCoeNatJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L175-L175","name":"Lean.Json.instCoeNatJson","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.instCoeNatJson","doc":""},"Lean.Json.instCoeIntJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L176-L176","name":"Lean.Json.instCoeIntJson","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.instCoeIntJson","doc":""},"Lean.Json.instCoeBoolJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L178-L178","name":"Lean.Json.instCoeBoolJson","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.instCoeBoolJson","doc":""},"Lean.Json.instCoeArrayJsonStructured":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L238-L238","name":"Lean.Json.instCoeArrayJsonStructured","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.instCoeArrayJsonStructured","doc":""},"Lean.Json.instBEqJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L164-L165","name":"Lean.Json.instBEqJson","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.instBEqJson","doc":""},"Lean.Json.getStr?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L193-L195","name":"Lean.Json.getStr?","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.getStr?","doc":""},"Lean.Json.getObjValD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L227-L228","name":"Lean.Json.getObjValD","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.getObjValD","doc":""},"Lean.Json.getObjValAs?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L136-L137","name":"Lean.Json.getObjValAs?","docLink":"./Lean/Data/Json/FromToJson.html#Lean.Json.getObjValAs?","doc":""},"Lean.Json.getObjVal?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L213-L218","name":"Lean.Json.getObjVal?","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.getObjVal?","doc":""},"Lean.Json.getObj?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L185-L187","name":"Lean.Json.getObj?","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.getObj?","doc":""},"Lean.Json.getNum?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L209-L211","name":"Lean.Json.getNum?","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.getNum?","doc":""},"Lean.Json.getNat?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L197-L199","name":"Lean.Json.getNat?","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.getNat?","doc":""},"Lean.Json.getInt?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L201-L203","name":"Lean.Json.getInt?","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.getInt?","doc":""},"Lean.Json.getBool?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L205-L207","name":"Lean.Json.getBool?","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.getBool?","doc":""},"Lean.Json.getArrVal?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L220-L225","name":"Lean.Json.getArrVal?","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.getArrVal?","doc":""},"Lean.Json.getArr?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L189-L191","name":"Lean.Json.getArr?","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.getArr?","doc":""},"Lean.Json.escape":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Printer.lean#L40-L41","name":"Lean.Json.escape","docLink":"./Lean/Data/Json/Printer.html#Lean.Json.escape","doc":""},"Lean.Json.compress.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Printer.lean#L78-L95","name":"Lean.Json.compress.go","docLink":"./Lean/Data/Json/Printer.html#Lean.Json.compress.go","doc":""},"Lean.Json.compress":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Printer.lean#L76-L95","name":"Lean.Json.compress","docLink":"./Lean/Data/Json/Printer.html#Lean.Json.compress","doc":""},"Lean.Json.Structured":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L234-L236","name":"Lean.Json.Structured","docLink":"./Lean/Data/Json/Basic.html#Lean.Json.Structured","doc":""},"Lean.Json.Parser.strCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L46-L61","name":"Lean.Json.Parser.strCore","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.strCore","doc":""},"Lean.Json.Parser.str":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L63-L63","name":"Lean.Json.Parser.str","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.str","doc":""},"Lean.Json.Parser.objectCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L150-L164","name":"Lean.Json.Parser.objectCore","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.objectCore","doc":""},"Lean.Json.Parser.num":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L98-L135","name":"Lean.Json.Parser.num","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.num","doc":""},"Lean.Json.Parser.natNumDigits":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L89-L91","name":"Lean.Json.Parser.natNumDigits","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.natNumDigits","doc":""},"Lean.Json.Parser.natNonZero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L83-L86","name":"Lean.Json.Parser.natNonZero","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.natNonZero","doc":""},"Lean.Json.Parser.natMaybeZero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L94-L96","name":"Lean.Json.Parser.natMaybeZero","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.natMaybeZero","doc":""},"Lean.Json.Parser.natCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L65-L72","name":"Lean.Json.Parser.natCore","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.natCore","doc":""},"Lean.Json.Parser.lookahead":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L75-L80","name":"Lean.Json.Parser.lookahead","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.lookahead","doc":""},"Lean.Json.Parser.hexChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L19-L28","name":"Lean.Json.Parser.hexChar","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.hexChar","doc":""},"Lean.Json.Parser.escapedChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L30-L44","name":"Lean.Json.Parser.escapedChar","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.escapedChar","doc":""},"Lean.Json.Parser.arrayCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L137-L148","name":"Lean.Json.Parser.arrayCore","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.arrayCore","doc":""},"Lean.Json.Parser.anyCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L166-L205","name":"Lean.Json.Parser.anyCore","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.anyCore","doc":""},"Lean.Json.Parser.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Parser.lean#L208-L212","name":"Lean.Json.Parser.any","docLink":"./Lean/Data/Json/Parser.html#Lean.Json.Parser.any","doc":""},"Lean.Json.CompressWorkItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Printer.lean#L67-L73","name":"Lean.Json.CompressWorkItem","docLink":"./Lean/Data/Json/Printer.html#Lean.Json.CompressWorkItem","doc":""},"Lean.Json":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Basic.lean#L132-L142","name":"Lean.Json","docLink":"./Lean/Data/Json/Basic.html#Lean.Json","doc":""},"Lean.IsNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Syntax.lean#L17-L18","name":"Lean.IsNode","docLink":"./Lean/Syntax.html#Lean.IsNode","doc":""},"Lean.IsNeutral":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1154-L1156","name":"Lean.IsNeutral","docLink":"./Init/Core.html#Lean.IsNeutral","doc":""},"Lean.IsIdempotent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1151-L1152","name":"Lean.IsIdempotent","docLink":"./Init/Core.html#Lean.IsIdempotent","doc":""},"Lean.IsCommutative":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1148-L1149","name":"Lean.IsCommutative","docLink":"./Init/Core.html#Lean.IsCommutative","doc":""},"Lean.IsAssociative":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1145-L1146","name":"Lean.IsAssociative","docLink":"./Init/Core.html#Lean.IsAssociative","doc":""},"Lean.InternalExceptionId.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/InternalExceptionId.lean#L30-L31","name":"Lean.InternalExceptionId.toString","docLink":"./Lean/InternalExceptionId.html#Lean.InternalExceptionId.toString","doc":"Convert internal exception id into the message \"internal exception #<idx>\""},"Lean.InternalExceptionId.getName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/InternalExceptionId.lean#L34-L40","name":"Lean.InternalExceptionId.getName","docLink":"./Lean/InternalExceptionId.html#Lean.InternalExceptionId.getName","doc":"Retrieve the name used to register the internal exception. "},"Lean.InternalExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/InternalExceptionId.lean#L9-L11","name":"Lean.InternalExceptionId","docLink":"./Lean/InternalExceptionId.html#Lean.InternalExceptionId","doc":"Internal exception identifier "},"Lean.Internal.liftCoeM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L104-L106","name":"Lean.Internal.liftCoeM","docLink":"./Init/Coe.html#Lean.Internal.liftCoeM","doc":""},"Lean.Internal.isStage0":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L65-L65","name":"Lean.Internal.isStage0","docLink":"./Init/Meta.html#Lean.Internal.isStage0","doc":""},"Lean.Internal.coeM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L109-L111","name":"Lean.Internal.coeM","docLink":"./Init/Coe.html#Lean.Internal.coeM","doc":""},"Lean.InductiveVal.numCtors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L263-L263","name":"Lean.InductiveVal.numCtors","docLink":"./Lean/Declaration.html#Lean.InductiveVal.numCtors","doc":""},"Lean.InductiveVal.isUnsafeEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L259-L259","name":"Lean.InductiveVal.isUnsafeEx","docLink":"./Lean/Declaration.html#Lean.InductiveVal.isUnsafeEx","doc":""},"Lean.InductiveVal.isReflexiveEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L260-L260","name":"Lean.InductiveVal.isReflexiveEx","docLink":"./Lean/Declaration.html#Lean.InductiveVal.isReflexiveEx","doc":""},"Lean.InductiveVal.isRecEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L258-L258","name":"Lean.InductiveVal.isRecEx","docLink":"./Lean/Declaration.html#Lean.InductiveVal.isRecEx","doc":""},"Lean.InductiveVal.isNestedEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L261-L261","name":"Lean.InductiveVal.isNestedEx","docLink":"./Lean/Declaration.html#Lean.InductiveVal.isNestedEx","doc":""},"Lean.InductiveVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L201-L240","name":"Lean.InductiveVal","docLink":"./Lean/Declaration.html#Lean.InductiveVal","doc":"The kernel compiles (mutual) inductive declarations (see `inductiveDecls`) into a set of\n    - `Declaration.inductDecl` (for each inductive datatype in the mutual Declaration),\n    - `Declaration.ctorDecl` (for each Constructor in the mutual Declaration),\n    - `Declaration.recDecl` (automatically generated recursors).\n\n    This data is used to implement iota-reduction efficiently and compile nested inductive\n    declarations.\n\n    A series of checks are performed by the kernel to check whether a `inductiveDecls`\n    is valid or not. "},"Lean.InductiveType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L147-L151","name":"Lean.InductiveType","docLink":"./Lean/Declaration.html#Lean.InductiveType","doc":""},"Lean.ImportState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L650-L654","name":"Lean.ImportState","docLink":"./Lean/Environment.html#Lean.ImportState","doc":""},"Lean.ImportM.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L345-L347","name":"Lean.ImportM.Context","docLink":"./Lean/Environment.html#Lean.ImportM.Context","doc":""},"Lean.ImportM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L349-L349","name":"Lean.ImportM","docLink":"./Lean/Environment.html#Lean.ImportM","doc":""},"Lean.Import":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L28-L30","name":"Lean.Import","docLink":"./Lean/Environment.html#Lean.Import","doc":""},"Lean.IR.usesModuleFrom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L18-L19","name":"Lean.IR.usesModuleFrom","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.usesModuleFrom","doc":""},"Lean.IR.updateSorryDep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Sorry.lean#L69-L77","name":"Lean.IR.updateSorryDep","docLink":"./Lean/Compiler/IR/Sorry.html#Lean.IR.updateSorryDep","doc":""},"Lean.IR.updateLiveVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L162-L163","name":"Lean.IR.updateLiveVars","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.updateLiveVars","doc":""},"Lean.IR.tracePrefixOptionName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L43-L43","name":"Lean.IR.tracePrefixOptionName","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.tracePrefixOptionName","doc":""},"Lean.IR.reshapeWithoutDead.reshape":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadVars.lean#L12-L28","name":"Lean.IR.reshapeWithoutDead.reshape","docLink":"./Lean/Compiler/IR/ElimDeadVars.html#Lean.IR.reshapeWithoutDead.reshape","doc":""},"Lean.IR.reshapeWithoutDead":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadVars.lean#L11-L29","name":"Lean.IR.reshapeWithoutDead","docLink":"./Lean/Compiler/IR/ElimDeadVars.html#Lean.IR.reshapeWithoutDead","doc":""},"Lean.IR.reshapeAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L372-L378","name":"Lean.IR.reshapeAux","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.reshapeAux","doc":""},"Lean.IR.reshape":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L380-L381","name":"Lean.IR.reshape","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.reshape","doc":""},"Lean.IR.pushProjs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/PushProj.lean#L12-L37","name":"Lean.IR.pushProjs","docLink":"./Lean/Compiler/IR/PushProj.html#Lean.IR.pushProjs","doc":""},"Lean.IR.push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L361-L363","name":"Lean.IR.push","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.push","doc":""},"Lean.IR.modifyJPs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L383-L386","name":"Lean.IR.modifyJPs","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.modifyJPs","doc":""},"Lean.IR.modifyEnv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L69-L70","name":"Lean.IR.modifyEnv","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.modifyEnv","doc":""},"Lean.IR.mmodifyJPs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L388-L391","name":"Lean.IR.mmodifyJPs","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mmodifyJPs","doc":""},"Lean.IR.mkVarJPMaps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L81-L82","name":"Lean.IR.mkVarJPMaps","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.mkVarJPMaps","doc":"Return a pair `(v, j)`, where `v` is a mapping from variable/parameter to type,\nand `j` is a mapping from join point to parameters.\nThis function assumes `d` has normalized indexes (see `normids.lean`). "},"Lean.IR.mkVarArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L149-L149","name":"Lean.IR.mkVarArg","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkVarArg","doc":""},"Lean.IR.mkVDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L281-L281","name":"Lean.IR.mkVDecl","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkVDecl","doc":""},"Lean.IR.mkUnreachable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L290-L290","name":"Lean.IR.mkUnreachable","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkUnreachable","doc":""},"Lean.IR.mkUSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L283-L283","name":"Lean.IR.mkUSet","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkUSet","doc":""},"Lean.IR.mkUProjExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L228-L228","name":"Lean.IR.mkUProjExpr","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkUProjExpr","doc":""},"Lean.IR.mkStrExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L234-L234","name":"Lean.IR.mkStrExpr","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkStrExpr","doc":""},"Lean.IR.mkSSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L284-L284","name":"Lean.IR.mkSSet","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkSSet","doc":""},"Lean.IR.mkSProjExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L229-L229","name":"Lean.IR.mkSProjExpr","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkSProjExpr","doc":""},"Lean.IR.mkRet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L288-L288","name":"Lean.IR.mkRet","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkRet","doc":""},"Lean.IR.mkProjExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L227-L227","name":"Lean.IR.mkProjExpr","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkProjExpr","doc":""},"Lean.IR.mkParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L243-L243","name":"Lean.IR.mkParam","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkParam","doc":""},"Lean.IR.mkPAppExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L231-L231","name":"Lean.IR.mkPAppExpr","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkPAppExpr","doc":""},"Lean.IR.mkNumExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L233-L233","name":"Lean.IR.mkNumExpr","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkNumExpr","doc":""},"Lean.IR.mkLiveVarSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L87-L88","name":"Lean.IR.mkLiveVarSet","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.mkLiveVarSet","doc":""},"Lean.IR.mkJmp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L289-L289","name":"Lean.IR.mkJmp","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkJmp","doc":""},"Lean.IR.mkJDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L282-L282","name":"Lean.IR.mkJDecl","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkJDecl","doc":""},"Lean.IR.mkIndexSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L451-L452","name":"Lean.IR.mkIndexSet","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkIndexSet","doc":""},"Lean.IR.mkIf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L610-L614","name":"Lean.IR.mkIf","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkIf","doc":""},"Lean.IR.mkFAppExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L230-L230","name":"Lean.IR.mkFAppExpr","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkFAppExpr","doc":""},"Lean.IR.mkExternDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L438-L439","name":"Lean.IR.mkExternDecl","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkExternDecl","doc":""},"Lean.IR.mkDummyExternDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L442-L443","name":"Lean.IR.mkDummyExternDecl","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkDummyExternDecl","doc":""},"Lean.IR.mkDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L435-L436","name":"Lean.IR.mkDecl","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkDecl","doc":""},"Lean.IR.mkCtorExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L225-L226","name":"Lean.IR.mkCtorExpr","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkCtorExpr","doc":""},"Lean.IR.mkCase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L285-L287","name":"Lean.IR.mkCase","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkCase","doc":""},"Lean.IR.mkAppExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L232-L232","name":"Lean.IR.mkAppExpr","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkAppExpr","doc":""},"Lean.IR.mkAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L393-L394","name":"Lean.IR.mkAlt","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkAlt","doc":""},"Lean.IR.logMessageIf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L63-L64","name":"Lean.IR.logMessageIf","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.logMessageIf","doc":""},"Lean.IR.logMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L66-L67","name":"Lean.IR.logMessage","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.logMessage","doc":""},"Lean.IR.logDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L55-L56","name":"Lean.IR.logDecls","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.logDecls","doc":""},"Lean.IR.log":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L40-L41","name":"Lean.IR.log","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.log","doc":""},"Lean.IR.isTailCallTo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L13-L16","name":"Lean.IR.isTailCallTo","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.isTailCallTo","doc":"Return true iff `b` is of the form `let x := g ys; ret x` "},"Lean.IR.instToStringVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L36-L36","name":"Lean.IR.instToStringVarId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instToStringVarId","doc":""},"Lean.IR.instToStringJoinPointId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L41-L41","name":"Lean.IR.instToStringJoinPointId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instToStringJoinPointId","doc":""},"Lean.IR.instToStringIRType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L74-L74","name":"Lean.IR.instToStringIRType","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringIRType","doc":""},"Lean.IR.instToStringFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L124-L124","name":"Lean.IR.instToStringFnBody","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringFnBody","doc":""},"Lean.IR.instToStringExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L54-L54","name":"Lean.IR.instToStringExpr","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringExpr","doc":""},"Lean.IR.instToStringDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L137-L137","name":"Lean.IR.instToStringDecl","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToStringDecl","doc":""},"Lean.IR.instToFormatVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L37-L37","name":"Lean.IR.instToFormatVarId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instToFormatVarId","doc":""},"Lean.IR.instToFormatParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L79-L79","name":"Lean.IR.instToFormatParam","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatParam","doc":""},"Lean.IR.instToFormatLitVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L24-L24","name":"Lean.IR.instToFormatLitVal","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatLitVal","doc":""},"Lean.IR.instToFormatJoinPointId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L42-L42","name":"Lean.IR.instToFormatJoinPointId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instToFormatJoinPointId","doc":""},"Lean.IR.instToFormatIRType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L73-L73","name":"Lean.IR.instToFormatIRType","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatIRType","doc":""},"Lean.IR.instToFormatFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L123-L123","name":"Lean.IR.instToFormatFnBody","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatFnBody","doc":""},"Lean.IR.instToFormatExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L53-L53","name":"Lean.IR.instToFormatExpr","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatExpr","doc":""},"Lean.IR.instToFormatDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L131-L131","name":"Lean.IR.instToFormatDecl","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatDecl","doc":""},"Lean.IR.instToFormatCtorInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L35-L35","name":"Lean.IR.instToFormatCtorInfo","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatCtorInfo","doc":""},"Lean.IR.instToFormatArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L15-L15","name":"Lean.IR.instToFormatArg","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.instToFormatArg","doc":""},"Lean.IR.instReprCtorInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L179-L179","name":"Lean.IR.instReprCtorInfo","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instReprCtorInfo","doc":""},"Lean.IR.instInhabitedVarIdSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L608-L608","name":"Lean.IR.instInhabitedVarIdSet","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedVarIdSet","doc":""},"Lean.IR.instInhabitedVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L26-L26","name":"Lean.IR.instInhabitedVarId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedVarId","doc":""},"Lean.IR.instInhabitedParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L240-L240","name":"Lean.IR.instInhabitedParam","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedParam","doc":""},"Lean.IR.instInhabitedLiveVarSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L84-L85","name":"Lean.IR.instInhabitedLiveVarSet","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.instInhabitedLiveVarSet","doc":""},"Lean.IR.instInhabitedJoinPointId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L31-L31","name":"Lean.IR.instInhabitedJoinPointId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedJoinPointId","doc":""},"Lean.IR.instInhabitedIndexSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L449-L449","name":"Lean.IR.instInhabitedIndexSet","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedIndexSet","doc":""},"Lean.IR.instInhabitedIRType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L85-L85","name":"Lean.IR.instInhabitedIRType","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedIRType","doc":""},"Lean.IR.instInhabitedFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L277-L277","name":"Lean.IR.instInhabitedFnBody","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedFnBody","doc":""},"Lean.IR.instInhabitedDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L404-L404","name":"Lean.IR.instInhabitedDecl","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedDecl","doc":""},"Lean.IR.instInhabitedArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L140-L140","name":"Lean.IR.instInhabitedArg","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedArg","doc":""},"Lean.IR.instInhabitedAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L296-L296","name":"Lean.IR.instInhabitedAlt","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedAlt","doc":""},"Lean.IR.instHashableVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L38-L38","name":"Lean.IR.instHashableVarId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instHashableVarId","doc":""},"Lean.IR.instHashableJoinPointId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L43-L43","name":"Lean.IR.instHashableJoinPointId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instHashableJoinPointId","doc":""},"Lean.IR.instBEqVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L35-L35","name":"Lean.IR.instBEqVarId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instBEqVarId","doc":""},"Lean.IR.instBEqLitVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L160-L160","name":"Lean.IR.instBEqLitVal","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instBEqLitVal","doc":""},"Lean.IR.instBEqJoinPointId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L40-L40","name":"Lean.IR.instBEqJoinPointId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instBEqJoinPointId","doc":""},"Lean.IR.instBEqFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L605-L605","name":"Lean.IR.instBEqFnBody","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instBEqFnBody","doc":""},"Lean.IR.instBEqCtorInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L185-L185","name":"Lean.IR.instBEqCtorInfo","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instBEqCtorInfo","doc":""},"Lean.IR.instBEqArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L147-L147","name":"Lean.IR.instBEqArg","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instBEqArg","doc":""},"Lean.IR.instAlphaEqvVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L527-L527","name":"Lean.IR.instAlphaEqvVarId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instAlphaEqvVarId","doc":""},"Lean.IR.instAlphaEqvExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L558-L558","name":"Lean.IR.instAlphaEqvExpr","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instAlphaEqvExpr","doc":""},"Lean.IR.instAlphaEqvArrayArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L539-L539","name":"Lean.IR.instAlphaEqvArrayArg","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instAlphaEqvArrayArg","doc":""},"Lean.IR.instAlphaEqvArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L534-L534","name":"Lean.IR.instAlphaEqvArg","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instAlphaEqvArg","doc":""},"Lean.IR.inferBorrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L310-L313","name":"Lean.IR.inferBorrow","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.inferBorrow","doc":""},"Lean.IR.getSorryDep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L143-L146","name":"Lean.IR.getSorryDep","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.getSorryDep","doc":""},"Lean.IR.getEnv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L115-L116","name":"Lean.IR.getEnv","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.getEnv","doc":""},"Lean.IR.getDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L112-L113","name":"Lean.IR.getDecls","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.getDecls","doc":""},"Lean.IR.getDecl'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L138-L140","name":"Lean.IR.getDecl'","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.getDecl'","doc":""},"Lean.IR.getDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L104-L106","name":"Lean.IR.getDecl","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.getDecl","doc":""},"Lean.IR.getCtorLayout":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CtorLayout.lean#L38-L38","name":"Lean.IR.getCtorLayout","docLink":"./Lean/Compiler/IR/CtorLayout.html#Lean.IR.getCtorLayout","doc":""},"Lean.IR.formatParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L85-L86","name":"Lean.IR.formatParams","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatParams","doc":""},"Lean.IR.formatFnBodyHead":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L89-L103","name":"Lean.IR.formatFnBodyHead","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBodyHead","doc":""},"Lean.IR.formatFnBody.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L106-L120","name":"Lean.IR.formatFnBody.loop","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBody.loop","doc":""},"Lean.IR.formatFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L105-L121","name":"Lean.IR.formatFnBody","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatFnBody","doc":""},"Lean.IR.formatDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L126-L129","name":"Lean.IR.formatDecl","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatDecl","doc":""},"Lean.IR.formatArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L17-L18","name":"Lean.IR.formatArray","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatArray","doc":""},"Lean.IR.formatAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L81-L83","name":"Lean.IR.formatAlt","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.formatAlt","doc":""},"Lean.IR.flattenAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L365-L367","name":"Lean.IR.flattenAux","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.flattenAux","doc":""},"Lean.IR.findEnvDecl'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L124-L127","name":"Lean.IR.findEnvDecl'","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.findEnvDecl'","doc":""},"Lean.IR.findEnvDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L95-L96","name":"Lean.IR.findEnvDecl","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.findEnvDecl","doc":""},"Lean.IR.findDecl'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L129-L130","name":"Lean.IR.findDecl'","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.findDecl'","doc":""},"Lean.IR.findDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L98-L99","name":"Lean.IR.findDecl","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.findDecl","doc":""},"Lean.IR.explicitRC":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L279-L281","name":"Lean.IR.explicitRC","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.explicitRC","doc":""},"Lean.IR.explicitBoxing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L342-L344","name":"Lean.IR.explicitBoxing","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.explicitBoxing","doc":""},"Lean.IR.ensureHasDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/SimpCase.lean#L11-L17","name":"Lean.IR.ensureHasDefault","docLink":"./Lean/Compiler/IR/SimpCase.html#Lean.IR.ensureHasDefault","doc":""},"Lean.IR.emitC":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L747-L750","name":"Lean.IR.emitC","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.emitC","doc":""},"Lean.IR.elimDeadBranches":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L315-L329","name":"Lean.IR.elimDeadBranches","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.elimDeadBranches","doc":""},"Lean.IR.declToString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Format.lean#L134-L135","name":"Lean.IR.declToString","docLink":"./Lean/Compiler/IR/Format.html#Lean.IR.declToString","doc":""},"Lean.IR.declMapExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L84-L84","name":"Lean.IR.declMapExt","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.declMapExt","doc":""},"Lean.IR.containsDecl'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L132-L136","name":"Lean.IR.containsDecl'","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.containsDecl'","doc":""},"Lean.IR.containsDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L101-L102","name":"Lean.IR.containsDecl","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.containsDecl","doc":""},"Lean.IR.compiler.reuse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR.lean#L27-L27","name":"Lean.IR.compiler.reuse","docLink":"./Lean/Compiler/IR.html#Lean.IR.compiler.reuse","doc":""},"Lean.IR.compile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR.lean#L64-L67","name":"Lean.IR.compile","docLink":"./Lean/Compiler/IR.html#Lean.IR.compile","doc":""},"Lean.IR.collectUsedDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L50-L51","name":"Lean.IR.collectUsedDecls","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.collectUsedDecls","doc":""},"Lean.IR.collectLiveVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L165-L166","name":"Lean.IR.collectLiveVars","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.collectLiveVars","doc":""},"Lean.IR.checkDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L182-L183","name":"Lean.IR.checkDecls","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.checkDecls","doc":""},"Lean.IR.checkDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L176-L180","name":"Lean.IR.checkDecl","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.checkDecl","doc":""},"Lean.IR.args.alphaEqv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L536-L537","name":"Lean.IR.args.alphaEqv","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.args.alphaEqv","doc":""},"Lean.IR.addVarRename":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L560-L561","name":"Lean.IR.addVarRename","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.addVarRename","doc":""},"Lean.IR.addParamsRename":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L569-L576","name":"Lean.IR.addParamsRename","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.addParamsRename","doc":""},"Lean.IR.addParamRename":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L563-L567","name":"Lean.IR.addParamRename","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.addParamRename","doc":""},"Lean.IR.addDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L121-L122","name":"Lean.IR.addDecls","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.addDecls","doc":""},"Lean.IR.addDeclAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L109-L110","name":"Lean.IR.addDeclAux","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.addDeclAux","doc":""},"Lean.IR.addDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L118-L119","name":"Lean.IR.addDecl","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.addDecl","doc":""},"Lean.IR.addBoxedVersionAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR.lean#L69-L78","name":"Lean.IR.addBoxedVersionAux","docLink":"./Lean/Compiler/IR.html#Lean.IR.addBoxedVersionAux","doc":""},"Lean.IR.addBoxedVersion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR.lean#L82-L85","name":"Lean.IR.addBoxedVersion","docLink":"./Lean/Compiler/IR.html#Lean.IR.addBoxedVersion","doc":""},"Lean.IR.VarTypeMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L53-L53","name":"Lean.IR.VarTypeMap","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.VarTypeMap","doc":""},"Lean.IR.VarIdSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L607-L607","name":"Lean.IR.VarIdSet","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.VarIdSet","doc":""},"Lean.IR.VarId.alphaEqv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L522-L525","name":"Lean.IR.VarId.alphaEqv","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId.alphaEqv","doc":""},"Lean.IR.VarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L24-L26","name":"Lean.IR.VarId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId","doc":"Variable identifier "},"Lean.IR.UnreachableBranches.updateVarAssignment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L169-L172","name":"Lean.IR.UnreachableBranches.updateVarAssignment","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.updateVarAssignment","doc":""},"Lean.IR.UnreachableBranches.updateJPParamsAssignment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L212-L225","name":"Lean.IR.UnreachableBranches.updateJPParamsAssignment","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.updateJPParamsAssignment","doc":"Return true if the assignment of at least one parameter has been updated. "},"Lean.IR.UnreachableBranches.updateCurrFnSummary":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L206-L209","name":"Lean.IR.UnreachableBranches.updateCurrFnSummary","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.updateCurrFnSummary","doc":""},"Lean.IR.UnreachableBranches.resetVarAssignment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L174-L176","name":"Lean.IR.UnreachableBranches.resetVarAssignment","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.resetVarAssignment","doc":""},"Lean.IR.UnreachableBranches.resetParamAssignment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L178-L179","name":"Lean.IR.UnreachableBranches.resetParamAssignment","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.resetParamAssignment","doc":""},"Lean.IR.UnreachableBranches.projValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L181-L184","name":"Lean.IR.UnreachableBranches.projValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.projValue","doc":""},"Lean.IR.UnreachableBranches.interpFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L239-L267","name":"Lean.IR.UnreachableBranches.interpFnBody","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.interpFnBody","doc":""},"Lean.IR.UnreachableBranches.interpExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L186-L198","name":"Lean.IR.UnreachableBranches.interpExpr","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.interpExpr","doc":""},"Lean.IR.UnreachableBranches.instToStringValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L34-L35","name":"Lean.IR.UnreachableBranches.instToStringValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instToStringValue","doc":""},"Lean.IR.UnreachableBranches.instToFormatValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L31-L32","name":"Lean.IR.UnreachableBranches.instToFormatValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instToFormatValue","doc":""},"Lean.IR.UnreachableBranches.instReprValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L18-L18","name":"Lean.IR.UnreachableBranches.instReprValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instReprValue","doc":""},"Lean.IR.UnreachableBranches.instInhabitedValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L18-L18","name":"Lean.IR.UnreachableBranches.instInhabitedValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.instInhabitedValue","doc":""},"Lean.IR.UnreachableBranches.inferStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L269-L283","name":"Lean.IR.UnreachableBranches.inferStep","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.inferStep","doc":""},"Lean.IR.UnreachableBranches.inferMain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L285-L287","name":"Lean.IR.UnreachableBranches.inferMain","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.inferMain","doc":""},"Lean.IR.UnreachableBranches.getFunctionSummary?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L139-L140","name":"Lean.IR.UnreachableBranches.getFunctionSummary?","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.getFunctionSummary?","doc":""},"Lean.IR.UnreachableBranches.functionSummariesExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L127-L127","name":"Lean.IR.UnreachableBranches.functionSummariesExt","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.functionSummariesExt","doc":""},"Lean.IR.UnreachableBranches.findVarValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L158-L162","name":"Lean.IR.UnreachableBranches.findVarValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.findVarValue","doc":""},"Lean.IR.UnreachableBranches.findArgValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L164-L167","name":"Lean.IR.UnreachableBranches.findArgValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.findArgValue","doc":""},"Lean.IR.UnreachableBranches.elimDeadAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L289-L304","name":"Lean.IR.UnreachableBranches.elimDeadAux","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.elimDeadAux","doc":""},"Lean.IR.UnreachableBranches.elimDead":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L306-L309","name":"Lean.IR.UnreachableBranches.elimDead","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.elimDead","doc":""},"Lean.IR.UnreachableBranches.containsCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L200-L204","name":"Lean.IR.UnreachableBranches.containsCtor","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.containsCtor","doc":""},"Lean.IR.UnreachableBranches.addFunctionSummary":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L136-L137","name":"Lean.IR.UnreachableBranches.addFunctionSummary","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.addFunctionSummary","doc":""},"Lean.IR.UnreachableBranches.Value.widening":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L120-L121","name":"Lean.IR.UnreachableBranches.Value.widening","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.widening","doc":"Widening operator that guarantees termination in our abstract interpreter. "},"Lean.IR.UnreachableBranches.Value.truncateMaxDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L84-L84","name":"Lean.IR.UnreachableBranches.Value.truncateMaxDepth","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.truncateMaxDepth","doc":"In `truncate`, we approximate a value as `top` if depth > `truncateMaxDepth`.\nTODO: add option to control this parameter.\n"},"Lean.IR.UnreachableBranches.Value.truncate.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L96-L117","name":"Lean.IR.UnreachableBranches.Value.truncate.go","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.truncate.go","doc":""},"Lean.IR.UnreachableBranches.Value.truncate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L93-L117","name":"Lean.IR.UnreachableBranches.Value.truncate","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.truncate","doc":"Make sure constructors of recursive inductive datatypes can only occur once in each path.\nValues at depth > truncateMaxDepth are also approximated at `top`.\nWe use this function this function to implement a simple widening operation for our abstract\ninterpreter.\nRecall the widening functions is used to ensure termination in abstract interpreters.\n"},"Lean.IR.UnreachableBranches.Value.toFormat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L20-L29","name":"Lean.IR.UnreachableBranches.Value.toFormat","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.toFormat","doc":""},"Lean.IR.UnreachableBranches.Value.merge":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L58-L69","name":"Lean.IR.UnreachableBranches.Value.merge","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.merge","doc":""},"Lean.IR.UnreachableBranches.Value.instToStringValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L78-L78","name":"Lean.IR.UnreachableBranches.Value.instToStringValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.instToStringValue","doc":""},"Lean.IR.UnreachableBranches.Value.instToFormatValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L77-L77","name":"Lean.IR.UnreachableBranches.Value.instToFormatValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.instToFormatValue","doc":""},"Lean.IR.UnreachableBranches.Value.instBEqValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L49-L49","name":"Lean.IR.UnreachableBranches.Value.instBEqValue","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.instBEqValue","doc":""},"Lean.IR.UnreachableBranches.Value.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L71-L75","name":"Lean.IR.UnreachableBranches.Value.format","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.format","doc":""},"Lean.IR.UnreachableBranches.Value.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L39-L47","name":"Lean.IR.UnreachableBranches.Value.beq","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.beq","doc":""},"Lean.IR.UnreachableBranches.Value.addChoice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L51-L56","name":"Lean.IR.UnreachableBranches.Value.addChoice","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value.addChoice","doc":""},"Lean.IR.UnreachableBranches.Value":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L13-L18","name":"Lean.IR.UnreachableBranches.Value","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Value","doc":"Value used in the abstract interpreter "},"Lean.IR.UnreachableBranches.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L154-L154","name":"Lean.IR.UnreachableBranches.M","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.M","doc":""},"Lean.IR.UnreachableBranches.InterpState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L150-L152","name":"Lean.IR.UnreachableBranches.InterpState","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpState","doc":""},"Lean.IR.UnreachableBranches.InterpContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L144-L148","name":"Lean.IR.UnreachableBranches.InterpContext","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.InterpContext","doc":""},"Lean.IR.UnreachableBranches.FunctionSummaries":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L125-L125","name":"Lean.IR.UnreachableBranches.FunctionSummaries","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.FunctionSummaries","doc":""},"Lean.IR.UnreachableBranches.Assignment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadBranches.lean#L142-L142","name":"Lean.IR.UnreachableBranches.Assignment","docLink":"./Lean/Compiler/IR/ElimDeadBranches.html#Lean.IR.UnreachableBranches.Assignment","doc":""},"Lean.IR.UniqueIds.checkParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L17-L18","name":"Lean.IR.UniqueIds.checkParams","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.checkParams","doc":""},"Lean.IR.UniqueIds.checkId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L12-L15","name":"Lean.IR.UniqueIds.checkId","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.checkId","doc":""},"Lean.IR.UniqueIds.checkFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L20-L24","name":"Lean.IR.UniqueIds.checkFnBody","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.checkFnBody","doc":""},"Lean.IR.UniqueIds.checkDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L26-L28","name":"Lean.IR.UniqueIds.checkDecl","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.checkDecl","doc":""},"Lean.IR.UniqueIds.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L10-L10","name":"Lean.IR.UniqueIds.M","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.UniqueIds.M","doc":""},"Lean.IR.UnboxResult.unboxAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/UnboxResult.lean#L11-L11","name":"Lean.IR.UnboxResult.unboxAttr","docLink":"./Lean/Compiler/IR/UnboxResult.html#Lean.IR.UnboxResult.unboxAttr","doc":""},"Lean.IR.UnboxResult.hasUnboxAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/UnboxResult.lean#L20-L21","name":"Lean.IR.UnboxResult.hasUnboxAttr","docLink":"./Lean/Compiler/IR/UnboxResult.html#Lean.IR.UnboxResult.hasUnboxAttr","doc":""},"Lean.IR.Sorry.visitFndBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Sorry.lean#L36-L44","name":"Lean.IR.Sorry.visitFndBody","docLink":"./Lean/Compiler/IR/Sorry.html#Lean.IR.Sorry.visitFndBody","doc":""},"Lean.IR.Sorry.visitExpr.getSorryDepFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Sorry.lean#L22-L34","name":"Lean.IR.Sorry.visitExpr.getSorryDepFor?","docLink":"./Lean/Compiler/IR/Sorry.html#Lean.IR.Sorry.visitExpr.getSorryDepFor?","doc":""},"Lean.IR.Sorry.visitExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Sorry.lean#L17-L34","name":"Lean.IR.Sorry.visitExpr","docLink":"./Lean/Compiler/IR/Sorry.html#Lean.IR.Sorry.visitExpr","doc":""},"Lean.IR.Sorry.visitDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Sorry.lean#L46-L59","name":"Lean.IR.Sorry.visitDecl","docLink":"./Lean/Compiler/IR/Sorry.html#Lean.IR.Sorry.visitDecl","doc":""},"Lean.IR.Sorry.collect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Sorry.lean#L61-L65","name":"Lean.IR.Sorry.collect","docLink":"./Lean/Compiler/IR/Sorry.html#Lean.IR.Sorry.collect","doc":""},"Lean.IR.Sorry.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Sorry.lean#L11-L13","name":"Lean.IR.Sorry.State","docLink":"./Lean/Compiler/IR/Sorry.html#Lean.IR.Sorry.State","doc":""},"Lean.IR.Sorry.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Sorry.lean#L15-L15","name":"Lean.IR.Sorry.M","docLink":"./Lean/Compiler/IR/Sorry.html#Lean.IR.Sorry.M","doc":""},"Lean.IR.ResetReuse.R":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ResetReuse.lean#L126-L145","name":"Lean.IR.ResetReuse.R","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.R","doc":""},"Lean.IR.ResetReuse.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ResetReuse.lean#L54-L54","name":"Lean.IR.ResetReuse.M","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.ResetReuse.M","doc":"We use `Context` to track join points in scope. "},"Lean.IR.Param":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L236-L240","name":"Lean.IR.Param","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Param","doc":""},"Lean.IR.NormalizeIds.withVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L76-L78","name":"Lean.IR.NormalizeIds.withVar","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.withVar","doc":""},"Lean.IR.NormalizeIds.withParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L84-L89","name":"Lean.IR.NormalizeIds.withParams","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.withParams","doc":""},"Lean.IR.NormalizeIds.withJP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L80-L82","name":"Lean.IR.NormalizeIds.withJP","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.withJP","doc":""},"Lean.IR.NormalizeIds.normVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L45-L46","name":"Lean.IR.NormalizeIds.normVar","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normVar","doc":""},"Lean.IR.NormalizeIds.normJP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L48-L49","name":"Lean.IR.NormalizeIds.normJP","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normJP","doc":""},"Lean.IR.NormalizeIds.normIndex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L40-L43","name":"Lean.IR.NormalizeIds.normIndex","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normIndex","doc":""},"Lean.IR.NormalizeIds.normFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L94-L113","name":"Lean.IR.NormalizeIds.normFnBody","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normFnBody","doc":""},"Lean.IR.NormalizeIds.normExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L58-L72","name":"Lean.IR.NormalizeIds.normExpr","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normExpr","doc":""},"Lean.IR.NormalizeIds.normDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L115-L118","name":"Lean.IR.NormalizeIds.normDecl","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normDecl","doc":""},"Lean.IR.NormalizeIds.normArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L55-L56","name":"Lean.IR.NormalizeIds.normArgs","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normArgs","doc":""},"Lean.IR.NormalizeIds.normArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L51-L53","name":"Lean.IR.NormalizeIds.normArg","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.normArg","doc":""},"Lean.IR.NormalizeIds.instMonadLiftMN":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L91-L92","name":"Lean.IR.NormalizeIds.instMonadLiftMN","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.instMonadLiftMN","doc":""},"Lean.IR.NormalizeIds.N":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L74-L74","name":"Lean.IR.NormalizeIds.N","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.N","doc":""},"Lean.IR.NormalizeIds.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L38-L38","name":"Lean.IR.NormalizeIds.M","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.NormalizeIds.M","doc":""},"Lean.IR.MaxIndex.instAndThenCollector":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L26-L27","name":"Lean.IR.MaxIndex.instAndThenCollector","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.instAndThenCollector","doc":""},"Lean.IR.MaxIndex.collectFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L59-L73","name":"Lean.IR.MaxIndex.collectFnBody","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.collectFnBody","doc":""},"Lean.IR.MaxIndex.collectDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L75-L77","name":"Lean.IR.MaxIndex.collectDecl","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.collectDecl","doc":""},"Lean.IR.MaxIndex.Collector":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L19-L19","name":"Lean.IR.MaxIndex.Collector","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.MaxIndex.Collector","doc":""},"Lean.IR.MapVars.mapFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L153-L167","name":"Lean.IR.MapVars.mapFnBody","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.MapVars.mapFnBody","doc":""},"Lean.IR.MapVars.mapExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L137-L151","name":"Lean.IR.MapVars.mapExpr","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.MapVars.mapExpr","doc":""},"Lean.IR.MapVars.mapArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L134-L135","name":"Lean.IR.MapVars.mapArgs","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.MapVars.mapArgs","doc":""},"Lean.IR.MapVars.mapArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L130-L132","name":"Lean.IR.MapVars.mapArg","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.MapVars.mapArg","doc":""},"Lean.IR.MData.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L46-L46","name":"Lean.IR.MData.empty","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.MData.empty","doc":""},"Lean.IR.MData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L45-L45","name":"Lean.IR.MData","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.MData","doc":""},"Lean.IR.LogEntry.instToFormatLogEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L21-L21","name":"Lean.IR.LogEntry.instToFormatLogEntry","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.LogEntry.instToFormatLogEntry","doc":""},"Lean.IR.LogEntry.fmt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L17-L19","name":"Lean.IR.LogEntry.fmt","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.LogEntry.fmt","doc":""},"Lean.IR.LogEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L12-L14","name":"Lean.IR.LogEntry","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.LogEntry","doc":""},"Lean.IR.Log.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L31-L32","name":"Lean.IR.Log.toString","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.Log.toString","doc":""},"Lean.IR.Log.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L26-L28","name":"Lean.IR.Log.format","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.Log.format","doc":""},"Lean.IR.Log":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L24-L24","name":"Lean.IR.Log","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.Log","doc":""},"Lean.IR.LocalContextEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L454-L457","name":"Lean.IR.LocalContextEntry","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContextEntry","doc":""},"Lean.IR.LocalContext.isParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L488-L491","name":"Lean.IR.LocalContext.isParam","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.isParam","doc":""},"Lean.IR.LocalContext.isLocalVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L493-L496","name":"Lean.IR.LocalContext.isLocalVar","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.isLocalVar","doc":""},"Lean.IR.LocalContext.isJP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L473-L476","name":"Lean.IR.LocalContext.isJP","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.isJP","doc":""},"Lean.IR.LocalContext.getValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L510-L513","name":"Lean.IR.LocalContext.getValue","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.getValue","doc":""},"Lean.IR.LocalContext.getType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L504-L508","name":"Lean.IR.LocalContext.getType","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.getType","doc":""},"Lean.IR.LocalContext.getJPParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L483-L486","name":"Lean.IR.LocalContext.getJPParams","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.getJPParams","doc":""},"Lean.IR.LocalContext.getJPBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L478-L481","name":"Lean.IR.LocalContext.getJPBody","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.getJPBody","doc":""},"Lean.IR.LocalContext.eraseJoinPointDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L501-L502","name":"Lean.IR.LocalContext.eraseJoinPointDecl","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.eraseJoinPointDecl","doc":""},"Lean.IR.LocalContext.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L498-L499","name":"Lean.IR.LocalContext.contains","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.contains","doc":""},"Lean.IR.LocalContext.addParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L470-L471","name":"Lean.IR.LocalContext.addParams","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.addParams","doc":""},"Lean.IR.LocalContext.addParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L467-L468","name":"Lean.IR.LocalContext.addParam","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.addParam","doc":""},"Lean.IR.LocalContext.addLocal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L461-L462","name":"Lean.IR.LocalContext.addLocal","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.addLocal","doc":""},"Lean.IR.LocalContext.addJP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L464-L465","name":"Lean.IR.LocalContext.addJP","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.addJP","doc":""},"Lean.IR.LocalContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L459-L459","name":"Lean.IR.LocalContext","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext","doc":""},"Lean.IR.LiveVars.updateJPLiveVarMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L156-L158","name":"Lean.IR.LiveVars.updateJPLiveVarMap","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.updateJPLiveVarMap","doc":""},"Lean.IR.LiveVars.collectFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L137-L154","name":"Lean.IR.LiveVars.collectFnBody","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.collectFnBody","doc":""},"Lean.IR.LiveVars.collectExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L121-L135","name":"Lean.IR.LiveVars.collectExpr","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.collectExpr","doc":""},"Lean.IR.LiveVars.Collector":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L92-L92","name":"Lean.IR.LiveVars.Collector","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.Collector","doc":""},"Lean.IR.LiveVarSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L81-L81","name":"Lean.IR.LiveVarSet","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVarSet","doc":""},"Lean.IR.LitVal.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L155-L158","name":"Lean.IR.LitVal.beq","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LitVal.beq","doc":""},"Lean.IR.LitVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L151-L153","name":"Lean.IR.LitVal","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LitVal","doc":""},"Lean.IR.JoinPointId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L29-L31","name":"Lean.IR.JoinPointId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId","doc":"Join point identifier "},"Lean.IR.JPParamsMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L54-L54","name":"Lean.IR.JPParamsMap","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.JPParamsMap","doc":""},"Lean.IR.JPLiveVarMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L82-L82","name":"Lean.IR.JPLiveVarMap","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.JPLiveVarMap","doc":""},"Lean.IR.IsLive.visitVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L39-L39","name":"Lean.IR.IsLive.visitVar","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitVar","doc":""},"Lean.IR.IsLive.visitJP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L40-L40","name":"Lean.IR.IsLive.visitJP","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitJP","doc":""},"Lean.IR.IsLive.visitFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L45-L68","name":"Lean.IR.IsLive.visitFnBody","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitFnBody","doc":""},"Lean.IR.IsLive.visitExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L43-L43","name":"Lean.IR.IsLive.visitExpr","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitExpr","doc":""},"Lean.IR.IsLive.visitArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L42-L42","name":"Lean.IR.IsLive.visitArgs","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitArgs","doc":""},"Lean.IR.IsLive.visitArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L41-L41","name":"Lean.IR.IsLive.visitArg","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitArg","doc":""},"Lean.IR.IsLive.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L37-L37","name":"Lean.IR.IsLive.M","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.M","doc":"We use `State Context` instead of `ReaderT Context Id` because we remove\n  non local joint points from `Context` whenever we visit them instead of\n  maintaining a set of visited non local join points.\n\n  Remark: we don't need to track local join points because we assume there is\n  no variable or join point shadowing in our IR.\n"},"Lean.IR.IndexSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L448-L448","name":"Lean.IR.IndexSet","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet","doc":"Set of variable and join point names "},"Lean.IR.IndexRenaming":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L515-L515","name":"Lean.IR.IndexRenaming","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexRenaming","doc":""},"Lean.IR.Index.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L33-L33","name":"Lean.IR.Index.lt","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Index.lt","doc":""},"Lean.IR.Index":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L22-L22","name":"Lean.IR.Index","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Index","doc":""},"Lean.IR.IRType.isUnion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L127-L129","name":"Lean.IR.IRType.isUnion","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.isUnion","doc":""},"Lean.IR.IRType.isStruct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L123-L125","name":"Lean.IR.IRType.isStruct","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.isStruct","doc":""},"Lean.IR.IRType.isScalar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L105-L112","name":"Lean.IR.IRType.isScalar","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.isScalar","doc":""},"Lean.IR.IRType.isObj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L114-L117","name":"Lean.IR.IRType.isObj","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.isObj","doc":""},"Lean.IR.IRType.isIrrelevant":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L119-L121","name":"Lean.IR.IRType.isIrrelevant","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.isIrrelevant","doc":""},"Lean.IR.IRType.instBEqIRType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L103-L103","name":"Lean.IR.IRType.instBEqIRType","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.instBEqIRType","doc":""},"Lean.IR.IRType.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L89-L101","name":"Lean.IR.IRType.beq","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.beq","doc":""},"Lean.IR.IRType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L80-L85","name":"Lean.IR.IRType","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType","doc":"Low Level IR types. Most are self explanatory.\n\n   - `usize` represents the C++ `size_t` Type. We have it here\n      because it is 32-bit in 32-bit machines, and 64-bit in 64-bit machines,\n      and we want the C++ backend for our Compiler to generate platform independent code.\n\n   - `irrelevant` for Lean types, propositions and proofs.\n\n   - `object` a pointer to a value in the heap.\n\n   - `tobject` a pointer to a value in the heap or tagged pointer\n      (i.e., the least significant bit is 1) storing a scalar value.\n\n   - `struct` and `union` are used to return small values (e.g., `Option`, `Prod`, `Except`)\n      on the stack.\n\nRemark: the RC operations for `tobject` are slightly more expensive because we\nfirst need to test whether the `tobject` is really a pointer or not.\n\nRemark: the Lean runtime assumes that sizeof(void*) == sizeof(sizeT).\nLean cannot be compiled on old platforms where this is not True.\n\nSince values of type `struct` and `union` are only used to return values,\nWe assume they must be used/consumed \"linearly\". We use the term \"linear\" here\nto mean \"exactly once\" in each execution. That is, given `x : S`, where `S` is a struct,\nthen one of the following must hold in each (execution) branch.\n1- `x` occurs only at a single `ret x` instruction. That is, it is being consumed by being returned.\n2- `x` occurs only at a single `ctor`. That is, it is being \"consumed\" by being stored into another `struct/union`.\n3- We extract (aka project) every single field of `x` exactly once. That is, we are consuming `x` by consuming each\n   of one of its components. Minor refinement: we don't need to consume scalar fields or struct/union\n   fields that do not contain object fields.\n"},"Lean.IR.HasIndex.visitVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L184-L184","name":"Lean.IR.HasIndex.visitVar","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitVar","doc":""},"Lean.IR.HasIndex.visitParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L194-L195","name":"Lean.IR.HasIndex.visitParams","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitParams","doc":""},"Lean.IR.HasIndex.visitJP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L185-L185","name":"Lean.IR.HasIndex.visitJP","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitJP","doc":""},"Lean.IR.HasIndex.visitFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L213-L227","name":"Lean.IR.HasIndex.visitFnBody","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitFnBody","doc":""},"Lean.IR.HasIndex.visitExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L197-L211","name":"Lean.IR.HasIndex.visitExpr","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitExpr","doc":""},"Lean.IR.HasIndex.visitArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L191-L192","name":"Lean.IR.HasIndex.visitArgs","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArgs","doc":""},"Lean.IR.HasIndex.visitArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L187-L189","name":"Lean.IR.HasIndex.visitArg","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.HasIndex.visitArg","doc":""},"Lean.IR.FunId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L21-L21","name":"Lean.IR.FunId","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId","doc":"Function identifier "},"Lean.IR.FreeIndices.instAndThenCollector":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L123-L124","name":"Lean.IR.FreeIndices.instAndThenCollector","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.instAndThenCollector","doc":""},"Lean.IR.FreeIndices.insertParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L114-L115","name":"Lean.IR.FreeIndices.insertParams","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.insertParams","doc":""},"Lean.IR.FreeIndices.collectFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L155-L169","name":"Lean.IR.FreeIndices.collectFnBody","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.collectFnBody","doc":""},"Lean.IR.FreeIndices.Collector":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L91-L91","name":"Lean.IR.FreeIndices.Collector","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FreeIndices.Collector","doc":""},"Lean.IR.FnBody.split":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L336-L339","name":"Lean.IR.FnBody.split","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.split","doc":"If b is a non terminal, then return a pair `(c, b')` s.t. `b == c <;> b'`,\nand c.body == FnBody.nil "},"Lean.IR.FnBody.simpCase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/SimpCase.lean#L59-L66","name":"Lean.IR.FnBody.simpCase","docLink":"./Lean/Compiler/IR/SimpCase.html#Lean.IR.FnBody.simpCase","doc":""},"Lean.IR.FnBody.setBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L318-L329","name":"Lean.IR.FnBody.setBody","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.setBody","doc":""},"Lean.IR.FnBody.resetBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L331-L332","name":"Lean.IR.FnBody.resetBody","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.resetBody","doc":""},"Lean.IR.FnBody.replaceVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L175-L176","name":"Lean.IR.FnBody.replaceVar","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.FnBody.replaceVar","doc":"Replace `x` with `y` in `b`. This function assumes `b` does not shadow `x` "},"Lean.IR.FnBody.pushProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/PushProj.lean#L39-L49","name":"Lean.IR.FnBody.pushProj","docLink":"./Lean/Compiler/IR/PushProj.html#Lean.IR.FnBody.pushProj","doc":""},"Lean.IR.FnBody.nil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L279-L279","name":"Lean.IR.FnBody.nil","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.nil","doc":""},"Lean.IR.FnBody.maxIndex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L81-L82","name":"Lean.IR.FnBody.maxIndex","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.maxIndex","doc":""},"Lean.IR.FnBody.mapVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L171-L172","name":"Lean.IR.FnBody.mapVars","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.FnBody.mapVars","doc":""},"Lean.IR.FnBody.isTerminal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L298-L303","name":"Lean.IR.FnBody.isTerminal","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.isTerminal","doc":""},"Lean.IR.FnBody.hasLiveVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/LiveVars.lean#L78-L79","name":"Lean.IR.FnBody.hasLiveVar","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.FnBody.hasLiveVar","doc":"Return true if `x` is live in the function body `b` in the context `ctx`.\n\n   Remark: the context only needs to contain all (free) join point declarations.\n\n   Recall that we say that a join point `j` is free in `b` if `b` contains\n   `FnBody.jmp j ys` and `j` is not local. "},"Lean.IR.FnBody.hasFreeVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L233-L233","name":"Lean.IR.FnBody.hasFreeVar","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.hasFreeVar","doc":""},"Lean.IR.FnBody.freeIndices":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L176-L177","name":"Lean.IR.FnBody.freeIndices","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.freeIndices","doc":""},"Lean.IR.FnBody.flatten":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L369-L370","name":"Lean.IR.FnBody.flatten","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.flatten","doc":""},"Lean.IR.FnBody.elimDead":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadVars.lean#L31-L39","name":"Lean.IR.FnBody.elimDead","docLink":"./Lean/Compiler/IR/ElimDeadVars.html#Lean.IR.FnBody.elimDead","doc":""},"Lean.IR.FnBody.collectFreeIndices":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L173-L174","name":"Lean.IR.FnBody.collectFreeIndices","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.FnBody.collectFreeIndices","doc":""},"Lean.IR.FnBody.body":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L305-L316","name":"Lean.IR.FnBody.body","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.body","doc":""},"Lean.IR.FnBody.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L602-L603","name":"Lean.IR.FnBody.beq","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.beq","doc":""},"Lean.IR.FnBody.alphaEqv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L578-L600","name":"Lean.IR.FnBody.alphaEqv","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.alphaEqv","doc":""},"Lean.IR.FnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L249-L275","name":"Lean.IR.FnBody","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody","doc":""},"Lean.IR.Expr.hasFreeVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L232-L232","name":"Lean.IR.Expr.hasFreeVar","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Expr.hasFreeVar","doc":""},"Lean.IR.Expr.alphaEqv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L541-L556","name":"Lean.IR.Expr.alphaEqv","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.alphaEqv","doc":""},"Lean.IR.Expr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L193-L223","name":"Lean.IR.Expr","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr","doc":""},"Lean.IR.ExplicitRC.visitFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L211-L265","name":"Lean.IR.ExplicitRC.visitFnBody","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.visitFnBody","doc":""},"Lean.IR.ExplicitRC.visitDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L267-L275","name":"Lean.IR.ExplicitRC.visitDecl","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.visitDecl","doc":""},"Lean.IR.ExplicitRC.updateVarInfoWithParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L206-L209","name":"Lean.IR.ExplicitRC.updateVarInfoWithParams","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.updateVarInfoWithParams","doc":""},"Lean.IR.ExplicitRC.mustConsume":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L51-L53","name":"Lean.IR.ExplicitRC.mustConsume","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.mustConsume","doc":""},"Lean.IR.ExplicitRC.instInhabitedVarInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L20-L20","name":"Lean.IR.ExplicitRC.instInhabitedVarInfo","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.instInhabitedVarInfo","doc":""},"Lean.IR.ExplicitRC.getVarInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L36-L39","name":"Lean.IR.ExplicitRC.getVarInfo","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.getVarInfo","doc":""},"Lean.IR.ExplicitRC.getJPParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L41-L44","name":"Lean.IR.ExplicitRC.getJPParams","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.getJPParams","doc":""},"Lean.IR.ExplicitRC.getJPLiveVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L46-L49","name":"Lean.IR.ExplicitRC.getJPLiveVars","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.getJPLiveVars","doc":""},"Lean.IR.ExplicitRC.getDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L31-L34","name":"Lean.IR.ExplicitRC.getDecl","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.getDecl","doc":""},"Lean.IR.ExplicitRC.addInc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L55-L57","name":"Lean.IR.ExplicitRC.addInc","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.addInc","doc":""},"Lean.IR.ExplicitRC.addDec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L59-L61","name":"Lean.IR.ExplicitRC.addDec","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.addDec","doc":""},"Lean.IR.ExplicitRC.VarMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L22-L22","name":"Lean.IR.ExplicitRC.VarMap","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.VarMap","doc":""},"Lean.IR.ExplicitRC.VarInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L16-L20","name":"Lean.IR.ExplicitRC.VarInfo","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.VarInfo","doc":""},"Lean.IR.ExplicitRC.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/RC.lean#L24-L29","name":"Lean.IR.ExplicitRC.Context","docLink":"./Lean/Compiler/IR/RC.html#Lean.IR.ExplicitRC.Context","doc":""},"Lean.IR.ExplicitBoxing.withVDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L152-L153","name":"Lean.IR.ExplicitBoxing.withVDecl","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.withVDecl","doc":""},"Lean.IR.ExplicitBoxing.withParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L149-L150","name":"Lean.IR.ExplicitBoxing.withParams","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.withParams","doc":""},"Lean.IR.ExplicitBoxing.withJDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L155-L156","name":"Lean.IR.ExplicitBoxing.withJDecl","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.withJDecl","doc":""},"Lean.IR.ExplicitBoxing.visitVDeclExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L270-L292","name":"Lean.IR.ExplicitBoxing.visitVDeclExpr","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.visitVDeclExpr","doc":""},"Lean.IR.ExplicitBoxing.visitFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L294-L324","name":"Lean.IR.ExplicitBoxing.visitFnBody","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.visitFnBody","doc":""},"Lean.IR.ExplicitBoxing.unboxResultIfNeeded":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L255-L260","name":"Lean.IR.ExplicitBoxing.unboxResultIfNeeded","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.unboxResultIfNeeded","doc":""},"Lean.IR.ExplicitBoxing.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L326-L338","name":"Lean.IR.ExplicitBoxing.run","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.run","doc":""},"Lean.IR.ExplicitBoxing.requiresBoxedVersion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L43-L46","name":"Lean.IR.ExplicitBoxing.requiresBoxedVersion","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.requiresBoxedVersion","doc":""},"Lean.IR.ExplicitBoxing.mkCast":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L179-L207","name":"Lean.IR.ExplicitBoxing.mkCast","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.mkCast","doc":"Auxiliary function used by castVarIfNeeded.\nIt is used when the expected type does not match `xType`.\nIf `xType` is scalar, then we need to \"box\" it. Otherwise, we need to \"unbox\" it. "},"Lean.IR.ExplicitBoxing.mkBoxedVersionAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L48-L67","name":"Lean.IR.ExplicitBoxing.mkBoxedVersionAux","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.mkBoxedVersionAux","doc":""},"Lean.IR.ExplicitBoxing.mkBoxedVersion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L69-L70","name":"Lean.IR.ExplicitBoxing.mkBoxedVersion","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.mkBoxedVersion","doc":""},"Lean.IR.ExplicitBoxing.mkBoxedName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L32-L33","name":"Lean.IR.ExplicitBoxing.mkBoxedName","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.mkBoxedName","doc":""},"Lean.IR.ExplicitBoxing.isBoxedName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L35-L36","name":"Lean.IR.ExplicitBoxing.isBoxedName","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.isBoxedName","doc":""},"Lean.IR.ExplicitBoxing.getVarType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L131-L135","name":"Lean.IR.ExplicitBoxing.getVarType","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getVarType","doc":""},"Lean.IR.ExplicitBoxing.getScrutineeType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L79-L92","name":"Lean.IR.ExplicitBoxing.getScrutineeType","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getScrutineeType","doc":"Infer scrutinee type using `case` alternatives.\nThis can be done whenever `alts` does not contain an `Alt.default _` value. "},"Lean.IR.ExplicitBoxing.getResultType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L129-L129","name":"Lean.IR.ExplicitBoxing.getResultType","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getResultType","doc":""},"Lean.IR.ExplicitBoxing.getLocalContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L128-L128","name":"Lean.IR.ExplicitBoxing.getLocalContext","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getLocalContext","doc":""},"Lean.IR.ExplicitBoxing.getJPParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L137-L141","name":"Lean.IR.ExplicitBoxing.getJPParams","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getJPParams","doc":""},"Lean.IR.ExplicitBoxing.getEnv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L127-L127","name":"Lean.IR.ExplicitBoxing.getEnv","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getEnv","doc":""},"Lean.IR.ExplicitBoxing.getDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L143-L147","name":"Lean.IR.ExplicitBoxing.getDecl","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.getDecl","doc":""},"Lean.IR.ExplicitBoxing.eqvTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L94-L95","name":"Lean.IR.ExplicitBoxing.eqvTypes","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.eqvTypes","doc":""},"Lean.IR.ExplicitBoxing.castVarIfNeeded":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L209-L216","name":"Lean.IR.ExplicitBoxing.castVarIfNeeded","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.castVarIfNeeded","doc":""},"Lean.IR.ExplicitBoxing.castResultIfNeeded":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L262-L268","name":"Lean.IR.ExplicitBoxing.castResultIfNeeded","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.castResultIfNeeded","doc":""},"Lean.IR.ExplicitBoxing.castArgsIfNeededAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L223-L243","name":"Lean.IR.ExplicitBoxing.castArgsIfNeededAux","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.castArgsIfNeededAux","doc":""},"Lean.IR.ExplicitBoxing.castArgsIfNeeded":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L245-L248","name":"Lean.IR.ExplicitBoxing.castArgsIfNeeded","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.castArgsIfNeeded","doc":""},"Lean.IR.ExplicitBoxing.castArgIfNeeded":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L218-L221","name":"Lean.IR.ExplicitBoxing.castArgIfNeeded","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.castArgIfNeeded","doc":""},"Lean.IR.ExplicitBoxing.boxArgsIfNeeded":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L250-L253","name":"Lean.IR.ExplicitBoxing.boxArgsIfNeeded","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.boxArgsIfNeeded","doc":""},"Lean.IR.ExplicitBoxing.addBoxedVersions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L72-L75","name":"Lean.IR.ExplicitBoxing.addBoxedVersions","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.addBoxedVersions","doc":""},"Lean.IR.ExplicitBoxing.N":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L38-L38","name":"Lean.IR.ExplicitBoxing.N","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.N","doc":""},"Lean.IR.ExplicitBoxing.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L121-L121","name":"Lean.IR.ExplicitBoxing.M","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.M","doc":""},"Lean.IR.ExplicitBoxing.BoxingState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L104-L119","name":"Lean.IR.ExplicitBoxing.BoxingState","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.BoxingState","doc":""},"Lean.IR.ExplicitBoxing.BoxingContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Boxing.lean#L97-L102","name":"Lean.IR.ExplicitBoxing.BoxingContext","docLink":"./Lean/Compiler/IR/Boxing.html#Lean.IR.ExplicitBoxing.BoxingContext","doc":""},"Lean.IR.ExpandResetReuse.setFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L143-L144","name":"Lean.IR.ExpandResetReuse.setFields","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.setFields","doc":""},"Lean.IR.ExpandResetReuse.searchAndExpand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L249-L263","name":"Lean.IR.ExpandResetReuse.searchAndExpand","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.searchAndExpand","doc":""},"Lean.IR.ExpandResetReuse.reuseToSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L188-L209","name":"Lean.IR.ExpandResetReuse.reuseToSet","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.reuseToSet","doc":""},"Lean.IR.ExpandResetReuse.reuseToCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L90-L110","name":"Lean.IR.ExpandResetReuse.reuseToCtor","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.reuseToCtor","doc":"Replace `reuse x ctor ...` with `ctor ...`, and remoce `dec x` "},"Lean.IR.ExpandResetReuse.removeSelfSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L168-L186","name":"Lean.IR.ExpandResetReuse.removeSelfSet","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.removeSelfSet","doc":"Remove unnecessary `set/uset/sset` operations "},"Lean.IR.ExpandResetReuse.releaseUnreadFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L135-L141","name":"Lean.IR.ExpandResetReuse.releaseUnreadFields","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.releaseUnreadFields","doc":""},"Lean.IR.ExpandResetReuse.mkSlowPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L124-L129","name":"Lean.IR.ExpandResetReuse.mkSlowPath","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkSlowPath","doc":"replace\n```\nx := reset y; b\n```\nwith\n```\ninc z_1; ...; inc z_i; dec y; b'\n```\nwhere `z_i`'s are the variables in `mask`,\nand `b'` is `b` where we removed `dec x` and replaced `reuse x ctor_i ...` with `ctor_i ...`.\n"},"Lean.IR.ExpandResetReuse.mkProjMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L31-L34","name":"Lean.IR.ExpandResetReuse.mkProjMap","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkProjMap","doc":"Create a mapping from variables to projections.\nThis function assumes variable ids have been normalized "},"Lean.IR.ExpandResetReuse.mkFresh":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L132-L133","name":"Lean.IR.ExpandResetReuse.mkFresh","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkFresh","doc":""},"Lean.IR.ExpandResetReuse.mkFastPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L230-L233","name":"Lean.IR.ExpandResetReuse.mkFastPath","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.mkFastPath","doc":"replace\n```\nx := reset y; b\n```\nwith\n```\nlet f_i_1 := proj[i_1] y;\n...\nlet f_i_k := proj[i_k] y;\nb'\n```\nwhere `i_j`s are the field indexes\nthat the code did not touch immediately before the reset.\nThat is `mask[j] == none`.\n`b'` is `b` where `y` `dec x` is replaced with `del y`,\nand `z := reuse x ctor_i ws; F` is replaced with\n`set x i ws[i]` operations, and we replace `z` with `x` in `F`\n"},"Lean.IR.ExpandResetReuse.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L265-L272","name":"Lean.IR.ExpandResetReuse.main","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.main","doc":""},"Lean.IR.ExpandResetReuse.isSelfUSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L156-L159","name":"Lean.IR.ExpandResetReuse.isSelfUSet","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfUSet","doc":"Given `uset x[i] := y`, return true iff `y := uproj[i] x` "},"Lean.IR.ExpandResetReuse.isSelfSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L147-L153","name":"Lean.IR.ExpandResetReuse.isSelfSet","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfSet","doc":"Given `set x[i] := y`, return true iff `y := proj[i] x` "},"Lean.IR.ExpandResetReuse.isSelfSSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L162-L165","name":"Lean.IR.ExpandResetReuse.isSelfSSet","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.isSelfSSet","doc":"Given `sset x[n, i] := y`, return true iff `y := sproj[n, i] x` "},"Lean.IR.ExpandResetReuse.expand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L236-L247","name":"Lean.IR.ExpandResetReuse.expand","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.expand","doc":""},"Lean.IR.ExpandResetReuse.eraseProjIncForAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L53-L82","name":"Lean.IR.ExpandResetReuse.eraseProjIncForAux","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.eraseProjIncForAux","doc":"Auxiliary function for eraseProjIncFor "},"Lean.IR.ExpandResetReuse.eraseProjIncFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L86-L87","name":"Lean.IR.ExpandResetReuse.eraseProjIncFor","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.eraseProjIncFor","doc":"Try to erase `inc` instructions on projections of `y` occurring in the tail of `bs`.\nReturn the updated `bs` and a bit mask specifying which `inc`s have been removed. "},"Lean.IR.ExpandResetReuse.consumed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L41-L48","name":"Lean.IR.ExpandResetReuse.consumed","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.consumed","doc":"Return true iff `x` is consumed in all branches of the current block.\nHere consumption means the block contains a `dec x` or `reuse x ...`. "},"Lean.IR.ExpandResetReuse.ProjMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L12-L12","name":"Lean.IR.ExpandResetReuse.ProjMap","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.ProjMap","doc":"Mapping from variable to projections "},"Lean.IR.ExpandResetReuse.Mask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L50-L50","name":"Lean.IR.ExpandResetReuse.Mask","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Mask","doc":""},"Lean.IR.ExpandResetReuse.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L131-L131","name":"Lean.IR.ExpandResetReuse.M","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.M","doc":""},"Lean.IR.ExpandResetReuse.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L36-L37","name":"Lean.IR.ExpandResetReuse.Context","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.Context","doc":""},"Lean.IR.ExpandResetReuse.CollectProjMap.collectVDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L15-L20","name":"Lean.IR.ExpandResetReuse.CollectProjMap.collectVDecl","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.collectVDecl","doc":""},"Lean.IR.ExpandResetReuse.CollectProjMap.collectFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L22-L26","name":"Lean.IR.ExpandResetReuse.CollectProjMap.collectFnBody","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.collectFnBody","doc":""},"Lean.IR.ExpandResetReuse.CollectProjMap.Collector":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L14-L14","name":"Lean.IR.ExpandResetReuse.CollectProjMap.Collector","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.ExpandResetReuse.CollectProjMap.Collector","doc":""},"Lean.IR.EmitC.toStringArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L394-L395","name":"Lean.IR.EmitC.toStringArgs","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.toStringArgs","doc":""},"Lean.IR.EmitC.toHexDigit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L471-L472","name":"Lean.IR.EmitC.toHexDigit","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.toHexDigit","doc":""},"Lean.IR.EmitC.toCType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L55-L66","name":"Lean.IR.EmitC.toCType","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.toCType","doc":""},"Lean.IR.EmitC.toCName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L71-L77","name":"Lean.IR.EmitC.toCName","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.toCName","doc":""},"Lean.IR.EmitC.toCInitName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L82-L88","name":"Lean.IR.EmitC.toCInitName","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.toCInitName","doc":""},"Lean.IR.EmitC.throwUnknownVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L241-L242","name":"Lean.IR.EmitC.throwUnknownVar","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.throwUnknownVar","doc":""},"Lean.IR.EmitC.throwInvalidExportName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L68-L69","name":"Lean.IR.EmitC.throwInvalidExportName","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.throwInvalidExportName","doc":""},"Lean.IR.EmitC.quoteString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L474-L488","name":"Lean.IR.EmitC.quoteString","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.quoteString","doc":""},"Lean.IR.EmitC.paramEqArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L528-L531","name":"Lean.IR.EmitC.paramEqArg","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.paramEqArg","doc":""},"Lean.IR.EmitC.overwriteParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L548-L552","name":"Lean.IR.EmitC.overwriteParam","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.overwriteParam","doc":"Given `[p_0, ..., p_{n-1}]`, `[y_0, ..., y_{n-1}]`, representing the assignments\n```\np_0 := y_0,\n...\np_{n-1} := y_{n-1}\n```\nReturn true iff we have `(i, j)` where `j > i`, and `y_j == p_i`.\nThat is, we have\n```\n      p_i := y_i,\n      ...\n      p_j := p_i, -- p_i was overwritten above\n```\n"},"Lean.IR.EmitC.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L736-L742","name":"Lean.IR.EmitC.main","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.main","doc":""},"Lean.IR.EmitC.leanMainFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L19-L19","name":"Lean.IR.EmitC.leanMainFn","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.leanMainFn","doc":""},"Lean.IR.EmitC.isTailCall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L522-L526","name":"Lean.IR.EmitC.isTailCall","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.isTailCall","doc":""},"Lean.IR.EmitC.isIf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L272-L276","name":"Lean.IR.EmitC.isIf","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.isIf","doc":""},"Lean.IR.EmitC.hasMainFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L203-L206","name":"Lean.IR.EmitC.hasMainFn","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.hasMainFn","doc":""},"Lean.IR.EmitC.getModName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L31-L31","name":"Lean.IR.EmitC.getModName","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.getModName","doc":""},"Lean.IR.EmitC.getJPParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L244-L248","name":"Lean.IR.EmitC.getJPParams","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.getJPParams","doc":""},"Lean.IR.EmitC.getEnv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L30-L30","name":"Lean.IR.EmitC.getEnv","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.getEnv","doc":""},"Lean.IR.EmitC.getDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L32-L36","name":"Lean.IR.EmitC.getDecl","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.getDecl","doc":""},"Lean.IR.EmitC.emitVDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L505-L520","name":"Lean.IR.EmitC.emitVDecl","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitVDecl","doc":""},"Lean.IR.EmitC.emitUnbox":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L455-L463","name":"Lean.IR.EmitC.emitUnbox","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitUnbox","doc":""},"Lean.IR.EmitC.emitUSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L308-L309","name":"Lean.IR.EmitC.emitUSet","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitUSet","doc":""},"Lean.IR.EmitC.emitUProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L380-L381","name":"Lean.IR.EmitC.emitUProj","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitUProj","doc":""},"Lean.IR.EmitC.emitTailCall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L554-L578","name":"Lean.IR.EmitC.emitTailCall","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitTailCall","doc":""},"Lean.IR.EmitC.emitTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L266-L270","name":"Lean.IR.EmitC.emitTag","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitTag","doc":""},"Lean.IR.EmitC.emitSimpleExternalCall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L397-L410","name":"Lean.IR.EmitC.emitSimpleExternalCall","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitSimpleExternalCall","doc":""},"Lean.IR.EmitC.emitSetTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L295-L296","name":"Lean.IR.EmitC.emitSetTag","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitSetTag","doc":""},"Lean.IR.EmitC.emitSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L298-L299","name":"Lean.IR.EmitC.emitSet","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitSet","doc":""},"Lean.IR.EmitC.emitSSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L311-L319","name":"Lean.IR.EmitC.emitSSet","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitSSet","doc":""},"Lean.IR.EmitC.emitSProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L383-L392","name":"Lean.IR.EmitC.emitSProj","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitSProj","doc":""},"Lean.IR.EmitC.emitReuse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L368-L375","name":"Lean.IR.EmitC.emitReuse","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitReuse","doc":""},"Lean.IR.EmitC.emitReset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L358-L366","name":"Lean.IR.EmitC.emitReset","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitReset","doc":""},"Lean.IR.EmitC.emitProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L377-L378","name":"Lean.IR.EmitC.emitProj","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitProj","doc":""},"Lean.IR.EmitC.emitPartialApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L429-L435","name":"Lean.IR.EmitC.emitPartialApp","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitPartialApp","doc":""},"Lean.IR.EmitC.emitOffset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L301-L306","name":"Lean.IR.EmitC.emitOffset","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitOffset","doc":""},"Lean.IR.EmitC.emitNumLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L490-L497","name":"Lean.IR.EmitC.emitNumLit","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitNumLit","doc":""},"Lean.IR.EmitC.emitMarkPersistent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L689-L693","name":"Lean.IR.EmitC.emitMarkPersistent","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitMarkPersistent","doc":""},"Lean.IR.EmitC.emitMainFnIfNeeded":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L208-L209","name":"Lean.IR.EmitC.emitMainFnIfNeeded","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitMainFnIfNeeded","doc":""},"Lean.IR.EmitC.emitMainFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L137-L201","name":"Lean.IR.EmitC.emitMainFn","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitMainFn","doc":""},"Lean.IR.EmitC.emitLns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L44-L45","name":"Lean.IR.EmitC.emitLns","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitLns","doc":""},"Lean.IR.EmitC.emitLn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L41-L42","name":"Lean.IR.EmitC.emitLn","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitLn","doc":""},"Lean.IR.EmitC.emitLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L499-L503","name":"Lean.IR.EmitC.emitLit","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitLit","doc":""},"Lean.IR.EmitC.emitLhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L330-L331","name":"Lean.IR.EmitC.emitLhs","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitLhs","doc":""},"Lean.IR.EmitC.emitJmp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L321-L328","name":"Lean.IR.EmitC.emitJmp","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitJmp","doc":""},"Lean.IR.EmitC.emitJPs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L627-L629","name":"Lean.IR.EmitC.emitJPs","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitJPs","doc":""},"Lean.IR.EmitC.emitIsTaggedPtr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L468-L469","name":"Lean.IR.EmitC.emitIsTaggedPtr","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitIsTaggedPtr","doc":""},"Lean.IR.EmitC.emitIsShared":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L465-L466","name":"Lean.IR.EmitC.emitIsShared","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitIsShared","doc":""},"Lean.IR.EmitC.emitInitFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L717-L734","name":"Lean.IR.EmitC.emitInitFn","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitInitFn","doc":""},"Lean.IR.EmitC.emitInc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L278-L284","name":"Lean.IR.EmitC.emitInc","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitInc","doc":""},"Lean.IR.EmitC.emitIf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L582-L586","name":"Lean.IR.EmitC.emitIf","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitIf","doc":""},"Lean.IR.EmitC.emitFullApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L419-L427","name":"Lean.IR.EmitC.emitFullApp","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitFullApp","doc":""},"Lean.IR.EmitC.emitFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L684-L687","name":"Lean.IR.EmitC.emitFns","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitFns","doc":""},"Lean.IR.EmitC.emitFnDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L125-L135","name":"Lean.IR.EmitC.emitFnDecls","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitFnDecls","doc":""},"Lean.IR.EmitC.emitFnDeclAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L93-L114","name":"Lean.IR.EmitC.emitFnDeclAux","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitFnDeclAux","doc":""},"Lean.IR.EmitC.emitFnDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L116-L118","name":"Lean.IR.EmitC.emitFnDecl","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitFnDecl","doc":""},"Lean.IR.EmitC.emitFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L631-L637","name":"Lean.IR.EmitC.emitFnBody","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitFnBody","doc":""},"Lean.IR.EmitC.emitFileHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L211-L232","name":"Lean.IR.EmitC.emitFileHeader","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitFileHeader","doc":""},"Lean.IR.EmitC.emitFileFooter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L234-L239","name":"Lean.IR.EmitC.emitFileFooter","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitFileFooter","doc":""},"Lean.IR.EmitC.emitExternDeclAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L120-L123","name":"Lean.IR.EmitC.emitExternDeclAux","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitExternDeclAux","doc":""},"Lean.IR.EmitC.emitExternCall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L412-L417","name":"Lean.IR.EmitC.emitExternCall","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitExternCall","doc":""},"Lean.IR.EmitC.emitDel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L292-L293","name":"Lean.IR.EmitC.emitDel","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitDel","doc":""},"Lean.IR.EmitC.emitDeclInit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L695-L715","name":"Lean.IR.EmitC.emitDeclInit","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitDeclInit","doc":""},"Lean.IR.EmitC.emitDeclAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L641-L675","name":"Lean.IR.EmitC.emitDeclAux","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitDeclAux","doc":""},"Lean.IR.EmitC.emitDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L677-L682","name":"Lean.IR.EmitC.emitDecl","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitDecl","doc":""},"Lean.IR.EmitC.emitDec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L286-L290","name":"Lean.IR.EmitC.emitDec","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitDec","doc":""},"Lean.IR.EmitC.emitCtorSetArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L347-L349","name":"Lean.IR.EmitC.emitCtorSetArgs","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitCtorSetArgs","doc":""},"Lean.IR.EmitC.emitCtorScalarSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L338-L341","name":"Lean.IR.EmitC.emitCtorScalarSize","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitCtorScalarSize","doc":""},"Lean.IR.EmitC.emitCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L351-L356","name":"Lean.IR.EmitC.emitCtor","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitCtor","doc":""},"Lean.IR.EmitC.emitCase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L588-L598","name":"Lean.IR.EmitC.emitCase","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitCase","doc":""},"Lean.IR.EmitC.emitCName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L79-L80","name":"Lean.IR.EmitC.emitCName","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitCName","doc":""},"Lean.IR.EmitC.emitCInitName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L90-L91","name":"Lean.IR.EmitC.emitCInitName","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitCInitName","doc":""},"Lean.IR.EmitC.emitBoxFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L444-L450","name":"Lean.IR.EmitC.emitBoxFn","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitBoxFn","doc":""},"Lean.IR.EmitC.emitBox":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L452-L453","name":"Lean.IR.EmitC.emitBox","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitBox","doc":""},"Lean.IR.EmitC.emitBlock":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L600-L625","name":"Lean.IR.EmitC.emitBlock","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitBlock","doc":""},"Lean.IR.EmitC.emitArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L333-L336","name":"Lean.IR.EmitC.emitArgs","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitArgs","doc":""},"Lean.IR.EmitC.emitArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L52-L53","name":"Lean.IR.EmitC.emitArg","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitArg","doc":""},"Lean.IR.EmitC.emitApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L437-L442","name":"Lean.IR.EmitC.emitApp","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitApp","doc":""},"Lean.IR.EmitC.emitAllocCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L343-L345","name":"Lean.IR.EmitC.emitAllocCtor","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emitAllocCtor","doc":""},"Lean.IR.EmitC.emit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L38-L39","name":"Lean.IR.EmitC.emit","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.emit","doc":""},"Lean.IR.EmitC.declareVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L256-L264","name":"Lean.IR.EmitC.declareVars","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.declareVars","doc":""},"Lean.IR.EmitC.declareVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L250-L251","name":"Lean.IR.EmitC.declareVar","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.declareVar","doc":""},"Lean.IR.EmitC.declareParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L253-L254","name":"Lean.IR.EmitC.declareParams","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.declareParams","doc":""},"Lean.IR.EmitC.argToCString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L47-L50","name":"Lean.IR.EmitC.argToCString","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.argToCString","doc":""},"Lean.IR.EmitC.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L28-L28","name":"Lean.IR.EmitC.M","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.M","doc":""},"Lean.IR.EmitC.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitC.lean#L21-L26","name":"Lean.IR.EmitC.Context","docLink":"./Lean/Compiler/IR/EmitC.html#Lean.IR.EmitC.Context","doc":""},"Lean.IR.DeclMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L74-L74","name":"Lean.IR.DeclMap","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.DeclMap","doc":""},"Lean.IR.DeclInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L397-L399","name":"Lean.IR.DeclInfo","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.DeclInfo","doc":"Extra information associated with a declaration. "},"Lean.IR.Decl.updateBody!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L428-L431","name":"Lean.IR.Decl.updateBody!","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.updateBody!","doc":""},"Lean.IR.Decl.uniqueIds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L33-L34","name":"Lean.IR.Decl.uniqueIds","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.Decl.uniqueIds","doc":"Return true if variable, parameter and join point ids are unique "},"Lean.IR.Decl.simpCase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/SimpCase.lean#L72-L75","name":"Lean.IR.Decl.simpCase","docLink":"./Lean/Compiler/IR/SimpCase.html#Lean.IR.Decl.simpCase","doc":"Simplify `case`\n- Remove unreachable branches.\n- Remove `case` if there is only one branch.\n- Merge most common branches using `Alt.default`. "},"Lean.IR.Decl.resultType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L416-L418","name":"Lean.IR.Decl.resultType","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.resultType","doc":""},"Lean.IR.Decl.pushProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/PushProj.lean#L52-L55","name":"Lean.IR.Decl.pushProj","docLink":"./Lean/Compiler/IR/PushProj.html#Lean.IR.Decl.pushProj","doc":"Push projections inside `case` branches. "},"Lean.IR.Decl.params":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L412-L414","name":"Lean.IR.Decl.params","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.params","doc":""},"Lean.IR.Decl.normalizeIds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/NormIds.lean#L123-L124","name":"Lean.IR.Decl.normalizeIds","docLink":"./Lean/Compiler/IR/NormIds.html#Lean.IR.Decl.normalizeIds","doc":"Create a declaration equivalent to `d` s.t. `d.normalizeIds.uniqueIds == true` "},"Lean.IR.Decl.name":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L408-L410","name":"Lean.IR.Decl.name","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.name","doc":""},"Lean.IR.Decl.maxIndex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L84-L85","name":"Lean.IR.Decl.maxIndex","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Decl.maxIndex","doc":""},"Lean.IR.Decl.isExtern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L420-L422","name":"Lean.IR.Decl.isExtern","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.isExtern","doc":""},"Lean.IR.Decl.insertResetReuse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ResetReuse.lean#L151-L157","name":"Lean.IR.Decl.insertResetReuse","docLink":"./Lean/Compiler/IR/ResetReuse.html#Lean.IR.Decl.insertResetReuse","doc":""},"Lean.IR.Decl.getInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L424-L426","name":"Lean.IR.Decl.getInfo","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.getInfo","doc":""},"Lean.IR.Decl.expandResetReuse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ExpandResetReuse.lean#L277-L278","name":"Lean.IR.Decl.expandResetReuse","docLink":"./Lean/Compiler/IR/ExpandResetReuse.html#Lean.IR.Decl.expandResetReuse","doc":"(Try to) expand `reset` and `reuse` instructions. "},"Lean.IR.Decl.elimDead":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/ElimDeadVars.lean#L42-L45","name":"Lean.IR.Decl.elimDead","docLink":"./Lean/Compiler/IR/ElimDeadVars.html#Lean.IR.Decl.elimDead","doc":"Eliminate dead let-declarations and join points "},"Lean.IR.Decl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L401-L404","name":"Lean.IR.Decl","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl","doc":""},"Lean.IR.CtorLayout":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CtorLayout.lean#L30-L35","name":"Lean.IR.CtorLayout","docLink":"./Lean/Compiler/IR/CtorLayout.html#Lean.IR.CtorLayout","doc":""},"Lean.IR.CtorInfo.isScalar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L190-L191","name":"Lean.IR.CtorInfo.isScalar","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo.isScalar","doc":""},"Lean.IR.CtorInfo.isRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L187-L188","name":"Lean.IR.CtorInfo.isRef","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo.isRef","doc":""},"Lean.IR.CtorInfo.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L181-L183","name":"Lean.IR.CtorInfo.beq","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo.beq","doc":""},"Lean.IR.CtorInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L173-L179","name":"Lean.IR.CtorInfo","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo","doc":"Constructor information.\n\n   - `name` is the Name of the Constructor in Lean.\n   - `cidx` is the Constructor index (aka tag).\n   - `size` is the number of arguments of type `object/tobject`.\n   - `usize` is the number of arguments of type `usize`.\n   - `ssize` is the number of bytes used to store scalar values.\n\nRecall that a Constructor object contains a header, then a sequence of\npointers to other Lean objects, a sequence of `USize` (i.e., `size_t`)\nscalar values, and a sequence of other scalar values. "},"Lean.IR.CtorFieldInfo.instToFormatCtorFieldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CtorLayout.lean#L26-L26","name":"Lean.IR.CtorFieldInfo.instToFormatCtorFieldInfo","docLink":"./Lean/Compiler/IR/CtorLayout.html#Lean.IR.CtorFieldInfo.instToFormatCtorFieldInfo","doc":""},"Lean.IR.CtorFieldInfo.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CtorLayout.lean#L20-L24","name":"Lean.IR.CtorFieldInfo.format","docLink":"./Lean/Compiler/IR/CtorLayout.html#Lean.IR.CtorFieldInfo.format","doc":""},"Lean.IR.CtorFieldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CtorLayout.lean#L12-L16","name":"Lean.IR.CtorFieldInfo","docLink":"./Lean/Compiler/IR/CtorLayout.html#Lean.IR.CtorFieldInfo","doc":""},"Lean.IR.CompilerState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L34-L36","name":"Lean.IR.CompilerState","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.CompilerState","doc":""},"Lean.IR.CompilerM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/CompilerM.lean#L38-L38","name":"Lean.IR.CompilerM","docLink":"./Lean/Compiler/IR/CompilerM.html#Lean.IR.CompilerM","doc":""},"Lean.IR.CollectUsedDecls.collectInitDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L38-L42","name":"Lean.IR.CollectUsedDecls.collectInitDecl","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectUsedDecls.collectInitDecl","doc":""},"Lean.IR.CollectUsedDecls.collectFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L28-L36","name":"Lean.IR.CollectUsedDecls.collectFnBody","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectUsedDecls.collectFnBody","doc":""},"Lean.IR.CollectUsedDecls.collectDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L44-L46","name":"Lean.IR.CollectUsedDecls.collectDecl","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectUsedDecls.collectDecl","doc":""},"Lean.IR.CollectUsedDecls.collect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L25-L26","name":"Lean.IR.CollectUsedDecls.collect","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectUsedDecls.collect","doc":""},"Lean.IR.CollectUsedDecls.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L23-L23","name":"Lean.IR.CollectUsedDecls.M","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectUsedDecls.M","doc":""},"Lean.IR.CollectMaps.collectVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L58-L59","name":"Lean.IR.CollectMaps.collectVar","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectMaps.collectVar","doc":""},"Lean.IR.CollectMaps.collectParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L60-L61","name":"Lean.IR.CollectMaps.collectParams","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectMaps.collectParams","doc":""},"Lean.IR.CollectMaps.collectJP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L62-L63","name":"Lean.IR.CollectMaps.collectJP","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectMaps.collectJP","doc":""},"Lean.IR.CollectMaps.collectFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L66-L70","name":"Lean.IR.CollectMaps.collectFnBody","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectMaps.collectFnBody","doc":"`collectFnBody` assumes the variables in "},"Lean.IR.CollectMaps.collectDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L72-L74","name":"Lean.IR.CollectMaps.collectDecl","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectMaps.collectDecl","doc":""},"Lean.IR.CollectMaps.Collector":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/EmitUtil.lean#L57-L57","name":"Lean.IR.CollectMaps.Collector","docLink":"./Lean/Compiler/IR/EmitUtil.html#Lean.IR.CollectMaps.Collector","doc":""},"Lean.IR.Checker.withParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L141-L146","name":"Lean.IR.Checker.withParams","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.withParams","doc":""},"Lean.IR.Checker.usizeSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L21-L21","name":"Lean.IR.Checker.usizeSize","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.usizeSize","doc":""},"Lean.IR.Checker.maxCtorScalarsSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L17-L17","name":"Lean.IR.Checker.maxCtorScalarsSize","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.maxCtorScalarsSize","doc":""},"Lean.IR.Checker.maxCtorFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L13-L13","name":"Lean.IR.Checker.maxCtorFields","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.maxCtorFields","doc":""},"Lean.IR.Checker.markVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L39-L40","name":"Lean.IR.Checker.markVar","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.markVar","doc":""},"Lean.IR.Checker.markJP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L42-L43","name":"Lean.IR.Checker.markJP","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.markJP","doc":""},"Lean.IR.Checker.markIndex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L33-L37","name":"Lean.IR.Checker.markIndex","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.markIndex","doc":""},"Lean.IR.Checker.getUSizeSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L20-L20","name":"Lean.IR.Checker.getUSizeSize","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.getUSizeSize","doc":""},"Lean.IR.Checker.getType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L84-L88","name":"Lean.IR.Checker.getType","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.getType","doc":""},"Lean.IR.Checker.getMaxCtorScalarsSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L16-L16","name":"Lean.IR.Checker.getMaxCtorScalarsSize","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.getMaxCtorScalarsSize","doc":""},"Lean.IR.Checker.getMaxCtorFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L12-L12","name":"Lean.IR.Checker.getMaxCtorFields","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.getMaxCtorFields","doc":""},"Lean.IR.Checker.getDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L45-L49","name":"Lean.IR.Checker.getDecl","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.getDecl","doc":""},"Lean.IR.Checker.checkVarType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L90-L91","name":"Lean.IR.Checker.checkVarType","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkVarType","doc":""},"Lean.IR.Checker.checkVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L51-L54","name":"Lean.IR.Checker.checkVar","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkVar","doc":""},"Lean.IR.Checker.checkType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L73-L78","name":"Lean.IR.Checker.checkType","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkType","doc":""},"Lean.IR.Checker.checkScalarVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L96-L97","name":"Lean.IR.Checker.checkScalarVar","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkScalarVar","doc":""},"Lean.IR.Checker.checkScalarType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L82-L82","name":"Lean.IR.Checker.checkScalarType","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkScalarType","doc":""},"Lean.IR.Checker.checkPartialApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L105-L109","name":"Lean.IR.Checker.checkPartialApp","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkPartialApp","doc":""},"Lean.IR.Checker.checkObjVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L93-L94","name":"Lean.IR.Checker.checkObjVar","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkObjVar","doc":""},"Lean.IR.Checker.checkObjType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L80-L80","name":"Lean.IR.Checker.checkObjType","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkObjType","doc":""},"Lean.IR.Checker.checkJP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L56-L59","name":"Lean.IR.Checker.checkJP","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkJP","doc":""},"Lean.IR.Checker.checkFullApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L99-L103","name":"Lean.IR.Checker.checkFullApp","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkFullApp","doc":""},"Lean.IR.Checker.checkFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L148-L168","name":"Lean.IR.Checker.checkFnBody","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkFnBody","doc":""},"Lean.IR.Checker.checkExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L111-L139","name":"Lean.IR.Checker.checkExpr","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkExpr","doc":""},"Lean.IR.Checker.checkEqTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L69-L71","name":"Lean.IR.Checker.checkEqTypes","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkEqTypes","doc":""},"Lean.IR.Checker.checkDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L170-L172","name":"Lean.IR.Checker.checkDecl","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkDecl","doc":""},"Lean.IR.Checker.checkArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L66-L67","name":"Lean.IR.Checker.checkArgs","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkArgs","doc":""},"Lean.IR.Checker.checkArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L61-L64","name":"Lean.IR.Checker.checkArg","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.checkArg","doc":""},"Lean.IR.Checker.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L31-L31","name":"Lean.IR.Checker.M","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.M","doc":""},"Lean.IR.Checker.CheckerState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L28-L29","name":"Lean.IR.Checker.CheckerState","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.CheckerState","doc":""},"Lean.IR.Checker.CheckerContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Checker.lean#L23-L26","name":"Lean.IR.Checker.CheckerContext","docLink":"./Lean/Compiler/IR/Checker.html#Lean.IR.Checker.CheckerContext","doc":""},"Lean.IR.Borrow.whileModifing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L291-L298","name":"Lean.IR.Borrow.whileModifing","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.whileModifing","doc":"Keep executing `x` until it reaches a fixpoint "},"Lean.IR.Borrow.updateParamSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L265-L266","name":"Lean.IR.Borrow.updateParamSet","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.updateParamSet","doc":""},"Lean.IR.Borrow.updateParamMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L178-L190","name":"Lean.IR.Borrow.updateParamMap","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.updateParamMap","doc":"Updates `map[k]` using the current set of `owned` variables. "},"Lean.IR.Borrow.preserveTailCall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L256-L263","name":"Lean.IR.Borrow.preserveTailCall","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.preserveTailCall","doc":""},"Lean.IR.Borrow.ownVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L158-L162","name":"Lean.IR.Borrow.ownVar","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ownVar","doc":""},"Lean.IR.Borrow.ownParamsUsingArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L217-L223","name":"Lean.IR.Borrow.ownParamsUsingArgs","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ownParamsUsingArgs","doc":"For each xs[i], if xs[i] is owned, then mark ps[i] as owned.\nWe use this action to preserve tail calls. That is, if we have\na tail call `f xs`, if the i-th parameter is borrowed, but `xs[i]` is owned\nwe would have to insert a `dec xs[i]` after `f xs` and consequently\n\"break\" the tail call. "},"Lean.IR.Borrow.ownArgsUsingParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L206-L210","name":"Lean.IR.Borrow.ownArgsUsingParams","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ownArgsUsingParams","doc":"For each ps[i], if ps[i] is owned, then mark xs[i] as owned. "},"Lean.IR.Borrow.ownArgsIfParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L235-L240","name":"Lean.IR.Borrow.ownArgsIfParam","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ownArgsIfParam","doc":"Mark `xs[i]` as owned if it is one of the parameters `ps`.\nWe use this action to mark function parameters that are being \"packed\" inside constructors.\nThis is a heuristic, and is not related with the effectiveness of the reset/reuse optimization.\nIt is useful for code such as\n```\ndef f (x y : obj) :=\nlet z := ctor_1 x y;\nret z\n```\n"},"Lean.IR.Borrow.ownArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L169-L170","name":"Lean.IR.Borrow.ownArgs","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ownArgs","doc":""},"Lean.IR.Borrow.ownArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L164-L167","name":"Lean.IR.Borrow.ownArg","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ownArg","doc":""},"Lean.IR.Borrow.mkInitParamMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L100-L101","name":"Lean.IR.Borrow.mkInitParamMap","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.mkInitParamMap","doc":""},"Lean.IR.Borrow.markModified":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L155-L156","name":"Lean.IR.Borrow.markModified","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.markModified","doc":""},"Lean.IR.Borrow.isOwned":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L172-L175","name":"Lean.IR.Borrow.isOwned","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.isOwned","doc":""},"Lean.IR.Borrow.instToStringParamMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L63-L63","name":"Lean.IR.Borrow.instToStringParamMap","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.instToStringParamMap","doc":""},"Lean.IR.Borrow.instToFormatParamMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L62-L62","name":"Lean.IR.Borrow.instToFormatParamMap","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.instToFormatParamMap","doc":""},"Lean.IR.Borrow.infer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L305-L306","name":"Lean.IR.Borrow.infer","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.infer","doc":""},"Lean.IR.Borrow.getParamInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L192-L203","name":"Lean.IR.Borrow.getParamInfo","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.getParamInfo","doc":""},"Lean.IR.Borrow.getCurrFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L151-L153","name":"Lean.IR.Borrow.getCurrFn","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.getCurrFn","doc":""},"Lean.IR.Borrow.collectFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L268-L281","name":"Lean.IR.Borrow.collectFnBody","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.collectFnBody","doc":""},"Lean.IR.Borrow.collectExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L242-L254","name":"Lean.IR.Borrow.collectExpr","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.collectExpr","doc":""},"Lean.IR.Borrow.collectDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L300-L303","name":"Lean.IR.Borrow.collectDecls","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.collectDecls","doc":""},"Lean.IR.Borrow.collectDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L283-L288","name":"Lean.IR.Borrow.collectDecl","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.collectDecl","doc":""},"Lean.IR.Borrow.applyParamMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L134-L135","name":"Lean.IR.Borrow.applyParamMap","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.applyParamMap","doc":""},"Lean.IR.Borrow.ParamMap.instHashableKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L47-L47","name":"Lean.IR.Borrow.ParamMap.instHashableKey","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ParamMap.instHashableKey","doc":""},"Lean.IR.Borrow.ParamMap.instBEqKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L41-L41","name":"Lean.IR.Borrow.ParamMap.instBEqKey","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ParamMap.instBEqKey","doc":""},"Lean.IR.Borrow.ParamMap.getHash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L43-L45","name":"Lean.IR.Borrow.ParamMap.getHash","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ParamMap.getHash","doc":""},"Lean.IR.Borrow.ParamMap.fmt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L53-L60","name":"Lean.IR.Borrow.ParamMap.fmt","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ParamMap.fmt","doc":""},"Lean.IR.Borrow.ParamMap.Key":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L38-L41","name":"Lean.IR.Borrow.ParamMap.Key","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ParamMap.Key","doc":""},"Lean.IR.Borrow.ParamMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L51-L51","name":"Lean.IR.Borrow.ParamMap","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ParamMap","doc":""},"Lean.IR.Borrow.OwnedSet.instHashableKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L24-L24","name":"Lean.IR.Borrow.OwnedSet.instHashableKey","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.OwnedSet.instHashableKey","doc":""},"Lean.IR.Borrow.OwnedSet.instBEqKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L20-L20","name":"Lean.IR.Borrow.OwnedSet.instBEqKey","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.OwnedSet.instBEqKey","doc":""},"Lean.IR.Borrow.OwnedSet.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L29-L29","name":"Lean.IR.Borrow.OwnedSet.insert","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.OwnedSet.insert","doc":""},"Lean.IR.Borrow.OwnedSet.getHash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L22-L23","name":"Lean.IR.Borrow.OwnedSet.getHash","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.OwnedSet.getHash","doc":""},"Lean.IR.Borrow.OwnedSet.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L30-L30","name":"Lean.IR.Borrow.OwnedSet.contains","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.OwnedSet.contains","doc":""},"Lean.IR.Borrow.OwnedSet.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L17-L18","name":"Lean.IR.Borrow.OwnedSet.beq","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.OwnedSet.beq","doc":""},"Lean.IR.Borrow.OwnedSet.Key":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L15-L15","name":"Lean.IR.Borrow.OwnedSet.Key","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.OwnedSet.Key","doc":""},"Lean.IR.Borrow.OwnedSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L28-L28","name":"Lean.IR.Borrow.OwnedSet","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.OwnedSet","doc":""},"Lean.IR.Borrow.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L149-L149","name":"Lean.IR.Borrow.M","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.M","doc":""},"Lean.IR.Borrow.InitParamMap.visitFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L80-L89","name":"Lean.IR.Borrow.InitParamMap.visitFnBody","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.InitParamMap.visitFnBody","doc":""},"Lean.IR.Borrow.InitParamMap.visitDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L91-L97","name":"Lean.IR.Borrow.InitParamMap.visitDecls","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.InitParamMap.visitDecls","doc":""},"Lean.IR.Borrow.InitParamMap.initBorrowIfNotExported":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L77-L78","name":"Lean.IR.Borrow.InitParamMap.initBorrowIfNotExported","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.InitParamMap.initBorrowIfNotExported","doc":"We do perform borrow inference for constants marked as `export`.\nReason: we current write wrappers in C++ for using exported functions.\nThese wrappers use smart pointers such as `object_ref`.\nWhen writing a new wrapper we need to know whether an argument is a borrow\ninference or not.\nWe can revise this decision when we implement code for generating\nthe wrappers automatically. "},"Lean.IR.Borrow.InitParamMap.initBorrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L67-L68","name":"Lean.IR.Borrow.InitParamMap.initBorrow","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.InitParamMap.initBorrow","doc":"Mark parameters that take a reference as borrow "},"Lean.IR.Borrow.BorrowInfState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L143-L147","name":"Lean.IR.Borrow.BorrowInfState","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.BorrowInfState","doc":""},"Lean.IR.Borrow.BorrowInfCtx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L137-L141","name":"Lean.IR.Borrow.BorrowInfCtx","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.BorrowInfCtx","doc":""},"Lean.IR.Borrow.ApplyParamMap.visitFnBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L107-L121","name":"Lean.IR.Borrow.ApplyParamMap.visitFnBody","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ApplyParamMap.visitFnBody","doc":""},"Lean.IR.Borrow.ApplyParamMap.visitDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Borrow.lean#L123-L130","name":"Lean.IR.Borrow.ApplyParamMap.visitDecls","docLink":"./Lean/Compiler/IR/Borrow.html#Lean.IR.Borrow.ApplyParamMap.visitDecls","doc":""},"Lean.IR.Arg.hasFreeVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/FreeVars.lean#L231-L231","name":"Lean.IR.Arg.hasFreeVar","docLink":"./Lean/Compiler/IR/FreeVars.html#Lean.IR.Arg.hasFreeVar","doc":""},"Lean.IR.Arg.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L142-L145","name":"Lean.IR.Arg.beq","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg.beq","doc":""},"Lean.IR.Arg.alphaEqv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L529-L532","name":"Lean.IR.Arg.alphaEqv","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg.alphaEqv","doc":""},"Lean.IR.Arg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L137-L140","name":"Lean.IR.Arg","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg","doc":"Arguments to applications, constructors, etc.\nWe use `irrelevant` for Lean types, propositions and proofs that have been erased.\nRecall that for a Function `f`, we also generate `f._rarg` which does not take\n`irrelevant` arguments. However, `f._rarg` is only safe to be used in full applications. "},"Lean.IR.AltCore.setBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L345-L347","name":"Lean.IR.AltCore.setBody","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AltCore.setBody","doc":""},"Lean.IR.AltCore.modifyBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L349-L351","name":"Lean.IR.AltCore.modifyBody","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AltCore.modifyBody","doc":""},"Lean.IR.AltCore.mmodifyBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L353-L355","name":"Lean.IR.AltCore.mmodifyBody","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AltCore.mmodifyBody","doc":""},"Lean.IR.AltCore.body":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L341-L343","name":"Lean.IR.AltCore.body","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AltCore.body","doc":""},"Lean.IR.AltCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L245-L247","name":"Lean.IR.AltCore","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AltCore","doc":""},"Lean.IR.Alt.isDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L357-L359","name":"Lean.IR.Alt.isDefault","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt.isDefault","doc":""},"Lean.IR.Alt.default":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L294-L294","name":"Lean.IR.Alt.default","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt.default","doc":""},"Lean.IR.Alt.ctor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L293-L293","name":"Lean.IR.Alt.ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt.ctor","doc":""},"Lean.IR.Alt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L292-L292","name":"Lean.IR.Alt","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt","doc":""},"Lean.IR.AlphaEqv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/IR/Basic.lean#L517-L518","name":"Lean.IR.AlphaEqv","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AlphaEqv","doc":""},"Lean.HeadIndex.instHashableHeadIndex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/HeadIndex.lean#L47-L47","name":"Lean.HeadIndex.instHashableHeadIndex","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex.instHashableHeadIndex","doc":""},"Lean.HeadIndex.HeadIndex.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/HeadIndex.lean#L37-L45","name":"Lean.HeadIndex.HeadIndex.hash","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex.HeadIndex.hash","doc":"Hash code for a `HeadIndex` value. "},"Lean.HeadIndex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/HeadIndex.lean#L23-L32","name":"Lean.HeadIndex","docLink":"./Lean/HeadIndex.html#Lean.HeadIndex","doc":"Datastructure for representing the \"head symbol\" of an expression.\nIt is the key of `KExprMap`.\nExamples:\n- The head of `f a` is `.const f`\n- The head of `let x := 1; f x` is `.const f`\n- The head of `fun x => fun` is `.lam`\n\n`HeadIndex` is a very simple index, and is used in situations where\nwe want to find definitionally equal terms, but we want to minimize\nthe search by checking only pairs of terms that have the same\n`HeadIndex`.\n"},"Lean.HasConstCache.containsUnsafe.cache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/HasConstCache.lean#L27-L29","name":"Lean.HasConstCache.containsUnsafe.cache","docLink":"./Lean/Util/HasConstCache.html#Lean.HasConstCache.containsUnsafe.cache","doc":""},"Lean.HasConstCache.containsUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/HasConstCache.lean#L13-L29","name":"Lean.HasConstCache.containsUnsafe","docLink":"./Lean/Util/HasConstCache.html#Lean.HasConstCache.containsUnsafe","doc":""},"Lean.HasConstCache.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/HasConstCache.lean#L35-L35","name":"Lean.HasConstCache.contains","docLink":"./Lean/Util/HasConstCache.html#Lean.HasConstCache.contains","doc":"Return true iff `e` contains the constant `declName`.\nRemark: the results for visited expressions are stored in the state cache. "},"Lean.HasConstCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/HasConstCache.lean#L10-L11","name":"Lean.HasConstCache","docLink":"./Lean/Util/HasConstCache.html#Lean.HasConstCache","doc":""},"Lean.FuzzyMatching.instInhabitedCharRole":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/FuzzyMatching.lean#L61-L61","name":"Lean.FuzzyMatching.instInhabitedCharRole","docLink":"./Lean/Data/FuzzyMatching.html#Lean.FuzzyMatching.instInhabitedCharRole","doc":""},"Lean.FuzzyMatching.fuzzyMatchScoreWithThreshold?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/FuzzyMatching.lean#L214-L215","name":"Lean.FuzzyMatching.fuzzyMatchScoreWithThreshold?","docLink":"./Lean/Data/FuzzyMatching.html#Lean.FuzzyMatching.fuzzyMatchScoreWithThreshold?","doc":""},"Lean.FuzzyMatching.fuzzyMatchScore?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/FuzzyMatching.lean#L191-L212","name":"Lean.FuzzyMatching.fuzzyMatchScore?","docLink":"./Lean/Data/FuzzyMatching.html#Lean.FuzzyMatching.fuzzyMatchScore?","doc":"Match the given pattern with the given word using a fuzzy matching\nalgorithm. The resulting scores are in the interval `[0, 1]` or `none` if no\nmatch was found. "},"Lean.FuzzyMatching.fuzzyMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/FuzzyMatching.lean#L220-L221","name":"Lean.FuzzyMatching.fuzzyMatch","docLink":"./Lean/Data/FuzzyMatching.html#Lean.FuzzyMatching.fuzzyMatch","doc":"Match the given pattern with the given word using a fuzzy matching\nalgorithm. Return `false` if no match was found or the found match received a\nscore below the given threshold. "},"Lean.FuzzyMatching.charType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/FuzzyMatching.lean#L49-L55","name":"Lean.FuzzyMatching.charType","docLink":"./Lean/Data/FuzzyMatching.html#Lean.FuzzyMatching.charType","doc":""},"Lean.FuzzyMatching.charRole":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/FuzzyMatching.lean#L63-L73","name":"Lean.FuzzyMatching.charRole","docLink":"./Lean/Data/FuzzyMatching.html#Lean.FuzzyMatching.charRole","doc":""},"Lean.FuzzyMatching.CharType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/FuzzyMatching.lean#L46-L47","name":"Lean.FuzzyMatching.CharType","docLink":"./Lean/Data/FuzzyMatching.html#Lean.FuzzyMatching.CharType","doc":"Represents the type of a single character. "},"Lean.FuzzyMatching.CharRole":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/FuzzyMatching.lean#L59-L61","name":"Lean.FuzzyMatching.CharRole","docLink":"./Lean/Data/FuzzyMatching.html#Lean.FuzzyMatching.CharRole","doc":"Represents the role of a character inside a word. "},"Lean.FromJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/FromToJson.lean#L14-L15","name":"Lean.FromJson","docLink":"./Lean/Data/Json/FromToJson.html#Lean.FromJson","doc":""},"Lean.ForEachExpr.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ForEachExpr.lean#L18-L28","name":"Lean.ForEachExpr.visit","docLink":"./Lean/Util/ForEachExpr.html#Lean.ForEachExpr.visit","doc":""},"Lean.FindMVar.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindMVar.lean#L15-L16","name":"Lean.FindMVar.visit","docLink":"./Lean/Util/FindMVar.html#Lean.FindMVar.visit","doc":""},"Lean.FindMVar.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindMVar.lean#L18-L26","name":"Lean.FindMVar.main","docLink":"./Lean/Util/FindMVar.html#Lean.FindMVar.main","doc":""},"Lean.FindMVar.Visitor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindMVar.lean#L12-L12","name":"Lean.FindMVar.Visitor","docLink":"./Lean/Util/FindMVar.html#Lean.FindMVar.Visitor","doc":""},"Lean.FindLevelMVar.visitLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindLevelMVar.lean#L29-L30","name":"Lean.FindLevelMVar.visitLevel","docLink":"./Lean/Util/FindLevelMVar.html#Lean.FindLevelMVar.visitLevel","doc":""},"Lean.FindLevelMVar.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindLevelMVar.lean#L15-L16","name":"Lean.FindLevelMVar.visit","docLink":"./Lean/Util/FindLevelMVar.html#Lean.FindLevelMVar.visit","doc":""},"Lean.FindLevelMVar.mainLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindLevelMVar.lean#L32-L38","name":"Lean.FindLevelMVar.mainLevel","docLink":"./Lean/Util/FindLevelMVar.html#Lean.FindLevelMVar.mainLevel","doc":""},"Lean.FindLevelMVar.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindLevelMVar.lean#L18-L27","name":"Lean.FindLevelMVar.main","docLink":"./Lean/Util/FindLevelMVar.html#Lean.FindLevelMVar.main","doc":""},"Lean.FindLevelMVar.Visitor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindLevelMVar.lean#L12-L12","name":"Lean.FindLevelMVar.Visitor","docLink":"./Lean/Util/FindLevelMVar.html#Lean.FindLevelMVar.Visitor","doc":""},"Lean.FileMap.utf8PosToLspPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Utf16.lean#L81-L82","name":"Lean.FileMap.utf8PosToLspPos","docLink":"./Lean/Data/Lsp/Utf16.html#Lean.FileMap.utf8PosToLspPos","doc":""},"Lean.FileMap.toPosition.toColumn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L59-L61","name":"Lean.FileMap.toPosition.toColumn","docLink":"./Lean/Data/Position.html#Lean.FileMap.toPosition.toColumn","doc":""},"Lean.FileMap.toPosition.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L62-L70","name":"Lean.FileMap.toPosition.loop","docLink":"./Lean/Data/Position.html#Lean.FileMap.toPosition.loop","doc":""},"Lean.FileMap.toPosition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L55-L78","name":"Lean.FileMap.toPosition","docLink":"./Lean/Data/Position.html#Lean.FileMap.toPosition","doc":""},"Lean.FileMap.ofString.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L46-L52","name":"Lean.FileMap.ofString.loop","docLink":"./Lean/Data/Position.html#Lean.FileMap.ofString.loop","doc":""},"Lean.FileMap.ofString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L45-L53","name":"Lean.FileMap.ofString","docLink":"./Lean/Data/Position.html#Lean.FileMap.ofString","doc":""},"Lean.FileMap.lspPosToUtf8Pos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Utf16.lean#L67-L76","name":"Lean.FileMap.lspPosToUtf8Pos","docLink":"./Lean/Data/Lsp/Utf16.html#Lean.FileMap.lspPosToUtf8Pos","doc":"Computes an UTF-8 offset into `text.source`\nfrom an LSP-style 0-indexed (ln, col) position. "},"Lean.FileMap.leanPosToLspPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Utf16.lean#L78-L79","name":"Lean.FileMap.leanPosToLspPos","docLink":"./Lean/Data/Lsp/Utf16.html#Lean.FileMap.leanPosToLspPos","doc":""},"Lean.FileMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Position.lean#L32-L36","name":"Lean.FileMap","docLink":"./Lean/Data/Position.html#Lean.FileMap","doc":""},"Lean.FVarIdSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L249-L250","name":"Lean.FVarIdSet","docLink":"./Lean/Expr.html#Lean.FVarIdSet","doc":"A set of unique free variable identifiers.\nThis is a persistent data structure implemented using red-black trees. "},"Lean.FVarIdMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L264-L264","name":"Lean.FVarIdMap","docLink":"./Lean/Expr.html#Lean.FVarIdMap","doc":"A mapping from free variable identifiers to values of type `α`.\nThis is a persistent data structure implemented using red-black trees. "},"Lean.FVarIdHashSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L258-L259","name":"Lean.FVarIdHashSet","docLink":"./Lean/Expr.html#Lean.FVarIdHashSet","doc":"A set of unique free variable identifiers implemented using hashtables.\nHashtables are faster than red-black trees if they are used linearly.\nThey are not persistent data-structures. "},"Lean.FVarId.throwUnknown":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L650-L651","name":"Lean.FVarId.throwUnknown","docLink":"./Lean/Meta/Basic.html#Lean.FVarId.throwUnknown","doc":"Throw an exception saying `fvarId` is not declared in the current local context.\n"},"Lean.FVarId.isLetVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L697-L698","name":"Lean.FVarId.isLetVar","docLink":"./Lean/Meta/Basic.html#Lean.FVarId.isLetVar","doc":"Return `true` is the free variable is a let-variable. "},"Lean.FVarId.getValue?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L689-L690","name":"Lean.FVarId.getValue?","docLink":"./Lean/Meta/Basic.html#Lean.FVarId.getValue?","doc":"Return `some value` if the given free variable is a let-declaration, and `none` otherwise. "},"Lean.FVarId.getUserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L693-L694","name":"Lean.FVarId.getUserName","docLink":"./Lean/Meta/Basic.html#Lean.FVarId.getUserName","doc":"Return the user-facing name for the given free variable. "},"Lean.FVarId.getType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L681-L682","name":"Lean.FVarId.getType","docLink":"./Lean/Meta/Basic.html#Lean.FVarId.getType","doc":"Return the type of the given free variable. "},"Lean.FVarId.getDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L671-L674","name":"Lean.FVarId.getDecl","docLink":"./Lean/Meta/Basic.html#Lean.FVarId.getDecl","doc":"Return the local declaration for the given free variable.\nThrow an exception if local declaration is not in the current local context.\n"},"Lean.FVarId.getBinderInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L685-L686","name":"Lean.FVarId.getBinderInfo","docLink":"./Lean/Meta/Basic.html#Lean.FVarId.getBinderInfo","doc":"Return the binder information for the given free variable. "},"Lean.FVarId.findDecl?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L660-L661","name":"Lean.FVarId.findDecl?","docLink":"./Lean/Meta/Basic.html#Lean.FVarId.findDecl?","doc":"Return `some decl` if `fvarId` is declared in the current local context.\n"},"Lean.FVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L239-L241","name":"Lean.FVarId","docLink":"./Lean/Expr.html#Lean.FVarId","doc":"The unique free variable identifier. It is just a hierarchical name,\nbut we wrap it in `FVarId` to make sure they don't get mixed up with `MVarId`.\n\nThis is not the user-facing name for a free variable. This information is stored\nin the local context (`LocalContext`). The unique identifiers are generated using\na `NameGenerator`.\n"},"Lean.ExternEntry.backend":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L107-L111","name":"Lean.ExternEntry.backend","docLink":"./Lean/Compiler/ExternAttr.html#Lean.ExternEntry.backend","doc":""},"Lean.ExternEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L14-L18","name":"Lean.ExternEntry","docLink":"./Lean/Compiler/ExternAttr.html#Lean.ExternEntry","doc":""},"Lean.ExternAttrData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ExternAttr.lean#L34-L37","name":"Lean.ExternAttrData","docLink":"./Lean/Compiler/ExternAttr.html#Lean.ExternAttrData","doc":"- `@[extern]`\n   encoding: ```.entries = [adhoc `all]```\n- `@[extern \"level_hash\"]`\n   encoding: ```.entries = [standard `all \"levelHash\"]```\n- `@[extern cpp \"lean::string_size\" llvm \"lean_str_size\"]`\n   encoding: ```.entries = [standard `cpp \"lean::string_size\", standard `llvm \"leanStrSize\"]```\n- `@[extern cpp inline \"#1 + #2\"]`\n   encoding: ```.entries = [inline `cpp \"#1 + #2\"]```\n- `@[extern cpp \"foo\" llvm adhoc]`\n   encoding: ```.entries = [standard `cpp \"foo\", adhoc `llvm]```\n- `@[extern 2 cpp \"io_prim_println\"]`\n   encoding: ```.arity? = 2, .entries = [standard `cpp \"ioPrimPrintln\"]```\n"},"Lean.ExprStructMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1210-L1210","name":"Lean.ExprStructMap","docLink":"./Lean/Expr.html#Lean.ExprStructMap","doc":""},"Lean.ExprStructEq.instToStringExprStructEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1206-L1206","name":"Lean.ExprStructEq.instToStringExprStructEq","docLink":"./Lean/Expr.html#Lean.ExprStructEq.instToStringExprStructEq","doc":""},"Lean.ExprStructEq.instHashableExprStructEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1205-L1205","name":"Lean.ExprStructEq.instHashableExprStructEq","docLink":"./Lean/Expr.html#Lean.ExprStructEq.instHashableExprStructEq","doc":""},"Lean.ExprStructEq.instBEqExprStructEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1204-L1204","name":"Lean.ExprStructEq.instBEqExprStructEq","docLink":"./Lean/Expr.html#Lean.ExprStructEq.instBEqExprStructEq","doc":""},"Lean.ExprStructEq.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1201-L1202","name":"Lean.ExprStructEq.hash","docLink":"./Lean/Expr.html#Lean.ExprStructEq.hash","doc":""},"Lean.ExprStructEq.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1198-L1199","name":"Lean.ExprStructEq.beq","docLink":"./Lean/Expr.html#Lean.ExprStructEq.beq","doc":""},"Lean.ExprStructEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1190-L1192","name":"Lean.ExprStructEq","docLink":"./Lean/Expr.html#Lean.ExprStructEq","doc":"Auxiliary type for forcing `==` to be structural equality for `Expr` "},"Lean.ExprSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1185-L1185","name":"Lean.ExprSet","docLink":"./Lean/Expr.html#Lean.ExprSet","doc":""},"Lean.ExprMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1183-L1183","name":"Lean.ExprMap","docLink":"./Lean/Expr.html#Lean.ExprMap","doc":""},"Lean.Expr.withAppRev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L900-L901","name":"Lean.Expr.withAppRev","docLink":"./Lean/Expr.html#Lean.Expr.withAppRev","doc":"Same as `withApp` but with arguments reversed. "},"Lean.Expr.withAppAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L879-L881","name":"Lean.Expr.withAppAux","docLink":"./Lean/Expr.html#Lean.Expr.withAppAux","doc":""},"Lean.Expr.withApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L884-L887","name":"Lean.Expr.withApp","docLink":"./Lean/Expr.html#Lean.Expr.withApp","doc":"Given `e = f a₁ a₂ ... aₙ`, returns `k f #[a₁, ..., aₙ]`. "},"Lean.Expr.updateSort!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1433-L1436","name":"Lean.Expr.updateSort!","docLink":"./Lean/Expr.html#Lean.Expr.updateSort!","doc":""},"Lean.Expr.updateProj!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1455-L1458","name":"Lean.Expr.updateProj!","docLink":"./Lean/Expr.html#Lean.Expr.updateProj!","doc":""},"Lean.Expr.updateMData!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1444-L1447","name":"Lean.Expr.updateMData!","docLink":"./Lean/Expr.html#Lean.Expr.updateMData!","doc":""},"Lean.Expr.updateLet!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1510-L1513","name":"Lean.Expr.updateLet!","docLink":"./Lean/Expr.html#Lean.Expr.updateLet!","doc":""},"Lean.Expr.updateLambdaE!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1495-L1498","name":"Lean.Expr.updateLambdaE!","docLink":"./Lean/Expr.html#Lean.Expr.updateLambdaE!","doc":""},"Lean.Expr.updateLambda!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1490-L1493","name":"Lean.Expr.updateLambda!","docLink":"./Lean/Expr.html#Lean.Expr.updateLambda!","doc":""},"Lean.Expr.updateForallE!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1475-L1478","name":"Lean.Expr.updateForallE!","docLink":"./Lean/Expr.html#Lean.Expr.updateForallE!","doc":""},"Lean.Expr.updateForall!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1470-L1473","name":"Lean.Expr.updateForall!","docLink":"./Lean/Expr.html#Lean.Expr.updateForall!","doc":""},"Lean.Expr.updateFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1515-L1517","name":"Lean.Expr.updateFn","docLink":"./Lean/Expr.html#Lean.Expr.updateFn","doc":""},"Lean.Expr.updateConst!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1422-L1425","name":"Lean.Expr.updateConst!","docLink":"./Lean/Expr.html#Lean.Expr.updateConst!","doc":""},"Lean.Expr.updateApp!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1411-L1414","name":"Lean.Expr.updateApp!","docLink":"./Lean/Expr.html#Lean.Expr.updateApp!","doc":""},"Lean.Expr.traverseAppWithPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/SubExpr.lean#L158-L164","name":"Lean.Expr.traverseAppWithPos","docLink":"./Lean/SubExpr.html#Lean.Expr.traverseAppWithPos","doc":"Same as `Expr.traverseApp` but also includes a\n`SubExpr.Pos` argument for tracking subexpression position. "},"Lean.Expr.traverseApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L891-L893","name":"Lean.Expr.traverseApp","docLink":"./Lean/Expr.html#Lean.Expr.traverseApp","doc":"Given `e = fn a₁ ... aₙ`, runs `f` on `fn` and each of the arguments `aᵢ` and\nmakes a new function application with the results. "},"Lean.Expr.toHeadIndex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/HeadIndex.lean#L108-L111","name":"Lean.Expr.toHeadIndex","docLink":"./Lean/HeadIndex.html#Lean.Expr.toHeadIndex","doc":"Convert the given expression into a `HeadIndex`.\n"},"Lean.Expr.toCtorIfLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ToExpr.lean#L85-L91","name":"Lean.Expr.toCtorIfLit","docLink":"./Lean/ToExpr.html#Lean.Expr.toCtorIfLit","doc":""},"Lean.Expr.sortLevel!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L961-L963","name":"Lean.Expr.sortLevel!","docLink":"./Lean/Expr.html#Lean.Expr.sortLevel!","doc":""},"Lean.Expr.setPPUniverses":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1598-L1599","name":"Lean.Expr.setPPUniverses","docLink":"./Lean/Expr.html#Lean.Expr.setPPUniverses","doc":"Annotate `e` with `pp.universes := flag`\nThe delaborator uses `pp` options.\n"},"Lean.Expr.setPPExplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1591-L1592","name":"Lean.Expr.setPPExplicit","docLink":"./Lean/Expr.html#Lean.Expr.setPPExplicit","doc":"Annotate `e` with `pp.explicit := flag`\nThe delaborator uses `pp` options.\n"},"Lean.Expr.setOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1584-L1585","name":"Lean.Expr.setOption","docLink":"./Lean/Expr.html#Lean.Expr.setOption","doc":"Annotate `e` with the given option.\nThe information is stored using metadata around `e`.\n"},"Lean.Expr.setAppPPExplicitForExposingMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1617-L1623","name":"Lean.Expr.setAppPPExplicitForExposingMVars","docLink":"./Lean/Expr.html#Lean.Expr.setAppPPExplicitForExposingMVars","doc":"Similar for `setAppPPExplicit`, but only annotate children with `pp.explicit := false` if\n`e` does not contain metavariables.\n"},"Lean.Expr.setAppPPExplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1605-L1611","name":"Lean.Expr.setAppPPExplicit","docLink":"./Lean/Expr.html#Lean.Expr.setAppPPExplicit","doc":"If `e` is an application `f a_1 ... a_n` annotate `f`, `a_1` ... `a_n` with `pp.explicit := false`,\nand annotate `e` with `pp.explicit := true`.\n"},"Lean.Expr.replaceLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceLevel.lean#L67-L76","name":"Lean.Expr.replaceLevel","docLink":"./Lean/Util/ReplaceLevel.html#Lean.Expr.replaceLevel","doc":""},"Lean.Expr.replaceFVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1157-L1158","name":"Lean.Expr.replaceFVars","docLink":"./Lean/Expr.html#Lean.Expr.replaceFVars","doc":"Replace occurrences of the free variables `fvars` in `e` with `vs` "},"Lean.Expr.replaceFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1153-L1154","name":"Lean.Expr.replaceFVarId","docLink":"./Lean/Expr.html#Lean.Expr.replaceFVarId","doc":"Replace occurrences of the free variable `fvarId` in `e` with `v` "},"Lean.Expr.replaceFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1149-L1150","name":"Lean.Expr.replaceFVar","docLink":"./Lean/Expr.html#Lean.Expr.replaceFVar","doc":"Replace occurrences of the free variable `fvar` in `e` with `v` "},"Lean.Expr.replace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceExpr.lean#L57-L68","name":"Lean.Expr.replace","docLink":"./Lean/Util/ReplaceExpr.html#Lean.Expr.replace","doc":""},"Lean.Expr.quickLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L726-L726","name":"Lean.Expr.quickLt","docLink":"./Lean/Expr.html#Lean.Expr.quickLt","doc":"A total order for expressions. We say it is quick because it first compares the hashcodes. "},"Lean.Expr.projIdx!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1056-L1058","name":"Lean.Expr.projIdx!","docLink":"./Lean/Expr.html#Lean.Expr.projIdx!","doc":""},"Lean.Expr.projExpr!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1052-L1054","name":"Lean.Expr.projExpr!","docLink":"./Lean/Expr.html#Lean.Expr.projExpr!","doc":""},"Lean.Expr.prod?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L99-L100","name":"Lean.Expr.prod?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.prod?","doc":"Recognize `α × β` "},"Lean.Expr.occurs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L71-L72","name":"Lean.Expr.occurs","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.occurs","doc":"Return true if `e` occurs in `t` "},"Lean.Expr.notNot?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L52-L55","name":"Lean.Expr.notNot?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.notNot?","doc":""},"Lean.Expr.not?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L49-L50","name":"Lean.Expr.not?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.not?","doc":""},"Lean.Expr.ne?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L43-L44","name":"Lean.Expr.ne?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.ne?","doc":""},"Lean.Expr.natLit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L973-L975","name":"Lean.Expr.natLit?","docLink":"./Lean/Expr.html#Lean.Expr.natLit?","doc":""},"Lean.Expr.natAdd?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L63-L64","name":"Lean.Expr.natAdd?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.natAdd?","doc":""},"Lean.Expr.mvarId!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1004-L1006","name":"Lean.Expr.mvarId!","docLink":"./Lean/Expr.html#Lean.Expr.mvarId!","doc":""},"Lean.Expr.mkDataForLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L211-L212","name":"Lean.Expr.mkDataForLet","docLink":"./Lean/Expr.html#Lean.Expr.mkDataForLet","doc":""},"Lean.Expr.mkDataForBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L208-L209","name":"Lean.Expr.mkDataForBinder","docLink":"./Lean/Expr.html#Lean.Expr.mkDataForBinder","doc":""},"Lean.Expr.mkData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L181-L195","name":"Lean.Expr.mkData","docLink":"./Lean/Expr.html#Lean.Expr.mkData","doc":""},"Lean.Expr.mkAppRevRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1222-L1223","name":"Lean.Expr.mkAppRevRange","docLink":"./Lean/Expr.html#Lean.Expr.mkAppRevRange","doc":"`mkAppRevRange f b e args == mkAppRev f (revArgs.extract b e)` "},"Lean.Expr.mkAppData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L198-L206","name":"Lean.Expr.mkAppData","docLink":"./Lean/Expr.html#Lean.Expr.mkAppData","doc":"Optimized version of `Expr.mkData` for applications. "},"Lean.Expr.mdataExpr!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1048-L1050","name":"Lean.Expr.mdataExpr!","docLink":"./Lean/Expr.html#Lean.Expr.mdataExpr!","doc":""},"Lean.Expr.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L730-L730","name":"Lean.Expr.lt","docLink":"./Lean/Expr.html#Lean.Expr.lt","doc":"A total order for expressions that takes the structure into account (e.g., variable names). "},"Lean.Expr.lowerLooseBVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1089-L1089","name":"Lean.Expr.lowerLooseBVars","docLink":"./Lean/Expr.html#Lean.Expr.lowerLooseBVars","doc":"Lower the loose bound variables `>= s` in `e` by `d`.\nThat is, a loose bound variable `bvar i`.\n`i >= s` is mapped into `bvar (i-d)`.\n\nRemark: if `s < d`, then result is `e`\n"},"Lean.Expr.looseBVarRangeEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L568-L568","name":"Lean.Expr.looseBVarRangeEx","docLink":"./Lean/Expr.html#Lean.Expr.looseBVarRangeEx","doc":""},"Lean.Expr.looseBVarRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L547-L548","name":"Lean.Expr.looseBVarRange","docLink":"./Lean/Expr.html#Lean.Expr.looseBVarRange","doc":"The range of de-Bruijn variables that are loose.\nThat is, bvars that are not bound by a binder.\nFor example, `bvar i` has range `i + 1` and\nan expression with no loose bvars has range `0`.\n"},"Lean.Expr.litValue!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L965-L967","name":"Lean.Expr.litValue!","docLink":"./Lean/Expr.html#Lean.Expr.litValue!","doc":""},"Lean.Expr.listLit?.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L83-L89","name":"Lean.Expr.listLit?.loop","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.listLit?.loop","doc":""},"Lean.Expr.listLit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L82-L90","name":"Lean.Expr.listLit?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.listLit?","doc":""},"Lean.Expr.liftLooseBVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1094-L1094","name":"Lean.Expr.liftLooseBVars","docLink":"./Lean/Expr.html#Lean.Expr.liftLooseBVars","doc":"Lift loose bound variables `>= s` in `e` by `d`. "},"Lean.Expr.letValue!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1036-L1038","name":"Lean.Expr.letValue!","docLink":"./Lean/Expr.html#Lean.Expr.letValue!","doc":""},"Lean.Expr.letType!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1032-L1034","name":"Lean.Expr.letType!","docLink":"./Lean/Expr.html#Lean.Expr.letType!","doc":""},"Lean.Expr.letName!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1028-L1030","name":"Lean.Expr.letName!","docLink":"./Lean/Expr.html#Lean.Expr.letName!","doc":""},"Lean.Expr.letBody!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1040-L1042","name":"Lean.Expr.letBody!","docLink":"./Lean/Expr.html#Lean.Expr.letBody!","doc":""},"Lean.Expr.isType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L755-L757","name":"Lean.Expr.isType","docLink":"./Lean/Expr.html#Lean.Expr.isType","doc":"Return `true` if the given expression is of the form `.sort (.succ ..)`. "},"Lean.Expr.isSyntheticSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Sorry.lean#L16-L18","name":"Lean.Expr.isSyntheticSorry","docLink":"./Lean/Util/Sorry.html#Lean.Expr.isSyntheticSorry","doc":""},"Lean.Expr.isStringLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L977-L979","name":"Lean.Expr.isStringLit","docLink":"./Lean/Expr.html#Lean.Expr.isStringLit","doc":""},"Lean.Expr.isSort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L750-L752","name":"Lean.Expr.isSort","docLink":"./Lean/Expr.html#Lean.Expr.isSort","doc":"Return `true` if the given expression is a `.sort ..` "},"Lean.Expr.isSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Sorry.lean#L12-L14","name":"Lean.Expr.isSorry","docLink":"./Lean/Util/Sorry.html#Lean.Expr.isSorry","doc":""},"Lean.Expr.isProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L760-L762","name":"Lean.Expr.isProp","docLink":"./Lean/Expr.html#Lean.Expr.isProp","doc":"Return `true` if the given expression is a `.sort .zero` "},"Lean.Expr.isProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L785-L787","name":"Lean.Expr.isProj","docLink":"./Lean/Expr.html#Lean.Expr.isProj","doc":"Return `true` if the given expression is a projection `.proj ..` "},"Lean.Expr.isOutParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1343-L1344","name":"Lean.Expr.isOutParam","docLink":"./Lean/Expr.html#Lean.Expr.isOutParam","doc":"Return `true` if `e` is of the form `outParam _` "},"Lean.Expr.isOptParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1347-L1348","name":"Lean.Expr.isOptParam","docLink":"./Lean/Expr.html#Lean.Expr.isOptParam","doc":"Return `true` if `e` is of the form `optParam _ _` "},"Lean.Expr.isNonSyntheticSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Sorry.lean#L20-L22","name":"Lean.Expr.isNonSyntheticSorry","docLink":"./Lean/Util/Sorry.html#Lean.Expr.isNonSyntheticSorry","doc":""},"Lean.Expr.isNatLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L969-L971","name":"Lean.Expr.isNatLit","docLink":"./Lean/Expr.html#Lean.Expr.isNatLit","doc":""},"Lean.Expr.isMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L770-L772","name":"Lean.Expr.isMVar","docLink":"./Lean/Expr.html#Lean.Expr.isMVar","doc":"Return `true` if the given expression is a metavariable. "},"Lean.Expr.isMData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L826-L828","name":"Lean.Expr.isMData","docLink":"./Lean/Expr.html#Lean.Expr.isMData","doc":"Return `true` if the given expression is a metadata. "},"Lean.Expr.isLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L831-L833","name":"Lean.Expr.isLit","docLink":"./Lean/Expr.html#Lean.Expr.isLit","doc":"Return `true` if the given expression is a literal value. "},"Lean.Expr.isLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L821-L823","name":"Lean.Expr.isLet","docLink":"./Lean/Expr.html#Lean.Expr.isLet","doc":"Return `true` if the given expression is a let-expression. "},"Lean.Expr.isLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L810-L812","name":"Lean.Expr.isLambda","docLink":"./Lean/Expr.html#Lean.Expr.isLambda","doc":"Return `true` if the given expression is a lambda abstraction aka anonymous function. "},"Lean.Expr.isIte":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L76-L77","name":"Lean.Expr.isIte","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.isIte","doc":""},"Lean.Expr.isHeadBetaTargetFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1283-L1287","name":"Lean.Expr.isHeadBetaTargetFn","docLink":"./Lean/Expr.html#Lean.Expr.isHeadBetaTargetFn","doc":"Return true if the given expression is the function of an expression that is target for (head) beta reduction.\nIf `useZeta = true`, then `let`-expressions are visited. That is, it assumes\nthat zeta-reduction (aka let-expansion) is going to be used.\n\nSee `isHeadBetaTarget`.\n"},"Lean.Expr.isHeadBetaTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1299-L1300","name":"Lean.Expr.isHeadBetaTarget","docLink":"./Lean/Expr.html#Lean.Expr.isHeadBetaTarget","doc":"Return true if the given expression is a target for (head) beta reduction.\nIf `useZeta = true`, then `let`-expressions are visited. That is, it assumes\nthat zeta-reduction (aka let-expansion) is going to be used.\n"},"Lean.Expr.isHEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L73-L74","name":"Lean.Expr.isHEq","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.isHEq","doc":""},"Lean.Expr.isForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L805-L807","name":"Lean.Expr.isForall","docLink":"./Lean/Expr.html#Lean.Expr.isForall","doc":"Return `true` if the given expression is a forall-expression aka (dependent) arrow. "},"Lean.Expr.isFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L775-L777","name":"Lean.Expr.isFVar","docLink":"./Lean/Expr.html#Lean.Expr.isFVar","doc":"Return `true` if the given expression is a free variable. "},"Lean.Expr.isEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L70-L71","name":"Lean.Expr.isEq","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.isEq","doc":""},"Lean.Expr.isDIte":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L79-L80","name":"Lean.Expr.isDIte","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.isDIte","doc":""},"Lean.Expr.isConstructorApp?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L107-L115","name":"Lean.Expr.isConstructorApp?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.isConstructorApp?","doc":""},"Lean.Expr.isConstructorApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L117-L118","name":"Lean.Expr.isConstructorApp","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.isConstructorApp","doc":""},"Lean.Expr.isConstOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L800-L802","name":"Lean.Expr.isConstOf","docLink":"./Lean/Expr.html#Lean.Expr.isConstOf","doc":"Return `true` if the given expression is a constant of the give name.\nExamples:\n- `` (.const `Nat []).isConstOf `Nat `` is `true`\n- `` (.const `Nat []).isConstOf `False `` is `false`\n"},"Lean.Expr.isConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L790-L792","name":"Lean.Expr.isConst","docLink":"./Lean/Expr.html#Lean.Expr.isConst","doc":"Return `true` if the given expression is a constant. "},"Lean.Expr.isCharLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L981-L982","name":"Lean.Expr.isCharLit","docLink":"./Lean/Expr.html#Lean.Expr.isCharLit","doc":""},"Lean.Expr.isBinding":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L815-L818","name":"Lean.Expr.isBinding","docLink":"./Lean/Expr.html#Lean.Expr.isBinding","doc":"Return `true` if the given expression is a forall or lambda expression. "},"Lean.Expr.isBVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L765-L767","name":"Lean.Expr.isBVar","docLink":"./Lean/Expr.html#Lean.Expr.isBVar","doc":"Return `true` if the given expression is a bound variable. "},"Lean.Expr.isAutoParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1351-L1352","name":"Lean.Expr.isAutoParam","docLink":"./Lean/Expr.html#Lean.Expr.isAutoParam","doc":"Return `true` if `e` is of the form `autoParam _ _` "},"Lean.Expr.isAtomic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1164-L1171","name":"Lean.Expr.isAtomic","docLink":"./Lean/Expr.html#Lean.Expr.isAtomic","doc":"Returns true when the expression does not have any sub-expressions. "},"Lean.Expr.isArrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1067-L1070","name":"Lean.Expr.isArrow","docLink":"./Lean/Expr.html#Lean.Expr.isArrow","doc":"Return `true` if `e` is a non-dependent arrow.\nRemark: the following function assumes `e` does not have loose bound variables.\n"},"Lean.Expr.isAppOfArity'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L937-L941","name":"Lean.Expr.isAppOfArity'","docLink":"./Lean/Expr.html#Lean.Expr.isAppOfArity'","doc":"Similar to `isAppOfArity` but skips `Expr.mdata`. "},"Lean.Expr.isAppOfArity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L931-L934","name":"Lean.Expr.isAppOfArity","docLink":"./Lean/Expr.html#Lean.Expr.isAppOfArity","doc":"Given `f a₁ ... aᵢ`, returns true if `f` is a constant\nwith name `n` and has the correct number of arguments.\n"},"Lean.Expr.isAppOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L922-L925","name":"Lean.Expr.isAppOf","docLink":"./Lean/Expr.html#Lean.Expr.isAppOf","doc":"Given `f a₀ a₁ ... aₙ`, returns true if `f` is a constant with name `n`. "},"Lean.Expr.isApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L780-L782","name":"Lean.Expr.isApp","docLink":"./Lean/Expr.html#Lean.Expr.isApp","doc":"Return `true` if the given expression is an application. "},"Lean.Expr.instantiateRevRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1138-L1138","name":"Lean.Expr.instantiateRevRange","docLink":"./Lean/Expr.html#Lean.Expr.instantiateRevRange","doc":"Similar to `instantiateRev`, but consider only the variables `xs` in the range `[beginIdx, endIdx)`.\nFunction panics if `beginIdx <= endIdx <= xs.size` does not hold.\n"},"Lean.Expr.instantiateRev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1124-L1124","name":"Lean.Expr.instantiateRev","docLink":"./Lean/Expr.html#Lean.Expr.instantiateRev","doc":"Similar to instantiate, but `Expr.bvar i` is replaced with `subst[subst.size - i - 1]` "},"Lean.Expr.instantiateRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1131-L1131","name":"Lean.Expr.instantiateRange","docLink":"./Lean/Expr.html#Lean.Expr.instantiateRange","doc":"Similar to `instantiate`, but consider only the variables `xs` in the range `[beginIdx, endIdx)`.\nFunction panics if `beginIdx <= endIdx <= xs.size` does not hold.\n"},"Lean.Expr.instantiateLevelParamsCore.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1539-L1550","name":"Lean.Expr.instantiateLevelParamsCore.visit","docLink":"./Lean/Expr.html#Lean.Expr.instantiateLevelParamsCore.visit","doc":""},"Lean.Expr.instantiateLevelParamsCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1538-L1551","name":"Lean.Expr.instantiateLevelParamsCore","docLink":"./Lean/Expr.html#Lean.Expr.instantiateLevelParamsCore","doc":"Instantiate level parameters\n"},"Lean.Expr.instantiateLevelParamsArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1577-L1578","name":"Lean.Expr.instantiateLevelParamsArray","docLink":"./Lean/Expr.html#Lean.Expr.instantiateLevelParamsArray","doc":"Instantiate univeres level parameters names `paramNames` with `lvls` in `e`.\nIf the two arrays have different length, the smallest one is used.\n"},"Lean.Expr.instantiateLevelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1561-L1562","name":"Lean.Expr.instantiateLevelParams","docLink":"./Lean/Expr.html#Lean.Expr.instantiateLevelParams","doc":"Instantiate univeres level parameters names `paramNames` with `lvls` in `e`.\nIf the two lists have different length, the smallest one is used.\n"},"Lean.Expr.instantiateBetaRevRange.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L32-L65","name":"Lean.Expr.instantiateBetaRevRange.visit","docLink":"./Lean/Meta/InferType.html#Lean.Expr.instantiateBetaRevRange.visit","doc":""},"Lean.Expr.instantiateBetaRevRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/InferType.lean#L25-L65","name":"Lean.Expr.instantiateBetaRevRange","docLink":"./Lean/Meta/InferType.html#Lean.Expr.instantiateBetaRevRange","doc":"Auxiliary function for instantiating the loose bound variables in `e` with `args[start:stop]`.\nThis function is similar to `instantiateRevRange`, but it applies beta-reduction when\nwe instantiate a bound variable with a lambda expression.\nExample: Given the term `#0 a`, and `start := 0, stop := 1, args := #[fun x => x]` the result is\n`a` instead of `(fun x => x) a`.\nThis reduction is useful when we are inferring the type of eliminator-like applications.\nFor example, given `(n m : Nat) (f : Nat → Nat) (h : m = n)`,\nthe type of `Eq.subst (motive := fun x => f m = f x) h rfl`\nis `motive n` which is `(fun (x : Nat) => f m = f x) n`\nThis function reduces the new application to `f m = f n`\n\nWe use it to implement `inferAppType`\n"},"Lean.Expr.instantiate1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1120-L1120","name":"Lean.Expr.instantiate1","docLink":"./Lean/Expr.html#Lean.Expr.instantiate1","doc":""},"Lean.Expr.instantiate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1117-L1117","name":"Lean.Expr.instantiate","docLink":"./Lean/Expr.html#Lean.Expr.instantiate","doc":"Instantiate the loose bound variables in `e` using `subst`.\nThat is, a loose `Expr.bvar i` is replaced with `subst[i]`.\n"},"Lean.Expr.instToStringExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1160-L1161","name":"Lean.Expr.instToStringExpr","docLink":"./Lean/Expr.html#Lean.Expr.instToStringExpr","doc":""},"Lean.Expr.instHashableExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L495-L495","name":"Lean.Expr.instHashableExpr","docLink":"./Lean/Expr.html#Lean.Expr.instHashableExpr","doc":""},"Lean.Expr.instBEqExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L739-L740","name":"Lean.Expr.instBEqExpr","docLink":"./Lean/Expr.html#Lean.Expr.instBEqExpr","doc":""},"Lean.Expr.inferImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1104-L1110","name":"Lean.Expr.inferImplicit","docLink":"./Lean/Expr.html#Lean.Expr.inferImplicit","doc":"`inferImplicit e numParams considerRange` updates the first `numParams` parameter binder annotations of the `e` forall type.\nIt marks any parameter with an explicit binder annotation if there is another explicit arguments that depends on it or\nthe resulting type if `considerRange == true`.\n\nRemark: we use this function to infer the bind annotations of inductive datatype constructors, and structure projections.\nWhen the `{}` annotation is used in these commands, we set `considerRange == false`.\n"},"Lean.Expr.iff?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L46-L47","name":"Lean.Expr.iff?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.iff?","doc":""},"Lean.Expr.heq?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L60-L61","name":"Lean.Expr.heq?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.heq?","doc":""},"Lean.Expr.headNumArgs.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/HeadIndex.lean#L57-L61","name":"Lean.Expr.headNumArgs.go","docLink":"./Lean/HeadIndex.html#Lean.Expr.headNumArgs.go","doc":""},"Lean.Expr.headNumArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/HeadIndex.lean#L54-L61","name":"Lean.Expr.headNumArgs","docLink":"./Lean/HeadIndex.html#Lean.Expr.headNumArgs","doc":"Return the number of arguments in the given expression with respect to its `HeadIndex` "},"Lean.Expr.headBeta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1290-L1292","name":"Lean.Expr.headBeta","docLink":"./Lean/Expr.html#Lean.Expr.headBeta","doc":"`(fun x => e) a` ==> `e[x/a]`. "},"Lean.Expr.hashEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L562-L562","name":"Lean.Expr.hashEx","docLink":"./Lean/Expr.html#Lean.Expr.hashEx","doc":""},"Lean.Expr.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L492-L493","name":"Lean.Expr.hash","docLink":"./Lean/Expr.html#Lean.Expr.hash","doc":""},"Lean.Expr.hasSyntheticSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Sorry.lean#L27-L28","name":"Lean.Expr.hasSyntheticSorry","docLink":"./Lean/Util/Sorry.html#Lean.Expr.hasSyntheticSorry","doc":""},"Lean.Expr.hasSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Sorry.lean#L24-L25","name":"Lean.Expr.hasSorry","docLink":"./Lean/Util/Sorry.html#Lean.Expr.hasSorry","doc":""},"Lean.Expr.hasNonSyntheticSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Sorry.lean#L30-L31","name":"Lean.Expr.hasNonSyntheticSorry","docLink":"./Lean/Util/Sorry.html#Lean.Expr.hasNonSyntheticSorry","doc":""},"Lean.Expr.hasMVarEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L566-L566","name":"Lean.Expr.hasMVarEx","docLink":"./Lean/Expr.html#Lean.Expr.hasMVarEx","doc":""},"Lean.Expr.hasMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L522-L524","name":"Lean.Expr.hasMVar","docLink":"./Lean/Expr.html#Lean.Expr.hasMVar","doc":"Does the expression contain level (aka universe) or expression metavariables?\nThis is a constant time operation.\n"},"Lean.Expr.hasLooseBVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1060-L1061","name":"Lean.Expr.hasLooseBVars","docLink":"./Lean/Expr.html#Lean.Expr.hasLooseBVars","doc":""},"Lean.Expr.hasLooseBVarInExplicitDomain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1076-L1079","name":"Lean.Expr.hasLooseBVarInExplicitDomain","docLink":"./Lean/Expr.html#Lean.Expr.hasLooseBVarInExplicitDomain","doc":"Return true if `e` contains the loose bound variable `bvarIdx` in an explicit parameter, or in the range if `tryRange == true`. "},"Lean.Expr.hasLooseBVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1073-L1073","name":"Lean.Expr.hasLooseBVar","docLink":"./Lean/Expr.html#Lean.Expr.hasLooseBVar","doc":""},"Lean.Expr.hasLevelParamEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L567-L567","name":"Lean.Expr.hasLevelParamEx","docLink":"./Lean/Expr.html#Lean.Expr.hasLevelParamEx","doc":""},"Lean.Expr.hasLevelParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L530-L531","name":"Lean.Expr.hasLevelParam","docLink":"./Lean/Expr.html#Lean.Expr.hasLevelParam","doc":"Return true if `e` contains universe level parameters.\nThis is a constant time operation.\n"},"Lean.Expr.hasLevelMVarEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L565-L565","name":"Lean.Expr.hasLevelMVarEx","docLink":"./Lean/Expr.html#Lean.Expr.hasLevelMVarEx","doc":""},"Lean.Expr.hasLevelMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L515-L516","name":"Lean.Expr.hasLevelMVar","docLink":"./Lean/Expr.html#Lean.Expr.hasLevelMVar","doc":"Return `true` if `e` contains universe (aka `Level`) metavariables.\nThis is a constant time operation.\n"},"Lean.Expr.hasFVarEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L563-L563","name":"Lean.Expr.hasFVarEx","docLink":"./Lean/Expr.html#Lean.Expr.hasFVarEx","doc":""},"Lean.Expr.hasFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L501-L502","name":"Lean.Expr.hasFVar","docLink":"./Lean/Expr.html#Lean.Expr.hasFVar","doc":"Return `true` if `e` contains free variables.\nThis is a constant time operation.\n"},"Lean.Expr.hasExprMVarEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L564-L564","name":"Lean.Expr.hasExprMVarEx","docLink":"./Lean/Expr.html#Lean.Expr.hasExprMVarEx","doc":""},"Lean.Expr.hasExprMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L508-L509","name":"Lean.Expr.hasExprMVar","docLink":"./Lean/Expr.html#Lean.Expr.hasExprMVar","doc":"Return `true` if `e` contains expression metavariables.\nThis is a constant time operation.\n"},"Lean.Expr.hasAnyFVar.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1383-L1392","name":"Lean.Expr.hasAnyFVar.visit","docLink":"./Lean/Expr.html#Lean.Expr.hasAnyFVar.visit","doc":""},"Lean.Expr.hasAnyFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1382-L1393","name":"Lean.Expr.hasAnyFVar","docLink":"./Lean/Expr.html#Lean.Expr.hasAnyFVar","doc":"Return true iff `e` contains a free variable which statisfies `p`. "},"Lean.Expr.getUsedConstants":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FoldConsts.lean#L66-L67","name":"Lean.Expr.getUsedConstants","docLink":"./Lean/Util/FoldConsts.html#Lean.Expr.getUsedConstants","doc":""},"Lean.Expr.getRevArgD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L903-L906","name":"Lean.Expr.getRevArgD","docLink":"./Lean/Expr.html#Lean.Expr.getRevArgD","doc":""},"Lean.Expr.getRevArg!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L908-L911","name":"Lean.Expr.getRevArg!","docLink":"./Lean/Expr.html#Lean.Expr.getRevArg!","doc":""},"Lean.Expr.getOptParamDefault?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1328-L1332","name":"Lean.Expr.getOptParamDefault?","docLink":"./Lean/Expr.html#Lean.Expr.getOptParamDefault?","doc":"Return `some e'` if `e` is of the form `optParam _ e'` "},"Lean.Expr.getForallBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L840-L842","name":"Lean.Expr.getForallBody","docLink":"./Lean/Expr.html#Lean.Expr.getForallBody","doc":"Return the \"body\" of a forall expression.\nExample: let `e` be the representation for `forall (p : Prop) (q : Prop), p ∧ q`, then\n`getForallBody e` returns ``.app (.app (.const `And []) (.bvar 1)) (.bvar 0)``\n"},"Lean.Expr.getAutoParamTactic?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1335-L1339","name":"Lean.Expr.getAutoParamTactic?","docLink":"./Lean/Expr.html#Lean.Expr.getAutoParamTactic?","doc":"Return `some e'` if `e` is of the form `autoParam _ e'` "},"Lean.Expr.getArgD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L918-L919","name":"Lean.Expr.getArgD","docLink":"./Lean/Expr.html#Lean.Expr.getArgD","doc":"Given `f a₀ a₁ ... aₙ`, returns the `i`th argument or returns `v₀` if out of bounds. "},"Lean.Expr.getArg!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L914-L915","name":"Lean.Expr.getArg!","docLink":"./Lean/Expr.html#Lean.Expr.getArg!","doc":"Given `f a₀ a₁ ... aₙ`, returns the `i`th argument or panics if out of bounds. "},"Lean.Expr.getAppRevArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L876-L877","name":"Lean.Expr.getAppRevArgs","docLink":"./Lean/Expr.html#Lean.Expr.getAppRevArgs","doc":"Same as `getAppArgs` but reverse the output array. "},"Lean.Expr.getAppNumArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L858-L859","name":"Lean.Expr.getAppNumArgs","docLink":"./Lean/Expr.html#Lean.Expr.getAppNumArgs","doc":"Counts the number `n` of arguments for an expression `f a₁ .. aₙ`. "},"Lean.Expr.getAppFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L849-L851","name":"Lean.Expr.getAppFn","docLink":"./Lean/Expr.html#Lean.Expr.getAppFn","doc":"If the given expression is a sequence of\nfunction applications `f a₁ .. aₙ`, return `f`.\nOtherwise return the input expression.\n"},"Lean.Expr.getAppArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L866-L869","name":"Lean.Expr.getAppArgs","docLink":"./Lean/Expr.html#Lean.Expr.getAppArgs","doc":"Given `f a₁ a₂ ... aₙ`, returns `#[a₁, ..., aₙ]` "},"Lean.Expr.fvarId!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1000-L1002","name":"Lean.Expr.fvarId!","docLink":"./Lean/Expr.html#Lean.Expr.fvarId!","doc":""},"Lean.Expr.forEach'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ForEachExpr.lean#L33-L34","name":"Lean.Expr.forEach'","docLink":"./Lean/Util/ForEachExpr.html#Lean.Expr.forEach'","doc":"Apply `f` to each sub-expression of `e`. If `f t` returns false, then t's children are not visited. "},"Lean.Expr.forEach":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ForEachExpr.lean#L36-L37","name":"Lean.Expr.forEach","docLink":"./Lean/Util/ForEachExpr.html#Lean.Expr.forEach","doc":""},"Lean.Expr.foldConsts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FoldConsts.lean#L64-L64","name":"Lean.Expr.foldConsts","docLink":"./Lean/Util/FoldConsts.html#Lean.Expr.foldConsts","doc":"Apply `f` to every constant occurring in `e` once. "},"Lean.Expr.findMVar?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindMVar.lean#L31-L32","name":"Lean.Expr.findMVar?","docLink":"./Lean/Util/FindMVar.html#Lean.Expr.findMVar?","doc":""},"Lean.Expr.findLevelMVar?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindLevelMVar.lean#L43-L44","name":"Lean.Expr.findLevelMVar?","docLink":"./Lean/Util/FindLevelMVar.html#Lean.Expr.findLevelMVar?","doc":""},"Lean.Expr.findExt?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L117-L117","name":"Lean.Expr.findExt?","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.findExt?","doc":"Similar to `find?`, but `p` can return `FindStep.done` to interrupt the search on subterms.\nRemark: Differently from `find?`, we do not invoke `p` for partial applications of an application. "},"Lean.Expr.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L57-L68","name":"Lean.Expr.find?","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.find?","doc":""},"Lean.Expr.etaExpandedStrict?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1323-L1325","name":"Lean.Expr.etaExpandedStrict?","docLink":"./Lean/Expr.html#Lean.Expr.etaExpandedStrict?","doc":"Similar to `etaExpanded?`, but only succeeds if `ₙ ≥ 1`. "},"Lean.Expr.etaExpanded?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1319-L1320","name":"Lean.Expr.etaExpanded?","docLink":"./Lean/Expr.html#Lean.Expr.etaExpanded?","doc":"If `e` is of the form `(fun x₁ ... xₙ => f x₁ ... xₙ)` and `f` does not contain `x₁`, ..., `xₙ`,\nthen return `some f`. Otherwise, return `none`.\n\nIt assumes `e` does not have loose bound variables.\n\nRemark: `ₙ` may be 0\n"},"Lean.Expr.eta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1522-L1533","name":"Lean.Expr.eta","docLink":"./Lean/Expr.html#Lean.Expr.eta","doc":"Eta reduction. If `e` is of the form `(fun x => f x)`, then return `f`.\n"},"Lean.Expr.eqv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L737-L737","name":"Lean.Expr.eqv","docLink":"./Lean/Expr.html#Lean.Expr.eqv","doc":"Return true iff `a` and `b` are alpha equivalent.\nBinder annotations are ignored.\n"},"Lean.Expr.equal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L747-L747","name":"Lean.Expr.equal","docLink":"./Lean/Expr.html#Lean.Expr.equal","doc":"Return true iff `a` and `b` are equal.\nBinder names and annotations are taking into account.\n"},"Lean.Expr.eq?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L40-L41","name":"Lean.Expr.eq?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.eq?","doc":""},"Lean.Expr.dbgToString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L722-L722","name":"Lean.Expr.dbgToString","docLink":"./Lean/Expr.html#Lean.Expr.dbgToString","doc":""},"Lean.Expr.data":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L430-L472","name":"Lean.Expr.data","docLink":"./Lean/Expr.html#Lean.Expr.data","doc":""},"Lean.Expr.ctorWeight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ACLt.lean#L11-L23","name":"Lean.Expr.ctorWeight","docLink":"./Lean/Meta/ACLt.html#Lean.Expr.ctorWeight","doc":""},"Lean.Expr.ctorName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L478-L490","name":"Lean.Expr.ctorName","docLink":"./Lean/Expr.html#Lean.Expr.ctorName","doc":"The constructor name for the given expression. This is used for debugging purposes. "},"Lean.Expr.containsFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1396-L1397","name":"Lean.Expr.containsFVar","docLink":"./Lean/Expr.html#Lean.Expr.containsFVar","doc":"Return `true` if `e` contains the given free variable. "},"Lean.Expr.consumeTypeAnnotations":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1362-L1368","name":"Lean.Expr.consumeTypeAnnotations","docLink":"./Lean/Expr.html#Lean.Expr.consumeTypeAnnotations","doc":"Remove `outParam`, `optParam`, and `autoParam` applications/annotations from `e`.\nNote that it does not remove nested annotations.\nExamples:\n- Given `e` of the form `outParam (optParam Nat b)`, `consumeTypeAnnotations e = b`.\n- Given `e` of the form `Nat → outParam (optParam Nat b)`, `consumeTypeAnnotations e = e`.\n"},"Lean.Expr.consumeMData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1044-L1046","name":"Lean.Expr.consumeMData","docLink":"./Lean/Expr.html#Lean.Expr.consumeMData","doc":""},"Lean.Expr.constructorApp?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L120-L137","name":"Lean.Expr.constructorApp?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.constructorApp?","doc":""},"Lean.Expr.constName?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L988-L990","name":"Lean.Expr.constName?","docLink":"./Lean/Expr.html#Lean.Expr.constName?","doc":""},"Lean.Expr.constName!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L984-L986","name":"Lean.Expr.constName!","docLink":"./Lean/Expr.html#Lean.Expr.constName!","doc":""},"Lean.Expr.constLevels!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L992-L994","name":"Lean.Expr.constLevels!","docLink":"./Lean/Expr.html#Lean.Expr.constLevels!","doc":""},"Lean.Expr.const?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L11-L14","name":"Lean.Expr.const?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.const?","doc":""},"Lean.Expr.collectMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectMVars.lean#L38-L39","name":"Lean.Expr.collectMVars","docLink":"./Lean/Util/CollectMVars.html#Lean.Expr.collectMVars","doc":""},"Lean.Expr.collectFVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CollectFVars.lean#L13-L15","name":"Lean.Expr.collectFVars","docLink":"./Lean/Meta/CollectFVars.html#Lean.Expr.collectFVars","doc":""},"Lean.Expr.cleanupAnnotations":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1377-L1379","name":"Lean.Expr.cleanupAnnotations","docLink":"./Lean/Expr.html#Lean.Expr.cleanupAnnotations","doc":"Remove metadata annotations and `outParam`, `optParam`, and `autoParam` applications/annotations from `e`.\nNote that it does not remove nested annotations.\nExamples:\n- Given `e` of the form `outParam (optParam Nat b)`, `cleanupAnnotations e = b`.\n- Given `e` of the form `Nat → outParam (optParam Nat b)`, `cleanupAnnotations e = e`.\n"},"Lean.Expr.bvarIdx!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L996-L998","name":"Lean.Expr.bvarIdx!","docLink":"./Lean/Expr.html#Lean.Expr.bvarIdx!","doc":""},"Lean.Expr.bindingName!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1008-L1011","name":"Lean.Expr.bindingName!","docLink":"./Lean/Expr.html#Lean.Expr.bindingName!","doc":""},"Lean.Expr.bindingInfo!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1023-L1026","name":"Lean.Expr.bindingInfo!","docLink":"./Lean/Expr.html#Lean.Expr.bindingInfo!","doc":""},"Lean.Expr.bindingDomain!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1013-L1016","name":"Lean.Expr.bindingDomain!","docLink":"./Lean/Expr.html#Lean.Expr.bindingDomain!","doc":""},"Lean.Expr.bindingBody!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1018-L1021","name":"Lean.Expr.bindingBody!","docLink":"./Lean/Expr.html#Lean.Expr.bindingBody!","doc":""},"Lean.Expr.binderInfoEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L569-L569","name":"Lean.Expr.binderInfoEx","docLink":"./Lean/Expr.html#Lean.Expr.binderInfoEx","doc":""},"Lean.Expr.binderInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L553-L557","name":"Lean.Expr.binderInfo","docLink":"./Lean/Expr.html#Lean.Expr.binderInfo","doc":"Return the binder information if `e` is a lambda or forall expression, and `.default` otherwise.\n"},"Lean.Expr.betaRev.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1244-L1266","name":"Lean.Expr.betaRev.go","docLink":"./Lean/Expr.html#Lean.Expr.betaRev.go","doc":""},"Lean.Expr.betaRev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1240-L1267","name":"Lean.Expr.betaRev","docLink":"./Lean/Expr.html#Lean.Expr.betaRev","doc":"If `f` is a lambda expression, than \"beta-reduce\" it using `revArgs`.\nThis function is often used with `getAppRev` or `withAppRev`.\nExamples:\n- `betaRev (fun x y => t x y) #[]` ==> `fun x y => t x y`\n- `betaRev (fun x y => t x y) #[a]` ==> `fun y => t a y`\n- `betaRev (fun x y => t x y) #[a, b]` ==> `t b a`\n- `betaRev (fun x y => t x y) #[a, b, c, d]` ==> `t d c b a`\nSuppose `t` is `(fun x y => t x y) a b c d`, then\n`args := t.getAppRev` is `#[d, c, b, a]`,\nand `betaRev (fun x y => t x y) #[d, c, b, a]` is `t a b c d`.\n\nIf `useZeta` is true, the function also performs zeta-reduction (reduction of let binders) to create further\nopportunities for beta reduction.\n"},"Lean.Expr.beta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1273-L1274","name":"Lean.Expr.beta","docLink":"./Lean/Expr.html#Lean.Expr.beta","doc":"Apply the given arguments to `f`, beta-reducing if `f` is a\nlambda expression. See docstring for `betaRev` for examples.\n"},"Lean.Expr.arrow?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L66-L68","name":"Lean.Expr.arrow?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.arrow?","doc":""},"Lean.Expr.arrayLit?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L92-L96","name":"Lean.Expr.arrayLit?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.arrayLit?","doc":""},"Lean.Expr.approxDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L538-L539","name":"Lean.Expr.approxDepth","docLink":"./Lean/Expr.html#Lean.Expr.approxDepth","doc":"Return the approximated depth of an expression. This information is used to compute\nthe expression hash code, and speedup comparisons.\nThis is a constant time operation. We say it is approximate because it maxes out at `255`.\n"},"Lean.Expr.applyFVarSubst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/FVarSubst.lean#L73-L74","name":"Lean.Expr.applyFVarSubst","docLink":"./Lean/Meta/Tactic/FVarSubst.html#Lean.Expr.applyFVarSubst","doc":""},"Lean.Expr.appFn!'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L951-L954","name":"Lean.Expr.appFn!'","docLink":"./Lean/Expr.html#Lean.Expr.appFn!'","doc":""},"Lean.Expr.appFn!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L943-L945","name":"Lean.Expr.appFn!","docLink":"./Lean/Expr.html#Lean.Expr.appFn!","doc":""},"Lean.Expr.appArg!'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L956-L959","name":"Lean.Expr.appArg!'","docLink":"./Lean/Expr.html#Lean.Expr.appArg!'","doc":""},"Lean.Expr.appArg!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L947-L949","name":"Lean.Expr.appArg!","docLink":"./Lean/Expr.html#Lean.Expr.appArg!","doc":""},"Lean.Expr.app4?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L34-L38","name":"Lean.Expr.app4?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.app4?","doc":""},"Lean.Expr.app3?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L28-L32","name":"Lean.Expr.app3?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.app3?","doc":""},"Lean.Expr.app2?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L22-L26","name":"Lean.Expr.app2?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.app2?","doc":""},"Lean.Expr.app1?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L16-L20","name":"Lean.Expr.app1?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.app1?","doc":""},"Lean.Expr.and?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Recognizers.lean#L57-L58","name":"Lean.Expr.and?","docLink":"./Lean/Util/Recognizers.html#Lean.Expr.and?","doc":""},"Lean.Expr.abstractRangeM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L735-L736","name":"Lean.Expr.abstractRangeM","docLink":"./Lean/Meta/Basic.html#Lean.Expr.abstractRangeM","doc":"Similar to `abstracM` but consider only the first `min n xs.size` entries in `xs`\n\nIt is also similar to `Expr.abstractRange`, but handles metavariables correctly.\nIt uses `elimMVarDeps` to ensure `e` and the type of the free variables `xs` do not\ncontain a metavariable `?m` s.t. local context of `?m` contains a free variable in `xs`.\n"},"Lean.Expr.abstractRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1146-L1146","name":"Lean.Expr.abstractRange","docLink":"./Lean/Expr.html#Lean.Expr.abstractRange","doc":"Similar to `abstract`, but consider only the first `min n xs.size` entries in `xs`. "},"Lean.Expr.abstractM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Basic.lean#L746-L747","name":"Lean.Expr.abstractM","docLink":"./Lean/Meta/Basic.html#Lean.Expr.abstractM","doc":"Replace free (or meta) variables `xs` with loose bound variables.\nSimilar to `Expr.abstract`, but handles metavariables correctly.\n"},"Lean.Expr.abstract":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L1142-L1142","name":"Lean.Expr.abstract","docLink":"./Lean/Expr.html#Lean.Expr.abstract","doc":"Replace free (or meta) variables `xs` with loose bound variables. "},"Lean.Expr.ReplaceLevelImpl.replaceUnsafeM.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceLevel.lean#L39-L54","name":"Lean.Expr.ReplaceLevelImpl.replaceUnsafeM.visit","docLink":"./Lean/Util/ReplaceLevel.html#Lean.Expr.ReplaceLevelImpl.replaceUnsafeM.visit","doc":""},"Lean.Expr.ReplaceLevelImpl.replaceUnsafeM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceLevel.lean#L38-L55","name":"Lean.Expr.ReplaceLevelImpl.replaceUnsafeM","docLink":"./Lean/Util/ReplaceLevel.html#Lean.Expr.ReplaceLevelImpl.replaceUnsafeM","doc":""},"Lean.Expr.ReplaceLevelImpl.replaceUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceLevel.lean#L61-L62","name":"Lean.Expr.ReplaceLevelImpl.replaceUnsafe","docLink":"./Lean/Util/ReplaceLevel.html#Lean.Expr.ReplaceLevelImpl.replaceUnsafe","doc":""},"Lean.Expr.ReplaceLevelImpl.initCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceLevel.lean#L57-L59","name":"Lean.Expr.ReplaceLevelImpl.initCache","docLink":"./Lean/Util/ReplaceLevel.html#Lean.Expr.ReplaceLevelImpl.initCache","doc":""},"Lean.Expr.ReplaceLevelImpl.cacheSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceLevel.lean#L26-L26","name":"Lean.Expr.ReplaceLevelImpl.cacheSize","docLink":"./Lean/Util/ReplaceLevel.html#Lean.Expr.ReplaceLevelImpl.cacheSize","doc":""},"Lean.Expr.ReplaceLevelImpl.cache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceLevel.lean#L34-L36","name":"Lean.Expr.ReplaceLevelImpl.cache","docLink":"./Lean/Util/ReplaceLevel.html#Lean.Expr.ReplaceLevelImpl.cache","doc":""},"Lean.Expr.ReplaceLevelImpl.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceLevel.lean#L28-L30","name":"Lean.Expr.ReplaceLevelImpl.State","docLink":"./Lean/Util/ReplaceLevel.html#Lean.Expr.ReplaceLevelImpl.State","doc":""},"Lean.Expr.ReplaceLevelImpl.ReplaceM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceLevel.lean#L32-L32","name":"Lean.Expr.ReplaceLevelImpl.ReplaceM","docLink":"./Lean/Util/ReplaceLevel.html#Lean.Expr.ReplaceLevelImpl.ReplaceM","doc":""},"Lean.Expr.ReplaceImpl.replaceUnsafeM.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceExpr.lean#L26-L41","name":"Lean.Expr.ReplaceImpl.replaceUnsafeM.visit","docLink":"./Lean/Util/ReplaceExpr.html#Lean.Expr.ReplaceImpl.replaceUnsafeM.visit","doc":""},"Lean.Expr.ReplaceImpl.replaceUnsafeM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceExpr.lean#L25-L42","name":"Lean.Expr.ReplaceImpl.replaceUnsafeM","docLink":"./Lean/Util/ReplaceExpr.html#Lean.Expr.ReplaceImpl.replaceUnsafeM","doc":""},"Lean.Expr.ReplaceImpl.replaceUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceExpr.lean#L48-L49","name":"Lean.Expr.ReplaceImpl.replaceUnsafe","docLink":"./Lean/Util/ReplaceExpr.html#Lean.Expr.ReplaceImpl.replaceUnsafe","doc":""},"Lean.Expr.ReplaceImpl.initCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceExpr.lean#L44-L46","name":"Lean.Expr.ReplaceImpl.initCache","docLink":"./Lean/Util/ReplaceExpr.html#Lean.Expr.ReplaceImpl.initCache","doc":""},"Lean.Expr.ReplaceImpl.cacheSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceExpr.lean#L13-L13","name":"Lean.Expr.ReplaceImpl.cacheSize","docLink":"./Lean/Util/ReplaceExpr.html#Lean.Expr.ReplaceImpl.cacheSize","doc":""},"Lean.Expr.ReplaceImpl.cache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceExpr.lean#L21-L23","name":"Lean.Expr.ReplaceImpl.cache","docLink":"./Lean/Util/ReplaceExpr.html#Lean.Expr.ReplaceImpl.cache","doc":""},"Lean.Expr.ReplaceImpl.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceExpr.lean#L15-L17","name":"Lean.Expr.ReplaceImpl.State","docLink":"./Lean/Util/ReplaceExpr.html#Lean.Expr.ReplaceImpl.State","doc":""},"Lean.Expr.ReplaceImpl.ReplaceM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/ReplaceExpr.lean#L19-L19","name":"Lean.Expr.ReplaceImpl.ReplaceM","docLink":"./Lean/Util/ReplaceExpr.html#Lean.Expr.ReplaceImpl.ReplaceM","doc":""},"Lean.Expr.FoldConstsImpl.visited":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FoldConsts.lean#L21-L29","name":"Lean.Expr.FoldConstsImpl.visited","docLink":"./Lean/Util/FoldConsts.html#Lean.Expr.FoldConstsImpl.visited","doc":""},"Lean.Expr.FoldConstsImpl.initCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FoldConsts.lean#L53-L55","name":"Lean.Expr.FoldConstsImpl.initCache","docLink":"./Lean/Util/FoldConsts.html#Lean.Expr.FoldConstsImpl.initCache","doc":""},"Lean.Expr.FoldConstsImpl.foldUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FoldConsts.lean#L57-L58","name":"Lean.Expr.FoldConstsImpl.foldUnsafe","docLink":"./Lean/Util/FoldConsts.html#Lean.Expr.FoldConstsImpl.foldUnsafe","doc":""},"Lean.Expr.FoldConstsImpl.fold.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FoldConsts.lean#L32-L50","name":"Lean.Expr.FoldConstsImpl.fold.visit","docLink":"./Lean/Util/FoldConsts.html#Lean.Expr.FoldConstsImpl.fold.visit","doc":""},"Lean.Expr.FoldConstsImpl.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FoldConsts.lean#L31-L51","name":"Lean.Expr.FoldConstsImpl.fold","docLink":"./Lean/Util/FoldConsts.html#Lean.Expr.FoldConstsImpl.fold","doc":""},"Lean.Expr.FoldConstsImpl.cacheSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FoldConsts.lean#L13-L13","name":"Lean.Expr.FoldConstsImpl.cacheSize","docLink":"./Lean/Util/FoldConsts.html#Lean.Expr.FoldConstsImpl.cacheSize","doc":""},"Lean.Expr.FoldConstsImpl.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FoldConsts.lean#L15-L17","name":"Lean.Expr.FoldConstsImpl.State","docLink":"./Lean/Util/FoldConsts.html#Lean.Expr.FoldConstsImpl.State","doc":""},"Lean.Expr.FoldConstsImpl.FoldM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FoldConsts.lean#L19-L19","name":"Lean.Expr.FoldConstsImpl.FoldM","docLink":"./Lean/Util/FoldConsts.html#Lean.Expr.FoldConstsImpl.FoldM","doc":""},"Lean.Expr.FindStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L77-L80","name":"Lean.Expr.FindStep","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindStep","doc":"Return type for `findExt?` function argument.\n"},"Lean.Expr.FindImpl.visited":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L20-L29","name":"Lean.Expr.FindImpl.visited","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindImpl.visited","doc":""},"Lean.Expr.FindImpl.initCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L48-L49","name":"Lean.Expr.FindImpl.initCache","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindImpl.initCache","doc":""},"Lean.Expr.FindImpl.findUnsafe?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L51-L52","name":"Lean.Expr.FindImpl.findUnsafe?","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindImpl.findUnsafe?","doc":""},"Lean.Expr.FindImpl.findM?.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L32-L44","name":"Lean.Expr.FindImpl.findM?.visit","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindImpl.findM?.visit","doc":""},"Lean.Expr.FindImpl.findM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L31-L45","name":"Lean.Expr.FindImpl.findM?","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindImpl.findM?","doc":""},"Lean.Expr.FindImpl.cacheSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L13-L13","name":"Lean.Expr.FindImpl.cacheSize","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindImpl.cacheSize","doc":""},"Lean.Expr.FindImpl.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L15-L16","name":"Lean.Expr.FindImpl.State","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindImpl.State","doc":""},"Lean.Expr.FindImpl.FindM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L18-L18","name":"Lean.Expr.FindImpl.FindM","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindImpl.FindM","doc":""},"Lean.Expr.FindExtImpl.findUnsafe?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L108-L109","name":"Lean.Expr.FindExtImpl.findUnsafe?","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindExtImpl.findUnsafe?","doc":""},"Lean.Expr.FindExtImpl.findM?.visitApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L87-L90","name":"Lean.Expr.FindExtImpl.findM?.visitApp","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindExtImpl.findM?.visitApp","doc":""},"Lean.Expr.FindExtImpl.findM?.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L92-L106","name":"Lean.Expr.FindExtImpl.findM?.visit","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindExtImpl.findM?.visit","doc":""},"Lean.Expr.FindExtImpl.findM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/FindExpr.lean#L84-L106","name":"Lean.Expr.FindExtImpl.findM?","docLink":"./Lean/Util/FindExpr.html#Lean.Expr.FindExtImpl.findM?","doc":""},"Lean.Expr.Data.looseBVarRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L158-L159","name":"Lean.Expr.Data.looseBVarRange","docLink":"./Lean/Expr.html#Lean.Expr.Data.looseBVarRange","doc":""},"Lean.Expr.Data.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L149-L150","name":"Lean.Expr.Data.hash","docLink":"./Lean/Expr.html#Lean.Expr.Data.hash","doc":""},"Lean.Expr.Data.hasLevelParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L170-L171","name":"Lean.Expr.Data.hasLevelParam","docLink":"./Lean/Expr.html#Lean.Expr.Data.hasLevelParam","doc":""},"Lean.Expr.Data.hasLevelMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L167-L168","name":"Lean.Expr.Data.hasLevelMVar","docLink":"./Lean/Expr.html#Lean.Expr.Data.hasLevelMVar","doc":""},"Lean.Expr.Data.hasFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L161-L162","name":"Lean.Expr.Data.hasFVar","docLink":"./Lean/Expr.html#Lean.Expr.Data.hasFVar","doc":""},"Lean.Expr.Data.hasExprMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L164-L165","name":"Lean.Expr.Data.hasExprMVar","docLink":"./Lean/Expr.html#Lean.Expr.Data.hasExprMVar","doc":""},"Lean.Expr.Data.approxDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L155-L156","name":"Lean.Expr.Data.approxDepth","docLink":"./Lean/Expr.html#Lean.Expr.Data.approxDepth","doc":""},"Lean.Expr.Data":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L144-L144","name":"Lean.Expr.Data","docLink":"./Lean/Expr.html#Lean.Expr.Data","doc":"Cached hash code, cached results, and other data for `Expr`.\n-  hash           : 32-bits\n-  approxDepth    : 8-bits -- the approximate depth is used to minimize the number of hash collisions\n-  hasFVar        : 1-bit -- does it contain free variables?\n-  hasExprMVar    : 1-bit -- does it contain metavariables?\n-  hasLevelMVar   : 1-bit -- does it contain level metavariables?\n-  hasLevelParam  : 1-bit -- does it contain level parameters?\n-  looseBVarRange : 20-bits\n\nRemark: this is mostly an internal datastructure used to implement `Expr`,\nmost will never have to use it.\n"},"Lean.Expr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L300-L473","name":"Lean.Expr","docLink":"./Lean/Expr.html#Lean.Expr","doc":"Lean expressions. This datastructure is used in the kernel and\nelaborator. Howewer, expressions sent to the kernel should not\ncontain metavariables.\n\nRemark: we use the `E` suffix (short for `Expr`) to avoid collision with keywords.\nWe considered using «...», but it is too inconvenient to use. "},"Lean.Exception.toMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L24-L26","name":"Lean.Exception.toMessageData","docLink":"./Lean/Exception.html#Lean.Exception.toMessageData","doc":"Convert exception into a structured message. "},"Lean.Exception.isMaxRecDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L120-L123","name":"Lean.Exception.isMaxRecDepth","docLink":"./Lean/Exception.html#Lean.Exception.isMaxRecDepth","doc":"Return true if `ex` was generated by `throwMaxRecDepthAt`.\nThis function is a bit hackish. The max rec depth exception should probably be an internal exception,\nbut it is also produced by `MacroM` which implemented in the prelude, and internal exceptions have not\nbeen defined yet.\n"},"Lean.Exception.isMaxHeartbeat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L261-L264","name":"Lean.Exception.isMaxHeartbeat","docLink":"./Lean/CoreM.html#Lean.Exception.isMaxHeartbeat","doc":"Return true if `ex` was generated by `throwMaxHeartbeat`.\nThis function is a bit hackish. The heartbeat exception should probably be an internal exception.\nWe used a similar hack at `Exception.isMaxRecDepth` "},"Lean.Exception.hasSyntheticSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Sorry.lean#L57-L59","name":"Lean.Exception.hasSyntheticSorry","docLink":"./Lean/Util/Sorry.html#Lean.Exception.hasSyntheticSorry","doc":""},"Lean.Exception.getRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L32-L34","name":"Lean.Exception.getRef","docLink":"./Lean/Exception.html#Lean.Exception.getRef","doc":"Return syntax object providing position information for the exception.\nRecall that internal exceptions do not have position information.\n"},"Lean.Exception":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L14-L21","name":"Lean.Exception","docLink":"./Lean/Exception.html#Lean.Exception","doc":"Exception type used in most Lean monads "},"Lean.Eval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L669-L673","name":"Lean.Eval","docLink":"./Init/System/IO.html#Lean.Eval","doc":"Typeclass used for presenting the output of an `#eval` command. "},"Lean.EnvironmentHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L61-L84","name":"Lean.EnvironmentHeader","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader","doc":"Environment fields that are not used often. "},"Lean.Environment.setMainModule":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L143-L144","name":"Lean.Environment.setMainModule","docLink":"./Lean/Environment.html#Lean.Environment.setMainModule","doc":""},"Lean.Environment.registerNamespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L735-L736","name":"Lean.Environment.registerNamespace","docLink":"./Lean/Environment.html#Lean.Environment.registerNamespace","doc":"Register a new namespace in the environment. "},"Lean.Environment.mainModule":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L147-L148","name":"Lean.Environment.mainModule","docLink":"./Lean/Environment.html#Lean.Environment.mainModule","doc":""},"Lean.Environment.isProjectionFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ProjFns.lean#L44-L45","name":"Lean.Environment.isProjectionFn","docLink":"./Lean/ProjFns.html#Lean.Environment.isProjectionFn","doc":""},"Lean.Environment.isNamespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L739-L740","name":"Lean.Environment.isNamespace","docLink":"./Lean/Environment.html#Lean.Environment.isNamespace","doc":"Return `true` if `n` is the name of a namespace in `env`. "},"Lean.Environment.isConstructor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L165-L168","name":"Lean.Environment.isConstructor","docLink":"./Lean/Environment.html#Lean.Environment.isConstructor","doc":""},"Lean.Environment.imports":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L136-L137","name":"Lean.Environment.imports","docLink":"./Lean/Environment.html#Lean.Environment.imports","doc":""},"Lean.Environment.hasUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L801-L808","name":"Lean.Environment.hasUnsafe","docLink":"./Lean/Environment.html#Lean.Environment.hasUnsafe","doc":""},"Lean.Environment.getProjectionStructureName?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ProjFns.lean#L48-L54","name":"Lean.Environment.getProjectionStructureName?","docLink":"./Lean/ProjFns.html#Lean.Environment.getProjectionStructureName?","doc":"If `projName` is the name of a projection function, return the associated structure name "},"Lean.Environment.getProjectionFnInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ProjFns.lean#L41-L42","name":"Lean.Environment.getProjectionFnInfo?","docLink":"./Lean/ProjFns.html#Lean.Environment.getProjectionFnInfo?","doc":""},"Lean.Environment.getNamespaceSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L743-L744","name":"Lean.Environment.getNamespaceSet","docLink":"./Lean/Environment.html#Lean.Environment.getNamespaceSet","doc":"Return a set containing all namespaces in `env`. "},"Lean.Environment.getModuleIdxFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L162-L163","name":"Lean.Environment.getModuleIdxFor?","docLink":"./Lean/Environment.html#Lean.Environment.getModuleIdxFor?","doc":""},"Lean.Environment.getModuleIdx?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L170-L171","name":"Lean.Environment.getModuleIdx?","docLink":"./Lean/Environment.html#Lean.Environment.getModuleIdx?","doc":""},"Lean.Environment.freeRegions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L559-L575","name":"Lean.Environment.freeRegions","docLink":"./Lean/Environment.html#Lean.Environment.freeRegions","doc":"Free compacted regions of imports. No live references to imported objects may exist at the time of invocation; in\nparticular, `env` should be the last reference to any `Environment` derived from these imports. "},"Lean.Environment.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L129-L131","name":"Lean.Environment.find?","docLink":"./Lean/Environment.html#Lean.Environment.find?","doc":""},"Lean.Environment.evalConstCheck":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L791-L799","name":"Lean.Environment.evalConstCheck","docLink":"./Lean/Environment.html#Lean.Environment.evalConstCheck","doc":"Like `evalConst`, but first check that `constName` indeed is a declaration of type `typeName`.\nNote that this function cannot guarantee that `typeName` is in fact the name of the type `α`. "},"Lean.Environment.evalConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L784-L784","name":"Lean.Environment.evalConst","docLink":"./Lean/Environment.html#Lean.Environment.evalConst","doc":"Evaluate the given declaration under the given environment to a value of the given type.\nThis function is only safe to use if the type matches the declaration's type in the environment\nand if `enableInitializersExecution` has been used before importing any modules. "},"Lean.Environment.displayStats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L761-L777","name":"Lean.Environment.displayStats","docLink":"./Lean/Environment.html#Lean.Environment.displayStats","doc":""},"Lean.Environment.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L133-L134","name":"Lean.Environment.contains","docLink":"./Lean/Environment.html#Lean.Environment.contains","doc":""},"Lean.Environment.compileDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Old.lean#L63-L63","name":"Lean.Environment.compileDecls","docLink":"./Lean/Compiler/Old.html#Lean.Environment.compileDecls","doc":"Compile the given block of mutual declarations.\nAssumes the declarations have already been added to the environment using `addDecl`.\n"},"Lean.Environment.compileDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Old.lean#L66-L67","name":"Lean.Environment.compileDecl","docLink":"./Lean/Compiler/Old.html#Lean.Environment.compileDecl","doc":"Compile the given declaration, it assumes the declaration has already been added to the environment using `addDecl`. "},"Lean.Environment.allImportedModuleNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L139-L140","name":"Lean.Environment.allImportedModuleNames","docLink":"./Lean/Environment.html#Lean.Environment.allImportedModuleNames","doc":""},"Lean.Environment.addDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L194-L194","name":"Lean.Environment.addDecl","docLink":"./Lean/Environment.html#Lean.Environment.addDecl","doc":"Type check given declaration and add it to the environment "},"Lean.Environment.addAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L125-L126","name":"Lean.Environment.addAux","docLink":"./Lean/Environment.html#Lean.Environment.addAux","doc":""},"Lean.Environment.addAndCompile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Old.lean#L70-L72","name":"Lean.Environment.addAndCompile","docLink":"./Lean/Compiler/Old.html#Lean.Environment.addAndCompile","doc":""},"Lean.Environment.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L756-L758","name":"Lean.Environment.add","docLink":"./Lean/Environment.html#Lean.Environment.add","doc":""},"Lean.Environment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L102-L121","name":"Lean.Environment","docLink":"./Lean/Environment.html#Lean.Environment","doc":"An environment stores declarations provided by the user. The kernel\ncurrently supports different kinds of declarations such as definitions, theorems,\nand inductive families. Each has a unique identifier (i.e., `Name`), and can be\nparameterized by a sequence of universe parameters.\nA constant in Lean is just a reference to a `ConstantInfo` object. The main task of\nthe kernel is to type check these declarations and refuse type incorrect ones. The\nkernel does not allow declarations containing metavariables and/or free variables\nto be added to an environment. Environments are never destructively updated.\n\nThe environment also contains a collction of extensions. For example, the `simp` theorems\ndeclared by users are stored in an environment extension. Users can declare new extensions\nusing meta-programming.\n"},"Lean.EnvExtensionStateSpec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L17-L17","name":"Lean.EnvExtensionStateSpec","docLink":"./Lean/Environment.html#Lean.EnvExtensionStateSpec","doc":"Opaque environment extension state. "},"Lean.EnvExtensionState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L18-L18","name":"Lean.EnvExtensionState","docLink":"./Lean/Environment.html#Lean.EnvExtensionState","doc":""},"Lean.EnvExtensionInterfaceUnsafe.setState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L252-L256","name":"Lean.EnvExtensionInterfaceUnsafe.setState","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.setState","doc":""},"Lean.EnvExtensionInterfaceUnsafe.registerExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L275-L285","name":"Lean.EnvExtensionInterfaceUnsafe.registerExt","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.registerExt","doc":""},"Lean.EnvExtensionInterfaceUnsafe.modifyState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L258-L266","name":"Lean.EnvExtensionInterfaceUnsafe.modifyState","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.modifyState","doc":""},"Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L287-L289","name":"Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates","doc":""},"Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L227-L227","name":"Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","doc":""},"Lean.EnvExtensionInterfaceUnsafe.imp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L291-L300","name":"Lean.EnvExtensionInterfaceUnsafe.imp","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.imp","doc":""},"Lean.EnvExtensionInterfaceUnsafe.getState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L268-L273","name":"Lean.EnvExtensionInterfaceUnsafe.getState","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.getState","doc":""},"Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L241-L248","name":"Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop","doc":""},"Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L238-L248","name":"Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize","doc":"User-defined environment extensions are declared using the `initialize` command.\nThis command is just syntax sugar for the `init` attribute.\nWhen we `import` lean modules, the vector stored at `envExtensionsRef` may increase in size because of\nuser-defined environment extensions. When this happens, we must adjust the size of the `env.extensions`.\nThis method is invoked when processing `import`s.\n"},"Lean.EnvExtensionInterfaceUnsafe.Ext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L224-L227","name":"Lean.EnvExtensionInterfaceUnsafe.Ext","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext","doc":""},"Lean.EnvExtensionInterfaceImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L305-L305","name":"Lean.EnvExtensionInterfaceImp","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceImp","doc":""},"Lean.EnvExtensionInterface":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L199-L207","name":"Lean.EnvExtensionInterface","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface","doc":"Interface for managing environment extensions. "},"Lean.EnvExtensionEntrySpec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L48-L48","name":"Lean.EnvExtensionEntrySpec","docLink":"./Lean/Environment.html#Lean.EnvExtensionEntrySpec","doc":"Opaque persistent environment extension entry. "},"Lean.EnvExtensionEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L49-L49","name":"Lean.EnvExtensionEntry","docLink":"./Lean/Environment.html#Lean.EnvExtensionEntry","doc":""},"Lean.EnvExtension.setState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L314-L314","name":"Lean.EnvExtension.setState","docLink":"./Lean/Environment.html#Lean.EnvExtension.setState","doc":""},"Lean.EnvExtension.modifyState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L315-L315","name":"Lean.EnvExtension.modifyState","docLink":"./Lean/Environment.html#Lean.EnvExtension.modifyState","doc":""},"Lean.EnvExtension.instInhabitedEnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L313-L313","name":"Lean.EnvExtension.instInhabitedEnvExtension","docLink":"./Lean/Environment.html#Lean.EnvExtension.instInhabitedEnvExtension","doc":""},"Lean.EnvExtension.getState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L316-L316","name":"Lean.EnvExtension.getState","docLink":"./Lean/Environment.html#Lean.EnvExtension.getState","doc":""},"Lean.EnvExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L307-L307","name":"Lean.EnvExtension","docLink":"./Lean/Environment.html#Lean.EnvExtension","doc":""},"Lean.EnumAttributes.setValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L295-L301","name":"Lean.EnumAttributes.setValue","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.setValue","doc":""},"Lean.EnumAttributes.getValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L287-L293","name":"Lean.EnumAttributes.getValue","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.getValue","doc":""},"Lean.EnumAttributes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L248-L251","name":"Lean.EnumAttributes","docLink":"./Lean/Attributes.html#Lean.EnumAttributes","doc":"Given a list `[a₁, ..., a_n]` of elements of type `α`, `EnumAttributes` provides an attribute `Attr_i` for\nassociating a value `a_i` with an declaration. `α` is usually an enumeration type.\nNote that whenever we register an `EnumAttributes`, we create `n` attributes, but only one environment extension. "},"Lean.Elab.withoutModifyingStateWithInfoAndMessages":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1835-L1836","name":"Lean.Elab.withoutModifyingStateWithInfoAndMessages","docLink":"./Lean/Elab/Term.html#Lean.Elab.withoutModifyingStateWithInfoAndMessages","doc":""},"Lean.Elab.withSaveInfoContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L296-L306","name":"Lean.Elab.withSaveInfoContext","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.withSaveInfoContext","doc":"Resets the trees state `t₀`, runs `x` to produce a new trees\nstate `t₁` and sets the state to be `t₀ ++ (InfoTree.context Γ <$> t₁)`\nwhere `Γ` is the context derived from the monad state. "},"Lean.Elab.withMacroExpansionInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L316-L322","name":"Lean.Elab.withMacroExpansionInfo","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.withMacroExpansionInfo","doc":""},"Lean.Elab.withLogging":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L219-L221","name":"Lean.Elab.withLogging","docLink":"./Lean/Elab/Util.html#Lean.Elab.withLogging","doc":""},"Lean.Elab.withInfoTreeContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L279-L287","name":"Lean.Elab.withInfoTreeContext","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.withInfoTreeContext","doc":"Saves the current list of trees `t₀`, runs `x` to produce a new tree list `t₁` and\nruns `mkInfoTree t₁` to get `n : InfoTree` and then restores the trees to be `t₀ ++ [n]`."},"Lean.Elab.withInfoHole":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L324-L334","name":"Lean.Elab.withInfoHole","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.withInfoHole","doc":""},"Lean.Elab.withInfoContext'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L262-L275","name":"Lean.Elab.withInfoContext'","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.withInfoContext'","doc":"Use this to descend a node on the infotree that is being built.\n\nIt saves the current list of trees `t₀` and resets it and then runs `x >>= mkInfo`, producing either an `i : Info` or a hole id.\nRunning `x >>= mkInfo` will modify the trees state and produce a new list of trees `t₁`.\nIn the `i : Info` case, `t₁` become the children of a node `node i t₁` that is appended to `t₀`.\n "},"Lean.Elab.withInfoContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L290-L291","name":"Lean.Elab.withInfoContext","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.withInfoContext","doc":"Run `x` as a new child infotree node with header given by `mkInfo`. "},"Lean.Elab.withCommonTelescope.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Main.lean#L56-L63","name":"Lean.Elab.withCommonTelescope.go","docLink":"./Lean/Elab/PreDefinition/WF/Main.html#Lean.Elab.withCommonTelescope.go","doc":""},"Lean.Elab.withCommonTelescope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Main.lean#L53-L63","name":"Lean.Elab.withCommonTelescope","docLink":"./Lean/Elab/PreDefinition/WF/Main.html#Lean.Elab.withCommonTelescope","doc":""},"Lean.Elab.wfRecursion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Main.lean#L83-L110","name":"Lean.Elab.wfRecursion","docLink":"./Lean/Elab/PreDefinition/WF/Main.html#Lean.Elab.wfRecursion","doc":""},"Lean.Elab.unsupportedSyntaxExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L12-L12","name":"Lean.Elab.unsupportedSyntaxExceptionId","docLink":"./Lean/Elab/Exception.html#Lean.Elab.unsupportedSyntaxExceptionId","doc":""},"Lean.Elab.trace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L223-L225","name":"Lean.Elab.trace","docLink":"./Lean/Elab/Util.html#Lean.Elab.trace","doc":""},"Lean.Elab.toAttributeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Attributes.lean#L31-L39","name":"Lean.Elab.toAttributeKind","docLink":"./Lean/Elab/Attributes.html#Lean.Elab.toAttributeKind","doc":"```\nattrKind := leading_parser optional («scoped» <|> «local»)\n```\n"},"Lean.Elab.throwUnsupportedSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L21-L22","name":"Lean.Elab.throwUnsupportedSyntax","docLink":"./Lean/Elab/Exception.html#Lean.Elab.throwUnsupportedSyntax","doc":""},"Lean.Elab.throwPostpone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L18-L19","name":"Lean.Elab.throwPostpone","docLink":"./Lean/Elab/Exception.html#Lean.Elab.throwPostpone","doc":""},"Lean.Elab.throwIllFormedSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L24-L25","name":"Lean.Elab.throwIllFormedSyntax","docLink":"./Lean/Elab/Exception.html#Lean.Elab.throwIllFormedSyntax","doc":""},"Lean.Elab.throwErrorWithNestedErrors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L241-L242","name":"Lean.Elab.throwErrorWithNestedErrors","docLink":"./Lean/Elab/Util.html#Lean.Elab.throwErrorWithNestedErrors","doc":""},"Lean.Elab.throwAutoBoundImplicitLocal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L27-L28","name":"Lean.Elab.throwAutoBoundImplicitLocal","docLink":"./Lean/Elab/Exception.html#Lean.Elab.throwAutoBoundImplicitLocal","doc":""},"Lean.Elab.throwAlreadyDeclaredUniverseLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L39-L40","name":"Lean.Elab.throwAlreadyDeclaredUniverseLevel","docLink":"./Lean/Elab/Exception.html#Lean.Elab.throwAlreadyDeclaredUniverseLevel","doc":""},"Lean.Elab.throwAbortTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L47-L48","name":"Lean.Elab.throwAbortTerm","docLink":"./Lean/Elab/Exception.html#Lean.Elab.throwAbortTerm","doc":""},"Lean.Elab.throwAbortTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L51-L52","name":"Lean.Elab.throwAbortTactic","docLink":"./Lean/Elab/Exception.html#Lean.Elab.throwAbortTactic","doc":""},"Lean.Elab.throwAbortCommand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L43-L44","name":"Lean.Elab.throwAbortCommand","docLink":"./Lean/Elab/Exception.html#Lean.Elab.throwAbortCommand","doc":""},"Lean.Elab.syntaxNodeKindOfAttrParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L87-L93","name":"Lean.Elab.syntaxNodeKindOfAttrParam","docLink":"./Lean/Elab/Util.html#Lean.Elab.syntaxNodeKindOfAttrParam","doc":""},"Lean.Elab.sortDeclLevelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclUtil.lean#L75-L82","name":"Lean.Elab.sortDeclLevelParams","docLink":"./Lean/Elab/DeclUtil.html#Lean.Elab.sortDeclLevelParams","doc":"Sort the given list of `usedParams` using the following order:\n  - If it is an explicit level `allUserParams`, then use user given order.\n  - Otherwise, use lexicographical.\n\n  Remark: `scopeParams` are the universe params introduced using the `universe` command. `allUserParams` contains\n  the universe params introduced using the `universe` command *and* the `.{...}` notation.\n\n  Remark: this function return an exception if there is an `u` not in `usedParams`, that is in `allUserParams` but not in `scopeParams`.\n\n  Remark: `explicitParams` are in reverse declaration order. That is, the head is the last declared parameter. "},"Lean.Elab.setInfoState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L190-L191","name":"Lean.Elab.setInfoState","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.setInfoState","doc":""},"Lean.Elab.runTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Meta.lean#L13-L17","name":"Lean.Elab.runTactic","docLink":"./Lean/Elab/Tactic/Meta.html#Lean.Elab.runTactic","doc":"Apply the give tactic code to `mvarId` in `MetaM`. "},"Lean.Elab.runFrontend":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L98-L126","name":"Lean.Elab.runFrontend","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.runFrontend","doc":""},"Lean.Elab.resolveGlobalConstWithInfos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L249-L254","name":"Lean.Elab.resolveGlobalConstWithInfos","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.resolveGlobalConstWithInfos","doc":"Similar to resolveGlobalConstNoOverloadWithInfo, except if there are multiple name resolutions then it returns them as a list. "},"Lean.Elab.resolveGlobalConstNoOverloadWithInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L241-L246","name":"Lean.Elab.resolveGlobalConstNoOverloadWithInfo","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.resolveGlobalConstNoOverloadWithInfo","doc":"This does the same job as resolveGlobalConstNoOverload; resolving an identifier\nsyntax to a unique fully resolved name or throwing if there are ambiguities.\nBut also adds this resolved name to the infotree. This means that when you hover\nover a name in the sourcefile you will see the fully resolved name in the hover info."},"Lean.Elab.relaxedAutoImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/AutoBound.lean#L17-L17","name":"Lean.Elab.relaxedAutoImplicit","docLink":"./Lean/Elab/AutoBound.html#Lean.Elab.relaxedAutoImplicit","doc":""},"Lean.Elab.registerDerivingHandlerWithArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Basic.lean#L22-L27","name":"Lean.Elab.registerDerivingHandlerWithArgs","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.registerDerivingHandlerWithArgs","doc":"A `DerivingHandler` is called on the fully qualified names of all types it is running for\nas well as the syntax of a `with` argument, if present.\n\nFor example, `deriving instance Foo with fooArgs for Bar, Baz` invokes\n``fooHandler #[`Bar, `Baz] `(fooArgs)``. "},"Lean.Elab.registerDerivingHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Basic.lean#L30-L31","name":"Lean.Elab.registerDerivingHandler","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.registerDerivingHandler","doc":"Like `registerBuiltinDerivingHandlerWithArgs` but ignoring any `with` argument. "},"Lean.Elab.pushInfoTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L226-L228","name":"Lean.Elab.pushInfoTree","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.pushInfoTree","doc":""},"Lean.Elab.pushInfoLeaf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L230-L232","name":"Lean.Elab.pushInfoLeaf","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.pushInfoLeaf","doc":""},"Lean.Elab.processHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Import.lean#L19-L28","name":"Lean.Elab.processHeader","docLink":"./Lean/Elab/Import.html#Lean.Elab.processHeader","doc":""},"Lean.Elab.process":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L84-L88","name":"Lean.Elab.process","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.process","doc":""},"Lean.Elab.printImportsJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Import.lean#L55-L64","name":"Lean.Elab.printImportsJson","docLink":"./Lean/Elab/Import.html#Lean.Elab.printImportsJson","doc":""},"Lean.Elab.printImports":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Import.lean#L37-L41","name":"Lean.Elab.printImports","docLink":"./Lean/Elab/Import.html#Lean.Elab.printImports","doc":""},"Lean.Elab.pp.macroStack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L57-L57","name":"Lean.Elab.pp.macroStack","docLink":"./Lean/Elab/Util.html#Lean.Elab.pp.macroStack","doc":""},"Lean.Elab.postponeExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L11-L11","name":"Lean.Elab.postponeExceptionId","docLink":"./Lean/Elab/Exception.html#Lean.Elab.postponeExceptionId","doc":""},"Lean.Elab.parseImports":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Import.lean#L30-L34","name":"Lean.Elab.parseImports","docLink":"./Lean/Elab/Import.html#Lean.Elab.parseImports","doc":""},"Lean.Elab.nestedExceptionToMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L230-L239","name":"Lean.Elab.nestedExceptionToMessageData","docLink":"./Lean/Elab/Util.html#Lean.Elab.nestedExceptionToMessageData","doc":""},"Lean.Elab.mkUnusedBaseName.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L201-L206","name":"Lean.Elab.mkUnusedBaseName.loop","docLink":"./Lean/Elab/Util.html#Lean.Elab.mkUnusedBaseName.loop","doc":""},"Lean.Elab.mkUnusedBaseName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L198-L209","name":"Lean.Elab.mkUnusedBaseName","docLink":"./Lean/Elab/Util.html#Lean.Elab.mkUnusedBaseName","doc":""},"Lean.Elab.mkMessageCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L62-L65","name":"Lean.Elab.mkMessageCore","docLink":"./Lean/Elab/Exception.html#Lean.Elab.mkMessageCore","doc":""},"Lean.Elab.mkMacroAttributeUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L128-L129","name":"Lean.Elab.mkMacroAttributeUnsafe","docLink":"./Lean/Elab/Util.html#Lean.Elab.mkMacroAttributeUnsafe","doc":""},"Lean.Elab.mkMacroAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L132-L132","name":"Lean.Elab.mkMacroAttribute","docLink":"./Lean/Elab/Util.html#Lean.Elab.mkMacroAttribute","doc":""},"Lean.Elab.mkInhabitedInstanceHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Inhabited.lean#L118-L123","name":"Lean.Elab.mkInhabitedInstanceHandler","docLink":"./Lean/Elab/Deriving/Inhabited.html#Lean.Elab.mkInhabitedInstanceHandler","doc":""},"Lean.Elab.mkInhabitantFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/MkInhabitant.lean#L34-L49","name":"Lean.Elab.mkInhabitantFor","docLink":"./Lean/Elab/PreDefinition/MkInhabitant.html#Lean.Elab.mkInhabitantFor","doc":""},"Lean.Elab.mkFreshInstanceName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclUtil.lean#L56-L57","name":"Lean.Elab.mkFreshInstanceName","docLink":"./Lean/Elab/DeclUtil.html#Lean.Elab.mkFreshInstanceName","doc":""},"Lean.Elab.mkElabAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L101-L126","name":"Lean.Elab.mkElabAttribute","docLink":"./Lean/Elab/Util.html#Lean.Elab.mkElabAttribute","doc":""},"Lean.Elab.mkDeclName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L173-L193","name":"Lean.Elab.mkDeclName","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.mkDeclName","doc":""},"Lean.Elab.mkAttrKindGlobal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Attributes.lean#L41-L42","name":"Lean.Elab.mkAttrKindGlobal","docLink":"./Lean/Elab/Attributes.html#Lean.Elab.mkAttrKindGlobal","doc":""},"Lean.Elab.macroAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L134-L134","name":"Lean.Elab.macroAttribute","docLink":"./Lean/Elab/Util.html#Lean.Elab.macroAttribute","doc":""},"Lean.Elab.logException":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L211-L217","name":"Lean.Elab.logException","docLink":"./Lean/Elab/Util.html#Lean.Elab.logException","doc":""},"Lean.Elab.logDbgTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L227-L228","name":"Lean.Elab.logDbgTrace","docLink":"./Lean/Elab/Util.html#Lean.Elab.logDbgTrace","doc":""},"Lean.Elab.liftMacroM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L161-L193","name":"Lean.Elab.liftMacroM","docLink":"./Lean/Elab/Util.html#Lean.Elab.liftMacroM","doc":""},"Lean.Elab.levelMVarToParamPreDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L40-L41","name":"Lean.Elab.levelMVarToParamPreDecls","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.levelMVarToParamPreDecls","doc":""},"Lean.Elab.isValidAutoBoundLevelName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/AutoBound.lean#L45-L48","name":"Lean.Elab.isValidAutoBoundLevelName","docLink":"./Lean/Elab/AutoBound.html#Lean.Elab.isValidAutoBoundLevelName","doc":""},"Lean.Elab.isValidAutoBoundImplicitName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/AutoBound.lean#L40-L43","name":"Lean.Elab.isValidAutoBoundImplicitName","docLink":"./Lean/Elab/AutoBound.html#Lean.Elab.isValidAutoBoundImplicitName","doc":""},"Lean.Elab.isFreshInstanceName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclUtil.lean#L59-L62","name":"Lean.Elab.isFreshInstanceName","docLink":"./Lean/Elab/DeclUtil.html#Lean.Elab.isFreshInstanceName","doc":""},"Lean.Elab.isAutoBoundImplicitLocalException?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L30-L37","name":"Lean.Elab.isAutoBoundImplicitLocalException?","docLink":"./Lean/Elab/Exception.html#Lean.Elab.isAutoBoundImplicitLocalException?","doc":""},"Lean.Elab.isAbortTacticException":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L54-L57","name":"Lean.Elab.isAbortTacticException","docLink":"./Lean/Elab/Exception.html#Lean.Elab.isAbortTacticException","doc":""},"Lean.Elab.isAbortExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L59-L60","name":"Lean.Elab.isAbortExceptionId","docLink":"./Lean/Elab/Exception.html#Lean.Elab.isAbortExceptionId","doc":""},"Lean.Elab.instantiateMVarsAtPreDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L32-L34","name":"Lean.Elab.instantiateMVarsAtPreDecls","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.instantiateMVarsAtPreDecls","doc":""},"Lean.Elab.instToStringVisibility":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L39-L43","name":"Lean.Elab.instToStringVisibility","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToStringVisibility","doc":""},"Lean.Elab.instToStringModifiers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L95-L95","name":"Lean.Elab.instToStringModifiers","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToStringModifiers","doc":""},"Lean.Elab.instToJsonPrintImportsResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Import.lean#L52-L52","name":"Lean.Elab.instToJsonPrintImportsResult","docLink":"./Lean/Elab/Import.html#Lean.Elab.instToJsonPrintImportsResult","doc":""},"Lean.Elab.instToJsonPrintImportResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Import.lean#L48-L48","name":"Lean.Elab.instToJsonPrintImportResult","docLink":"./Lean/Elab/Import.html#Lean.Elab.instToJsonPrintImportResult","doc":""},"Lean.Elab.instToJsonImport":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Import.lean#L43-L43","name":"Lean.Elab.instToJsonImport","docLink":"./Lean/Elab/Import.html#Lean.Elab.instToJsonImport","doc":""},"Lean.Elab.instToFormatModifiers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L80-L93","name":"Lean.Elab.instToFormatModifiers","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToFormatModifiers","doc":""},"Lean.Elab.instToFormatCustomInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L51-L51","name":"Lean.Elab.instToFormatCustomInfo","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.instToFormatCustomInfo","doc":""},"Lean.Elab.instToFormatAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Attributes.lean#L18-L24","name":"Lean.Elab.instToFormatAttribute","docLink":"./Lean/Elab/Attributes.html#Lean.Elab.instToFormatAttribute","doc":""},"Lean.Elab.instMonadMacroAdapter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L155-L159","name":"Lean.Elab.instMonadMacroAdapter","docLink":"./Lean/Elab/Util.html#Lean.Elab.instMonadMacroAdapter","doc":""},"Lean.Elab.instMonadInfoTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L186-L188","name":"Lean.Elab.instMonadInfoTree","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instMonadInfoTree","doc":""},"Lean.Elab.instInhabitedVisibility":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L37-L37","name":"Lean.Elab.instInhabitedVisibility","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedVisibility","doc":""},"Lean.Elab.instInhabitedUserWidgetInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L95-L95","name":"Lean.Elab.instInhabitedUserWidgetInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedUserWidgetInfo","doc":""},"Lean.Elab.instInhabitedTerminationHints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Main.lean#L17-L17","name":"Lean.Elab.instInhabitedTerminationHints","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.instInhabitedTerminationHints","doc":""},"Lean.Elab.instInhabitedTermInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L36-L36","name":"Lean.Elab.instInhabitedTermInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedTermInfo","doc":""},"Lean.Elab.instInhabitedTacticInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L72-L72","name":"Lean.Elab.instInhabitedTacticInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedTacticInfo","doc":""},"Lean.Elab.instInhabitedRecKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L48-L48","name":"Lean.Elab.instInhabitedRecKind","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedRecKind","doc":""},"Lean.Elab.instInhabitedPreDefinition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L30-L30","name":"Lean.Elab.instInhabitedPreDefinition","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.instInhabitedPreDefinition","doc":""},"Lean.Elab.instInhabitedModifiers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L58-L58","name":"Lean.Elab.instInhabitedModifiers","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedModifiers","doc":""},"Lean.Elab.instInhabitedMacroExpansionInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L78-L78","name":"Lean.Elab.instInhabitedMacroExpansionInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedMacroExpansionInfo","doc":""},"Lean.Elab.instInhabitedInfoTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L159-L159","name":"Lean.Elab.instInhabitedInfoTree","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedInfoTree","doc":""},"Lean.Elab.instInhabitedInfoState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L178-L178","name":"Lean.Elab.instInhabitedInfoState","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedInfoState","doc":""},"Lean.Elab.instInhabitedInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L129-L129","name":"Lean.Elab.instInhabitedInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedInfo","doc":""},"Lean.Elab.instInhabitedFieldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L60-L60","name":"Lean.Elab.instInhabitedFieldInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedFieldInfo","doc":""},"Lean.Elab.instInhabitedElabInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L29-L29","name":"Lean.Elab.instInhabitedElabInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedElabInfo","doc":""},"Lean.Elab.instInhabitedDefViewElabHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L42-L42","name":"Lean.Elab.instInhabitedDefViewElabHeader","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.instInhabitedDefViewElabHeader","doc":""},"Lean.Elab.instInhabitedDefView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L45-L45","name":"Lean.Elab.instInhabitedDefView","docLink":"./Lean/Elab/DefView.html#Lean.Elab.instInhabitedDefView","doc":""},"Lean.Elab.instInhabitedDefKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L20-L20","name":"Lean.Elab.instInhabitedDefKind","docLink":"./Lean/Elab/DefView.html#Lean.Elab.instInhabitedDefKind","doc":""},"Lean.Elab.instInhabitedCustomInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L83-L83","name":"Lean.Elab.instInhabitedCustomInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedCustomInfo","doc":""},"Lean.Elab.instInhabitedContextInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L23-L23","name":"Lean.Elab.instInhabitedContextInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedContextInfo","doc":""},"Lean.Elab.instInhabitedCommandInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L39-L39","name":"Lean.Elab.instInhabitedCommandInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedCommandInfo","doc":""},"Lean.Elab.instInhabitedAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Attributes.lean#L16-L16","name":"Lean.Elab.instInhabitedAttribute","docLink":"./Lean/Elab/Attributes.html#Lean.Elab.instInhabitedAttribute","doc":""},"Lean.Elab.instBEqDefKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L20-L20","name":"Lean.Elab.instBEqDefKind","docLink":"./Lean/Elab/DefView.html#Lean.Elab.instBEqDefKind","doc":""},"Lean.Elab.headerToImports":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Import.lean#L11-L17","name":"Lean.Elab.headerToImports","docLink":"./Lean/Elab/Import.html#Lean.Elab.headerToImports","doc":""},"Lean.Elab.goalsToMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L28-L29","name":"Lean.Elab.goalsToMessageData","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.goalsToMessageData","doc":""},"Lean.Elab.getResetInfoTrees":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L221-L224","name":"Lean.Elab.getResetInfoTrees","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.getResetInfoTrees","doc":"Returns the current array of InfoTrees and resets it to an empty array. "},"Lean.Elab.getPrintMessageEndPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L94-L95","name":"Lean.Elab.getPrintMessageEndPos","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.getPrintMessageEndPos","doc":""},"Lean.Elab.getOptDerivingClasses":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Basic.lean#L69-L77","name":"Lean.Elab.getOptDerivingClasses","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.getOptDerivingClasses","doc":""},"Lean.Elab.getInfoTrees":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L339-L340","name":"Lean.Elab.getInfoTrees","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.getInfoTrees","doc":""},"Lean.Elab.getInfoHoleIdAssignment?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L308-L309","name":"Lean.Elab.getInfoHoleIdAssignment?","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.getInfoHoleIdAssignment?","doc":""},"Lean.Elab.getFixedPrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Main.lean#L65-L81","name":"Lean.Elab.getFixedPrefix","docLink":"./Lean/Elab/PreDefinition/WF/Main.html#Lean.Elab.getFixedPrefix","doc":""},"Lean.Elab.getDeclarationSelectionRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclarationRange.lean#L34-L47","name":"Lean.Elab.getDeclarationSelectionRef","docLink":"./Lean/Elab/DeclarationRange.html#Lean.Elab.getDeclarationSelectionRef","doc":"For most builtin declarations, the selection range is just its name, which is stored in the second position.\nExample:\n```\n\"def \" >> declId >> optDeclSig >> declVal\n```\nIf the declaration name is absent, we use the keyword instead.\nThis function converts the given `Syntax` into one that represents its \"selection range\".\n"},"Lean.Elab.getDeclarationRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclarationRange.lean#L13-L23","name":"Lean.Elab.getDeclarationRange","docLink":"./Lean/Elab/DeclarationRange.html#Lean.Elab.getDeclarationRange","doc":""},"Lean.Elab.getBetterRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L49-L55","name":"Lean.Elab.getBetterRef","docLink":"./Lean/Elab/Util.html#Lean.Elab.getBetterRef","doc":"If `ref` does not have position information, then try to use macroStack "},"Lean.Elab.fixLevelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L52-L64","name":"Lean.Elab.fixLevelParams","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.fixLevelParams","doc":""},"Lean.Elab.expandOptNamedPrio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L35-L40","name":"Lean.Elab.expandOptNamedPrio","docLink":"./Lean/Elab/Util.html#Lean.Elab.expandOptNamedPrio","doc":""},"Lean.Elab.expandOptDocComment?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L100-L105","name":"Lean.Elab.expandOptDocComment?","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandOptDocComment?","doc":"Retrieve doc string from `stx` of the form `(docComment)?`.\n"},"Lean.Elab.expandOptDeclSig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclUtil.lean#L40-L48","name":"Lean.Elab.expandOptDeclSig","docLink":"./Lean/Elab/DeclUtil.html#Lean.Elab.expandOptDeclSig","doc":""},"Lean.Elab.expandMacroImpl?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L140-L148","name":"Lean.Elab.expandMacroImpl?","docLink":"./Lean/Elab/Util.html#Lean.Elab.expandMacroImpl?","doc":"Try to expand macro at syntax tree root and return macro declaration name and new syntax if successful.\nReturn none if all macros threw `Macro.Exception.unsupportedSyntax`.\n"},"Lean.Elab.expandDeclSig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclUtil.lean#L50-L54","name":"Lean.Elab.expandDeclSig","docLink":"./Lean/Elab/DeclUtil.html#Lean.Elab.expandDeclSig","doc":""},"Lean.Elab.expandDeclIdCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L202-L208","name":"Lean.Elab.expandDeclIdCore","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandDeclIdCore","doc":"`declId` is of the form\n```\nleading_parser ident >> optional (\".{\" >> sepBy1 ident \", \" >> \"}\")\n```\nbut we also accept a single identifier to users to make macro writing more convenient .\n"},"Lean.Elab.expandDeclId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L229-L246","name":"Lean.Elab.expandDeclId","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandDeclId","doc":"Given a declaration identifier (e.g., `ident (\".{\" ident,+ \"}\")?`) that may contain explicit universe parameters\n- Ensure the new universe parameters do not shadow universe parameters declared using `universe` command.\n- Create the fully qualified named for the declaration using the current namespace, and given `modifiers`\n- Create a short version for recursively referring to the declaration. Recall that the `protected` modifier affects the generation of the short name.\n\nThe result also contains the universe parameters provided using `universe` command, and the `.{...}` notation.\n\nThis commands also stores the doc string stored in `modifiers`.\n"},"Lean.Elab.evalSyntaxConstant":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L99-L99","name":"Lean.Elab.evalSyntaxConstant","docLink":"./Lean/Elab/Util.html#Lean.Elab.evalSyntaxConstant","doc":""},"Lean.Elab.eraseRecAppSyntaxExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L142-L143","name":"Lean.Elab.eraseRecAppSyntaxExpr","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.eraseRecAppSyntaxExpr","doc":"Eliminate recursive application annotations containing syntax. These annotations are used by the well-founded recursion module\nto produce better error messages. "},"Lean.Elab.eraseRecAppSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L145-L146","name":"Lean.Elab.eraseRecAppSyntax","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.eraseRecAppSyntax","doc":""},"Lean.Elab.ensureNoRecFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L187-L194","name":"Lean.Elab.ensureNoRecFn","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.ensureNoRecFn","doc":""},"Lean.Elab.enableInfoTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L336-L337","name":"Lean.Elab.enableInfoTree","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.enableInfoTree","doc":""},"Lean.Elab.elabSetOption.setOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/SetOption.lean#L31-L35","name":"Lean.Elab.elabSetOption.setOption","docLink":"./Lean/Elab/SetOption.html#Lean.Elab.elabSetOption.setOption","doc":""},"Lean.Elab.elabSetOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/SetOption.lean#L13-L35","name":"Lean.Elab.elabSetOption","docLink":"./Lean/Elab/SetOption.html#Lean.Elab.elabSetOption","doc":""},"Lean.Elab.elabModifiers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L112-L142","name":"Lean.Elab.elabModifiers","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.elabModifiers","doc":"Elaborate declaration modifiers (i.e., attributes, `partial`, `private`, `proctected`, `unsafe`, `noncomputable`, doc string)"},"Lean.Elab.elabDeriving":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Basic.lean#L49-L62","name":"Lean.Elab.elabDeriving","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.elabDeriving","doc":""},"Lean.Elab.elabDeclAttrs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Attributes.lean#L79-L80","name":"Lean.Elab.elabDeclAttrs","docLink":"./Lean/Elab/Attributes.html#Lean.Elab.elabDeclAttrs","doc":""},"Lean.Elab.elabAttrs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Attributes.lean#L69-L76","name":"Lean.Elab.elabAttrs","docLink":"./Lean/Elab/Attributes.html#Lean.Elab.elabAttrs","doc":""},"Lean.Elab.elabAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Attributes.lean#L44-L67","name":"Lean.Elab.elabAttr","docLink":"./Lean/Elab/Attributes.html#Lean.Elab.elabAttr","doc":""},"Lean.Elab.derivingHandlersRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Basic.lean#L15-L15","name":"Lean.Elab.derivingHandlersRef","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.derivingHandlersRef","doc":""},"Lean.Elab.defaultHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Basic.lean#L33-L34","name":"Lean.Elab.defaultHandler","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.defaultHandler","doc":""},"Lean.Elab.checkSyntaxNodeKindAtNamespaces":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L78-L81","name":"Lean.Elab.checkSyntaxNodeKindAtNamespaces","docLink":"./Lean/Elab/Util.html#Lean.Elab.checkSyntaxNodeKindAtNamespaces","doc":""},"Lean.Elab.checkSyntaxNodeKindAtCurrentNamespaces":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L83-L85","name":"Lean.Elab.checkSyntaxNodeKindAtCurrentNamespaces","docLink":"./Lean/Elab/Util.html#Lean.Elab.checkSyntaxNodeKindAtCurrentNamespaces","doc":""},"Lean.Elab.checkSyntaxNodeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L74-L76","name":"Lean.Elab.checkSyntaxNodeKind","docLink":"./Lean/Elab/Util.html#Lean.Elab.checkSyntaxNodeKind","doc":""},"Lean.Elab.checkNotAlreadyDeclared":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L20-L32","name":"Lean.Elab.checkNotAlreadyDeclared","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.checkNotAlreadyDeclared","doc":"Ensure the environment does not contain a declaration with name `declName`.\nRecall that a private declaration cannot shadow a non-private one and vice-versa, although\nthey internally have different names.\n"},"Lean.Elab.checkIfShadowingStructureField":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L163-L171","name":"Lean.Elab.checkIfShadowingStructureField","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.checkIfShadowingStructureField","doc":""},"Lean.Elab.autoImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/AutoBound.lean#L12-L12","name":"Lean.Elab.autoImplicit","docLink":"./Lean/Elab/AutoBound.html#Lean.Elab.autoImplicit","doc":""},"Lean.Elab.autoBoundImplicitExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L16-L16","name":"Lean.Elab.autoBoundImplicitExceptionId","docLink":"./Lean/Elab/Exception.html#Lean.Elab.autoBoundImplicitExceptionId","doc":""},"Lean.Elab.assignInfoHoleId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L311-L313","name":"Lean.Elab.assignInfoHoleId","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.assignInfoHoleId","doc":""},"Lean.Elab.applyVisibility":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L149-L161","name":"Lean.Elab.applyVisibility","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.applyVisibility","doc":"Ensure the function has not already been declared, and apply the given visibility setting to `declName`.\nIf `private`, return the updated name using our internal encoding for private names.\nIf `protected`, register `declName` as protected in the environment.\n"},"Lean.Elab.applyDerivingHandlers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Basic.lean#L36-L43","name":"Lean.Elab.applyDerivingHandlers","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.applyDerivingHandlers","doc":""},"Lean.Elab.applyAttributesOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L66-L68","name":"Lean.Elab.applyAttributesOf","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.applyAttributesOf","doc":""},"Lean.Elab.admitGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L23-L26","name":"Lean.Elab.admitGoal","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.admitGoal","doc":"Assign `mvarId := sorry` "},"Lean.Elab.addPreDefinitions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Main.lean#L95-L157","name":"Lean.Elab.addPreDefinitions","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.addPreDefinitions","doc":""},"Lean.Elab.addNonRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L136-L137","name":"Lean.Elab.addNonRec","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.addNonRec","doc":""},"Lean.Elab.addMacroStack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L63-L72","name":"Lean.Elab.addMacroStack","docLink":"./Lean/Elab/Util.html#Lean.Elab.addMacroStack","doc":""},"Lean.Elab.addDeclarationRanges":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclarationRange.lean#L54-L61","name":"Lean.Elab.addDeclarationRanges","docLink":"./Lean/Elab/DeclarationRange.html#Lean.Elab.addDeclarationRanges","doc":"Store the `range` and `selectionRange` for `declName` where `stx` is the whole syntax object decribing `declName`.\nThis method is for the builtin declarations only.\nUser-defined commands should use `Lean.addDeclarationRanges` to store this information for their commands. "},"Lean.Elab.addCompletionInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L234-L235","name":"Lean.Elab.addCompletionInfo","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.addCompletionInfo","doc":""},"Lean.Elab.addAuxDeclarationRanges":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclarationRange.lean#L64-L68","name":"Lean.Elab.addAuxDeclarationRanges","docLink":"./Lean/Elab/DeclarationRange.html#Lean.Elab.addAuxDeclarationRanges","doc":"Auxiliary method for recording ranges for auxiliary declarations (e.g., fields, nested declarations, etc. "},"Lean.Elab.addAsAxiom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L78-L80","name":"Lean.Elab.addAsAxiom","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.addAsAxiom","doc":"Auxiliary method for (temporarily) adding pre definition as an axiom "},"Lean.Elab.addAndCompileUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L148-L168","name":"Lean.Elab.addAndCompileUnsafe","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.addAndCompileUnsafe","doc":""},"Lean.Elab.addAndCompilePartialRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L170-L182","name":"Lean.Elab.addAndCompilePartialRec","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.addAndCompilePartialRec","doc":""},"Lean.Elab.addAndCompileNonRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L133-L134","name":"Lean.Elab.addAndCompileNonRec","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.addAndCompileNonRec","doc":""},"Lean.Elab.adaptMacro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L195-L196","name":"Lean.Elab.adaptMacro","docLink":"./Lean/Elab/Util.html#Lean.Elab.adaptMacro","doc":""},"Lean.Elab.abstractNestedProofs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L70-L75","name":"Lean.Elab.abstractNestedProofs","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.abstractNestedProofs","doc":""},"Lean.Elab.abortTermExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L14-L14","name":"Lean.Elab.abortTermExceptionId","docLink":"./Lean/Elab/Exception.html#Lean.Elab.abortTermExceptionId","doc":""},"Lean.Elab.abortTacticExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L15-L15","name":"Lean.Elab.abortTacticExceptionId","docLink":"./Lean/Elab/Exception.html#Lean.Elab.abortTacticExceptionId","doc":""},"Lean.Elab.abortCommandExceptionId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Exception.lean#L13-L13","name":"Lean.Elab.abortCommandExceptionId","docLink":"./Lean/Elab/Exception.html#Lean.Elab.abortCommandExceptionId","doc":""},"Lean.Elab.WF.withFixedPrefix.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L125-L130","name":"Lean.Elab.WF.withFixedPrefix.go","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.withFixedPrefix.go","doc":""},"Lean.Elab.WF.withFixedPrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L122-L130","name":"Lean.Elab.WF.withFixedPrefix","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.withFixedPrefix","doc":""},"Lean.Elab.WF.simpMatchWF?.pre":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Eqns.lean#L112-L127","name":"Lean.Elab.WF.simpMatchWF?.pre","docLink":"./Lean/Elab/PreDefinition/WF/Eqns.html#Lean.Elab.WF.simpMatchWF?.pre","doc":""},"Lean.Elab.WF.simpMatchWF?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Eqns.lean#L105-L127","name":"Lean.Elab.WF.simpMatchWF?","docLink":"./Lean/Elab/PreDefinition/WF/Eqns.html#Lean.Elab.WF.simpMatchWF?","doc":"Simplify `match`-expressions when trying to prove equation theorems for a recursive declaration defined using well-founded recursion.\nIt is similar to `simpMatch?`, but is also tries to fold `WellFounded.fix` applications occurring in discriminants.\nSee comment at `tryToFoldWellFoundedFix`.\n"},"Lean.Elab.WF.registerEqnsInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Eqns.lean#L211-L215","name":"Lean.Elab.WF.registerEqnsInfo","docLink":"./Lean/Elab/PreDefinition/WF/Eqns.html#Lean.Elab.WF.registerEqnsInfo","doc":""},"Lean.Elab.WF.packMutual":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L173-L187","name":"Lean.Elab.WF.packMutual","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.packMutual","doc":"If `preDefs.size > 1`, combine different functions in a single one using `PSum`.\n  This method assumes all `preDefs` have arity 1, and have already been processed using `packDomain`.\n  Here is a small example. Suppose the input is\n  ```\n  f x :=\n    match x.2.1, x.2.2.1, x.2.2.2 with\n    | 0, a, b => a\n    | Nat.succ n, a, b => (g ⟨x.1, n, a, b⟩).fst\n  g x :=\n    match x.2.1, x.2.2.1, x.2.2.2 with\n    | 0, a, b => (a, b)\n    | Nat.succ n, a, b => (h ⟨x.1, n, a, b⟩, a)\n  h x =>\n    match x.2.1, x.2.2.1, x.2.2.2 with\n    | 0, a, b => b\n    | Nat.succ n, a, b => f ⟨x.1, n, a, b⟩\n  ```\n  this method produces the following pre definition\n  ```\n  f._mutual x :=\n    PSum.casesOn x\n      (fun val =>\n        match val.2.1, val.2.2.1, val.2.2.2 with\n        | 0, a, b => a\n        | Nat.succ n, a, b => (f._mutual (PSum.inr (PSum.inl ⟨val.1, n, a, b⟩))).fst\n      fun val =>\n        PSum.casesOn val\n          (fun val =>\n            match val.2.1, val.2.2.1, val.2.2.2 with\n            | 0, a, b => (a, b)\n            | Nat.succ n, a, b => (f._mutual (PSum.inr (PSum.inr ⟨val.1, n, a, b⟩)), a)\n          fun val =>\n            match val.2.1, val.2.2.1, val.2.2.2 with\n            | 0, a, b => b\n            | Nat.succ n, a, b =>\n              f._mutual (PSum.inl ⟨val.1, n, a, b⟩)\n  ```\n\n  Remark: `preDefsOriginal` is used for error reporting, it contains the definitions before applying `packDomain`.\n "},"Lean.Elab.WF.packDomain.packApplications.visitApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L147-L172","name":"Lean.Elab.WF.packDomain.packApplications.visitApp","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain.packApplications.visitApp","doc":""},"Lean.Elab.WF.packDomain.packApplications.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L130-L146","name":"Lean.Elab.WF.packDomain.packApplications.visit","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain.packApplications.visit","doc":""},"Lean.Elab.WF.packDomain.packApplications":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L120-L173","name":"Lean.Elab.WF.packDomain.packApplications","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain.packApplications","doc":""},"Lean.Elab.WF.packDomain.isAppOfPreDef?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L115-L118","name":"Lean.Elab.WF.packDomain.isAppOfPreDef?","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain.isAppOfPreDef?","doc":"Return `some i` if `e` is a `preDefs[i]` application "},"Lean.Elab.WF.packDomain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L60-L173","name":"Lean.Elab.WF.packDomain","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain","doc":"Convert the given pre-definitions into unary functions.\nWe \"pack\" the arguments using `PSigma`.\n"},"Lean.Elab.WF.mkUnaryArg.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L28-L40","name":"Lean.Elab.WF.mkUnaryArg.go","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.mkUnaryArg.go","doc":""},"Lean.Elab.WF.mkUnaryArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L25-L40","name":"Lean.Elab.WF.mkUnaryArg","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.mkUnaryArg","doc":"Create a unary application by packing the given arguments using `PSigma.mk` "},"Lean.Elab.WF.mkFix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Fix.lean#L166-L189","name":"Lean.Elab.WF.mkFix","docLink":"./Lean/Elab/PreDefinition/WF/Fix.html#Lean.Elab.WF.mkFix","doc":""},"Lean.Elab.WF.mkEqns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Eqns.lean#L187-L207","name":"Lean.Elab.WF.mkEqns","docLink":"./Lean/Elab/PreDefinition/WF/Eqns.html#Lean.Elab.WF.mkEqns","doc":""},"Lean.Elab.WF.instInhabitedTerminationHintValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L15-L15","name":"Lean.Elab.WF.instInhabitedTerminationHintValue","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.instInhabitedTerminationHintValue","doc":""},"Lean.Elab.WF.instInhabitedTerminationHint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L21-L21","name":"Lean.Elab.WF.instInhabitedTerminationHint","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.instInhabitedTerminationHint","doc":""},"Lean.Elab.WF.instInhabitedTerminationByElement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L84-L84","name":"Lean.Elab.WF.instInhabitedTerminationByElement","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.instInhabitedTerminationByElement","doc":""},"Lean.Elab.WF.instInhabitedTerminationBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L93-L93","name":"Lean.Elab.WF.instInhabitedTerminationBy","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.instInhabitedTerminationBy","doc":""},"Lean.Elab.WF.instInhabitedEqnInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Eqns.lean#L19-L19","name":"Lean.Elab.WF.instInhabitedEqnInfo","docLink":"./Lean/Elab/PreDefinition/WF/Eqns.html#Lean.Elab.WF.instInhabitedEqnInfo","doc":""},"Lean.Elab.WF.getUnfoldFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Eqns.lean#L223-L225","name":"Lean.Elab.WF.getUnfoldFor?","docLink":"./Lean/Elab/PreDefinition/WF/Eqns.html#Lean.Elab.WF.getUnfoldFor?","doc":""},"Lean.Elab.WF.getNumCandidateArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Rel.lean#L56-L59","name":"Lean.Elab.WF.getNumCandidateArgs","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.getNumCandidateArgs","doc":""},"Lean.Elab.WF.getForbiddenByTrivialSizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Rel.lean#L68-L78","name":"Lean.Elab.WF.getForbiddenByTrivialSizeOf","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.getForbiddenByTrivialSizeOf","doc":"Given a predefinition with value `fun (x_₁ ... xₙ) (y_₁ : α₁)... (yₘ : αₘ) => ...`,\nwhere `n = fixedPrefixSize`, return an array `A` s.t. `i ∈ A` iff `sizeOf yᵢ` reduces to a literal.\nThis is the case for types such as `Prop`, `Type u`, etc.\nThis arguments should not be considered when guessing a well-founded relation.\nSee `generateCombinations?`\n"},"Lean.Elab.WF.getEqnsFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Eqns.lean#L217-L221","name":"Lean.Elab.WF.getEqnsFor?","docLink":"./Lean/Elab/PreDefinition/WF/Eqns.html#Lean.Elab.WF.getEqnsFor?","doc":""},"Lean.Elab.WF.generateCombinations?.isForbidden":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Rel.lean#L83-L87","name":"Lean.Elab.WF.generateCombinations?.isForbidden","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.generateCombinations?.isForbidden","doc":""},"Lean.Elab.WF.generateCombinations?.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Rel.lean#L89-L98","name":"Lean.Elab.WF.generateCombinations?.go","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.generateCombinations?.go","doc":""},"Lean.Elab.WF.generateCombinations?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Rel.lean#L80-L99","name":"Lean.Elab.WF.generateCombinations?","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.generateCombinations?","doc":""},"Lean.Elab.WF.expandTerminationHint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L23-L47","name":"Lean.Elab.WF.expandTerminationHint","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.expandTerminationHint","doc":""},"Lean.Elab.WF.expandTerminationBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L145-L154","name":"Lean.Elab.WF.expandTerminationBy","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.expandTerminationBy","doc":""},"Lean.Elab.WF.eqnInfoExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Eqns.lean#L209-L209","name":"Lean.Elab.WF.eqnInfoExt","docLink":"./Lean/Elab/PreDefinition/WF/Eqns.html#Lean.Elab.WF.eqnInfoExt","doc":""},"Lean.Elab.WF.elabWFRel.guess":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Rel.lean#L151-L162","name":"Lean.Elab.WF.elabWFRel.guess","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.elabWFRel.guess","doc":""},"Lean.Elab.WF.elabWFRel.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Rel.lean#L115-L128","name":"Lean.Elab.WF.elabWFRel.go","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.elabWFRel.go","doc":""},"Lean.Elab.WF.elabWFRel.generateElements":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Rel.lean#L130-L149","name":"Lean.Elab.WF.elabWFRel.generateElements","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.elabWFRel.generateElements","doc":""},"Lean.Elab.WF.elabWFRel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Rel.lean#L101-L162","name":"Lean.Elab.WF.elabWFRel","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.elabWFRel","doc":""},"Lean.Elab.WF.TerminationWF":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L95-L97","name":"Lean.Elab.WF.TerminationWF","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationWF","doc":""},"Lean.Elab.WF.TerminationHintValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L12-L15","name":"Lean.Elab.WF.TerminationHintValue","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHintValue","doc":""},"Lean.Elab.WF.TerminationHint.markAsUsed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L49-L62","name":"Lean.Elab.WF.TerminationHint.markAsUsed","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHint.markAsUsed","doc":""},"Lean.Elab.WF.TerminationHint.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L64-L68","name":"Lean.Elab.WF.TerminationHint.find?","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHint.find?","doc":""},"Lean.Elab.WF.TerminationHint.ensureAllUsed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L70-L74","name":"Lean.Elab.WF.TerminationHint.ensureAllUsed","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHint.ensureAllUsed","doc":""},"Lean.Elab.WF.TerminationHint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L17-L21","name":"Lean.Elab.WF.TerminationHint","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHint","doc":""},"Lean.Elab.WF.TerminationByElement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L78-L84","name":"Lean.Elab.WF.TerminationByElement","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationByElement","doc":""},"Lean.Elab.WF.TerminationByClique.getExplicitElement?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L178-L179","name":"Lean.Elab.WF.TerminationByClique.getExplicitElement?","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationByClique.getExplicitElement?","doc":""},"Lean.Elab.WF.TerminationByClique.allImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L175-L176","name":"Lean.Elab.WF.TerminationByClique.allImplicit","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationByClique.allImplicit","doc":""},"Lean.Elab.WF.TerminationByClique":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L86-L88","name":"Lean.Elab.WF.TerminationByClique","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationByClique","doc":""},"Lean.Elab.WF.TerminationBy.markAsUsed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L156-L163","name":"Lean.Elab.WF.TerminationBy.markAsUsed","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.markAsUsed","doc":""},"Lean.Elab.WF.TerminationBy.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L165-L173","name":"Lean.Elab.WF.TerminationBy.find?","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.find?","doc":""},"Lean.Elab.WF.TerminationBy.ensureAllUsed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L181-L194","name":"Lean.Elab.WF.TerminationBy.ensureAllUsed","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.ensureAllUsed","doc":""},"Lean.Elab.WF.TerminationBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L90-L93","name":"Lean.Elab.WF.TerminationBy","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy","doc":""},"Lean.Elab.WF.EqnInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/Eqns.lean#L15-L19","name":"Lean.Elab.WF.EqnInfo","docLink":"./Lean/Elab/PreDefinition/WF/Eqns.html#Lean.Elab.WF.EqnInfo","doc":""},"Lean.Elab.Visibility":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L35-L37","name":"Lean.Elab.Visibility","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility","doc":"Declaration visibility modifier. That is, whether a declaration is regular, protected or private. "},"Lean.Elab.UserWidgetInfo.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L149-L150","name":"Lean.Elab.UserWidgetInfo.format","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.UserWidgetInfo.format","doc":""},"Lean.Elab.UserWidgetInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L89-L95","name":"Lean.Elab.UserWidgetInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.UserWidgetInfo","doc":"An info that represents a user-widget.\nUser-widgets are custom pieces of code that run on the editor client.\nYou can learn about user widgets at `src/Lean/Widget/UserWidget`\n"},"Lean.Elab.TerminationHints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Main.lean#L14-L17","name":"Lean.Elab.TerminationHints","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.TerminationHints","doc":""},"Lean.Elab.TermInfo.runMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L107-L108","name":"Lean.Elab.TermInfo.runMetaM","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.TermInfo.runMetaM","doc":""},"Lean.Elab.TermInfo.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L110-L116","name":"Lean.Elab.TermInfo.format","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.TermInfo.format","doc":""},"Lean.Elab.TermInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L31-L36","name":"Lean.Elab.TermInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TermInfo","doc":""},"Lean.Elab.Term.withoutSavingRecAppSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L362-L363","name":"Lean.Elab.Term.withoutSavingRecAppSyntax","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withoutSavingRecAppSyntax","doc":"Execute `x` without storing `Syntax` for recursive applications. See `saveRecAppSyntax` field at `Context`.\n"},"Lean.Elab.Term.withoutPostponing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L576-L577","name":"Lean.Elab.Term.withoutPostponing","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withoutPostponing","doc":"Execute `x` without allowing it to postpone elaboration tasks.\nThat is, `tryPostpone` is a noop. "},"Lean.Elab.Term.withoutModifyingElabMetaStateWithInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L339-L346","name":"Lean.Elab.Term.withoutModifyingElabMetaStateWithInfo","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withoutModifyingElabMetaStateWithInfo","doc":"Execute `x` but discard changes performed at `Term.State` and `Meta.State`.\nRecall that the `Environment` and `InfoState` are at `Core.State`. Thus, any updates to it will\nbe preserved. This method is useful for performing computations where all\nmetavariable must be resolved or discarded.\nThe `InfoTree`s are not discarded, however, and wrapped in `InfoTree.Context`\nto store their metavariable context. "},"Lean.Elab.Term.withoutMacroStackAtErr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L664-L665","name":"Lean.Elab.Term.withoutMacroStackAtErr","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withoutMacroStackAtErr","doc":""},"Lean.Elab.Term.withoutErrToSorryImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L428-L429","name":"Lean.Elab.Term.withoutErrToSorryImp","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withoutErrToSorryImp","doc":""},"Lean.Elab.Term.withoutErrToSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L435-L436","name":"Lean.Elab.Term.withoutErrToSorry","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withoutErrToSorry","doc":"Execute `x` without converting errors (i.e., exceptions) to `sorry` applications.\nRecall that when `errToSorry = true`, the method `elabTerm` catches exceptions and convert them into `sorry` applications.\n"},"Lean.Elab.Term.withoutAutoBoundImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1479-L1480","name":"Lean.Elab.Term.withoutAutoBoundImplicit","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withoutAutoBoundImplicit","doc":""},"Lean.Elab.Term.withSynthesizeLight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/SyntheticMVars.lean#L485-L486","name":"Lean.Elab.Term.withSynthesizeLight","docLink":"./Lean/Elab/SyntheticMVars.html#Lean.Elab.Term.withSynthesizeLight","doc":"Similar to `withSynthesize`, but sets `mayPostpone` to `true`, and do not use `synthesizeUsingDefault` "},"Lean.Elab.Term.withSynthesize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/SyntheticMVars.lean#L481-L482","name":"Lean.Elab.Term.withSynthesize","docLink":"./Lean/Elab/SyntheticMVars.html#Lean.Elab.Term.withSynthesize","doc":"Execute `k`, and synthesize pending synthetic metavariables created while executing `k` are solved.\nIf `mayPostpone == false`, then all of them must be synthesized.\nRemark: even if `mayPostpone == true`, the method still uses `synthesizeUsingDefault` "},"Lean.Elab.Term.withSavedContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1045-L1048","name":"Lean.Elab.Term.withSavedContext","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withSavedContext","doc":"Execute `x` with the context saved using `saveContext`.\n"},"Lean.Elab.Term.withMacroExpansion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L464-L466","name":"Lean.Elab.Term.withMacroExpansion","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withMacroExpansion","doc":"Elaborate `x` with `stx` on the macro stack "},"Lean.Elab.Term.withLevelNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L414-L417","name":"Lean.Elab.Term.withLevelNames","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withLevelNames","doc":"Execute `x` using `levelNames` as the universe level parameter names. See `getLevelNames`. "},"Lean.Elab.Term.withInfoContext'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1126-L1131","name":"Lean.Elab.Term.withInfoContext'","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withInfoContext'","doc":""},"Lean.Elab.Term.withDepElimPatterns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L734-L735","name":"Lean.Elab.Term.withDepElimPatterns","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.withDepElimPatterns","doc":""},"Lean.Elab.Term.withDeclName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L406-L407","name":"Lean.Elab.Term.withDeclName","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withDeclName","doc":"Execute `x` with `declName? := name`. See `getDeclName? "},"Lean.Elab.Term.withAuxDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L423-L426","name":"Lean.Elab.Term.withAuxDecl","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withAuxDecl","doc":"Declare an auxiliary local declaration `shortDeclName : type` for elaborating recursive declaration `declName`,\nupdate the mapping `auxDeclToFullName`, and then execute `k`.\n"},"Lean.Elab.Term.withAutoBoundImplicitForbiddenPred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1482-L1483","name":"Lean.Elab.Term.withAutoBoundImplicitForbiddenPred","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withAutoBoundImplicitForbiddenPred","doc":""},"Lean.Elab.Term.withAutoBoundImplicit.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1463-L1474","name":"Lean.Elab.Term.withAutoBoundImplicit.loop","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withAutoBoundImplicit.loop","doc":""},"Lean.Elab.Term.withAutoBoundImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1459-L1477","name":"Lean.Elab.Term.withAutoBoundImplicit","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.withAutoBoundImplicit","doc":"Enable auto-bound implicits, and execute `k` while catching auto bound implicit exceptions. When an exception is caught,\na new local declaration is created, registered, and `k` is tried to be executed again. "},"Lean.Elab.Term.universeConstraintsCheckpoint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1805-L1808","name":"Lean.Elab.Term.universeConstraintsCheckpoint","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.universeConstraintsCheckpoint","doc":"Execute `x` and then tries to solve pending universe constraints.\nNote that, stuck constraints will not be discarded.\n"},"Lean.Elab.Term.tryPostponeIfNoneOrMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1002-L1005","name":"Lean.Elab.Term.tryPostponeIfNoneOrMVar","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.tryPostponeIfNoneOrMVar","doc":"If `e? = some e`, then `tryPostponeIfMVar e`, otherwise it is just `tryPostpone`. "},"Lean.Elab.Term.tryPostponeIfMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L997-L999","name":"Lean.Elab.Term.tryPostponeIfMVar","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.tryPostponeIfMVar","doc":"If `mayPostpone == true` and `e`'s head is a metavariable, throw `Exception.postpone`. "},"Lean.Elab.Term.tryPostponeIfHasMVars?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1011-L1018","name":"Lean.Elab.Term.tryPostponeIfHasMVars?","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.tryPostponeIfHasMVars?","doc":"Throws `Exception.postpone`, if `expectedType?` contains unassigned metavariables.\nIt is a noop if `mayPostpone == false`.\n"},"Lean.Elab.Term.tryPostponeIfHasMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1024-L1027","name":"Lean.Elab.Term.tryPostponeIfHasMVars","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.tryPostponeIfHasMVars","doc":"Throws `Exception.postpone`, if `expectedType?` contains unassigned metavariables.\nIf `mayPostpone == false`, it throws error `msg`.\n"},"Lean.Elab.Term.tryPostpone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L988-L990","name":"Lean.Elab.Term.tryPostpone","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.tryPostpone","doc":"If `mayPostpone == true`, throw `Expection.postpone`. "},"Lean.Elab.Term.tryCoeThunk?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L774-L782","name":"Lean.Elab.Term.tryCoeThunk?","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.tryCoeThunk?","doc":"The coercion from `α` to `Thunk α` cannot be implemented using an instance because it would\neagerly evaluate `e`\n"},"Lean.Elab.Term.traceAtCmdPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L443-L444","name":"Lean.Elab.Term.traceAtCmdPos","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.traceAtCmdPos","doc":""},"Lean.Elab.Term.toParserDescr.processSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L143-L152","name":"Lean.Elab.Term.toParserDescr.processSeq","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processSeq","doc":"Sequence (aka NullNode) "},"Lean.Elab.Term.toParserDescr.processSepBy1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L217-L222","name":"Lean.Elab.Term.toParserDescr.processSepBy1","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processSepBy1","doc":""},"Lean.Elab.Term.toParserDescr.processSepBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L210-L215","name":"Lean.Elab.Term.toParserDescr.processSepBy","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processSepBy","doc":""},"Lean.Elab.Term.toParserDescr.processParserCategory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L158-L165","name":"Lean.Elab.Term.toParserDescr.processParserCategory","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processParserCategory","doc":""},"Lean.Elab.Term.toParserDescr.processNullaryOrCat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L187-L208","name":"Lean.Elab.Term.toParserDescr.processNullaryOrCat","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processNullaryOrCat","doc":""},"Lean.Elab.Term.toParserDescr.processNonReserved":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L244-L246","name":"Lean.Elab.Term.toParserDescr.processNonReserved","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processNonReserved","doc":""},"Lean.Elab.Term.toParserDescr.processAtom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L231-L242","name":"Lean.Elab.Term.toParserDescr.processAtom","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processAtom","doc":""},"Lean.Elab.Term.toParserDescr.processAlias":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L167-L185","name":"Lean.Elab.Term.toParserDescr.processAlias","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processAlias","doc":""},"Lean.Elab.Term.toParserDescr.process":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L114-L140","name":"Lean.Elab.Term.toParserDescr.process","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.process","doc":""},"Lean.Elab.Term.toParserDescr.isValidAtom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L224-L229","name":"Lean.Elab.Term.toParserDescr.isValidAtom","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.isValidAtom","doc":""},"Lean.Elab.Term.toParserDescr.ensureNoPrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L154-L156","name":"Lean.Elab.Term.toParserDescr.ensureNoPrec","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.ensureNoPrec","doc":""},"Lean.Elab.Term.toParserDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L108-L246","name":"Lean.Elab.Term.toParserDescr","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr","doc":"Given a `stx` of category `syntax`, return a `(newStx, lhsPrec?)`,\nwhere `newStx` is of category `term`. After elaboration, `newStx` should have type\n`TrailingParserDescr` if `lhsPrec?.isSome`, and `ParserDescr` otherwise. "},"Lean.Elab.Term.throwTypeMismatchError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L643-L662","name":"Lean.Elab.Term.throwTypeMismatchError","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.throwTypeMismatchError","doc":""},"Lean.Elab.Term.throwMVarError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L502-L506","name":"Lean.Elab.Term.throwMVarError","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.throwMVarError","doc":"Auxiliary method for reporting errors of the form \"... contains metavariables ...\".\nThis kind of error is thrown, for example, at `Match.lean` where elaboration\ncannot continue if there are metavariables in patterns.\nWe only want to log it if we haven't logged any error so far. "},"Lean.Elab.Term.throwInvalidNamedArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L33-L36","name":"Lean.Elab.Term.throwInvalidNamedArg","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.throwInvalidNamedArg","doc":""},"Lean.Elab.Term.throwErrorIfErrors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L439-L441","name":"Lean.Elab.Term.throwErrorIfErrors","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.throwErrorIfErrors","doc":"For testing `TermElabM` methods. The #eval command will sign the error. "},"Lean.Elab.Term.termElabAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L371-L371","name":"Lean.Elab.Term.termElabAttribute","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.termElabAttribute","doc":""},"Lean.Elab.Term.synthesizeSyntheticMVarsUsingDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/SyntheticMVars.lean#L461-L463","name":"Lean.Elab.Term.synthesizeSyntheticMVarsUsingDefault","docLink":"./Lean/Elab/SyntheticMVars.html#Lean.Elab.Term.synthesizeSyntheticMVarsUsingDefault","doc":""},"Lean.Elab.Term.synthesizeSyntheticMVarsNoPostponing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/SyntheticMVars.lean#L452-L453","name":"Lean.Elab.Term.synthesizeSyntheticMVarsNoPostponing","docLink":"./Lean/Elab/SyntheticMVars.html#Lean.Elab.Term.synthesizeSyntheticMVarsNoPostponing","doc":""},"Lean.Elab.Term.synthesizeSyntheticMVars.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/SyntheticMVars.lean#L415-L446","name":"Lean.Elab.Term.synthesizeSyntheticMVars.loop","docLink":"./Lean/Elab/SyntheticMVars.html#Lean.Elab.Term.synthesizeSyntheticMVars.loop","doc":""},"Lean.Elab.Term.synthesizeSyntheticMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/SyntheticMVars.lean#L414-L449","name":"Lean.Elab.Term.synthesizeSyntheticMVars","docLink":"./Lean/Elab/SyntheticMVars.html#Lean.Elab.Term.synthesizeSyntheticMVars","doc":"Try to process pending synthetic metavariables. If `mayPostpone == false`,\n    then `pendingMVars` is `[]` after executing this method.\n\n    It keeps executing `synthesizeSyntheticMVarsStep` while progress is being made.\n    If `mayPostpone == false`, then it applies default instances to `SyntheticMVarKind.typeClass` (if available)\n    metavariables that are still unresolved, and then tries to resolve metavariables\n    with `mayPostpone == false`. That is, we force them to produce error messages and/or commit to\n    a \"best option\". If, after that, we still haven't made progress, we report \"stuck\" errors.\n\n    Remark: we set `ignoreStuckTC := true` when elaborating `simp` arguments. Then,\n    pending TC problems become implicit parameters for the simp theorem.\n  "},"Lean.Elab.Term.synthesizeInstMVarCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L711-L755","name":"Lean.Elab.Term.synthesizeInstMVarCore","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.synthesizeInstMVarCore","doc":"Try to synthesize metavariable using type class resolution.\nThis method assumes the local context and local instances of `instMVar` coincide\nwith the current local context and local instances.\nReturn `true` if the instance was synthesized successfully, and `false` if\nthe instance contains unassigned metavariables that are blocking the type class\nresolution procedure. Throw an exception if resolution or assignment irrevocably fails.\n"},"Lean.Elab.Term.synthesizeCoeInstMVarCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L767-L768","name":"Lean.Elab.Term.synthesizeCoeInstMVarCore","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.synthesizeCoeInstMVarCore","doc":""},"Lean.Elab.Term.synthesizeAppInstMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L80-L84","name":"Lean.Elab.Term.synthesizeAppInstMVars","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.synthesizeAppInstMVars","doc":""},"Lean.Elab.Term.shouldExpandMatchAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BindersUtil.lean#L42-L44","name":"Lean.Elab.Term.shouldExpandMatchAlt","docLink":"./Lean/Elab/BindersUtil.html#Lean.Elab.Term.shouldExpandMatchAlt","doc":""},"Lean.Elab.Term.setLevelNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L410-L411","name":"Lean.Elab.Term.setLevelNames","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.setLevelNames","doc":"Update the universe level parameter names. "},"Lean.Elab.Term.setElabConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Config.lean#L56-L57","name":"Lean.Elab.Term.setElabConfig","docLink":"./Lean/Elab/Config.html#Lean.Elab.Term.setElabConfig","doc":"Set `isDefEq` configuration for the elaborator.\n  Note that we enable all approximations but `quasiPatternApprox`\n\n  In Lean3 and Lean 4, we used to use the quasi-pattern approximation during elaboration.\n  The example:\n  ```\n  def ex : StateT δ (StateT σ Id) σ :=\n  monadLift (get : StateT σ Id σ)\n  ```\n  demonstrates why it produces counterintuitive behavior.\n  We have the `Monad-lift` application:\n  ```\n  @monadLift ?m ?n ?c ?α (get : StateT σ id σ) : ?n ?α\n  ```\n  It produces the following unification problem when we process the expected type:\n  ```\n  ?n ?α =?= StateT δ (StateT σ id) σ\n  ==> (approximate using first-order unification)\n  ?n := StateT δ (StateT σ id)\n  ?α := σ\n  ```\n  Then, we need to solve:\n  ```\n  ?m ?α =?= StateT σ id σ\n  ==> instantiate metavars\n  ?m σ =?= StateT σ id σ\n  ==> (approximate since it is a quasi-pattern unification constraint)\n  ?m := fun σ => StateT σ id σ\n  ```\n  Note that the constraint is not a Milner pattern because σ is in\n  the local context of `?m`. We are ignoring the other possible solutions:\n  ```\n  ?m := fun σ' => StateT σ id σ\n  ?m := fun σ' => StateT σ' id σ\n  ?m := fun σ' => StateT σ id σ'\n  ```\n\n  We need the quasi-pattern approximation for elaborating recursor-like expressions (e.g., dependent `match with` expressions).\n\n  If we had use first-order unification, then we would have produced\n  the right answer: `?m := StateT σ id`\n\n  Haskell would work on this example since it always uses\n  first-order unification.\n"},"Lean.Elab.Term.saveState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L247-L248","name":"Lean.Elab.Term.saveState","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.saveState","doc":""},"Lean.Elab.Term.saveContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1032-L1040","name":"Lean.Elab.Term.saveContext","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.saveContext","doc":"Save relevant context for term elaboration postponement.\n"},"Lean.Elab.Term.runTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/SyntheticMVars.lean#L328-L358","name":"Lean.Elab.Term.runTactic","docLink":"./Lean/Elab/SyntheticMVars.html#Lean.Elab.Term.runTactic","doc":"Try to synthesize a term `val` using the tactic code `tacticCode`, and then assign `mvarId := val`.\n"},"Lean.Elab.Term.runPendingTacticsAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/SyntheticMVars.lean#L498-L504","name":"Lean.Elab.Term.runPendingTacticsAt","docLink":"./Lean/Elab/SyntheticMVars.html#Lean.Elab.Term.runPendingTacticsAt","doc":"Collect unassigned metavariables at `e` that have associated tactic blocks, and then execute them using `runTactic`.\nWe use this method at the `match .. with` elaborator when it cannot be postponed anymore, but it is still waiting\nthe result of a tactic block.\n"},"Lean.Elab.Term.resolveParserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L85-L101","name":"Lean.Elab.Term.resolveParserName","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.resolveParserName","doc":"Resolve the given parser name and return a list of candidates.\nEach candidate is a pair `(resolvedParserName, isDescr)`.\n`isDescr == true` if the type of `resolvedParserName` is a `ParserDescr`. "},"Lean.Elab.Term.resolveName.process":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1743-L1751","name":"Lean.Elab.Term.resolveName.process","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.resolveName.process","doc":""},"Lean.Elab.Term.resolveName'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1757-L1764","name":"Lean.Elab.Term.resolveName'","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.resolveName'","doc":"Similar to `resolveName`, but creates identifiers for the main part and each projection with position information derived from `ident`.\nExample: Assume resolveName `v.head.bla.boo` produces `(v.head, [\"bla\", \"boo\"])`, then this method produces\n`(v.head, id, [f₁, f₂])` where `id` is an identifier for `v.head`, and `f₁` and `f₂` are identifiers for fields `\"bla\"` and `\"boo\"`. "},"Lean.Elab.Term.resolveName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1728-L1751","name":"Lean.Elab.Term.resolveName","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.resolveName","doc":""},"Lean.Elab.Term.resolveLocalName.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1681-L1695","name":"Lean.Elab.Term.resolveLocalName.loop","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.resolveLocalName.loop","doc":""},"Lean.Elab.Term.resolveLocalName.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1652-L1657","name":"Lean.Elab.Term.resolveLocalName.go","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.resolveLocalName.go","doc":""},"Lean.Elab.Term.resolveLocalName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1568-L1696","name":"Lean.Elab.Term.resolveLocalName","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.resolveLocalName","doc":""},"Lean.Elab.Term.resolveId?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1766-L1778","name":"Lean.Elab.Term.resolveId?","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.resolveId?","doc":""},"Lean.Elab.Term.reportUnsolvedGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L31-L34","name":"Lean.Elab.Term.reportUnsolvedGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Term.reportUnsolvedGoals","doc":""},"Lean.Elab.Term.reportStuckSyntheticMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/SyntheticMVars.lean#L241-L256","name":"Lean.Elab.Term.reportStuckSyntheticMVar","docLink":"./Lean/Elab/SyntheticMVars.html#Lean.Elab.Term.reportStuckSyntheticMVar","doc":"We use this method to report typeclass (and coercion) resolution problems that are \"stuck\".\nThat is, there is nothing else to do, and we don't have enough information to synthesize them using TC resolution.\n"},"Lean.Elab.Term.reportMatcherResultErrors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L1012-L1022","name":"Lean.Elab.Term.reportMatcherResultErrors","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.reportMatcherResultErrors","doc":""},"Lean.Elab.Term.removeSaveInfoAnnotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1090-L1093","name":"Lean.Elab.Term.removeSaveInfoAnnotation","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.removeSaveInfoAnnotation","doc":""},"Lean.Elab.Term.registerSyntheticMVarWithCurrRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L474-L475","name":"Lean.Elab.Term.registerSyntheticMVarWithCurrRef","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.registerSyntheticMVarWithCurrRef","doc":""},"Lean.Elab.Term.registerSyntheticMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L471-L472","name":"Lean.Elab.Term.registerSyntheticMVar","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.registerSyntheticMVar","doc":"Add the given metavariable to the list of pending synthetic metavariables.\nThe method `synthesizeSyntheticMVars` is used to process the metavariables on this list. "},"Lean.Elab.Term.registerMVarErrorInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L477-L478","name":"Lean.Elab.Term.registerMVarErrorInfo","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.registerMVarErrorInfo","doc":""},"Lean.Elab.Term.registerMVarErrorImplicitArgInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L483-L484","name":"Lean.Elab.Term.registerMVarErrorImplicitArgInfo","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.registerMVarErrorImplicitArgInfo","doc":""},"Lean.Elab.Term.registerMVarErrorHoleInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L480-L481","name":"Lean.Elab.Term.registerMVarErrorHoleInfo","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.registerMVarErrorHoleInfo","doc":""},"Lean.Elab.Term.registerMVarErrorCustomInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L486-L487","name":"Lean.Elab.Term.registerMVarErrorCustomInfo","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.registerMVarErrorCustomInfo","doc":""},"Lean.Elab.Term.registerCustomErrorIfMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L492-L495","name":"Lean.Elab.Term.registerCustomErrorIfMVar","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.registerCustomErrorIfMVar","doc":""},"Lean.Elab.Term.quoteAutoTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L62-L77","name":"Lean.Elab.Term.quoteAutoTactic","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.quoteAutoTactic","doc":""},"Lean.Elab.Term.processDefDeriving":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L745-L763","name":"Lean.Elab.Term.processDefDeriving","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.processDefDeriving","doc":""},"Lean.Elab.Term.precheckMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L173-L181","name":"Lean.Elab.Term.precheckMatch","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.precheckMatch","doc":""},"Lean.Elab.Term.precheckFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L603-L612","name":"Lean.Elab.Term.precheckFun","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.precheckFun","doc":""},"Lean.Elab.Term.precheckArrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L258-L262","name":"Lean.Elab.Term.precheckArrow","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.precheckArrow","doc":""},"Lean.Elab.Term.ppGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L446-L447","name":"Lean.Elab.Term.ppGoal","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.ppGoal","doc":""},"Lean.Elab.Term.postponeElabTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1138-L1140","name":"Lean.Elab.Term.postponeElabTerm","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.postponeElabTerm","doc":"Postpone the elaboration of `stx`, return a metavariable that acts as a placeholder, and\nensures the info tree is updated and a hole id is introduced.\nWhen `stx` is elaborated, new info nodes are created and attached to the new hole id in the info tree.\n"},"Lean.Elab.Term.observing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L275-L290","name":"Lean.Elab.Term.observing","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.observing","doc":"Execute `x`, save resulting expression and new state.\nWe remove any `Info` created by `x`.\nThe info nodes are committed when we execute `applyResult`.\nWe use `observing` to implement overloaded notation and decls.\nWe want to save `Info` nodes for the chosen alternative.\n"},"Lean.Elab.Term.mkTypeMismatchError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L637-L641","name":"Lean.Elab.Term.mkTypeMismatchError","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkTypeMismatchError","doc":""},"Lean.Elab.Term.mkTermInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1109-L1114","name":"Lean.Elab.Term.mkTermInfo","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkTermInfo","doc":""},"Lean.Elab.Term.mkTermElabAttributeUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L365-L366","name":"Lean.Elab.Term.mkTermElabAttributeUnsafe","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkTermElabAttributeUnsafe","doc":""},"Lean.Elab.Term.mkTermElabAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L369-L369","name":"Lean.Elab.Term.mkTermElabAttribute","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkTermElabAttribute","doc":""},"Lean.Elab.Term.mkSaveInfoAnnotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1081-L1085","name":"Lean.Elab.Term.mkSaveInfoAnnotation","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkSaveInfoAnnotation","doc":"Create an auxiliary annotation to make sure we create a `Info` even if `e` is a metavariable.\n  See `mkTermInfo`.\n\n  We use this functions because some elaboration functions elaborate subterms that may not be immediately\n  part of the resulting term. Example:\n  ```\n  let_mvar% ?m := b; wait_if_type_mvar% ?m; body\n  ```\n  If the type of `b` is not known, then `wait_if_type_mvar% ?m; body` is postponed and just return a fresh\n  metavariable `?n`. The elaborator for\n  ```\n  let_mvar% ?m := b; wait_if_type_mvar% ?m; body\n  ```\n  returns `mkSaveInfoAnnotation ?n` to make sure the info nodes created when elaborating `b` are \"saved\".\n  This is a bit hackish, but elaborators like `let_mvar%` are rare.\n"},"Lean.Elab.Term.mkPairs.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L172-L179","name":"Lean.Elab.Term.mkPairs.loop","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.mkPairs.loop","doc":""},"Lean.Elab.Term.mkPairs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L171-L180","name":"Lean.Elab.Term.mkPairs","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.mkPairs","doc":"Return syntax `Prod.mk elems[0] (Prod.mk elems[1] ... (Prod.mk elems[elems.size - 2] elems[elems.size - 1])))` "},"Lean.Elab.Term.mkNoImplicitLambdaAnnotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1251-L1255","name":"Lean.Elab.Term.mkNoImplicitLambdaAnnotation","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkNoImplicitLambdaAnnotation","doc":""},"Lean.Elab.Term.mkMatcher":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L1004-L1005","name":"Lean.Elab.Term.mkMatcher","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.mkMatcher","doc":""},"Lean.Elab.Term.mkLetIdDeclView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L689-L696","name":"Lean.Elab.Term.mkLetIdDeclView","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.mkLetIdDeclView","doc":""},"Lean.Elab.Term.mkInstMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1403-L1408","name":"Lean.Elab.Term.mkInstMVar","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkInstMVar","doc":"Create a new metavariable with the given type, and try to synthesize it.\nIt type class resolution cannot be executed (e.g., it is stuck because of metavariables in `type`),\nregister metavariable as a pending one.\n"},"Lean.Elab.Term.mkFreshIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L612-L613","name":"Lean.Elab.Term.mkFreshIdent","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkFreshIdent","doc":"Auxiliary method for creating a `Syntax.ident` containing\na fresh name. This method is intended for creating fresh binder names.\nIt is just a thin layer on top of `mkFreshUserName`. "},"Lean.Elab.Term.mkFreshBinderName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L605-L606","name":"Lean.Elab.Term.mkFreshBinderName","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkFreshBinderName","doc":"Auxiliary method for creating fresh binder names.\nDo not confuse with the method for creating fresh free/meta variable ids. "},"Lean.Elab.Term.mkExplicitBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L580-L581","name":"Lean.Elab.Term.mkExplicitBinder","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkExplicitBinder","doc":"Creates syntax for `(` <ident> `:` <type> `)` "},"Lean.Elab.Term.mkConst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1712-L1719","name":"Lean.Elab.Term.mkConst","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkConst","doc":"Create an `Expr.const` using the given name and explicit levels.\nRemark: fresh universe metavariables are created if the constant has more universe\nparameters than `explicitLevels`. "},"Lean.Elab.Term.mkCoe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L784-L803","name":"Lean.Elab.Term.mkCoe","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkCoe","doc":""},"Lean.Elab.Term.mkCalcTrans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Calc.lean#L27-L44","name":"Lean.Elab.Term.mkCalcTrans","docLink":"./Lean/Elab/Calc.html#Lean.Elab.Term.mkCalcTrans","doc":""},"Lean.Elab.Term.mkAuxName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1553-L1556","name":"Lean.Elab.Term.mkAuxName","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.mkAuxName","doc":""},"Lean.Elab.Term.maxCoeSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L762-L762","name":"Lean.Elab.Term.maxCoeSize","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.maxCoeSize","doc":""},"Lean.Elab.Term.match.ignoreUnusedAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L1007-L1007","name":"Lean.Elab.Term.match.ignoreUnusedAlts","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.match.ignoreUnusedAlts","doc":""},"Lean.Elab.Term.logUnassignedUsingErrorInfos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L541-L565","name":"Lean.Elab.Term.logUnassignedUsingErrorInfos","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.logUnassignedUsingErrorInfos","doc":"Try to log errors for the unassigned metavariables `pendingMVarIds`.\n\n  Return `true` if there were \"unfilled holes\", and we should \"abort\" declaration.\n  TODO: try to fill \"all\" holes using synthetic \"sorry's\"\n\n  Remark: We only log the \"unfilled holes\" as new errors if no error has been logged so far. "},"Lean.Elab.Term.liftLevelM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L451-L458","name":"Lean.Elab.Term.liftLevelM","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.liftLevelM","doc":""},"Lean.Elab.Term.levelMVarToParam'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L596-L600","name":"Lean.Elab.Term.levelMVarToParam'","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.levelMVarToParam'","doc":"Variant of `levelMVarToParam` where `nextParamIdx` is stored in a state monad. "},"Lean.Elab.Term.levelMVarToParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L589-L593","name":"Lean.Elab.Term.levelMVarToParam","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.levelMVarToParam","doc":"Convert unassigned universe level metavariables into parameters.\n  The new parameter names are of the form `u_i` where `i >= nextParamIdx`.\n  The method returns the updated expression and new `nextParamIdx`.\n\n  Remark: we make sure the generated parameter names do not clash with the universe at `ctx.levelNames`. "},"Lean.Elab.Term.isTypeApp?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L821-L825","name":"Lean.Elab.Term.isTypeApp?","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.isTypeApp?","doc":"Return `some (m, α)` if `type` can be reduced to an application of the form `m α` using `[reducible]` transparency. "},"Lean.Elab.Term.isTacticOrPostponedHole?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1100-L1107","name":"Lean.Elab.Term.isTacticOrPostponedHole?","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.isTacticOrPostponedHole?","doc":"Return `some mvarId` if `e` corresponds to a hole that is going to be filled \"later\" by executing a tactic or resuming elaboration.\n\n  We do not save `ofTermInfo` for this kind of node in the `InfoTree`.\n"},"Lean.Elab.Term.isSaveInfoAnnotation?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1087-L1088","name":"Lean.Elab.Term.isSaveInfoAnnotation?","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.isSaveInfoAnnotation?","doc":""},"Lean.Elab.Term.isMonadApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L840-L842","name":"Lean.Elab.Term.isMonadApp","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.isMonadApp","doc":"Return `true` if `type` is of the form `m α` where `m` is a `Monad`.\nNote that we reduce `type` using transparency `[reducible]`.\n"},"Lean.Elab.Term.isMVarApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L993-L994","name":"Lean.Elab.Term.isMVarApp","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.isMVarApp","doc":"Return `true` if `e` reduces (by unfolding only `[reducible]` declarations) to `?m ...` "},"Lean.Elab.Term.isLocalIdent?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1699-L1706","name":"Lean.Elab.Term.isLocalIdent?","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.isLocalIdent?","doc":"Return true iff `stx` is a `Syntax.ident`, and it is a local variable. "},"Lean.Elab.Term.isLetRecAuxMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1562-L1566","name":"Lean.Elab.Term.isLetRecAuxMVar","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.isLetRecAuxMVar","doc":"Return true if mvarId is an auxiliary metavariable created for compiling `let rec` or it\nis delayed assigned to one. "},"Lean.Elab.Term.isAtomicDiscr?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L52-L56","name":"Lean.Elab.Term.isAtomicDiscr?","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.isAtomicDiscr?","doc":"We treat `@x` as atomic to avoid unnecessary extra local declarations from being\n   inserted into the local context. Recall that `expandMatchAltsIntoMatch` uses `@` modifier.\n   Thus this is kind of discriminant is quite common.\n\n   Remark: if the discriminat is `Systax.missing`, we abort the elaboration of the `match`-expression.\n   This can happen due to error recovery. Example\n   ```\n   example : (p ∨ p) → p := fun h => match\n   ```\n   If we don't abort, the elaborator loops because we will keep trying to expand\n   ```\n   match\n   ```\n   into\n   ```\n   let d := <Syntax.missing>; match\n   ```\n   Recall that `Syntax.setArg stx i arg` is a no-op when `i` is out-of-bounds. "},"Lean.Elab.Term.instToStringSyntheticMVarKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L56-L61","name":"Lean.Elab.Term.instToStringSyntheticMVarKind","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instToStringSyntheticMVarKind","doc":""},"Lean.Elab.Term.instToStringNamedArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L30-L31","name":"Lean.Elab.Term.instToStringNamedArg","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.instToStringNamedArg","doc":""},"Lean.Elab.Term.instToStringMVarErrorKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L81-L85","name":"Lean.Elab.Term.instToStringMVarErrorKind","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instToStringMVarErrorKind","doc":""},"Lean.Elab.Term.instToStringLVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L393-L396","name":"Lean.Elab.Term.instToStringLVal","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instToStringLVal","doc":""},"Lean.Elab.Term.instToStringArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L25-L28","name":"Lean.Elab.Term.instToStringArg","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.instToStringArg","doc":""},"Lean.Elab.Term.instMonadTermElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L232-L232","name":"Lean.Elab.Term.instMonadTermElabM","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instMonadTermElabM","doc":""},"Lean.Elab.Term.instMonadMacroAdapterTermElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1200-L1203","name":"Lean.Elab.Term.instMonadMacroAdapterTermElabM","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instMonadMacroAdapterTermElabM","doc":""},"Lean.Elab.Term.instMonadBacktrackSavedStateTermElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L259-L261","name":"Lean.Elab.Term.instMonadBacktrackSavedStateTermElabM","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instMonadBacktrackSavedStateTermElabM","doc":""},"Lean.Elab.Term.instMetaEvalTermElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1794-L1799","name":"Lean.Elab.Term.instMetaEvalTermElabM","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instMetaEvalTermElabM","doc":""},"Lean.Elab.Term.instInhabitedTermElabResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L265-L266","name":"Lean.Elab.Term.instInhabitedTermElabResult","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instInhabitedTermElabResult","doc":""},"Lean.Elab.Term.instInhabitedTermElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L236-L237","name":"Lean.Elab.Term.instInhabitedTermElabM","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instInhabitedTermElabM","doc":""},"Lean.Elab.Term.instInhabitedSyntheticMVarKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L54-L54","name":"Lean.Elab.Term.instInhabitedSyntheticMVarKind","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instInhabitedSyntheticMVarKind","doc":""},"Lean.Elab.Term.instInhabitedSyntheticMVarDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L66-L66","name":"Lean.Elab.Term.instInhabitedSyntheticMVarDecl","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instInhabitedSyntheticMVarDecl","doc":""},"Lean.Elab.Term.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L123-L123","name":"Lean.Elab.Term.instInhabitedState","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instInhabitedState","doc":""},"Lean.Elab.Term.instInhabitedSavedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L245-L245","name":"Lean.Elab.Term.instInhabitedSavedState","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instInhabitedSavedState","doc":""},"Lean.Elab.Term.instInhabitedNamedArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Arg.lean#L23-L23","name":"Lean.Elab.Term.instInhabitedNamedArg","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.instInhabitedNamedArg","doc":""},"Lean.Elab.Term.instInhabitedMatchAltView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MatchAltView.lean#L23-L23","name":"Lean.Elab.Term.instInhabitedMatchAltView","docLink":"./Lean/Elab/MatchAltView.html#Lean.Elab.Term.instInhabitedMatchAltView","doc":""},"Lean.Elab.Term.instInhabitedMVarErrorKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L79-L79","name":"Lean.Elab.Term.instInhabitedMVarErrorKind","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instInhabitedMVarErrorKind","doc":""},"Lean.Elab.Term.instInhabitedMVarErrorInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L95-L95","name":"Lean.Elab.Term.instInhabitedMVarErrorInfo","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instInhabitedMVarErrorInfo","doc":""},"Lean.Elab.Term.instInhabitedLetRecToLift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L112-L112","name":"Lean.Elab.Term.instInhabitedLetRecToLift","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instInhabitedLetRecToLift","doc":""},"Lean.Elab.Term.instInhabitedDiscr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L74-L74","name":"Lean.Elab.Term.instInhabitedDiscr","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.instInhabitedDiscr","doc":""},"Lean.Elab.Term.instInhabitedArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Arg.lean#L16-L16","name":"Lean.Elab.Term.instInhabitedArg","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.instInhabitedArg","doc":""},"Lean.Elab.Term.instAddErrorMessageContextTermElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L324-L330","name":"Lean.Elab.Term.instAddErrorMessageContextTermElabM","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.instAddErrorMessageContextTermElabM","doc":""},"Lean.Elab.Term.hasNoImplicitLambdaAnnotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1248-L1249","name":"Lean.Elab.Term.hasNoImplicitLambdaAnnotation","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.hasNoImplicitLambdaAnnotation","doc":""},"Lean.Elab.Term.hasElabWithoutExpectedType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L22-L23","name":"Lean.Elab.Term.hasElabWithoutExpectedType","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.hasElabWithoutExpectedType","doc":""},"Lean.Elab.Term.getSyntheticMVarDecl?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1061-L1062","name":"Lean.Elab.Term.getSyntheticMVarDecl?","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.getSyntheticMVarDecl?","doc":""},"Lean.Elab.Term.getPatternsVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L348-L353","name":"Lean.Elab.Term.getPatternsVars","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternsVars","doc":"Return the pattern variables occurring in the given patterns.\nThis method is used in the `match` and `do` notation elaborators\n"},"Lean.Elab.Term.getPatternVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L339-L342","name":"Lean.Elab.Term.getPatternVars","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternVars","doc":"Return the pattern variables in the given pattern.\nRemark: this method is not used by the main `match` elaborator, but in the precheck hook and other macros (e.g., at `Do.lean`).\n"},"Lean.Elab.Term.getPatternVarNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L355-L356","name":"Lean.Elab.Term.getPatternVarNames","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.getPatternVarNames","doc":""},"Lean.Elab.Term.getMatchAltsNumPatterns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BindersUtil.lean#L25-L28","name":"Lean.Elab.Term.getMatchAltsNumPatterns","docLink":"./Lean/Elab/BindersUtil.html#Lean.Elab.Term.getMatchAltsNumPatterns","doc":"Helper function for `expandEqnsIntoMatch` "},"Lean.Elab.Term.getMVarErrorInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L489-L490","name":"Lean.Elab.Term.getMVarErrorInfo?","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.getMVarErrorInfo?","doc":""},"Lean.Elab.Term.getMVarDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L403-L403","name":"Lean.Elab.Term.getMVarDecl","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.getMVarDecl","doc":"Return the declaration of the given metavariable "},"Lean.Elab.Term.getLevelNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L312-L313","name":"Lean.Elab.Term.getLevelNames","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.getLevelNames","doc":"Return the universe level names explicitly provided by the user.\n"},"Lean.Elab.Term.getLetRecsToLift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L401-L401","name":"Lean.Elab.Term.getLetRecsToLift","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.getLetRecsToLift","doc":"Return the list of nested `let rec` declarations that need to be lifted. "},"Lean.Elab.Term.getFVarLocalDecl!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L319-L322","name":"Lean.Elab.Term.getFVarLocalDecl!","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.getFVarLocalDecl!","doc":"Given a free variable `fvar`, return its declaration.\nThis function panics if `fvar` is not a free variable.\n"},"Lean.Elab.Term.getDeclName?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L399-L399","name":"Lean.Elab.Term.getDeclName?","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.getDeclName?","doc":"Return the name of the declaration being elaborated if available. "},"Lean.Elab.Term.getCalcRelation?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Calc.lean#L15-L19","name":"Lean.Elab.Term.getCalcRelation?","docLink":"./Lean/Elab/Calc.html#Lean.Elab.Term.getCalcRelation?","doc":"Decompose `e` into `(r, a, b)`.\n\n  Remark: it assumes the last two arguments are explicit. "},"Lean.Elab.Term.exprToSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1825-L1830","name":"Lean.Elab.Term.exprToSyntax","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.exprToSyntax","doc":"Helper function for \"embedding\" an `Expr` in `Syntax`.\nIt creates a named hole `?m` and immediately assigns `e` to it.\nExamples:\n```lean\nlet e := mkConst ``Nat.zero\n`(Nat.succ $(← exprToSyntax e))\n```\n"},"Lean.Elab.Term.expandWhereDeclsOpt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L454-L458","name":"Lean.Elab.Term.expandWhereDeclsOpt","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandWhereDeclsOpt","doc":""},"Lean.Elab.Term.expandWhereDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L449-L452","name":"Lean.Elab.Term.expandWhereDecls","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandWhereDecls","doc":""},"Lean.Elab.Term.expandUnreachable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L145-L146","name":"Lean.Elab.Term.expandUnreachable","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.expandUnreachable","doc":"A shorthand for `panic! \"unreachable code has been reached\"`. "},"Lean.Elab.Term.expandTermUnless":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1678-L1678","name":"Lean.Elab.Term.expandTermUnless","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.expandTermUnless","doc":""},"Lean.Elab.Term.expandTermTry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1675-L1675","name":"Lean.Elab.Term.expandTermTry","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.expandTermTry","doc":""},"Lean.Elab.Term.expandTermReturn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1681-L1681","name":"Lean.Elab.Term.expandTermReturn","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.expandTermReturn","doc":""},"Lean.Elab.Term.expandTermFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1672-L1672","name":"Lean.Elab.Term.expandTermFor","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.expandTermFor","doc":""},"Lean.Elab.Term.expandSuffices":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L92-L95","name":"Lean.Elab.Term.expandSuffices","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.expandSuffices","doc":""},"Lean.Elab.Term.expandSimpleBinderWithType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L237-L241","name":"Lean.Elab.Term.expandSimpleBinderWithType","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandSimpleBinderWithType","doc":"If `binder` is a `_` or an identifier, return a `bracketedBinder` using `type` otherwise throw an exception. "},"Lean.Elab.Term.expandShow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L76-L80","name":"Lean.Elab.Term.expandShow","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.expandShow","doc":""},"Lean.Elab.Term.expandParen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L257-L272","name":"Lean.Elab.Term.expandParen","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.expandParen","doc":"You can use parentheses for\n- Grouping expressions, e.g., `a * (b + c)`.\n- Creating tuples, e.g., `(a, b, c)` is notation for `Prod.mk a (Prod.mk b c)`.\n- Performing type ascription, e.g., `(0 : Int)` instructs Lean to process `0` as a value of type `Int`.\n- Creating `Unit.unit`, `()` is just a shorthand for `Unit.unit`.\n- Creating simple functions when combined with `·`. Here are some examples:\n  - `(· + 1)` is shorthand for `fun x => x + 1`\n  - `(· + ·)` is shorthand for `fun x y => x + y`\n  - `(f · a b)` is shorthand for `fun x => f x a b`\n  - `(h (· + 1) ·)` is shorthand for `fun x => h (fun y => y + 1) x`\n"},"Lean.Elab.Term.expandOptType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BindersUtil.lean#L16-L20","name":"Lean.Elab.Term.expandOptType","docLink":"./Lean/Elab/BindersUtil.html#Lean.Elab.Term.expandOptType","doc":"Recall that\n```\ndef typeSpec := leading_parser \" : \" >> termParser\ndef optType : Parser := optional typeSpec\n```\n"},"Lean.Elab.Term.expandOptPrecedence":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L14-L18","name":"Lean.Elab.Term.expandOptPrecedence","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.expandOptPrecedence","doc":"Expand `optional «precedence»` where\n«precedence» := leading_parser \" : \" >> precedenceParser "},"Lean.Elab.Term.expandMatchAltsWhereDecls.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L569-L581","name":"Lean.Elab.Term.expandMatchAltsWhereDecls.loop","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandMatchAltsWhereDecls.loop","doc":""},"Lean.Elab.Term.expandMatchAltsWhereDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L566-L582","name":"Lean.Elab.Term.expandMatchAltsWhereDecls","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandMatchAltsWhereDecls","doc":"Similar to `expandMatchAltsIntoMatch`, but supports an optional `where` clause.\n\n  Expand `matchAltsWhereDecls` into `let rec` + `match`-expression.\n  Example\n  ```\n  | 0, true => ... f 0 ...\n  | i, _    => ... f i + g i ...\n  where\n    f x := g x + 1\n\n    g : Nat → Nat\n      | 0   => 1\n      | x+1 => f x\n  ```\n  expands into\n  ```\n  fux x_1 x_2 =>\n    let rec\n      f x := g x + 1,\n      g : Nat → Nat\n        | 0   => 1\n        | x+1 => f x\n    match x_1, x_2 with\n    | 0, true => ... f 0 ...\n    | i, _    => ... f i + g i ...\n  ```\n"},"Lean.Elab.Term.expandMatchAltsIntoMatchTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L535-L536","name":"Lean.Elab.Term.expandMatchAltsIntoMatchTactic","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandMatchAltsIntoMatchTactic","doc":""},"Lean.Elab.Term.expandMatchAltsIntoMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L532-L533","name":"Lean.Elab.Term.expandMatchAltsIntoMatch","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandMatchAltsIntoMatch","doc":"Expand `matchAlts` syntax into a full `match`-expression.\n  Example:\n  ```\n  | 0, true => alt_1\n  | i, _    => alt_2\n  ```\n  expands into (for tactic == false)\n  ```\n  fun x_1 x_2 =>\n  match @x_1, @x_2 with\n  | 0, true => alt_1\n  | i, _    => alt_2\n  ```\n  and (for tactic == true)\n  ```\n  intro x_1; intro x_2;\n  match @x_1, @x_2 with\n  | 0, true => alt_1\n  | i, _    => alt_2\n  ```\n\n  If `useExplicit = true`, we add a `@` before `fun` to disable implicit lambdas. We disable them when processing `let` and `let rec` declarations\n  to make sure the behavior is consistent with top-level declarations where we can write\n  ```\n  def f : {α : Type} → α → α\n    | _, a => a\n  ```\n  We use `useExplicit = false` when we are elaborating the `fun | ... => ... | ...` notation. See issue #1132.\n  If `@fun` is used with this notation, the we set `useExplicit = true`.\n  We also use `useExplicit = false` when processing `instance ... where` notation declarations. The motivation is to have compact declarations such as\n  ```\n  instance [Alternative m] : MonadLiftT Option m where\n  monadLift -- We don't want to provide the implicit arguments of `monadLift` here. One should use `monadLift := @fun ...` if they want to provide them.\n    | some a => pure a\n    | none => failure\n  ```\n\n  Remark: we add `@` at discriminants to make sure we don't consume implicit arguments, and to make the behavior consistent with `fun`.\n  Example:\n  ```\n  inductive T : Type 1 :=\n  | mkT : (forall {a : Type}, a -> a) -> T\n\n  def makeT (f : forall {a : Type}, a -> a) : T :=\n    mkT f\n\n  def makeT' : (forall {a : Type}, a -> a) -> T\n  | f => mkT f\n  ```\n  The two definitions should be elaborated without errors and be equivalent.\n "},"Lean.Elab.Term.expandMatchAlts?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BindersUtil.lean#L46-L54","name":"Lean.Elab.Term.expandMatchAlts?","docLink":"./Lean/Elab/BindersUtil.html#Lean.Elab.Term.expandMatchAlts?","doc":""},"Lean.Elab.Term.expandMatchAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BindersUtil.lean#L33-L40","name":"Lean.Elab.Term.expandMatchAlt","docLink":"./Lean/Elab/BindersUtil.html#Lean.Elab.Term.expandMatchAlt","doc":"Expand a match alternative such as `| 0 | 1 => rhs` to an array containing `| 0 => rhs` and `| 1 => rhs`.\n"},"Lean.Elab.Term.expandMacrosInPatterns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L146-L149","name":"Lean.Elab.Term.expandMacrosInPatterns","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.expandMacrosInPatterns","doc":""},"Lean.Elab.Term.expandLetEqnsDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L698-L702","name":"Lean.Elab.Term.expandLetEqnsDecl","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandLetEqnsDecl","doc":""},"Lean.Elab.Term.expandHave":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L82-L90","name":"Lean.Elab.Term.expandHave","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.expandHave","doc":""},"Lean.Elab.Term.expandFunBinders.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L328-L376","name":"Lean.Elab.Term.expandFunBinders.loop","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandFunBinders.loop","doc":""},"Lean.Elab.Term.expandFunBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L327-L377","name":"Lean.Elab.Term.expandFunBinders","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandFunBinders","doc":"Auxiliary function for expanding `fun` notation binders. Recall that `fun` parser is defined as\n  ```\n  def funBinder : Parser := implicitBinder <|> instBinder <|> termParser maxPrec\n  leading_parser unicodeSymbol \"λ\" \"fun\" >> many1 funBinder >> \"=>\" >> termParser\n  ```\n  to allow notation such as `fun (a, b) => a + b`, where `(a, b)` should be treated as a pattern.\n  The result is a pair `(explicitBinders, newBody)`, where `explicitBinders` is syntax of the form\n  ```\n  `(` ident `:` term `)`\n  ```\n  which can be elaborated using `elabBinders`, and `newBody` is the updated `body` syntax.\n  We update the `body` syntax when expanding the pattern notation.\n  Example: `fun (a, b) => a + b` expands into `fun _a_1 => match _a_1 with | (a, b) => a + b`.\n  See local function `processAsPattern` at `expandFunBindersAux`.\n\n  The resulting `Bool` is true if a pattern was found. We use it \"mark\" a macro expansion. "},"Lean.Elab.Term.expandFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L584-L595","name":"Lean.Elab.Term.expandFun","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandFun","doc":""},"Lean.Elab.Term.expandForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L243-L247","name":"Lean.Elab.Term.expandForall","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandForall","doc":""},"Lean.Elab.Term.expandExplicitFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L597-L600","name":"Lean.Elab.Term.expandExplicitFun","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.expandExplicitFun","doc":""},"Lean.Elab.Term.expandDeclId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1810-L1814","name":"Lean.Elab.Term.expandDeclId","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.expandDeclId","doc":""},"Lean.Elab.Term.expandDbgTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L160-L163","name":"Lean.Elab.Term.expandDbgTrace","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.expandDbgTrace","doc":"`dbg_trace e; body` evaluates to `body` and prints `e` (which can be an\ninterpolated string literal) to stderr. It should only be used for debugging. "},"Lean.Elab.Term.expandCDot?.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L207-L217","name":"Lean.Elab.Term.expandCDot?.go","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.expandCDot?.go","doc":"Auxiliary function for expanding the `·` notation.\nThe extra state `Array Syntax` contains the new binder names.\nIf `stx` is a `·`, we create a fresh identifier, store in the\nextra state, and return it. Otherwise, we just return `stx`. "},"Lean.Elab.Term.expandCDot?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L195-L217","name":"Lean.Elab.Term.expandCDot?","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.expandCDot?","doc":"Return `some` if succeeded expanding `·` notation occurring in\nthe given syntax. Otherwise, return `none`.\nExamples:\n- `· + 1` => `fun _a_1 => _a_1 + 1`\n- `f · · b` => `fun _a_1 _a_2 => f _a_1 _a_2 b` "},"Lean.Elab.Term.expandAssert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L149-L155","name":"Lean.Elab.Term.expandAssert","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.expandAssert","doc":"`assert! cond` panics if `cond` evaluates to `false`. "},"Lean.Elab.Term.expandArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Arg.lean#L33-L52","name":"Lean.Elab.Term.expandArgs","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.expandArgs","doc":""},"Lean.Elab.Term.expandApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Arg.lean#L54-L56","name":"Lean.Elab.Term.expandApp","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.expandApp","doc":""},"Lean.Elab.Term.exceptionToSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L982-L985","name":"Lean.Elab.Term.exceptionToSorry","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.exceptionToSorry","doc":"Log the given exception, and create an synthetic sorry for representing the failed\nelaboration step with exception `ex`.\n"},"Lean.Elab.Term.evalTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Eval.lean#L12-L17","name":"Lean.Elab.Term.evalTerm","docLink":"./Lean/Elab/Eval.html#Lean.Elab.Term.evalTerm","doc":""},"Lean.Elab.Term.eraseNamedArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L91-L92","name":"Lean.Elab.Term.eraseNamedArg","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.eraseNamedArg","doc":"Erase entry for `binderName` from `namedArgs`. "},"Lean.Elab.Term.eraseAuxDiscr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L766-L773","name":"Lean.Elab.Term.eraseAuxDiscr","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.eraseAuxDiscr","doc":"Remove auxiliary match discriminant let-declarations. "},"Lean.Elab.Term.ensureUnaryOutput":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L46-L51","name":"Lean.Elab.Term.ensureUnaryOutput","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ensureUnaryOutput","doc":""},"Lean.Elab.Term.ensureType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1439-L1448","name":"Lean.Elab.Term.ensureType","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.ensureType","doc":"Make sure `e` is a type by inferring its type and making sure it is a `Expr.sort`\nor is unifiable with `Expr.sort`, or can be coerced into one. "},"Lean.Elab.Term.ensureNoUnassignedMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L568-L571","name":"Lean.Elab.Term.ensureNoUnassignedMVars","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.ensureNoUnassignedMVars","doc":"Ensure metavariables registered using `registerMVarErrorInfos` (and used in the given declaration) have been assigned. "},"Lean.Elab.Term.ensureHasTypeAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L948-L956","name":"Lean.Elab.Term.ensureHasTypeAux","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.ensureHasTypeAux","doc":"If `expectedType?` is `some t`, then ensure `t` and `eType` are definitionally equal.\n  If they are not, then try coercions.\n\n  Argument `f?` is used only for generating error messages. "},"Lean.Elab.Term.ensureHasType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L961-L966","name":"Lean.Elab.Term.ensureHasType","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.ensureHasType","doc":"If `expectedType?` is `some t`, then ensure `t` and type of `e` are definitionally equal.\nIf they are not, then try coercions. "},"Lean.Elab.Term.elabWithoutExpectedTypeAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L19-L19","name":"Lean.Elab.Term.elabWithoutExpectedTypeAttr","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabWithoutExpectedTypeAttr","doc":""},"Lean.Elab.Term.elabWithDeclName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L235-L239","name":"Lean.Elab.Term.elabWithDeclName","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabWithDeclName","doc":"* `with_decl_name% id e` elaborates `e` in a context while changing the effective\n  declaration name to `id`.\n* `with_decl_name% ? id e` does the same, but resolves `id` as a new definition name\n  (appending the current namespaces).\n"},"Lean.Elab.Term.elabWithAnnotateTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L302-L306","name":"Lean.Elab.Term.elabWithAnnotateTerm","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabWithAnnotateTerm","doc":""},"Lean.Elab.Term.elabWaitIfTypeMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L122-L127","name":"Lean.Elab.Term.elabWaitIfTypeMVar","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabWaitIfTypeMVar","doc":""},"Lean.Elab.Term.elabWaitIfTypeContainsMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L129-L135","name":"Lean.Elab.Term.elabWaitIfTypeContainsMVar","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabWaitIfTypeContainsMVar","doc":""},"Lean.Elab.Term.elabWaitIfContainsMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L137-L143","name":"Lean.Elab.Term.elabWaitIfContainsMVar","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabWaitIfContainsMVar","doc":""},"Lean.Elab.Term.elabTypeStx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L27-L28","name":"Lean.Elab.Term.elabTypeStx","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabTypeStx","doc":"A type universe. `Type ≡ Type 0`, `Type u ≡ Sort (u + 1)`. "},"Lean.Elab.Term.elabTypeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L241-L242","name":"Lean.Elab.Term.elabTypeOf","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabTypeOf","doc":""},"Lean.Elab.Term.elabType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1451-L1454","name":"Lean.Elab.Term.elabType","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.elabType","doc":"Elaborate `stx` and ensure result is a type. "},"Lean.Elab.Term.elabTrailingParserMacro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L120-L124","name":"Lean.Elab.Term.elabTrailingParserMacro","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabTrailingParserMacro","doc":""},"Lean.Elab.Term.elabTermEnsuringType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1373-L1375","name":"Lean.Elab.Term.elabTermEnsuringType","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.elabTermEnsuringType","doc":""},"Lean.Elab.Term.elabTermAndSynthesize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/SyntheticMVars.lean#L489-L491","name":"Lean.Elab.Term.elabTermAndSynthesize","docLink":"./Lean/Elab/SyntheticMVars.html#Lean.Elab.Term.elabTermAndSynthesize","doc":"Elaborate `stx`, and make sure all pending synthetic metavariables created while elaborating `stx` are solved. "},"Lean.Elab.Term.elabTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1370-L1371","name":"Lean.Elab.Term.elabTerm","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.elabTerm","doc":"Main function for elaborating terms.\n  It extracts the elaboration methods from the environment using the node kind.\n  Recall that the environment has a mapping from `SyntaxNodeKind` to `TermElab` methods.\n  It creates a fresh macro scope for executing the elaboration method.\n  All unlogged trace messages produced by the elaboration method are logged using\n  the position information at `stx`. If the elaboration method throws an `Exception.error` and `errToSorry == true`,\n  the error is logged and a synthetic sorry expression is returned.\n  If the elaboration throws `Exception.postpone` and `catchExPostpone == true`,\n  a new synthetic metavariable of kind `SyntheticMVarKind.postponed` is created, registered,\n  and returned.\n  The option `catchExPostpone == false` is used to implement `resumeElabTerm`\n  to prevent the creation of another synthetic metavariable when resuming the elaboration.\n\n  If `implicitLambda == true`, then disable implicit lambdas feature for the given syntax, but not for its subterms.\n  We use this flag to implement, for example, the `@` modifier. If `Context.implicitLambda == false`, then this parameter has no effect.\n  "},"Lean.Elab.Term.elabSyntheticHole":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L65-L101","name":"Lean.Elab.Term.elabSyntheticHole","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabSyntheticHole","doc":""},"Lean.Elab.Term.elabSubst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L307-L372","name":"Lean.Elab.Term.elabSubst","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabSubst","doc":"`h ▸ e` is a macro built on top of `Eq.rec` and `Eq.symm` definitions.\nGiven `h : a = b` and `e : p a`, the term `h ▸ e` has type `p b`.\nYou can also view `h ▸ e` as a \"type casting\" operation where you change the type of `e` by using `h`.\nSee the Chapter \"Quantifiers and Equality\" in the manual \"Theorem Proving in Lean\" for additional information.\n"},"Lean.Elab.Term.elabStrLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L166-L169","name":"Lean.Elab.Term.elabStrLit","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabStrLit","doc":""},"Lean.Elab.Term.elabStateRefT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L374-L383","name":"Lean.Elab.Term.elabStateRefT","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabStateRefT","doc":""},"Lean.Elab.Term.elabSort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L23-L24","name":"Lean.Elab.Term.elabSort","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabSort","doc":"A specific universe in Lean's infinite hierarchy of universes. "},"Lean.Elab.Term.elabSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L166-L168","name":"Lean.Elab.Term.elabSorry","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabSorry","doc":"A temporary placeholder for a missing proof or value. "},"Lean.Elab.Term.elabSetOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L297-L300","name":"Lean.Elab.Term.elabSetOption","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabSetOption","doc":"`set_option opt val in e` sets the option `opt` to the value `val` in the term `e`. "},"Lean.Elab.Term.elabScientificLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L195-L204","name":"Lean.Elab.Term.elabScientificLit","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabScientificLit","doc":""},"Lean.Elab.Term.elabRawNatLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L189-L192","name":"Lean.Elab.Term.elabRawNatLit","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabRawNatLit","doc":""},"Lean.Elab.Term.elabQuotedName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L212-L215","name":"Lean.Elab.Term.elabQuotedName","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabQuotedName","doc":"A literal of type `Name`. "},"Lean.Elab.Term.elabProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L13-L14","name":"Lean.Elab.Term.elabProp","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabProp","doc":"The universe of propositions. `Prop ≡ Sort 0`. "},"Lean.Elab.Term.elabProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L1427-L1427","name":"Lean.Elab.Term.elabProj","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabProj","doc":""},"Lean.Elab.Term.elabPipeProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L1408-L1413","name":"Lean.Elab.Term.elabPipeProj","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabPipeProj","doc":"`e |>.x` is a shorthand for `(e).x`. It is especially useful for avoiding parentheses with repeated applications. "},"Lean.Elab.Term.elabPipeCompletion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L36-L40","name":"Lean.Elab.Term.elabPipeCompletion","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabPipeCompletion","doc":""},"Lean.Elab.Term.elabParen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L274-L280","name":"Lean.Elab.Term.elabParen","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabParen","doc":""},"Lean.Elab.Term.elabPanic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L133-L142","name":"Lean.Elab.Term.elabPanic","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabPanic","doc":"`panic! msg` formally evaluates to `@Inhabited.default α` if the expected type\n`α` implements `Inhabited`.\nAt runtime, `msg` and the file position are printed to stderr unless the C\nfunction `lean_set_panic_messages(false)` has been executed before. If the C\nfunction `lean_set_exit_on_panic(true)` has been executed before, the process is\nthen aborted. "},"Lean.Elab.Term.elabOpen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L287-L294","name":"Lean.Elab.Term.elabOpen","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabOpen","doc":"`open ... in e` makes the given namespaces available in the term `e`. "},"Lean.Elab.Term.elabNumLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L178-L187","name":"Lean.Elab.Term.elabNumLit","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabNumLit","doc":""},"Lean.Elab.Term.elabNoindex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L385-L387","name":"Lean.Elab.Term.elabNoindex","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabNoindex","doc":""},"Lean.Elab.Term.elabNoMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L1283-L1295","name":"Lean.Elab.Term.elabNoMatch","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.elabNoMatch","doc":"Empty match/ex falso. `nomatch e` is of arbitrary type `α : Sort u` if\nLean can show that an empty set of patterns is exhaustive given `e`'s type,\ne.g. because it has no constructors. "},"Lean.Elab.Term.elabNoImplicitLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L160-L161","name":"Lean.Elab.Term.elabNoImplicitLambda","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabNoImplicitLambda","doc":""},"Lean.Elab.Term.elabNamedPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L1403-L1403","name":"Lean.Elab.Term.elabNamedPattern","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabNamedPattern","doc":"`x@e` matches the pattern `e` and binds its value to the identifier `x`. "},"Lean.Elab.Term.elabMutualDef.processDeriving":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L858-L865","name":"Lean.Elab.Term.elabMutualDef.processDeriving","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.processDeriving","doc":""},"Lean.Elab.Term.elabMutualDef.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L820-L856","name":"Lean.Elab.Term.elabMutualDef.go","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.go","doc":""},"Lean.Elab.Term.elabMutualDef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L814-L865","name":"Lean.Elab.Term.elabMutualDef","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef","doc":""},"Lean.Elab.Term.elabMatch.elabMatchDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L1263-L1274","name":"Lean.Elab.Term.elabMatch.elabMatchDefault","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.elabMatch.elabMatchDefault","doc":""},"Lean.Elab.Term.elabMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L1257-L1274","name":"Lean.Elab.Term.elabMatch","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.elabMatch","doc":"Pattern matching. `match e, ... with | p, ... => f | ...` matches each given\nterm `e` against each pattern `p` of a match alternative. When all patterns\nof an alternative match, the `match` term evaluates to the value of the\ncorresponding right-hand side `f` with the pattern variables bound to the\nrespective matched values.\nWhen not constructing a proof, `match` does not automatically substitute variables\nmatched on in dependent variables' types. Use `match (generalizing := true) ...` to\nenforce this. "},"Lean.Elab.Term.elabLiftMethod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L31-L32","name":"Lean.Elab.Term.elabLiftMethod","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.elabLiftMethod","doc":""},"Lean.Elab.Term.elabLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L460-L461","name":"Lean.Elab.Term.elabLevel","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.elabLevel","doc":""},"Lean.Elab.Term.elabLetTmpDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L747-L748","name":"Lean.Elab.Term.elabLetTmpDecl","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabLetTmpDecl","doc":""},"Lean.Elab.Term.elabLetRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/LetRec.lean#L106-L115","name":"Lean.Elab.Term.elabLetRec","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.elabLetRec","doc":""},"Lean.Elab.Term.elabLetMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L103-L114","name":"Lean.Elab.Term.elabLetMVar","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabLetMVar","doc":""},"Lean.Elab.Term.elabLetFunDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L741-L742","name":"Lean.Elab.Term.elabLetFunDecl","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabLetFunDecl","doc":""},"Lean.Elab.Term.elabLetDelayedDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L744-L745","name":"Lean.Elab.Term.elabLetDelayedDecl","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabLetDelayedDecl","doc":""},"Lean.Elab.Term.elabLetDeclCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L704-L736","name":"Lean.Elab.Term.elabLetDeclCore","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabLetDeclCore","doc":""},"Lean.Elab.Term.elabLetDeclAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L634-L681","name":"Lean.Elab.Term.elabLetDeclAux","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabLetDeclAux","doc":"If `useLetExpr` is true, then a kernel let-expression `let x : type := val; body` is created.\n   Otherwise, we create a term of the form `(fun (x : type) => body) val`\n\n   The default elaboration order is `binders`, `typeStx`, `valStx`, and `body`.\n   If `elabBodyFirst == true`, then we use the order `binders`, `typeStx`, `body`, and `valStx`. "},"Lean.Elab.Term.elabLetDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L738-L739","name":"Lean.Elab.Term.elabLetDecl","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabLetDecl","doc":""},"Lean.Elab.Term.elabLeadingParserMacro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L108-L112","name":"Lean.Elab.Term.elabLeadingParserMacro","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabLeadingParserMacro","doc":""},"Lean.Elab.Term.elabIncludeStr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L314-L323","name":"Lean.Elab.Term.elabIncludeStr","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabIncludeStr","doc":""},"Lean.Elab.Term.elabInaccessible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L168-L170","name":"Lean.Elab.Term.elabInaccessible","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.elabInaccessible","doc":""},"Lean.Elab.Term.elabIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L1401-L1401","name":"Lean.Elab.Term.elabIdent","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabIdent","doc":""},"Lean.Elab.Term.elabHole":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L60-L63","name":"Lean.Elab.Term.elabHole","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabHole","doc":"A placeholder term, to be synthesized by unification. "},"Lean.Elab.Term.elabFunBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L439-L447","name":"Lean.Elab.Term.elabFunBinders","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabFunBinders","doc":""},"Lean.Elab.Term.elabFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L614-L627","name":"Lean.Elab.Term.elabFun","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabFun","doc":""},"Lean.Elab.Term.elabForall":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L249-L255","name":"Lean.Elab.Term.elabForall","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabForall","doc":""},"Lean.Elab.Term.elabForIn'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Extra.lean#L50-L76","name":"Lean.Elab.Term.elabForIn'","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.elabForIn'","doc":""},"Lean.Elab.Term.elabForIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Extra.lean#L24-L48","name":"Lean.Elab.Term.elabForIn","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.elabForIn","doc":""},"Lean.Elab.Term.elabExplicitUnivs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L1186-L1187","name":"Lean.Elab.Term.elabExplicitUnivs","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabExplicitUnivs","doc":""},"Lean.Elab.Term.elabExplicitUniv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L1406-L1406","name":"Lean.Elab.Term.elabExplicitUniv","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabExplicitUniv","doc":"`x.{u, ...}` explicitly specifies the universes `u, ...` of the constant `x`. "},"Lean.Elab.Term.elabExplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L1418-L1424","name":"Lean.Elab.Term.elabExplicit","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabExplicit","doc":"`@x` disables automatic insertion of implicit parameters of the constant `x`.\n`@e` for any term `e` also disables the insertion of implicit lambdas at this position. "},"Lean.Elab.Term.elabEnsureTypeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L272-L279","name":"Lean.Elab.Term.elabEnsureTypeOf","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabEnsureTypeOf","doc":""},"Lean.Elab.Term.elabEnsureExpectedType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L281-L284","name":"Lean.Elab.Term.elabEnsureExpectedType","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabEnsureExpectedType","doc":""},"Lean.Elab.Term.elabDoubleQuotedName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L220-L221","name":"Lean.Elab.Term.elabDoubleQuotedName","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabDoubleQuotedName","doc":"A resolved name literal. Evaluates to the full name of the given constant if\nexistent in the current context, or else fails. "},"Lean.Elab.Term.elabDotIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L1404-L1404","name":"Lean.Elab.Term.elabDotIdent","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabDotIdent","doc":""},"Lean.Elab.Term.elabDepArrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L277-L282","name":"Lean.Elab.Term.elabDepArrow","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabDepArrow","doc":"The dependent arrow. `(x : α) → β` is equivalent to `∀ x : α, β`, but we usually\nreserve the latter for propositions. Also written as `Π x : α, β` (the \"Pi-type\")\nin the literature. "},"Lean.Elab.Term.elabDeclName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L224-L227","name":"Lean.Elab.Term.elabDeclName","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabDeclName","doc":"A macro which evaluates to the name of the currently elaborating declaration. "},"Lean.Elab.Term.elabCompletion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L42-L57","name":"Lean.Elab.Term.elabCompletion","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabCompletion","doc":""},"Lean.Elab.Term.elabCoe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L16-L27","name":"Lean.Elab.Term.elabCoe","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabCoe","doc":""},"Lean.Elab.Term.elabChoice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L1426-L1426","name":"Lean.Elab.Term.elabChoice","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabChoice","doc":""},"Lean.Elab.Term.elabCharLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L206-L209","name":"Lean.Elab.Term.elabCharLit","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabCharLit","doc":""},"Lean.Elab.Term.elabCalcSteps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Calc.lean#L49-L68","name":"Lean.Elab.Term.elabCalcSteps","docLink":"./Lean/Elab/Calc.html#Lean.Elab.Term.elabCalcSteps","doc":"Elaborate `calc`-steps\n"},"Lean.Elab.Term.elabCalc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Calc.lean#L72-L75","name":"Lean.Elab.Term.elabCalc","docLink":"./Lean/Elab/Calc.html#Lean.Elab.Term.elabCalc","doc":"Elaborator for the `calc` term mode variant. "},"Lean.Elab.Term.elabCDotFunctionAlias?.expandCDotArg?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L239-L242","name":"Lean.Elab.Term.elabCDotFunctionAlias?.expandCDotArg?","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabCDotFunctionAlias?.expandCDotArg?","doc":""},"Lean.Elab.Term.elabCDotFunctionAlias?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L223-L242","name":"Lean.Elab.Term.elabCDotFunctionAlias?","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabCDotFunctionAlias?","doc":"Helper method for elaborating terms such as `(.+.)` where a constant name is expected.\nThis method is usually used to implement tactics that function names as arguments (e.g., `simp`).\n"},"Lean.Elab.Term.elabByTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L153-L158","name":"Lean.Elab.Term.elabByTactic","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabByTactic","doc":"`by tac` constructs a term of the expected type by running the tactic(s) `tac`. "},"Lean.Elab.Term.elabBorrowed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L71-L74","name":"Lean.Elab.Term.elabBorrowed","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabBorrowed","doc":""},"Lean.Elab.Term.elabBindersEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L213-L218","name":"Lean.Elab.Term.elabBindersEx","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabBindersEx","doc":"Like `elabBinders`, but also pass syntax node per binder.\n`elabBinders(Ex)` automatically adds binder info nodes for the produced fvars, but storing the syntax nodes\nmight be necessary when later adding the same binders back to the local context so that info nodes can\nmanually be added for the new fvars; see `MutualDef` for an example. "},"Lean.Elab.Term.elabBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L229-L230","name":"Lean.Elab.Term.elabBinders","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabBinders","doc":"Elaborate the given binders (i.e., `Syntax` objects for `bracketedBinder`),\n  update the local context, set of local instances, reset instance chache (if needed), and then\n  execute `k` with the updated context.\n  The local context will only be included inside `k`.\n\n  For example, suppose you have binders `[(a : α), (b : β a)]`, then the elaborator will\n  create two new free variables `a` and `b`, push these to the context and pass to `k #[a,b]`.\n  "},"Lean.Elab.Term.elabBinder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L233-L234","name":"Lean.Elab.Term.elabBinder","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabBinder","doc":"Same as `elabBinder` with a single binder."},"Lean.Elab.Term.elabBadCDot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinTerm.lean#L163-L164","name":"Lean.Elab.Term.elabBadCDot","docLink":"./Lean/Elab/BuiltinTerm.html#Lean.Elab.Term.elabBadCDot","doc":""},"Lean.Elab.Term.elabAsElim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L662-L662","name":"Lean.Elab.Term.elabAsElim","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabAsElim","doc":""},"Lean.Elab.Term.elabArrow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L264-L271","name":"Lean.Elab.Term.elabArrow","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.elabArrow","doc":""},"Lean.Elab.Term.elabAppArgs.elabAsElim?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L899-L913","name":"Lean.Elab.Term.elabAppArgs.elabAsElim?","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabAppArgs.elabAsElim?","doc":"Return `some info` if we should elaborate as an eliminator. "},"Lean.Elab.Term.elabAppArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L868-L913","name":"Lean.Elab.Term.elabAppArgs","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabAppArgs","doc":"Elaborate a `f`-application using `namedArgs` and `args` as the arguments.\n- `expectedType?` the expected type if available. It is used to propagate typing information only. This method does **not** ensure the result has this type.\n- `explicit = true` when notation `@` is used, and implicit arguments are assumed to be provided at `namedArgs` and `args`.\n- `ellipsis = true` when notation `..` is used. That is, we add `_` for missing arguments.\n- `resultIsOutParamSupport` is used to control whether special support is used when processing applications of functions that return\n   output parameter of some local instance. Example:\n   ```\n   GetElem.getElem : {Cont : Type u_1} → {Idx : Type u_2} → {elem : Type u_3} → {dom : cont → idx → Prop} → [self : GetElem cont idx elem dom] → (xs : cont) → (i : idx) → dom xs i → elem\n   ```\n   The result type `elem` is the output parameter of the local instance `self`.\n   When this parameter is set to `true`, we execute `synthesizeSyntheticMVarsUsingDefault`. For additional details, see comment at\n   `ElabAppArgs.resultIsOutParam`.\n"},"Lean.Elab.Term.elabApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L1393-L1396","name":"Lean.Elab.Term.elabApp","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.elabApp","doc":""},"Lean.Elab.Term.elabAnonymousCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinNotation.lean#L35-L69","name":"Lean.Elab.Term.elabAnonymousCtor","docLink":"./Lean/Elab/BuiltinNotation.html#Lean.Elab.Term.elabAnonymousCtor","doc":"The *anonymous constructor* `⟨e, ...⟩` is equivalent to `c e ...` if the\nexpected type is an inductive type with a single constructor `c`.\nIf more terms are given than `c` has parameters, the remaining arguments\nare turned into a new anonymous constructor application. For example,\n`⟨a, b, c⟩ : α × (β × γ)` is equivalent to `⟨a, ⟨b, c⟩⟩`. "},"Lean.Elab.Term.declareTacticSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L79-L91","name":"Lean.Elab.Term.declareTacticSyntax","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.declareTacticSyntax","doc":""},"Lean.Elab.Term.containsPendingMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L698-L701","name":"Lean.Elab.Term.containsPendingMVar","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.containsPendingMVar","doc":"Return `true` if `e` contains a pending metavariable. Remark: it also visits let-declarations. "},"Lean.Elab.Term.commitIfNoErrors?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1378-L1391","name":"Lean.Elab.Term.commitIfNoErrors?","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.commitIfNoErrors?","doc":"Execute `x` and return `some` if no new errors were recorded or exceptions was thrown. Otherwise, return `none` "},"Lean.Elab.Term.commitIfDidNotPostpone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L304-L307","name":"Lean.Elab.Term.commitIfDidNotPostpone","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.commitIfDidNotPostpone","doc":"Execute `x`, but keep state modifications only if `x` did not postpone.\nThis method is useful to implement elaboration functions that cannot decide whether\nthey need to postpone or not without updating the state. "},"Lean.Elab.Term.collectUnassignedMVars.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1496-L1511","name":"Lean.Elab.Term.collectUnassignedMVars.go","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.collectUnassignedMVars.go","doc":""},"Lean.Elab.Term.collectUnassignedMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1488-L1511","name":"Lean.Elab.Term.collectUnassignedMVars","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.collectUnassignedMVars","doc":"Collect unassigned metavariables in `type` that are not already in `init` and not satisfying `except`.\n"},"Lean.Elab.Term.collectPatternVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L331-L333","name":"Lean.Elab.Term.collectPatternVars","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.collectPatternVars","doc":"Collect pattern variables occurring in the `match`-alternative object views.\nIt also returns the updated views.\n"},"Lean.Elab.Term.checkLeftRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L68-L80","name":"Lean.Elab.Term.checkLeftRec","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.checkLeftRec","doc":""},"Lean.Elab.Term.checkForHiddenUnivLevels.visitLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L789-L798","name":"Lean.Elab.Term.checkForHiddenUnivLevels.visitLevel","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels.visitLevel","doc":""},"Lean.Elab.Term.checkForHiddenUnivLevels.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L799-L809","name":"Lean.Elab.Term.checkForHiddenUnivLevels.visit","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels.visit","doc":""},"Lean.Elab.Term.checkForHiddenUnivLevels":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L775-L812","name":"Lean.Elab.Term.checkForHiddenUnivLevels","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels","doc":""},"Lean.Elab.Term.checkBinderAnnotations":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L168-L168","name":"Lean.Elab.Term.checkBinderAnnotations","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.checkBinderAnnotations","doc":""},"Lean.Elab.Term.blockImplicitLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1258-L1262","name":"Lean.Elab.Term.blockImplicitLambda","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.blockImplicitLambda","doc":"Block usage of implicit lambdas if `stx` is `@f` or `@f arg1 ...` or `fun` with an implicit binder annotation. "},"Lean.Elab.Term.autoLift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L757-L757","name":"Lean.Elab.Term.autoLift","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.autoLift","doc":""},"Lean.Elab.Term.applyResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L295-L298","name":"Lean.Elab.Term.applyResult","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.applyResult","doc":"Apply the result/exception and state captured with `observing`.\nWe use this method to implement overloaded notation and symbols. "},"Lean.Elab.Term.applyAttributesAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L631-L632","name":"Lean.Elab.Term.applyAttributesAt","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.applyAttributesAt","doc":"Apply given attributes **at** a given application time "},"Lean.Elab.Term.applyAttributes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L634-L635","name":"Lean.Elab.Term.applyAttributes","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.applyAttributes","doc":""},"Lean.Elab.Term.addTermInfo'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1123-L1124","name":"Lean.Elab.Term.addTermInfo'","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.addTermInfo'","doc":""},"Lean.Elab.Term.addTermInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1116-L1121","name":"Lean.Elab.Term.addTermInfo","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.addTermInfo","doc":""},"Lean.Elab.Term.addNamedArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Arg.lean#L28-L31","name":"Lean.Elab.Term.addNamedArg","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.addNamedArg","doc":"Add a new named argument to `namedArgs`, and throw an error if it already contains a named argument\nwith the same name. "},"Lean.Elab.Term.addLocalVarInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L160-L161","name":"Lean.Elab.Term.addLocalVarInfo","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.addLocalVarInfo","doc":""},"Lean.Elab.Term.addDotCompletionInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1350-L1351","name":"Lean.Elab.Term.addDotCompletionInfo","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.addDotCompletionInfo","doc":"Store in the `InfoTree` that `e` is a \"dot\"-completion target. "},"Lean.Elab.Term.addCategoryInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L57-L60","name":"Lean.Elab.Term.addCategoryInfo","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.addCategoryInfo","doc":"(Try to) add a term info for the category `catName` at `ref`. "},"Lean.Elab.Term.addAutoBoundImplicits.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1526-L1538","name":"Lean.Elab.Term.addAutoBoundImplicits.go","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.addAutoBoundImplicits.go","doc":""},"Lean.Elab.Term.addAutoBoundImplicits'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1546-L1551","name":"Lean.Elab.Term.addAutoBoundImplicits'","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.addAutoBoundImplicits'","doc":"Similar to `autoBoundImplicits`, but immediately if the resulting array of expressions contains metavariables,\nit immediately use `mkForallFVars` + `forallBoundedTelescope` to convert them into free variables.\nThe type `type` is modified during the process if type depends on `xs`.\nWe use this method to simplify the conversion of code using `autoBoundImplicitsOld` to `autoBoundImplicits`\n"},"Lean.Elab.Term.addAutoBoundImplicits":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1522-L1538","name":"Lean.Elab.Term.addAutoBoundImplicits","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.addAutoBoundImplicits","doc":"Return `autoBoundImplicits ++ xs`\n  This methoid throws an error if a variable in `autoBoundImplicits` depends on some `x` in `xs`.\n  The `autoBoundImplicits` may contain free variables created by the auto-implicit feature, and unassigned free variables.\n  It avoids the hack used at `autoBoundImplicitsOld`.\n\n  Remark: we cannot simply replace every occurrence of `addAutoBoundImplicitsOld` with this one because a particular\n  use-case may not be able to handle the metavariables in the array being given to `k`.\n"},"Lean.Elab.Term.addAliasInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L63-L66","name":"Lean.Elab.Term.addAliasInfo","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.addAliasInfo","doc":"(Try to) add a term info for the alias with info `info` at `ref`. "},"Lean.Elab.Term.adaptExpander":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1394-L1396","name":"Lean.Elab.Term.adaptExpander","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.adaptExpander","doc":"Adapt a syntax transformation to a regular, term-producing elaborator. "},"Lean.Elab.Term.ToParserDescrM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L39-L39","name":"Lean.Elab.Term.ToParserDescrM","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ToParserDescrM","doc":""},"Lean.Elab.Term.ToParserDescrContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L32-L37","name":"Lean.Elab.Term.ToParserDescrContext","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ToParserDescrContext","doc":""},"Lean.Elab.Term.ToParserDescr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L40-L40","name":"Lean.Elab.Term.ToParserDescr","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ToParserDescr","doc":""},"Lean.Elab.Term.ToDepElimPattern.savePatternInfo.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L649-L665","name":"Lean.Elab.Term.ToDepElimPattern.savePatternInfo.go","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.savePatternInfo.go","doc":"The `Bool` context is true iff we are inside of an \"inaccessible\" pattern. "},"Lean.Elab.Term.ToDepElimPattern.savePatternInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L645-L665","name":"Lean.Elab.Term.ToDepElimPattern.savePatternInfo","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.savePatternInfo","doc":"Save pattern information in the info tree, and remove `patternWithRef?` annotations.\n"},"Lean.Elab.Term.ToDepElimPattern.normalize.processVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L526-L534","name":"Lean.Elab.Term.ToDepElimPattern.normalize.processVar","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.normalize.processVar","doc":""},"Lean.Elab.Term.ToDepElimPattern.normalize.processInaccessible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L536-L554","name":"Lean.Elab.Term.ToDepElimPattern.normalize.processInaccessible","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.normalize.processInaccessible","doc":""},"Lean.Elab.Term.ToDepElimPattern.normalize.addVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L521-L524","name":"Lean.Elab.Term.ToDepElimPattern.normalize.addVar","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.normalize.addVar","doc":""},"Lean.Elab.Term.ToDepElimPattern.normalize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L469-L554","name":"Lean.Elab.Term.ToDepElimPattern.normalize","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.normalize","doc":"Normalize the pattern and collect all patterns variables (explicit and implicit).\nThis method is the one that decides where the inaccessible annotations must be inserted.\nThe pattern variables are both free variables (for explicit pattern variables) and metavariables (for implicit ones).\nRecall that `mkLambdaFVars` now allows us to abstract both free variables and metavariables.\n"},"Lean.Elab.Term.ToDepElimPattern.main.unpack.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L720-L729","name":"Lean.Elab.Term.ToDepElimPattern.main.unpack.go","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.main.unpack.go","doc":""},"Lean.Elab.Term.ToDepElimPattern.main.unpack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L719-L730","name":"Lean.Elab.Term.ToDepElimPattern.main.unpack","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.main.unpack","doc":""},"Lean.Elab.Term.ToDepElimPattern.main.pack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L695-L717","name":"Lean.Elab.Term.ToDepElimPattern.main.pack","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.main.pack","doc":""},"Lean.Elab.Term.ToDepElimPattern.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L676-L730","name":"Lean.Elab.Term.ToDepElimPattern.main","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.main","doc":"Main method for `withDepElimPatterns`.\n- `PatternVarDecls`: are the explicit pattern variables provided by the user.\n- `ps`: are the patterns provided by the user.\n- `matchType`: the expected typ for this branch. It depends on the explicit pattern variables and the implicit ones that are still represented as metavariables,\n   and are found by this function.\n- `k` is the continuation that is executed in an updated local context with the all pattern variables (explicit and implicit). Note that, `patternVarDecls` are all\n   replaced since they may depend on implicit pattern variables (i.e., metavariables) that are converted into new free variables by this method.\n"},"Lean.Elab.Term.ToDepElimPattern.isExplicitPatternVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L394-L398","name":"Lean.Elab.Term.ToDepElimPattern.isExplicitPatternVar","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.isExplicitPatternVar","doc":"Return true iff `e` is an explicit pattern variable provided by the user. "},"Lean.Elab.Term.ToDepElimPattern.TopSortM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L605-L605","name":"Lean.Elab.Term.ToDepElimPattern.TopSortM","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.TopSortM","doc":""},"Lean.Elab.Term.ToDepElimPattern.TopSort.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L600-L603","name":"Lean.Elab.Term.ToDepElimPattern.TopSort.State","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.TopSort.State","doc":""},"Lean.Elab.Term.ToDepElimPattern.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L376-L377","name":"Lean.Elab.Term.ToDepElimPattern.State","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.State","doc":""},"Lean.Elab.Term.ToDepElimPattern.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L391-L391","name":"Lean.Elab.Term.ToDepElimPattern.M","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.M","doc":""},"Lean.Elab.Term.ToDepElimPattern.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L379-L389","name":"Lean.Elab.Term.ToDepElimPattern.Context","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ToDepElimPattern.Context","doc":""},"Lean.Elab.Term.TermElabResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L263-L263","name":"Lean.Elab.Term.TermElabResult","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabResult","doc":""},"Lean.Elab.Term.TermElabM.toIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1787-L1792","name":"Lean.Elab.Term.TermElabM.toIO","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM.toIO","doc":""},"Lean.Elab.Term.TermElabM.run'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1784-L1785","name":"Lean.Elab.Term.TermElabM.run'","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM.run'","doc":""},"Lean.Elab.Term.TermElabM.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L1781-L1782","name":"Lean.Elab.Term.TermElabM.run","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM.run","doc":""},"Lean.Elab.Term.TermElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L227-L227","name":"Lean.Elab.Term.TermElabM","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM","doc":""},"Lean.Elab.Term.TermElab":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L228-L228","name":"Lean.Elab.Term.TermElab","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab","doc":""},"Lean.Elab.Term.SyntheticMVarKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L41-L54","name":"Lean.Elab.Term.SyntheticMVarKind","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.SyntheticMVarKind","doc":"We use synthetic metavariables as placeholders for pending elaboration steps. "},"Lean.Elab.Term.SyntheticMVarDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L63-L66","name":"Lean.Elab.Term.SyntheticMVarDecl","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.SyntheticMVarDecl","doc":""},"Lean.Elab.Term.StructInst.trySynthStructInstance?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L605-L609","name":"Lean.Elab.Term.StructInst.trySynthStructInstance?","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.trySynthStructInstance?","doc":""},"Lean.Elab.Term.StructInst.throwFailedToElabField":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L602-L603","name":"Lean.Elab.Term.StructInst.throwFailedToElabField","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.throwFailedToElabField","doc":""},"Lean.Elab.Term.StructInst.mkProjStx?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L459-L462","name":"Lean.Elab.Term.StructInst.mkProjStx?","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.mkProjStx?","doc":""},"Lean.Elab.Term.StructInst.markDefaultMissing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L596-L597","name":"Lean.Elab.Term.StructInst.markDefaultMissing","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.markDefaultMissing","doc":""},"Lean.Elab.Term.StructInst.instToStringStruct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L301-L301","name":"Lean.Elab.Term.StructInst.instToStringStruct","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToStringStruct","doc":""},"Lean.Elab.Term.StructInst.instToStringFieldStruct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L304-L304","name":"Lean.Elab.Term.StructInst.instToStringFieldStruct","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToStringFieldStruct","doc":""},"Lean.Elab.Term.StructInst.instToFormatStruct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L300-L300","name":"Lean.Elab.Term.StructInst.instToFormatStruct","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatStruct","doc":""},"Lean.Elab.Term.StructInst.instToFormatFieldStruct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L303-L303","name":"Lean.Elab.Term.StructInst.instToFormatFieldStruct","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatFieldStruct","doc":""},"Lean.Elab.Term.StructInst.instToFormatFieldLHS":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L233-L237","name":"Lean.Elab.Term.StructInst.instToFormatFieldLHS","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatFieldLHS","doc":""},"Lean.Elab.Term.StructInst.instInhabitedStruct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L259-L259","name":"Lean.Elab.Term.StructInst.instInhabitedStruct","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedStruct","doc":""},"Lean.Elab.Term.StructInst.instInhabitedSource":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L93-L93","name":"Lean.Elab.Term.StructInst.instInhabitedSource","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedSource","doc":""},"Lean.Elab.Term.StructInst.instInhabitedFieldVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L243-L243","name":"Lean.Elab.Term.StructInst.instInhabitedFieldVal","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldVal","doc":""},"Lean.Elab.Term.StructInst.instInhabitedFieldLHS":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L231-L231","name":"Lean.Elab.Term.StructInst.instInhabitedFieldLHS","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldLHS","doc":""},"Lean.Elab.Term.StructInst.instInhabitedField":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L250-L250","name":"Lean.Elab.Term.StructInst.instInhabitedField","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedField","doc":""},"Lean.Elab.Term.StructInst.instInhabitedExplicitSourceInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L87-L87","name":"Lean.Elab.Term.StructInst.instInhabitedExplicitSourceInfo","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedExplicitSourceInfo","doc":""},"Lean.Elab.Term.StructInst.formatStruct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L292-L298","name":"Lean.Elab.Term.StructInst.formatStruct","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.formatStruct","doc":""},"Lean.Elab.Term.StructInst.formatField":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L285-L290","name":"Lean.Elab.Term.StructInst.formatField","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.formatField","doc":""},"Lean.Elab.Term.StructInst.findField?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L464-L468","name":"Lean.Elab.Term.StructInst.findField?","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.findField?","doc":""},"Lean.Elab.Term.StructInst.expandStructInstFieldAbbrev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L38-L48","name":"Lean.Elab.Term.StructInst.expandStructInstFieldAbbrev","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.expandStructInstFieldAbbrev","doc":"Expand field abbreviations. Example: `{ x, y := 0 }` expands to `{ x := x, y := 0 }` "},"Lean.Elab.Term.StructInst.expandStructInstExpectedType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L28-L35","name":"Lean.Elab.Term.StructInst.expandStructInstExpectedType","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.expandStructInstExpectedType","doc":"Structure instances are of the form:\n\n      \"{\" >> optional (atomic (sepBy1 termParser \", \" >> \" with \"))\n          >> manyIndent (group ((structInstFieldAbbrev <|> structInstField) >> optional \", \"))\n          >> optEllipsis\n          >> optional (\" : \" >> termParser)\n          >> \" }\"\n"},"Lean.Elab.Term.StructInst.elabStructInst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L906-L914","name":"Lean.Elab.Term.StructInst.elabStructInst","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.elabStructInst","doc":"Structure instance. `{ x := e, ... }` assigns `e` to field `x`, which may be\ninherited. If `e` is itself a variable called `x`, it can be elided:\n`fun y => { x := 1, y }`.\nA *structure update* of an existing value can be given via `with`:\n`{ point with x := 1 }`.\nThe structure type can be specified if not inferable:\n`{ x := 1, y := 2 : Point }`. "},"Lean.Elab.Term.StructInst.defaultMissing?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L599-L600","name":"Lean.Elab.Term.StructInst.defaultMissing?","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.defaultMissing?","doc":""},"Lean.Elab.Term.StructInst.Struct.structName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L266-L267","name":"Lean.Elab.Term.StructInst.Struct.structName","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.structName","doc":""},"Lean.Elab.Term.StructInst.Struct.source":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L275-L276","name":"Lean.Elab.Term.StructInst.Struct.source","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.source","doc":""},"Lean.Elab.Term.StructInst.Struct.setParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L373-L375","name":"Lean.Elab.Term.StructInst.Struct.setParams","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.setParams","doc":""},"Lean.Elab.Term.StructInst.Struct.setFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L370-L371","name":"Lean.Elab.Term.StructInst.Struct.setFields","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.setFields","doc":""},"Lean.Elab.Term.StructInst.Struct.ref":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L263-L264","name":"Lean.Elab.Term.StructInst.Struct.ref","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.ref","doc":""},"Lean.Elab.Term.StructInst.Struct.params":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L269-L270","name":"Lean.Elab.Term.StructInst.Struct.params","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.params","doc":""},"Lean.Elab.Term.StructInst.Struct.modifyFieldsM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L363-L365","name":"Lean.Elab.Term.StructInst.Struct.modifyFieldsM","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.modifyFieldsM","doc":""},"Lean.Elab.Term.StructInst.Struct.modifyFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L367-L368","name":"Lean.Elab.Term.StructInst.Struct.modifyFields","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.modifyFields","doc":""},"Lean.Elab.Term.StructInst.Struct.fields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L272-L273","name":"Lean.Elab.Term.StructInst.Struct.fields","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.fields","doc":""},"Lean.Elab.Term.StructInst.Struct.allDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L279-L283","name":"Lean.Elab.Term.StructInst.Struct.allDefault","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.allDefault","doc":"`true` iff all fields of the given structure are marked as `default` "},"Lean.Elab.Term.StructInst.Struct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L256-L259","name":"Lean.Elab.Term.StructInst.Struct","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct","doc":""},"Lean.Elab.Term.StructInst.Source.isNone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L95-L97","name":"Lean.Elab.Term.StructInst.Source.isNone","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source.isNone","doc":""},"Lean.Elab.Term.StructInst.Source":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L89-L93","name":"Lean.Elab.Term.StructInst.Source","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source","doc":""},"Lean.Elab.Term.StructInst.Fields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L261-L261","name":"Lean.Elab.Term.StructInst.Fields","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Fields","doc":""},"Lean.Elab.Term.StructInst.FieldVal.toSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L320-L322","name":"Lean.Elab.Term.StructInst.FieldVal.toSyntax","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal.toSyntax","doc":""},"Lean.Elab.Term.StructInst.FieldVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L239-L243","name":"Lean.Elab.Term.StructInst.FieldVal","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal","doc":""},"Lean.Elab.Term.StructInst.FieldLHS.toSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L315-L318","name":"Lean.Elab.Term.StructInst.FieldLHS.toSyntax","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.toSyntax","doc":""},"Lean.Elab.Term.StructInst.FieldLHS":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L227-L231","name":"Lean.Elab.Term.StructInst.FieldLHS","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS","doc":""},"Lean.Elab.Term.StructInst.Field.toSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L324-L330","name":"Lean.Elab.Term.StructInst.Field.toSyntax","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.toSyntax","doc":""},"Lean.Elab.Term.StructInst.Field.isSimple":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L252-L254","name":"Lean.Elab.Term.StructInst.Field.isSimple","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.isSimple","doc":""},"Lean.Elab.Term.StructInst.Field":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L245-L250","name":"Lean.Elab.Term.StructInst.Field","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field","doc":""},"Lean.Elab.Term.StructInst.ExplicitSourceInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L84-L87","name":"Lean.Elab.Term.StructInst.ExplicitSourceInfo","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo","doc":""},"Lean.Elab.Term.StructInst.ElabStructResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L611-L614","name":"Lean.Elab.Term.StructInst.ElabStructResult","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.tryToSynthesizeDefault.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L809-L831","name":"Lean.Elab.Term.StructInst.DefaultFields.tryToSynthesizeDefault.loop","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.tryToSynthesizeDefault.loop","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.tryToSynthesizeDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L808-L832","name":"Lean.Elab.Term.StructInst.DefaultFields.tryToSynthesizeDefault","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.tryToSynthesizeDefault","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.step":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L834-L849","name":"Lean.Elab.Term.StructInst.DefaultFields.step","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.step","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.reduce":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L775-L806","name":"Lean.Elab.Term.StructInst.DefaultFields.reduce","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.reduce","doc":"Reduce default value. It performs beta reduction and projections of the given structures. "},"Lean.Elab.Term.StructInst.DefaultFields.propagateLoop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L851-L864","name":"Lean.Elab.Term.StructInst.DefaultFields.propagateLoop","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.propagateLoop","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.propagate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L866-L869","name":"Lean.Elab.Term.StructInst.DefaultFields.propagate","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.propagate","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.mkDefaultValueAux?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L741-L767","name":"Lean.Elab.Term.StructInst.DefaultFields.mkDefaultValueAux?","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.mkDefaultValueAux?","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.mkDefaultValue?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L769-L772","name":"Lean.Elab.Term.StructInst.DefaultFields.mkDefaultValue?","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.mkDefaultValue?","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.isRoundDone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L731-L732","name":"Lean.Elab.Term.StructInst.DefaultFields.isRoundDone","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.isRoundDone","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.getHierarchyDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L708-L712","name":"Lean.Elab.Term.StructInst.DefaultFields.getHierarchyDepth","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.getHierarchyDepth","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.getFieldValue?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L734-L739","name":"Lean.Elab.Term.StructInst.DefaultFields.getFieldValue?","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.getFieldValue?","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.getFieldName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L724-L727","name":"Lean.Elab.Term.StructInst.DefaultFields.getFieldName","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.getFieldName","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.findDefaultMissing?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L714-L722","name":"Lean.Elab.Term.StructInst.DefaultFields.findDefaultMissing?","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.findDefaultMissing?","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.collectStructNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L701-L706","name":"Lean.Elab.Term.StructInst.DefaultFields.collectStructNames","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.collectStructNames","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L698-L699","name":"Lean.Elab.Term.StructInst.DefaultFields.State","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.State","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L729-L729","name":"Lean.Elab.Term.StructInst.DefaultFields.M","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.M","doc":""},"Lean.Elab.Term.StructInst.DefaultFields.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L666-L696","name":"Lean.Elab.Term.StructInst.DefaultFields.Context","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context","doc":""},"Lean.Elab.Term.StructInst.CtorHeaderResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/StructInst.lean#L552-L556","name":"Lean.Elab.Term.StructInst.CtorHeaderResult","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult","doc":""},"Lean.Elab.Term.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L117-L123","name":"Lean.Elab.Term.State","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.State","doc":"State of the `TermElabM` monad.\n"},"Lean.Elab.Term.SavedState.restore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L250-L257","name":"Lean.Elab.Term.SavedState.restore","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.SavedState.restore","doc":""},"Lean.Elab.Term.SavedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L242-L245","name":"Lean.Elab.Term.SavedState","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.SavedState","doc":"Backtrackable state for the `TermElabM` monad.\n"},"Lean.Elab.Term.SavedContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L32-L38","name":"Lean.Elab.Term.SavedContext","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.SavedContext","doc":"Saved context for postponed terms and tactics to be executed. "},"Lean.Elab.Term.Quotation.withNewLocals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L25-L26","name":"Lean.Elab.Term.Quotation.withNewLocals","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.withNewLocals","doc":""},"Lean.Elab.Term.Quotation.withNewLocal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L22-L23","name":"Lean.Elab.Term.Quotation.withNewLocal","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.withNewLocal","doc":""},"Lean.Elab.Term.Quotation.stxQuot.expand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L189-L200","name":"Lean.Elab.Term.Quotation.stxQuot.expand","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.stxQuot.expand","doc":""},"Lean.Elab.Term.Quotation.runPrecheck":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L75-L78","name":"Lean.Elab.Term.Quotation.runPrecheck","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.runPrecheck","doc":""},"Lean.Elab.Term.Quotation.resolveSectionVariable.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L62-L69","name":"Lean.Elab.Term.Quotation.resolveSectionVariable.loop","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.resolveSectionVariable.loop","doc":""},"Lean.Elab.Term.Quotation.resolveSectionVariable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L59-L70","name":"Lean.Elab.Term.Quotation.resolveSectionVariable","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.resolveSectionVariable","doc":""},"Lean.Elab.Term.Quotation.quotPrecheck.allowSectionVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L34-L34","name":"Lean.Elab.Term.Quotation.quotPrecheck.allowSectionVars","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.quotPrecheck.allowSectionVars","doc":""},"Lean.Elab.Term.Quotation.quotPrecheck":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L28-L28","name":"Lean.Elab.Term.Quotation.quotPrecheck","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.quotPrecheck","doc":""},"Lean.Elab.Term.Quotation.precheckParen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L119-L128","name":"Lean.Elab.Term.Quotation.precheckParen","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.precheckParen","doc":""},"Lean.Elab.Term.Quotation.precheckIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L83-L107","name":"Lean.Elab.Term.Quotation.precheckIdent","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.precheckIdent","doc":""},"Lean.Elab.Term.Quotation.precheckChoice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L130-L136","name":"Lean.Elab.Term.Quotation.precheckChoice","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.precheckChoice","doc":""},"Lean.Elab.Term.Quotation.precheckAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L51-L51","name":"Lean.Elab.Term.Quotation.precheckAttribute","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.precheckAttribute","doc":""},"Lean.Elab.Term.Quotation.precheckApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L109-L117","name":"Lean.Elab.Term.Quotation.precheckApp","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.precheckApp","doc":""},"Lean.Elab.Term.Quotation.precheck.hasQuotedIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L67-L73","name":"Lean.Elab.Term.Quotation.precheck.hasQuotedIdent","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.precheck.hasQuotedIdent","doc":""},"Lean.Elab.Term.Quotation.precheck":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L53-L73","name":"Lean.Elab.Term.Quotation.precheck","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.precheck","doc":""},"Lean.Elab.Term.Quotation.mkTuple":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L52-L57","name":"Lean.Elab.Term.Quotation.mkTuple","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.mkTuple","doc":""},"Lean.Elab.Term.Quotation.mkPrecheckAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L39-L50","name":"Lean.Elab.Term.Quotation.mkPrecheckAttribute","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.mkPrecheckAttribute","doc":""},"Lean.Elab.Term.Quotation.match_syntax.expand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L608-L621","name":"Lean.Elab.Term.Quotation.match_syntax.expand","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.match_syntax.expand","doc":""},"Lean.Elab.Term.Quotation.hygiene":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Util.lean#L11-L11","name":"Lean.Elab.Term.Quotation.hygiene","docLink":"./Lean/Elab/Quotation/Util.html#Lean.Elab.Term.Quotation.hygiene","doc":""},"Lean.Elab.Term.Quotation.getQuotKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L170-L187","name":"Lean.Elab.Term.Quotation.getQuotKind","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.getQuotKind","doc":""},"Lean.Elab.Term.Quotation.getPatternsVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Util.lean#L36-L37","name":"Lean.Elab.Term.Quotation.getPatternsVars","docLink":"./Lean/Elab/Quotation/Util.html#Lean.Elab.Term.Quotation.getPatternsVars","doc":""},"Lean.Elab.Term.Quotation.getPatternVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Util.lean#L27-L34","name":"Lean.Elab.Term.Quotation.getPatternVars","docLink":"./Lean/Elab/Quotation/Util.html#Lean.Elab.Term.Quotation.getPatternVars","doc":""},"Lean.Elab.Term.Quotation.getAntiquotationIds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Util.lean#L16-L24","name":"Lean.Elab.Term.Quotation.getAntiquotationIds","docLink":"./Lean/Elab/Quotation/Util.html#Lean.Elab.Term.Quotation.getAntiquotationIds","doc":""},"Lean.Elab.Term.Quotation.elabPrecheckedQuot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L138-L141","name":"Lean.Elab.Term.Quotation.elabPrecheckedQuot","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.elabPrecheckedQuot","doc":""},"Lean.Elab.Term.Quotation.elabNoErrorIfUnused":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L643-L646","name":"Lean.Elab.Term.Quotation.elabNoErrorIfUnused","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.elabNoErrorIfUnused","doc":""},"Lean.Elab.Term.Quotation.elabMatchSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L640-L641","name":"Lean.Elab.Term.Quotation.elabMatchSyntax","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.elabMatchSyntax","doc":"Syntactic pattern match. Matches a `Syntax` value against quotations, pattern variables, or `_`.\n\n  Quoted identifiers only match identical identifiers - custom matching such as by the preresolved names only should be done explicitly.\n\n  `Syntax.atom`s are ignored during matching by default except when part of a built-in literal.\n  For users introducing new atoms, we recommend wrapping them in dedicated syntax kinds if they should participate in matching.\n  For example, in\n  ```lean\n  syntax \"c\" (\"foo\" <|> \"bar\") ...\n  ```\n  `foo` and `bar` are indistinguishable during matching, but in\n  ```lean\n  syntax foo := \"foo\"\n  syntax \"c\" (foo <|> \"bar\") ...\n  ```\n  they are not. "},"Lean.Elab.Term.Quotation.commandElab_stx_quot_":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L217-L217","name":"Lean.Elab.Term.Quotation.commandElab_stx_quot_","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.commandElab_stx_quot_","doc":""},"Lean.Elab.Term.Quotation.PrecheckM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L19-L19","name":"Lean.Elab.Term.Quotation.PrecheckM","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.PrecheckM","doc":""},"Lean.Elab.Term.Quotation.Precheck.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L16-L17","name":"Lean.Elab.Term.Quotation.Precheck.Context","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.Precheck.Context","doc":""},"Lean.Elab.Term.Quotation.Precheck":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation/Precheck.lean#L20-L20","name":"Lean.Elab.Term.Quotation.Precheck","docLink":"./Lean/Elab/Quotation/Precheck.html#Lean.Elab.Term.Quotation.Precheck","doc":""},"Lean.Elab.Term.Quotation.MatchResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L268-L275","name":"Lean.Elab.Term.Quotation.MatchResult","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.MatchResult","doc":"Describe whether a pattern is covered by a head check (induced by the pattern itself or a different pattern). "},"Lean.Elab.Term.Quotation.IdxSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L548-L548","name":"Lean.Elab.Term.Quotation.IdxSet","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.IdxSet","doc":""},"Lean.Elab.Term.Quotation.HeadInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L280-L286","name":"Lean.Elab.Term.Quotation.HeadInfo","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.HeadInfo","doc":"All necessary information on a pattern head. "},"Lean.Elab.Term.Quotation.HeadCheck":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L246-L263","name":"Lean.Elab.Term.Quotation.HeadCheck","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.HeadCheck","doc":"In a single match step, we match the first discriminant against the \"head\" of the first pattern of the first\nalternative. This datatype describes what kind of check this involves, which helps other patterns decide if\nthey are covered by the same check and don't have to be checked again (see also `MatchResult`). "},"Lean.Elab.Term.Quotation.ArrayStxBuilder.push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L83-L86","name":"Lean.Elab.Term.Quotation.ArrayStxBuilder.push","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.ArrayStxBuilder.push","doc":""},"Lean.Elab.Term.Quotation.ArrayStxBuilder.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L77-L77","name":"Lean.Elab.Term.Quotation.ArrayStxBuilder.empty","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.ArrayStxBuilder.empty","doc":""},"Lean.Elab.Term.Quotation.ArrayStxBuilder.build":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L79-L81","name":"Lean.Elab.Term.Quotation.ArrayStxBuilder.build","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.ArrayStxBuilder.build","doc":""},"Lean.Elab.Term.Quotation.ArrayStxBuilder.append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L88-L89","name":"Lean.Elab.Term.Quotation.ArrayStxBuilder.append","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.ArrayStxBuilder.append","doc":""},"Lean.Elab.Term.Quotation.ArrayStxBuilder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Quotation.lean#L73-L73","name":"Lean.Elab.Term.Quotation.ArrayStxBuilder","docLink":"./Lean/Elab/Quotation.html#Lean.Elab.Term.Quotation.ArrayStxBuilder","doc":"Transform sequence of pushes and appends into acceptable code "},"Lean.Elab.Term.PatternVarDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L184-L185","name":"Lean.Elab.Term.PatternVarDecl","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.PatternVarDecl","doc":"We convert the collected `PatternVar`s intro `PatternVarDecl` "},"Lean.Elab.Term.PatternVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L14-L14","name":"Lean.Elab.Term.PatternVar","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.PatternVar","doc":""},"Lean.Elab.Term.PatternElabException":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L222-L225","name":"Lean.Elab.Term.PatternElabException","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.PatternElabException","doc":"Auxiliary structure for storing an type mismatch exception when processing the\npattern #`idx` of some alternative. "},"Lean.Elab.Term.NamedArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Arg.lean#L19-L23","name":"Lean.Elab.Term.NamedArg","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.NamedArg","doc":"Named arguments created using the notation `(x := val)` "},"Lean.Elab.Term.MutualClosure.pushMain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L624-L637","name":"Lean.Elab.Term.MutualClosure.pushMain","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushMain","doc":""},"Lean.Elab.Term.MutualClosure.pushLetRecs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L639-L649","name":"Lean.Elab.Term.MutualClosure.pushLetRecs","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushLetRecs","doc":""},"Lean.Elab.Term.MutualClosure.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L668-L694","name":"Lean.Elab.Term.MutualClosure.main","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.main","doc":"- `sectionVars`:   The section variables used in the `mutual` block.\n- `mainHeaders`:   The elaborated header of the top-level definitions being defined by the mutual block.\n- `mainFVars`:     The auxiliary variables used to represent the top-level definitions being defined by the mutual block.\n- `mainVals`:      The elaborated value for the top-level definitions\n- `letRecsToLift`: The let-rec's definitions that need to be lifted\n"},"Lean.Elab.Term.MutualClosure.insertReplacementForMainFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L608-L610","name":"Lean.Elab.Term.MutualClosure.insertReplacementForMainFns","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForMainFns","doc":""},"Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L613-L615","name":"Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs","doc":""},"Lean.Elab.Term.MutualClosure.getModifiersForLetRecs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L655-L659","name":"Lean.Elab.Term.MutualClosure.getModifiersForLetRecs","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getModifiersForLetRecs","doc":""},"Lean.Elab.Term.MutualClosure.getKindForLetRecs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L651-L653","name":"Lean.Elab.Term.MutualClosure.getKindForLetRecs","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getKindForLetRecs","doc":""},"Lean.Elab.Term.MutualClosure.UsedFVarsMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L314-L314","name":"Lean.Elab.Term.MutualClosure.UsedFVarsMap","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap","doc":"A mapping from FVarId to Set of FVarIds. "},"Lean.Elab.Term.MutualClosure.Replacement.apply":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L617-L622","name":"Lean.Elab.Term.MutualClosure.Replacement.apply","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement.apply","doc":""},"Lean.Elab.Term.MutualClosure.Replacement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L606-L606","name":"Lean.Elab.Term.MutualClosure.Replacement","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement","doc":"Mapping from FVarId of mutually recursive functions being defined to \"closure\" expression. "},"Lean.Elab.Term.MutualClosure.LetRecClosure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L544-L549","name":"Lean.Elab.Term.MutualClosure.LetRecClosure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure","doc":""},"Lean.Elab.Term.MutualClosure.FreeVarMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L456-L456","name":"Lean.Elab.Term.MutualClosure.FreeVarMap","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FreeVarMap","doc":""},"Lean.Elab.Term.MutualClosure.FixPoint.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L450-L452","name":"Lean.Elab.Term.MutualClosure.FixPoint.run","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.run","doc":""},"Lean.Elab.Term.MutualClosure.FixPoint.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L404-L406","name":"Lean.Elab.Term.MutualClosure.FixPoint.State","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State","doc":""},"Lean.Elab.Term.MutualClosure.FixPoint.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L408-L408","name":"Lean.Elab.Term.MutualClosure.FixPoint.M","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.M","doc":""},"Lean.Elab.Term.MutualClosure.ClosureState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L476-L480","name":"Lean.Elab.Term.MutualClosure.ClosureState","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState","doc":""},"Lean.Elab.Term.MkInstResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L719-L722","name":"Lean.Elab.Term.MkInstResult","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MkInstResult","doc":"Result for `mkInst?` "},"Lean.Elab.Term.MatchAltView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MatchAltView.lean#L19-L23","name":"Lean.Elab.Term.MatchAltView","docLink":"./Lean/Elab/MatchAltView.html#Lean.Elab.Term.MatchAltView","doc":""},"Lean.Elab.Term.MVarErrorKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L72-L79","name":"Lean.Elab.Term.MVarErrorKind","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.MVarErrorKind","doc":"We can optionally associate an error context with a metavariable (see `MVarErrorInfo`).\nWe have three different kinds of error context.\n"},"Lean.Elab.Term.MVarErrorInfo.logError.appendExtra":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L529-L532","name":"Lean.Elab.Term.MVarErrorInfo.logError.appendExtra","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.MVarErrorInfo.logError.appendExtra","doc":""},"Lean.Elab.Term.MVarErrorInfo.logError.addArgName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L524-L527","name":"Lean.Elab.Term.MVarErrorInfo.logError.addArgName","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.MVarErrorInfo.logError.addArgName","doc":"Append `mvarErrorInfo` argument name (if available) to the message.\nRemark: if the argument name contains macro scopes we do not append it. "},"Lean.Elab.Term.MVarErrorInfo.logError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L508-L532","name":"Lean.Elab.Term.MVarErrorInfo.logError","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.MVarErrorInfo.logError","doc":""},"Lean.Elab.Term.MVarErrorInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L90-L95","name":"Lean.Elab.Term.MVarErrorInfo","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.MVarErrorInfo","doc":"We can optionally associate an error context with metavariables.\n"},"Lean.Elab.Term.LetRecView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/LetRec.lean#L25-L27","name":"Lean.Elab.Term.LetRecView","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecView","doc":""},"Lean.Elab.Term.LetRecToLift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L101-L112","name":"Lean.Elab.Term.LetRecToLift","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.LetRecToLift","doc":"Nested `let rec` expressions are eagerly lifted by the elaborator.\nWe store the information necessary for performing the lifting here.\n"},"Lean.Elab.Term.LetRecDeclView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/LetRec.lean#L15-L23","name":"Lean.Elab.Term.LetRecDeclView","docLink":"./Lean/Elab/LetRec.html#Lean.Elab.Term.LetRecDeclView","doc":""},"Lean.Elab.Term.LetIdDeclView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L683-L687","name":"Lean.Elab.Term.LetIdDeclView","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.LetIdDeclView","doc":""},"Lean.Elab.Term.LValResolution":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L916-L920","name":"Lean.Elab.Term.LValResolution","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.LValResolution","doc":"Auxiliary inductive datatype that represents the resolution of an `LVal`. "},"Lean.Elab.Term.LVal.isFieldName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L389-L391","name":"Lean.Elab.Term.LVal.isFieldName","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.LVal.isFieldName","doc":""},"Lean.Elab.Term.LVal.getRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L385-L387","name":"Lean.Elab.Term.LVal.getRef","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.LVal.getRef","doc":""},"Lean.Elab.Term.LVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L379-L383","name":"Lean.Elab.Term.LVal","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.LVal","doc":"Auxiliary datatatype for presenting a Lean lvalue modifier.\nWe represent a unelaborated lvalue as a `Syntax` (or `Expr`) and `List LVal`.\nExample: `a.foo.1` is represented as the `Syntax` `a` and the list\n`[LVal.fieldName \"foo\", LVal.fieldIdx 1]`.\n"},"Lean.Elab.Term.GeneralizeResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L840-L846","name":"Lean.Elab.Term.GeneralizeResult","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.GeneralizeResult","doc":""},"Lean.Elab.Term.FunBinders.elabFunBindersAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L429-L435","name":"Lean.Elab.Term.FunBinders.elabFunBindersAux","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.FunBinders.elabFunBindersAux","doc":""},"Lean.Elab.Term.FunBinders.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L381-L385","name":"Lean.Elab.Term.FunBinders.State","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.FunBinders.State","doc":""},"Lean.Elab.Term.ExtractMonadResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L88-L91","name":"Lean.Elab.Term.ExtractMonadResult","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.ExtractMonadResult","doc":""},"Lean.Elab.Term.ElabMatchTypeAndDiscrsResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L76-L82","name":"Lean.Elab.Term.ElabMatchTypeAndDiscrsResult","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.ElabMatchTypeAndDiscrsResult","doc":""},"Lean.Elab.Term.ElabElim.setMotive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L783-L784","name":"Lean.Elab.Term.ElabElim.setMotive","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabElim.setMotive","doc":"Set the `motive` field in the state. "},"Lean.Elab.Term.ElabElim.saveArgInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L799-L803","name":"Lean.Elab.Term.ElabElim.saveArgInfo","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabElim.saveArgInfo","doc":"Save information for producing error messages. "},"Lean.Elab.Term.ElabElim.revertArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L713-L723","name":"Lean.Elab.Term.ElabElim.revertArgs","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabElim.revertArgs","doc":"If the eliminator is over-applied, we \"revert\" the extra arguments. "},"Lean.Elab.Term.ElabElim.mkMotive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L703-L710","name":"Lean.Elab.Term.ElabElim.mkMotive","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabElim.mkMotive","doc":"Infer the `motive` using the expected type by `kabstract`ing the discriminants. "},"Lean.Elab.Term.ElabElim.mkImplicitArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L806-L810","name":"Lean.Elab.Term.ElabElim.mkImplicitArg","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabElim.mkImplicitArg","doc":"Create an implicit argument using the given `BinderInfo`. "},"Lean.Elab.Term.ElabElim.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L813-L834","name":"Lean.Elab.Term.ElabElim.main","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabElim.main","doc":"Main loop of the `elimAsElab` procedure. "},"Lean.Elab.Term.ElabElim.getNextArg?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L767-L780","name":"Lean.Elab.Term.ElabElim.getNextArg?","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabElim.getNextArg?","doc":"Return the next argument to be processed.\nThe result is `.none` if it is an implicit argument which was not provided using a named argument.\nThe result is `.undef` if `args` is empty and `namedArgs` does contain an entry for `binderName`.\n"},"Lean.Elab.Term.ElabElim.finalize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L729-L760","name":"Lean.Elab.Term.ElabElim.finalize","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabElim.finalize","doc":"Contruct the resulting application after all discriminants have bee elaborated, and we have\nconsumed as many given arguments as possible.\n"},"Lean.Elab.Term.ElabElim.addDiscr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L787-L788","name":"Lean.Elab.Term.ElabElim.addDiscr","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabElim.addDiscr","doc":"Push the given expression into the `discrs` field in the state. "},"Lean.Elab.Term.ElabElim.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L682-L698","name":"Lean.Elab.Term.ElabElim.State","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabElim.State","doc":"State of the `elabAsElim` elaboration procedure. "},"Lean.Elab.Term.ElabElim.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L700-L700","name":"Lean.Elab.Term.ElabElim.M","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabElim.M","doc":""},"Lean.Elab.Term.ElabElim.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L677-L679","name":"Lean.Elab.Term.ElabElim.Context","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabElim.Context","doc":"Context of the `elabAsElim` elaboration procedure. "},"Lean.Elab.Term.ElabAppArgs.synthesizeAppInstMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L193-L197","name":"Lean.Elab.Term.ElabAppArgs.synthesizeAppInstMVars","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabAppArgs.synthesizeAppInstMVars","doc":"Try to synthesize metavariables are `instMVars` using type class resolution.\nThe ones that cannot be synthesized yet are registered.\nRemark: we use this method before trying to apply coercions to function. "},"Lean.Elab.Term.ElabAppArgs.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L634-L656","name":"Lean.Elab.Term.ElabAppArgs.main","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabAppArgs.main","doc":"Elaborate function application arguments. "},"Lean.Elab.Term.ElabAppArgs.eraseNamedArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L235-L236","name":"Lean.Elab.Term.ElabAppArgs.eraseNamedArg","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabAppArgs.eraseNamedArg","doc":"Remove named argument with name `binderName` from `namedArgs`. "},"Lean.Elab.Term.ElabAppArgs.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L148-L181","name":"Lean.Elab.Term.ElabAppArgs.State","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabAppArgs.State","doc":"Auxiliary structure for elaborating the application `f args namedArgs`. "},"Lean.Elab.Term.ElabAppArgs.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L183-L183","name":"Lean.Elab.Term.ElabAppArgs.M","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabAppArgs.M","doc":""},"Lean.Elab.Term.ElabAppArgs.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/App.lean#L105-L145","name":"Lean.Elab.Term.ElabAppArgs.Context","docLink":"./Lean/Elab/App.html#Lean.Elab.Term.ElabAppArgs.Context","doc":""},"Lean.Elab.Term.Do.pullExitPointsAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L374-L390","name":"Lean.Elab.Term.Do.pullExitPointsAux","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.pullExitPointsAux","doc":"`pullExitPointsAux rs c` auxiliary method for `pullExitPoints`, `rs` is the set of update variable in the current path.  "},"Lean.Elab.Term.Do.pullExitPoints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L441-L446","name":"Lean.Elab.Term.Do.pullExitPoints","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.pullExitPoints","doc":"Auxiliary operation for adding new variables to the collection of updated variables in a CodeBlock.\nWhen a new variable is not already in the collection, but is shadowed by some declaration in `c`,\nwe create auxiliary join points to make sure we preserve the semantics of the code block.\nExample: suppose we have the code block `print x; let x := 10; return x`. And we want to extend it\nwith the reassignment `x := x + 1`. We first use `pullExitPoints` to create\n```\nlet jp (x!1) :=  return x!1;\nprint x;\nlet x := 10;\njmp jp x\n```\nand then we add the reassignment\n```\nx := x + 1\nlet jp (x!1) := return x!1;\nprint x;\nlet x := 10;\njmp jp x\n```\nNote that we created a fresh variable `x!1` to avoid accidental name capture.\nAs another example, consider\n```\nprint x;\nlet x := 10\ny := y + 1;\nreturn x;\n```\nWe transform it into\n```\nlet jp (y x!1) := return x!1;\nprint x;\nlet x := 10\ny := y + 1;\njmp jp y x\n```\nand then we add the reassignment as in the previous example.\nWe need to include `y` in the jump, because each exit point is implicitly returning the set of\nupdate variables.\n\nWe implement the method as follows. Let `us` be `c.uvars`, then\n1- for each `return _ y` in `c`, we create a join point\n  `let j (us y!1) := return y!1`\n   and replace the `return _ y` with `jmp us y`\n2- for each `break`, we create a join point\n  `let j (us) := break`\n   and replace the `break` with `jmp us`.\n3- Same as 2 for `continue`.\n"},"Lean.Elab.Term.Do.mkVarDeclCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L509-L512","name":"Lean.Elab.Term.Do.mkVarDeclCore","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkVarDeclCore","doc":"Extending code blocks with variable declarations: `let x : t := v` and `let x : t ← v`.\nWe remove `x` from the collection of updated varibles.\nRemark: `stx` is the syntax for the declaration (e.g., `letDecl`), and `xs` are the variables\ndeclared by it. It is an array because we have let-declarations that declare multiple variables.\nExample: `let (x, y) := t`\n"},"Lean.Elab.Term.Do.mkUnless":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L560-L562","name":"Lean.Elab.Term.Do.mkUnless","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkUnless","doc":""},"Lean.Elab.Term.Do.mkTerminalAction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L531-L532","name":"Lean.Elab.Term.Do.mkTerminalAction","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkTerminalAction","doc":""},"Lean.Elab.Term.Do.mkSingletonDoSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L684-L685","name":"Lean.Elab.Term.Do.mkSingletonDoSeq","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkSingletonDoSeq","doc":""},"Lean.Elab.Term.Do.mkSimpleJmp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L351-L358","name":"Lean.Elab.Term.Do.mkSimpleJmp","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkSimpleJmp","doc":"Create a new jointpoint for `c`, and jump to it with the variables `rs` "},"Lean.Elab.Term.Do.mkSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L528-L529","name":"Lean.Elab.Term.Do.mkSeq","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkSeq","doc":""},"Lean.Elab.Term.Do.mkReturn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L534-L535","name":"Lean.Elab.Term.Do.mkReturn","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkReturn","doc":""},"Lean.Elab.Term.Do.mkReassignCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L520-L526","name":"Lean.Elab.Term.Do.mkReassignCore","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkReassignCore","doc":"Extending code blocks with reassignments: `x : t := v` and `x : t ← v`.\nRemark: `stx` is the syntax for the declaration (e.g., `letDecl`), and `xs` are the variables\ndeclared by it. It is an array because we have let-declarations that declare multiple variables.\nExample: `(x, y) ← t`\n"},"Lean.Elab.Term.Do.mkPureUnitAction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L557-L558","name":"Lean.Elab.Term.Do.mkPureUnitAction","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkPureUnitAction","doc":""},"Lean.Elab.Term.Do.mkMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L564-L570","name":"Lean.Elab.Term.Do.mkMatch","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkMatch","doc":""},"Lean.Elab.Term.Do.mkJmp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L363-L371","name":"Lean.Elab.Term.Do.mkJmp","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkJmp","doc":"Create a new joinpoint that takes `rs` and `val` as arguments. `val` must be syntax representing a pure value.\nThe body of the joinpoint is created using `mkJPBody yFresh`, where `yFresh`\nis a fresh variable created by this method. "},"Lean.Elab.Term.Do.mkIte":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L543-L549","name":"Lean.Elab.Term.Do.mkIte","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkIte","doc":""},"Lean.Elab.Term.Do.mkFreshJP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L322-L332","name":"Lean.Elab.Term.Do.mkFreshJP","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkFreshJP","doc":""},"Lean.Elab.Term.Do.mkDoSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L681-L682","name":"Lean.Elab.Term.Do.mkDoSeq","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkDoSeq","doc":""},"Lean.Elab.Term.Do.mkContinue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L540-L541","name":"Lean.Elab.Term.Do.mkContinue","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkContinue","doc":""},"Lean.Elab.Term.Do.mkBreak":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L537-L538","name":"Lean.Elab.Term.Do.mkBreak","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkBreak","doc":""},"Lean.Elab.Term.Do.mkAuxDeclFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L286-L292","name":"Lean.Elab.Term.Do.mkAuxDeclFor","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.mkAuxDeclFor","doc":""},"Lean.Elab.Term.Do.isMutableLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1159-L1163","name":"Lean.Elab.Term.Do.isMutableLet","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.isMutableLet","doc":""},"Lean.Elab.Term.Do.isDoExpr?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L740-L744","name":"Lean.Elab.Term.Do.isDoExpr?","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.isDoExpr?","doc":"Return `some action` if `doElem` is a `doExpr <action>`"},"Lean.Elab.Term.Do.instInhabitedCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L201-L201","name":"Lean.Elab.Term.Do.instInhabitedCode","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.instInhabitedCode","doc":""},"Lean.Elab.Term.Do.instInhabitedAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L137-L137","name":"Lean.Elab.Term.Do.instInhabitedAlt","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.instInhabitedAlt","doc":""},"Lean.Elab.Term.Do.insertVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L339-L340","name":"Lean.Elab.Term.Do.insertVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.insertVars","doc":""},"Lean.Elab.Term.Do.homogenize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L496-L500","name":"Lean.Elab.Term.Do.homogenize","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.homogenize","doc":"Given two code blocks `c₁` and `c₂`, make sure they have the same set of updated variables.\nLet `ws` the union of the updated variables in `c₁‵ and ‵c₂`.\nWe use `extendUpdatedVars c₁ ws` and `extendUpdatedVars c₂ ws`\n"},"Lean.Elab.Term.Do.hasTerminalAction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L268-L271","name":"Lean.Elab.Term.Do.hasTerminalAction","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.hasTerminalAction","doc":""},"Lean.Elab.Term.Do.hasReturn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L263-L266","name":"Lean.Elab.Term.Do.hasReturn","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.hasReturn","doc":""},"Lean.Elab.Term.Do.hasExitPointPred.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L249-L257","name":"Lean.Elab.Term.Do.hasExitPointPred.loop","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.hasExitPointPred.loop","doc":""},"Lean.Elab.Term.Do.hasExitPointPred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L248-L258","name":"Lean.Elab.Term.Do.hasExitPointPred","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.hasExitPointPred","doc":"Return true if the give code contains an exit point that satisfies `p` "},"Lean.Elab.Term.Do.hasExitPoint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L260-L261","name":"Lean.Elab.Term.Do.hasExitPoint","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.hasExitPoint","doc":""},"Lean.Elab.Term.Do.hasBreakContinueReturn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L279-L284","name":"Lean.Elab.Term.Do.hasBreakContinueReturn","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.hasBreakContinueReturn","doc":""},"Lean.Elab.Term.Do.hasBreakContinue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L273-L277","name":"Lean.Elab.Term.Do.hasBreakContinue","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.hasBreakContinue","doc":""},"Lean.Elab.Term.Do.getPatternsVarsEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L595-L597","name":"Lean.Elab.Term.Do.getPatternsVarsEx","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getPatternsVarsEx","doc":""},"Lean.Elab.Term.Do.getPatternVarsEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L591-L593","name":"Lean.Elab.Term.Do.getPatternVarsEx","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getPatternVarsEx","doc":""},"Lean.Elab.Term.Do.getLetPatDeclVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L599-L601","name":"Lean.Elab.Term.Do.getLetPatDeclVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getLetPatDeclVars","doc":""},"Lean.Elab.Term.Do.getLetIdDeclVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L587-L588","name":"Lean.Elab.Term.Do.getLetIdDeclVar","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getLetIdDeclVar","doc":""},"Lean.Elab.Term.Do.getLetEqnsDeclVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L603-L604","name":"Lean.Elab.Term.Do.getLetEqnsDeclVar","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getLetEqnsDeclVar","doc":""},"Lean.Elab.Term.Do.getLetDeclVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L606-L615","name":"Lean.Elab.Term.Do.getLetDeclVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getLetDeclVars","doc":""},"Lean.Elab.Term.Do.getHaveIdLhsVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L621-L625","name":"Lean.Elab.Term.Do.getHaveIdLhsVar","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getHaveIdLhsVar","doc":""},"Lean.Elab.Term.Do.getDoReassignVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L672-L679","name":"Lean.Elab.Term.Do.getDoReassignVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getDoReassignVars","doc":""},"Lean.Elab.Term.Do.getDoPatDeclVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L658-L660","name":"Lean.Elab.Term.Do.getDoPatDeclVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getDoPatDeclVars","doc":""},"Lean.Elab.Term.Do.getDoLetVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L617-L619","name":"Lean.Elab.Term.Do.getDoLetVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getDoLetVars","doc":""},"Lean.Elab.Term.Do.getDoLetRecVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L643-L651","name":"Lean.Elab.Term.Do.getDoLetRecVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getDoLetRecVars","doc":""},"Lean.Elab.Term.Do.getDoLetArrowVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L663-L670","name":"Lean.Elab.Term.Do.getDoLetArrowVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getDoLetArrowVars","doc":""},"Lean.Elab.Term.Do.getDoIdDeclVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L654-L655","name":"Lean.Elab.Term.Do.getDoIdDeclVar","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getDoIdDeclVar","doc":""},"Lean.Elab.Term.Do.getDoHaveVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L627-L641","name":"Lean.Elab.Term.Do.getDoHaveVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.getDoHaveVars","doc":""},"Lean.Elab.Term.Do.extendUpdatedVarsAux.update":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L449-L473","name":"Lean.Elab.Term.Do.extendUpdatedVarsAux.update","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.extendUpdatedVarsAux.update","doc":""},"Lean.Elab.Term.Do.extendUpdatedVarsAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L448-L474","name":"Lean.Elab.Term.Do.extendUpdatedVarsAux","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.extendUpdatedVarsAux","doc":""},"Lean.Elab.Term.Do.extendUpdatedVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L481-L486","name":"Lean.Elab.Term.Do.extendUpdatedVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.extendUpdatedVars","doc":"Extend the set of updated variables. It assumes `ws` is a super set of `c.uvars`.\nWe **cannot** simply update the field `c.uvars`, because `c` may have shadowed some variable in `ws`.\nSee discussion at `pullExitPoints`.\n"},"Lean.Elab.Term.Do.eraseVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L342-L343","name":"Lean.Elab.Term.Do.eraseVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.eraseVars","doc":""},"Lean.Elab.Term.Do.eraseOptVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L345-L348","name":"Lean.Elab.Term.Do.eraseOptVar","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.eraseOptVar","doc":""},"Lean.Elab.Term.Do.elabDo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1653-L1661","name":"Lean.Elab.Term.Do.elabDo","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.elabDo","doc":""},"Lean.Elab.Term.Do.convertTerminalActionIntoJmp.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L296-L308","name":"Lean.Elab.Term.Do.convertTerminalActionIntoJmp.loop","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.convertTerminalActionIntoJmp.loop","doc":""},"Lean.Elab.Term.Do.convertTerminalActionIntoJmp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L295-L309","name":"Lean.Elab.Term.Do.convertTerminalActionIntoJmp","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.convertTerminalActionIntoJmp","doc":"Convert `action _ e` instructions in `c` into `let y ← e; jmp _ jp (xs y)`. "},"Lean.Elab.Term.Do.concat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L574-L585","name":"Lean.Elab.Term.Do.concat","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.concat","doc":"Return a code block that executes `terminal` and then `k` with the value produced by `terminal`.\nThis method assumes `terminal` is a terminal "},"Lean.Elab.Term.Do.attachJPs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L319-L320","name":"Lean.Elab.Term.Do.attachJPs","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.attachJPs","doc":""},"Lean.Elab.Term.Do.attachJP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L316-L317","name":"Lean.Elab.Term.Do.attachJP","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.attachJP","doc":""},"Lean.Elab.Term.Do.annotate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L882-L883","name":"Lean.Elab.Term.Do.annotate","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.annotate","doc":"Helper method for annotating `term` with the raw syntax `ref`.\nWe use this method to implement finer-grained term infos for `do`-blocks.\n\nWe use `withRef term` to make sure the synthetic position for the `with_annotate_term` is equal\nto the one for `term`. This is important for producing error messages when there is a type mismatch.\nConsider the following example:\n```\nopaque f : IO Nat\n\ndef g : IO String := do\n  f\n```\nThere is at type mismatch at `f`, but it is detected when elaborating the expanded term\ncontaining the `with_annotate_term .. f`. The current `getRef` when this `annotate` is invoked\nis not necessarily `f`. Actually, it is the whole `do`-block. By using `withRef` we ensure\nthe synthetic position for the `with_annotate_term ..` is equal to `term`.\nRecall that synthetic positions are used when generating error messages.\n"},"Lean.Elab.Term.Do.addFreshJP":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L334-L337","name":"Lean.Elab.Term.Do.addFreshJP","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.addFreshJP","doc":""},"Lean.Elab.Term.Do.VarSet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L216-L216","name":"Lean.Elab.Term.Do.VarSet","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.VarSet","doc":""},"Lean.Elab.Term.Do.Var":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L129-L129","name":"Lean.Elab.Term.Do.Var","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.Var","doc":""},"Lean.Elab.Term.Do.ToTerm.toTerm.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1060-L1079","name":"Lean.Elab.Term.Do.ToTerm.toTerm.go","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.toTerm.go","doc":""},"Lean.Elab.Term.Do.ToTerm.toTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1053-L1079","name":"Lean.Elab.Term.Do.ToTerm.toTerm","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.toTerm","doc":""},"Lean.Elab.Term.Do.ToTerm.seqToTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L964-L973","name":"Lean.Elab.Term.Do.ToTerm.seqToTerm","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.seqToTerm","doc":""},"Lean.Elab.Term.Do.ToTerm.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1081-L1082","name":"Lean.Elab.Term.Do.ToTerm.run","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.run","doc":""},"Lean.Elab.Term.Do.ToTerm.returnToTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L916-L926","name":"Lean.Elab.Term.Do.ToTerm.returnToTerm","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.returnToTerm","doc":""},"Lean.Elab.Term.Do.ToTerm.reassignToTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1006-L1012","name":"Lean.Elab.Term.Do.ToTerm.reassignToTerm","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.reassignToTerm","doc":""},"Lean.Elab.Term.Do.ToTerm.mkUVarTuple":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L912-L914","name":"Lean.Elab.Term.Do.ToTerm.mkUVarTuple","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.mkUVarTuple","doc":""},"Lean.Elab.Term.Do.ToTerm.mkNestedTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1101-L1102","name":"Lean.Elab.Term.Do.ToTerm.mkNestedTerm","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.mkNestedTerm","doc":""},"Lean.Elab.Term.Do.ToTerm.mkNestedKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1090-L1099","name":"Lean.Elab.Term.Do.ToTerm.mkNestedKind","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.mkNestedKind","doc":"Given\n   - `a` is true if the code block has a `Code.action _` exit point\n   - `r` is true if the code block has a `Code.return _ _` exit point\n   - `bc` is true if the code block has a `Code.break _` or `Code.continue _` exit point\n\n   generate Kind. See comment at the beginning of the `ToTerm` namespace. "},"Lean.Elab.Term.Do.ToTerm.mkJoinPoint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1021-L1048","name":"Lean.Elab.Term.Do.ToTerm.mkJoinPoint","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.mkJoinPoint","doc":""},"Lean.Elab.Term.Do.ToTerm.mkJmp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1050-L1051","name":"Lean.Elab.Term.Do.ToTerm.mkJmp","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.mkJmp","doc":""},"Lean.Elab.Term.Do.ToTerm.mkIte":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1014-L1019","name":"Lean.Elab.Term.Do.ToTerm.mkIte","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.mkIte","doc":""},"Lean.Elab.Term.Do.ToTerm.matchNestedTermResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1112-L1155","name":"Lean.Elab.Term.Do.ToTerm.matchNestedTermResult","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.matchNestedTermResult","doc":"Given a term `term` produced by `ToTerm.run`, pattern match on its result.\n   See comment at the beginning of the `ToTerm` namespace.\n\n   - `a` is true if the code block has a `Code.action _` exit point\n   - `r` is true if the code block has a `Code.return _ _` exit point\n   - `bc` is true if the code block has a `Code.break _` or `Code.continue _` exit point\n\n   The result is a sequence of `doElem` "},"Lean.Elab.Term.Do.ToTerm.instInhabitedKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L896-L896","name":"Lean.Elab.Term.Do.ToTerm.instInhabitedKind","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.instInhabitedKind","doc":""},"Lean.Elab.Term.Do.ToTerm.declToTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L975-L1004","name":"Lean.Elab.Term.Do.ToTerm.declToTerm","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.declToTerm","doc":""},"Lean.Elab.Term.Do.ToTerm.continueToTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L928-L938","name":"Lean.Elab.Term.Do.ToTerm.continueToTerm","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.continueToTerm","doc":""},"Lean.Elab.Term.Do.ToTerm.breakToTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L940-L950","name":"Lean.Elab.Term.Do.ToTerm.breakToTerm","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.breakToTerm","doc":""},"Lean.Elab.Term.Do.ToTerm.actionTerminalToTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L952-L962","name":"Lean.Elab.Term.Do.ToTerm.actionTerminalToTerm","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.actionTerminalToTerm","doc":""},"Lean.Elab.Term.Do.ToTerm.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L910-L910","name":"Lean.Elab.Term.Do.ToTerm.M","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.M","doc":""},"Lean.Elab.Term.Do.ToTerm.Kind.isRegular":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L898-L900","name":"Lean.Elab.Term.Do.ToTerm.Kind.isRegular","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.Kind.isRegular","doc":""},"Lean.Elab.Term.Do.ToTerm.Kind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L887-L894","name":"Lean.Elab.Term.Do.ToTerm.Kind","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.Kind","doc":""},"Lean.Elab.Term.Do.ToTerm.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L902-L908","name":"Lean.Elab.Term.Do.ToTerm.Context","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToTerm.Context","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.withNewMutableVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1178-L1179","name":"Lean.Elab.Term.Do.ToCodeBlock.withNewMutableVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.withNewMutableVars","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.withFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1197-L1198","name":"Lean.Elab.Term.Do.ToCodeBlock.withFor","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.withFor","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.tryCatchPred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1279-L1284","name":"Lean.Elab.Term.Do.ToCodeBlock.tryCatchPred","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.tryCatchPred","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1648-L1649","name":"Lean.Elab.Term.Do.ToCodeBlock.run","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.run","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.mkForInBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1204-L1209","name":"Lean.Elab.Term.Do.ToCodeBlock.mkForInBody","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.mkForInBody","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.getTryCatchUpdatedVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1271-L1277","name":"Lean.Elab.Term.Do.ToCodeBlock.getTryCatchUpdatedVars","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.getTryCatchUpdatedVars","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.expandLiftMethod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1238-L1243","name":"Lean.Elab.Term.Do.ToCodeBlock.expandLiftMethod","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.expandLiftMethod","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.ensureInsideFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1211-L1213","name":"Lean.Elab.Term.Do.ToCodeBlock.ensureInsideFor","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.ensureInsideFor","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.ensureEOS":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1215-L1217","name":"Lean.Elab.Term.Do.ToCodeBlock.ensureEOS","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.ensureEOS","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.doUnlessToCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1395-L1400","name":"Lean.Elab.Term.Do.ToCodeBlock.doUnlessToCode","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.doUnlessToCode","doc":"Generate `CodeBlock` for `doUnless; doElems`\n`doUnless` is of the form\n```\n\"unless \" >> termParser >> \"do \" >> doSeq\n```  "},"Lean.Elab.Term.Do.ToCodeBlock.doTryToCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1521-L1570","name":"Lean.Elab.Term.Do.ToCodeBlock.doTryToCode","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.doTryToCode","doc":"Generate `CodeBlock` for `doTry; doElems`\n```\ndef doTry := leading_parser \"try \" >> doSeq >> many (doCatch <|> doCatchMatch) >> optional doFinally\ndef doCatch      := leading_parser \"catch \" >> binderIdent >> optional (\":\" >> termParser) >> darrow >> doSeq\ndef doCatchMatch := leading_parser \"catch \" >> doMatchAlts\ndef doFinally    := leading_parser \"finally \" >> doSeq\n```\n"},"Lean.Elab.Term.Do.ToCodeBlock.doSeqToCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1572-L1645","name":"Lean.Elab.Term.Do.ToCodeBlock.doSeqToCode","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.doSeqToCode","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.doReturnToCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1260-L1264","name":"Lean.Elab.Term.Do.ToCodeBlock.doReturnToCode","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.doReturnToCode","doc":"Generate `CodeBlock` for `doReturn` which is of the form\n```\n\"return \" >> optional termParser\n```\n`doElems` is only used for sanity checking. "},"Lean.Elab.Term.Do.ToCodeBlock.doReassignArrowToCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1357-L1374","name":"Lean.Elab.Term.Do.ToCodeBlock.doReassignArrowToCode","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.doReassignArrowToCode","doc":"Generate `CodeBlock` for `doReassignArrow; doElems`\n`doReassignArrow` is of the form\n```\n(doIdDecl <|> doPatDecl)\n```\n"},"Lean.Elab.Term.Do.ToCodeBlock.doMatchToCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1495-L1510","name":"Lean.Elab.Term.Do.ToCodeBlock.doMatchToCode","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.doMatchToCode","doc":"Generate `CodeBlock` for `doMatch; doElems` "},"Lean.Elab.Term.Do.ToCodeBlock.doLetElseToCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1342-L1349","name":"Lean.Elab.Term.Do.ToCodeBlock.doLetElseToCode","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.doLetElseToCode","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.doLetArrowToCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1307-L1340","name":"Lean.Elab.Term.Do.ToCodeBlock.doLetArrowToCode","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.doLetArrowToCode","doc":"Generate `CodeBlock` for `doLetArrow; doElems`\n`doLetArrow` is of the form\n```\n\"let \" >> optional \"mut \" >> (doIdDecl <|> doPatDecl)\n```\nwhere\n```\ndef doIdDecl   := leading_parser ident >> optType >> leftArrow >> doElemParser\ndef doPatDecl  := leading_parser termParser >> leftArrow >> doElemParser >> optional (\" | \" >> doElemParser)\n```\n"},"Lean.Elab.Term.Do.ToCodeBlock.doIfToCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1383-L1388","name":"Lean.Elab.Term.Do.ToCodeBlock.doIfToCode","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.doIfToCode","doc":"Generate `CodeBlock` for `doIf; doElems`\n`doIf` is of the form\n```\n\"if \" >> optIdent >> termParser >> \" then \" >> doSeq\n >> many (group (try (group (\" else \" >> \" if \")) >> optIdent >> termParser >> \" then \" >> doSeq))\n >> optional (\" else \" >> doSeq)\n```  "},"Lean.Elab.Term.Do.ToCodeBlock.doForToCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1409-L1492","name":"Lean.Elab.Term.Do.ToCodeBlock.doForToCode","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.doForToCode","doc":"Generate `CodeBlock` for `doFor; doElems`\n`doFor` is of the form\n```\ndef doForDecl := leading_parser termParser >> \" in \" >> withForbidden \"do\" termParser\ndef doFor := leading_parser \"for \" >> sepBy1 doForDecl \", \" >> \"do \" >> doSeq\n```\n"},"Lean.Elab.Term.Do.ToCodeBlock.concatWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1288-L1294","name":"Lean.Elab.Term.Do.ToCodeBlock.concatWith","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.concatWith","doc":"\"Concatenate\" `c` with `doSeqToCode doElems` "},"Lean.Elab.Term.Do.ToCodeBlock.checkReassignable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1181-L1187","name":"Lean.Elab.Term.Do.ToCodeBlock.checkReassignable","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.checkReassignable","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.checkNotShadowingMutable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1189-L1195","name":"Lean.Elab.Term.Do.ToCodeBlock.checkNotShadowingMutable","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.checkNotShadowingMutable","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.checkLetArrowRHS":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1245-L1253","name":"Lean.Elab.Term.Do.ToCodeBlock.checkLetArrowRHS","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.checkLetArrowRHS","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.ToForInTermResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1200-L1202","name":"Lean.Elab.Term.Do.ToCodeBlock.ToForInTermResult","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.ToForInTermResult","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1176-L1176","name":"Lean.Elab.Term.Do.ToCodeBlock.M","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.M","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1167-L1174","name":"Lean.Elab.Term.Do.ToCodeBlock.Context","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.Context","doc":""},"Lean.Elab.Term.Do.ToCodeBlock.Catch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L1266-L1269","name":"Lean.Elab.Term.Do.ToCodeBlock.Catch","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.ToCodeBlock.Catch","doc":""},"Lean.Elab.Term.Do.JPDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L311-L314","name":"Lean.Elab.Term.Do.JPDecl","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.JPDecl","doc":""},"Lean.Elab.Term.Do.DoIfView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L705-L710","name":"Lean.Elab.Term.Do.DoIfView","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.DoIfView","doc":""},"Lean.Elab.Term.Do.CodeBlocl.toMessageData.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L231-L244","name":"Lean.Elab.Term.Do.CodeBlocl.toMessageData.loop","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.CodeBlocl.toMessageData.loop","doc":""},"Lean.Elab.Term.Do.CodeBlocl.toMessageData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L229-L245","name":"Lean.Elab.Term.Do.CodeBlocl.toMessageData","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.CodeBlocl.toMessageData","doc":""},"Lean.Elab.Term.Do.CodeBlock":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L219-L221","name":"Lean.Elab.Term.Do.CodeBlock","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.CodeBlock","doc":"A code block, and the collection of variables updated by it. "},"Lean.Elab.Term.Do.Code.getRef?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L203-L214","name":"Lean.Elab.Term.Do.Code.getRef?","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.Code.getRef?","doc":""},"Lean.Elab.Term.Do.Code":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L187-L201","name":"Lean.Elab.Term.Do.Code","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.Code","doc":"Auxiliary datastructure for representing a `do` code block, and compiling \"reassignments\" (e.g., `x := x + 1`).\n  We convert `Code` into a `Syntax` term representing the:\n  - `do`-block, or\n  - the visitor argument for the `forIn` combinator.\n\n  We say the following constructors are terminals:\n  - `break`:    for interrupting a `for x in s`\n  - `continue`: for interrupting the current iteration of a `for x in s`\n  - `return e`: for returning `e` as the result for the whole `do` computation block\n  - `action a`: for executing action `a` as a terminal\n  - `ite`:      if-then-else\n  - `match`:    pattern matching\n  - `jmp`       a goto to a join-point\n\n  We say the terminals `break`, `continue`, `action`, and `return` are \"exit points\"\n\n  Note that, `return e` is not equivalent to `action (pure e)`. Here is an example:\n  ```\n  def f (x : Nat) : IO Unit := do\n  if x == 0 then\n     return ()\n  IO.println \"hello\"\n  ```\n  Executing `#eval f 0` will not print \"hello\". Now, consider\n  ```\n  def g (x : Nat) : IO Unit := do\n  if x == 0 then\n     pure ()\n  IO.println \"hello\"\n  ```\n  The `if` statement is essentially a noop, and \"hello\" is printed when we execute `g 0`.\n\n  - `decl` represents all declaration-like `doElem`s (e.g., `let`, `have`, `let rec`).\n    The field `stx` is the actual `doElem`,\n    `vars` is the array of variables declared by it, and `cont` is the next instruction in the `do` code block.\n    `vars` is an array since we have declarations such as `let (a, b) := s`.\n\n  - `reassign` is an reassignment-like `doElem` (e.g., `x := x + 1`).\n\n  - `joinpoint` is a join point declaration: an auxiliary `let`-declaration used to represent the control-flow.\n\n  - `seq a k` executes action `a`, ignores its result, and then executes `k`.\n    We also store the do-elements `dbg_trace` and `assert!` as actions in a `seq`.\n\n  A code block `C` is well-formed if\n  - For every `jmp ref j as` in `C`, there is a `joinpoint j ps b k` and `jmp ref j as` is in `k`, and\n    `ps.size == as.size` "},"Lean.Elab.Term.Do.Alt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Do.lean#L132-L137","name":"Lean.Elab.Term.Do.Alt","docLink":"./Lean/Elab/Do.html#Lean.Elab.Term.Do.Alt","doc":"A `doMatch` alternative. `vars` is the array of variables declared by `patterns`. "},"Lean.Elab.Term.Discr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Match.lean#L70-L74","name":"Lean.Elab.Term.Discr","docLink":"./Lean/Elab/Match.html#Lean.Elab.Term.Discr","doc":""},"Lean.Elab.Term.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L170-L225","name":"Lean.Elab.Term.Context","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.Context","doc":""},"Lean.Elab.Term.ContainsPendingMVar.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L672-L693","name":"Lean.Elab.Term.ContainsPendingMVar.visit","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.ContainsPendingMVar.visit","doc":"See `containsPostponedTerm` "},"Lean.Elab.Term.ContainsPendingMVar.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L669-L669","name":"Lean.Elab.Term.ContainsPendingMVar.M","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.ContainsPendingMVar.M","doc":""},"Lean.Elab.Term.CollectPatternVars.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L319-L323","name":"Lean.Elab.Term.CollectPatternVars.main","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.main","doc":""},"Lean.Elab.Term.CollectPatternVars.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L45-L45","name":"Lean.Elab.Term.CollectPatternVars.instInhabitedState","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedState","doc":""},"Lean.Elab.Term.CollectPatternVars.instInhabitedContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L75-L75","name":"Lean.Elab.Term.CollectPatternVars.instInhabitedContext","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.instInhabitedContext","doc":""},"Lean.Elab.Term.CollectPatternVars.collect.pushNewArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L254-L259","name":"Lean.Elab.Term.CollectPatternVars.collect.pushNewArg","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.pushNewArg","doc":""},"Lean.Elab.Term.CollectPatternVars.collect.processImplicitArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L271-L275","name":"Lean.Elab.Term.CollectPatternVars.collect.processImplicitArg","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processImplicitArg","doc":""},"Lean.Elab.Term.CollectPatternVars.collect.processId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L239-L252","name":"Lean.Elab.Term.CollectPatternVars.collect.processId","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processId","doc":"Check whether `stx` is a pattern variable or constructor-like (i.e., constructor or constant tagged with `[matchPattern]` attribute) "},"Lean.Elab.Term.CollectPatternVars.collect.processExplicitArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L261-L269","name":"Lean.Elab.Term.CollectPatternVars.collect.processExplicitArg","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processExplicitArg","doc":""},"Lean.Elab.Term.CollectPatternVars.collect.processCtorAppCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L297-L317","name":"Lean.Elab.Term.CollectPatternVars.collect.processCtorAppCore","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processCtorAppCore","doc":""},"Lean.Elab.Term.CollectPatternVars.collect.processCtorAppContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L277-L295","name":"Lean.Elab.Term.CollectPatternVars.collect.processCtorAppContext","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processCtorAppContext","doc":""},"Lean.Elab.Term.CollectPatternVars.collect.processCtorApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L222-L233","name":"Lean.Elab.Term.CollectPatternVars.collect.processCtorApp","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processCtorApp","doc":""},"Lean.Elab.Term.CollectPatternVars.collect.processCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L235-L236","name":"Lean.Elab.Term.CollectPatternVars.collect.processCtor","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect.processCtor","doc":""},"Lean.Elab.Term.CollectPatternVars.collect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L122-L317","name":"Lean.Elab.Term.CollectPatternVars.collect","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.collect","doc":""},"Lean.Elab.Term.CollectPatternVars.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L40-L45","name":"Lean.Elab.Term.CollectPatternVars.State","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.State","doc":"State for the pattern variable collector monad. "},"Lean.Elab.Term.CollectPatternVars.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L47-L47","name":"Lean.Elab.Term.CollectPatternVars.M","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.M","doc":""},"Lean.Elab.Term.CollectPatternVars.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PatternVar.lean#L65-L75","name":"Lean.Elab.Term.CollectPatternVars.Context","docLink":"./Lean/Elab/PatternVar.html#Lean.Elab.Term.CollectPatternVars.Context","doc":""},"Lean.Elab.Term.BinderView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Binders.lean#L43-L60","name":"Lean.Elab.Term.BinderView","docLink":"./Lean/Elab/Binders.html#Lean.Elab.Term.BinderView","doc":"Auxiliary datatype for elaborating binders. "},"Lean.Elab.Term.BinOp.elabDefaultOrNonempty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Extra.lean#L385-L400","name":"Lean.Elab.Term.BinOp.elabDefaultOrNonempty","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.BinOp.elabDefaultOrNonempty","doc":""},"Lean.Elab.Term.BinOp.elabBinRelNoProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Extra.lean#L382-L382","name":"Lean.Elab.Term.BinOp.elabBinRelNoProp","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.BinOp.elabBinRelNoProp","doc":""},"Lean.Elab.Term.BinOp.elabBinRelCore.toBoolIfNecessary":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Extra.lean#L373-L378","name":"Lean.Elab.Term.BinOp.elabBinRelCore.toBoolIfNecessary","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.BinOp.elabBinRelCore.toBoolIfNecessary","doc":"If `noProp == true` and `e` has type `Prop`, then coerce it to `Bool`. "},"Lean.Elab.Term.BinOp.elabBinRelCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Extra.lean#L344-L378","name":"Lean.Elab.Term.BinOp.elabBinRelCore","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.BinOp.elabBinRelCore","doc":"Elaboration functionf for `binrel%` and `binrel_no_prop%` notations.\n  We use the infrastructure for `binop%` to make sure we propagate information between the left and right hand sides\n  of a binary relation.\n\n  Recall that the `binrel_no_prop%` notation is used for relations such as `==` which do not support `Prop`, but\n  we still want to be able to write `(5 > 2) == (2 > 1)`.\n"},"Lean.Elab.Term.BinOp.elabBinRel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Extra.lean#L380-L380","name":"Lean.Elab.Term.BinOp.elabBinRel","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.BinOp.elabBinRel","doc":""},"Lean.Elab.Term.BinOp.elabBinOpLazy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Extra.lean#L334-L334","name":"Lean.Elab.Term.BinOp.elabBinOpLazy","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.BinOp.elabBinOpLazy","doc":""},"Lean.Elab.Term.BinOp.elabBinOp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Extra.lean#L330-L331","name":"Lean.Elab.Term.BinOp.elabBinOp","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.BinOp.elabBinOp","doc":""},"Lean.Elab.Term.Arg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Arg.lean#L13-L16","name":"Lean.Elab.Term.Arg","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.Arg","doc":"Auxiliary inductive datatype for combining unelaborated syntax\nand already elaborated expressions. It is used to elaborate applications. "},"Lean.Elab.TacticInfo.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L137-L142","name":"Lean.Elab.TacticInfo.format","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.TacticInfo.format","doc":""},"Lean.Elab.TacticInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L67-L72","name":"Lean.Elab.TacticInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TacticInfo","doc":"The information needed to render the tactic state in the infoview.\n\n    We store the list of goals before and after the execution of a tactic.\n    We also store the metavariable context at each time since we want metavariables\n    unassigned at tactic execution time to be displayed as `?m...`. "},"Lean.Elab.Tactic.withoutRecover":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L260-L261","name":"Lean.Elab.Tactic.withoutRecover","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withoutRecover","doc":"Execute `x` with error recovery disabled "},"Lean.Elab.Tactic.withTacticInfoContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L130-L131","name":"Lean.Elab.Tactic.withTacticInfoContext","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withTacticInfoContext","doc":""},"Lean.Elab.Tactic.withRWRulesSeq.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Rewrite.lean#L49-L51","name":"Lean.Elab.Tactic.withRWRulesSeq.go","docLink":"./Lean/Elab/Tactic/Rewrite.html#Lean.Elab.Tactic.withRWRulesSeq.go","doc":""},"Lean.Elab.Tactic.withRWRulesSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Rewrite.lean#L30-L56","name":"Lean.Elab.Tactic.withRWRulesSeq","docLink":"./Lean/Elab/Tactic/Rewrite.html#Lean.Elab.Tactic.withRWRulesSeq","doc":""},"Lean.Elab.Tactic.withMainContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L329-L330","name":"Lean.Elab.Tactic.withMainContext","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withMainContext","doc":"Execute `x` using the main goal local context and instances "},"Lean.Elab.Tactic.withMacroExpansion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L284-L286","name":"Lean.Elab.Tactic.withMacroExpansion","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withMacroExpansion","doc":"Elaborate `x` with `stx` on the macro stack "},"Lean.Elab.Tactic.withLocation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Location.lean#L45-L61","name":"Lean.Elab.Tactic.withLocation","docLink":"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.withLocation","doc":"Runs the given `atLocal` and `atTarget` methods on each of the locations selected by the given `loc`.\nIf any of the selected tactic applications fail, it will call `failed` with the main goal mvar.\n "},"Lean.Elab.Tactic.withCollectingNewGoalsFrom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L74-L89","name":"Lean.Elab.Tactic.withCollectingNewGoalsFrom","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.withCollectingNewGoalsFrom","doc":"Execute `k`, and collect new \"holes\" in the resulting expression.\n"},"Lean.Elab.Tactic.withCaseRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L422-L423","name":"Lean.Elab.Tactic.withCaseRef","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withCaseRef","doc":"Use position of `=> $body` for error messages.\nIf there is a line break before `body`, the message will be displayed on `=>` only,\nbut the \"full range\" for the info view will still include `body`. "},"Lean.Elab.Tactic.unfoldTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Unfold.lean#L16-L17","name":"Lean.Elab.Tactic.unfoldTarget","docLink":"./Lean/Elab/Tactic/Unfold.html#Lean.Elab.Tactic.unfoldTarget","doc":""},"Lean.Elab.Tactic.unfoldLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Unfold.lean#L13-L14","name":"Lean.Elab.Tactic.unfoldLocalDecl","docLink":"./Lean/Elab/Tactic/Unfold.html#Lean.Elab.Tactic.unfoldLocalDecl","doc":""},"Lean.Elab.Tactic.tryTactic?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L380-L384","name":"Lean.Elab.Tactic.tryTactic?","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tryTactic?","doc":""},"Lean.Elab.Tactic.tryTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L386-L391","name":"Lean.Elab.Tactic.tryTactic","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tryTactic","doc":""},"Lean.Elab.Tactic.tryCatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L251-L253","name":"Lean.Elab.Tactic.tryCatch","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tryCatch","doc":""},"Lean.Elab.Tactic.throwNoGoalsToBeSolved":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L209-L210","name":"Lean.Elab.Tactic.throwNoGoalsToBeSolved","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.throwNoGoalsToBeSolved","doc":""},"Lean.Elab.Tactic.tagUntaggedGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L396-L412","name":"Lean.Elab.Tactic.tagUntaggedGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tagUntaggedGoals","doc":"Use `parentTag` to tag untagged goals at `newGoals`.\nIf there are multiple new untagged goals, they are named using `<parentTag>.<newSuffix>_<idx>` where `idx > 0`.\nIf there is only one new untagged goal, then we just use `parentTag` "},"Lean.Elab.Tactic.tacticToDischarge":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L35-L58","name":"Lean.Elab.Tactic.tacticToDischarge","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.tacticToDischarge","doc":"Implement a `simp` discharge function using the given tactic syntax code.\nRecall that `simp` dischargers are in `SimpM` which does not have access to `Term.State`.\nWe need access to `Term.State` to store messages and update the info tree.\nThus, we create an `IO.ref` to track these changes at `Term.State` when we execute `tacticCode`.\nWe must set this reference with the current `Term.State` before we execute `simp` using the\ngenerated `Simp.Discharge`. "},"Lean.Elab.Tactic.tacticElabAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L113-L113","name":"Lean.Elab.Tactic.tacticElabAttribute","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tacticElabAttribute","doc":""},"Lean.Elab.Tactic.tactic.dbg_cache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Cache.lean#L26-L26","name":"Lean.Elab.Tactic.tactic.dbg_cache","docLink":"./Lean/Elab/Tactic/Cache.html#Lean.Elab.Tactic.tactic.dbg_cache","doc":""},"Lean.Elab.Tactic.simpLocation.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L271-L276","name":"Lean.Elab.Tactic.simpLocation.go","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.simpLocation.go","doc":""},"Lean.Elab.Tactic.simpLocation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L261-L276","name":"Lean.Elab.Tactic.simpLocation","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.simpLocation","doc":"`simpLocation ctx discharge? varIdToLemmaId loc`\nruns the simplifier at locations specified by `loc`,\nusing the simp theorems collected in `ctx`\noptionally running a discharger specified in `discharge?` on generated subgoals.\n(Local hypotheses which have been added to the simp theorems must be recorded in\n`fvarIdToLemmaId`.)\n\nIts primary use is as the implementation of the\n`simp [...] at ...` and `simp only [...] at ...` syntaxes,\nbut can also be used by other tactics when a `Syntax` is not available.\n\nFor many tactics other than the simplifier,\none should use the `withLocation` tactic combinator\nwhen working with a `location`.\n"},"Lean.Elab.Tactic.setGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L62-L63","name":"Lean.Elab.Tactic.setGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.setGoals","doc":""},"Lean.Elab.Tactic.saveTacticInfoForToken":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L278-L280","name":"Lean.Elab.Tactic.saveTacticInfoForToken","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.saveTacticInfoForToken","doc":"Save the current tactic state for a token `stx`.\nThis method is a no-op if `stx` has no position information.\nWe use this method to save the tactic state at punctuation such as `;`\n"},"Lean.Elab.Tactic.saveState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L100-L101","name":"Lean.Elab.Tactic.saveState","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.saveState","doc":""},"Lean.Elab.Tactic.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L80-L98","name":"Lean.Elab.Tactic.run","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.run","doc":""},"Lean.Elab.Tactic.rewriteTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Rewrite.lean#L15-L20","name":"Lean.Elab.Tactic.rewriteTarget","docLink":"./Lean/Elab/Tactic/Rewrite.html#Lean.Elab.Tactic.rewriteTarget","doc":""},"Lean.Elab.Tactic.rewriteLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Rewrite.lean#L22-L28","name":"Lean.Elab.Tactic.rewriteLocalDecl","docLink":"./Lean/Elab/Tactic/Rewrite.html#Lean.Elab.Tactic.rewriteLocalDecl","doc":""},"Lean.Elab.Tactic.replaceMainGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L299-L301","name":"Lean.Elab.Tactic.replaceMainGoal","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.replaceMainGoal","doc":"Discard the first goal and replace it by the given list of goals, \nkeeping the other goals. "},"Lean.Elab.Tactic.renameInaccessibles":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L274-L305","name":"Lean.Elab.Tactic.renameInaccessibles","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.renameInaccessibles","doc":""},"Lean.Elab.Tactic.refineCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L98-L107","name":"Lean.Elab.Tactic.refineCore","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.refineCore","doc":"If `allowNaturalHoles == true`, then we allow the resultant expression to contain unassigned \"natural\" metavariables.\nRecall that \"natutal\" metavariables are created for explicit holes `_` and implicit arguments. They are meant to be\nfilled by typing constraints.\n\"Synthetic\" metavariables are meant to be filled by tactics and are usually created using the synthetic hole notation `?<hole-name>`. "},"Lean.Elab.Tactic.pruneSolvedGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L65-L68","name":"Lean.Elab.Tactic.pruneSolvedGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.pruneSolvedGoals","doc":""},"Lean.Elab.Tactic.orElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L263-L264","name":"Lean.Elab.Tactic.orElse","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.orElse","doc":""},"Lean.Elab.Tactic.mkTacticInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L115-L123","name":"Lean.Elab.Tactic.mkTacticInfo","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.mkTacticInfo","doc":""},"Lean.Elab.Tactic.mkTacticAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L110-L111","name":"Lean.Elab.Tactic.mkTacticAttribute","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.mkTacticAttribute","doc":""},"Lean.Elab.Tactic.mkSimpContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L210-L243","name":"Lean.Elab.Tactic.mkSimpContext","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.mkSimpContext","doc":"Create the `Simp.Context` for the `simp`, `dsimp`, and `simp_all` tactics.\n   If `kind != SimpKind.simp`, the `discharge` option must be `none`\n\n   TODO: generate error message if non `rfl` theorems are provided as arguments to `dsimp`.\n"},"Lean.Elab.Tactic.mkInitialTacticInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L125-L128","name":"Lean.Elab.Tactic.mkInitialTacticInfo","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.mkInitialTacticInfo","doc":""},"Lean.Elab.Tactic.logUnassignedAndAbort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L54-L56","name":"Lean.Elab.Tactic.logUnassignedAndAbort","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.logUnassignedAndAbort","doc":""},"Lean.Elab.Tactic.liftMetaTacticAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L360-L364","name":"Lean.Elab.Tactic.liftMetaTacticAux","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.liftMetaTacticAux","doc":""},"Lean.Elab.Tactic.liftMetaTactic1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L373-L378","name":"Lean.Elab.Tactic.liftMetaTactic1","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.liftMetaTactic1","doc":""},"Lean.Elab.Tactic.liftMetaTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L368-L371","name":"Lean.Elab.Tactic.liftMetaTactic","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.liftMetaTactic","doc":"Get the mvarid of the main goal, run the given `tactic`,\nthen set the new goals to be the resulting goal list."},"Lean.Elab.Tactic.liftMetaMAtMain":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L357-L358","name":"Lean.Elab.Tactic.liftMetaMAtMain","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.liftMetaMAtMain","doc":""},"Lean.Elab.Tactic.isHoleRHS":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L51-L52","name":"Lean.Elab.Tactic.isHoleRHS","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.isHoleRHS","doc":""},"Lean.Elab.Tactic.isCheckpointableTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L33-L36","name":"Lean.Elab.Tactic.isCheckpointableTactic","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.isCheckpointableTactic","doc":""},"Lean.Elab.Tactic.instOrElseTacticM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L266-L267","name":"Lean.Elab.Tactic.instOrElseTacticM","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instOrElseTacticM","doc":""},"Lean.Elab.Tactic.instMonadTacticM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L57-L57","name":"Lean.Elab.Tactic.instMonadTacticM","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instMonadTacticM","doc":""},"Lean.Elab.Tactic.instMonadExceptExceptionTacticM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L255-L257","name":"Lean.Elab.Tactic.instMonadExceptExceptionTacticM","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instMonadExceptExceptionTacticM","doc":""},"Lean.Elab.Tactic.instMonadBacktrackSavedStateTacticM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L247-L249","name":"Lean.Elab.Tactic.instMonadBacktrackSavedStateTacticM","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instMonadBacktrackSavedStateTacticM","doc":""},"Lean.Elab.Tactic.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L134-L134","name":"Lean.Elab.Tactic.instInhabitedState","docLink":"./Lean/Elab/Term.html#Lean.Elab.Tactic.instInhabitedState","doc":""},"Lean.Elab.Tactic.instInhabitedSnapshot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L148-L148","name":"Lean.Elab.Tactic.instInhabitedSnapshot","docLink":"./Lean/Elab/Term.html#Lean.Elab.Tactic.instInhabitedSnapshot","doc":""},"Lean.Elab.Tactic.instInhabitedSimpKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L26-L26","name":"Lean.Elab.Tactic.instInhabitedSimpKind","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.instInhabitedSimpKind","doc":""},"Lean.Elab.Tactic.instInhabitedCacheKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L156-L156","name":"Lean.Elab.Tactic.instInhabitedCacheKey","docLink":"./Lean/Elab/Term.html#Lean.Elab.Tactic.instInhabitedCacheKey","doc":""},"Lean.Elab.Tactic.instInhabitedCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L164-L164","name":"Lean.Elab.Tactic.instInhabitedCache","docLink":"./Lean/Elab/Term.html#Lean.Elab.Tactic.instInhabitedCache","doc":""},"Lean.Elab.Tactic.instHashableCacheKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L156-L156","name":"Lean.Elab.Tactic.instHashableCacheKey","docLink":"./Lean/Elab/Term.html#Lean.Elab.Tactic.instHashableCacheKey","doc":""},"Lean.Elab.Tactic.instBEqSimpKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L26-L26","name":"Lean.Elab.Tactic.instBEqSimpKind","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.instBEqSimpKind","doc":""},"Lean.Elab.Tactic.instBEqCacheKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L156-L156","name":"Lean.Elab.Tactic.instBEqCacheKey","docLink":"./Lean/Elab/Term.html#Lean.Elab.Tactic.instBEqCacheKey","doc":""},"Lean.Elab.Tactic.instAlternativeTacticM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L269-L271","name":"Lean.Elab.Tactic.instAlternativeTacticM","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instAlternativeTacticM","doc":""},"Lean.Elab.Tactic.getUnsolvedGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L70-L72","name":"Lean.Elab.Tactic.getUnsolvedGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getUnsolvedGoals","doc":""},"Lean.Elab.Tactic.getNameOfIdent'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L415-L416","name":"Lean.Elab.Tactic.getNameOfIdent'","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getNameOfIdent'","doc":""},"Lean.Elab.Tactic.getMainTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L325-L326","name":"Lean.Elab.Tactic.getMainTarget","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainTarget","doc":"Return expected type for the main goal. "},"Lean.Elab.Tactic.getMainTag":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L321-L322","name":"Lean.Elab.Tactic.getMainTag","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainTag","doc":"Return the main goal tag. "},"Lean.Elab.Tactic.getMainModule":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L108-L108","name":"Lean.Elab.Tactic.getMainModule","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainModule","doc":""},"Lean.Elab.Tactic.getMainGoal.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L307-L314","name":"Lean.Elab.Tactic.getMainGoal.loop","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainGoal.loop","doc":""},"Lean.Elab.Tactic.getMainGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L304-L314","name":"Lean.Elab.Tactic.getMainGoal","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainGoal","doc":"Return the first goal. "},"Lean.Elab.Tactic.getMainDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L317-L318","name":"Lean.Elab.Tactic.getMainDecl","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainDecl","doc":"Return the main goal metavariable declaration. "},"Lean.Elab.Tactic.getInductiveValFromMajor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L459-L465","name":"Lean.Elab.Tactic.getInductiveValFromMajor","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.getInductiveValFromMajor","doc":""},"Lean.Elab.Tactic.getGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L59-L60","name":"Lean.Elab.Tactic.getGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getGoals","doc":""},"Lean.Elab.Tactic.getFVarIds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L207-L208","name":"Lean.Elab.Tactic.getFVarIds","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.getFVarIds","doc":""},"Lean.Elab.Tactic.getFVarId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L199-L205","name":"Lean.Elab.Tactic.getFVarId","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.getFVarId","doc":""},"Lean.Elab.Tactic.getCurrMacroScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L107-L107","name":"Lean.Elab.Tactic.getCurrMacroScope","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getCurrMacroScope","doc":""},"Lean.Elab.Tactic.forEachVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L247-L252","name":"Lean.Elab.Tactic.forEachVar","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.forEachVar","doc":""},"Lean.Elab.Tactic.focusAndDone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L226-L230","name":"Lean.Elab.Tactic.focusAndDone","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.focusAndDone","doc":""},"Lean.Elab.Tactic.focus":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L218-L224","name":"Lean.Elab.Tactic.focus","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.focus","doc":""},"Lean.Elab.Tactic.filterOldMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L58-L60","name":"Lean.Elab.Tactic.filterOldMVars","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.filterOldMVars","doc":""},"Lean.Elab.Tactic.expandOptLocation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Location.lean#L34-L38","name":"Lean.Elab.Tactic.expandOptLocation","docLink":"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.expandOptLocation","doc":""},"Lean.Elab.Tactic.expandLocation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Location.lean#L27-L32","name":"Lean.Elab.Tactic.expandLocation","docLink":"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.expandLocation","doc":""},"Lean.Elab.Tactic.evalWithUnfoldingAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L227-L228","name":"Lean.Elab.Tactic.evalWithUnfoldingAll","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalWithUnfoldingAll","doc":""},"Lean.Elab.Tactic.evalWithReducibleAndInstances":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L224-L225","name":"Lean.Elab.Tactic.evalWithReducibleAndInstances","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalWithReducibleAndInstances","doc":""},"Lean.Elab.Tactic.evalWithReducible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L221-L222","name":"Lean.Elab.Tactic.evalWithReducible","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalWithReducible","doc":""},"Lean.Elab.Tactic.evalWithAnnotateState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L14-L17","name":"Lean.Elab.Tactic.evalWithAnnotateState","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalWithAnnotateState","doc":""},"Lean.Elab.Tactic.evalUnknown":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L166-L167","name":"Lean.Elab.Tactic.evalUnknown","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalUnknown","doc":""},"Lean.Elab.Tactic.evalUnfold.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Unfold.lean#L27-L29","name":"Lean.Elab.Tactic.evalUnfold.go","docLink":"./Lean/Elab/Tactic/Unfold.html#Lean.Elab.Tactic.evalUnfold.go","doc":""},"Lean.Elab.Tactic.evalUnfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Unfold.lean#L22-L29","name":"Lean.Elab.Tactic.evalUnfold","docLink":"./Lean/Elab/Tactic/Unfold.html#Lean.Elab.Tactic.evalUnfold","doc":"\"unfold \" ident (location)?\n"},"Lean.Elab.Tactic.evalTraceState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L175-L177","name":"Lean.Elab.Tactic.evalTraceState","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalTraceState","doc":""},"Lean.Elab.Tactic.evalTraceMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L179-L182","name":"Lean.Elab.Tactic.evalTraceMessage","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalTraceMessage","doc":""},"Lean.Elab.Tactic.evalTacticSeqBracketed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L76-L81","name":"Lean.Elab.Tactic.evalTacticSeqBracketed","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalTacticSeqBracketed","doc":""},"Lean.Elab.Tactic.evalTacticSeq1Indented":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L73-L74","name":"Lean.Elab.Tactic.evalTacticSeq1Indented","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalTacticSeq1Indented","doc":""},"Lean.Elab.Tactic.evalTacticSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L149-L150","name":"Lean.Elab.Tactic.evalTacticSeq","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalTacticSeq","doc":""},"Lean.Elab.Tactic.evalTacticAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L333-L341","name":"Lean.Elab.Tactic.evalTacticAt","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTacticAt","doc":"Evaluate `tac` at `mvarId`, and return the list of resulting subgoals. "},"Lean.Elab.Tactic.evalTactic.throwExs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L164-L170","name":"Lean.Elab.Tactic.evalTactic.throwExs","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic.throwExs","doc":""},"Lean.Elab.Tactic.evalTactic.handleEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L172-L188","name":"Lean.Elab.Tactic.evalTactic.handleEx","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic.handleEx","doc":""},"Lean.Elab.Tactic.evalTactic.expandEval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L190-L199","name":"Lean.Elab.Tactic.evalTactic.expandEval","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic.expandEval","doc":""},"Lean.Elab.Tactic.evalTactic.eval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L201-L207","name":"Lean.Elab.Tactic.evalTactic.eval","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic.eval","doc":""},"Lean.Elab.Tactic.evalTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L147-L207","name":"Lean.Elab.Tactic.evalTactic","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic","doc":""},"Lean.Elab.Tactic.evalSubstVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L259-L260","name":"Lean.Elab.Tactic.evalSubstVars","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalSubstVars","doc":""},"Lean.Elab.Tactic.evalSubst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L254-L257","name":"Lean.Elab.Tactic.evalSubst","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalSubst","doc":""},"Lean.Elab.Tactic.evalSplit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Split.lean#L13-L37","name":"Lean.Elab.Tactic.evalSplit","docLink":"./Lean/Elab/Tactic/Split.html#Lean.Elab.Tactic.evalSplit","doc":""},"Lean.Elab.Tactic.evalSpecialize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L119-L132","name":"Lean.Elab.Tactic.evalSpecialize","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalSpecialize","doc":""},"Lean.Elab.Tactic.evalSleep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L369-L372","name":"Lean.Elab.Tactic.evalSleep","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalSleep","doc":""},"Lean.Elab.Tactic.evalSkip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L164-L164","name":"Lean.Elab.Tactic.evalSkip","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalSkip","doc":""},"Lean.Elab.Tactic.evalSimpAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L286-L290","name":"Lean.Elab.Tactic.evalSimpAll","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.evalSimpAll","doc":""},"Lean.Elab.Tactic.evalSimp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L281-L284","name":"Lean.Elab.Tactic.evalSimp","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.evalSimp","doc":""},"Lean.Elab.Tactic.evalSeq1":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L22-L28","name":"Lean.Elab.Tactic.evalSeq1","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalSeq1","doc":""},"Lean.Elab.Tactic.evalRotateRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L97-L99","name":"Lean.Elab.Tactic.evalRotateRight","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalRotateRight","doc":""},"Lean.Elab.Tactic.evalRotateLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L93-L95","name":"Lean.Elab.Tactic.evalRotateLeft","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalRotateLeft","doc":""},"Lean.Elab.Tactic.evalRewriteSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Rewrite.lean#L61-L68","name":"Lean.Elab.Tactic.evalRewriteSeq","docLink":"./Lean/Elab/Tactic/Rewrite.html#Lean.Elab.Tactic.evalRewriteSeq","doc":""},"Lean.Elab.Tactic.evalRevert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L229-L234","name":"Lean.Elab.Tactic.evalRevert","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalRevert","doc":""},"Lean.Elab.Tactic.evalRenameInaccessibles":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L341-L343","name":"Lean.Elab.Tactic.evalRenameInaccessibles","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalRenameInaccessibles","doc":""},"Lean.Elab.Tactic.evalRename":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L251-L266","name":"Lean.Elab.Tactic.evalRename","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalRename","doc":""},"Lean.Elab.Tactic.evalRefl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L190-L191","name":"Lean.Elab.Tactic.evalRefl","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalRefl","doc":""},"Lean.Elab.Tactic.evalRefine'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L114-L117","name":"Lean.Elab.Tactic.evalRefine'","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalRefine'","doc":""},"Lean.Elab.Tactic.evalRefine":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L109-L112","name":"Lean.Elab.Tactic.evalRefine","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalRefine","doc":""},"Lean.Elab.Tactic.evalParen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L30-L31","name":"Lean.Elab.Tactic.evalParen","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalParen","doc":""},"Lean.Elab.Tactic.evalOpen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L101-L108","name":"Lean.Elab.Tactic.evalOpen","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalOpen","doc":""},"Lean.Elab.Tactic.evalNativeDecide":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L303-L310","name":"Lean.Elab.Tactic.evalNativeDecide","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalNativeDecide","doc":""},"Lean.Elab.Tactic.evalMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Match.lean#L52-L57","name":"Lean.Elab.Tactic.evalMatch","docLink":"./Lean/Elab/Tactic/Match.html#Lean.Elab.Tactic.evalMatch","doc":""},"Lean.Elab.Tactic.evalManyTacticOptSemi":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L68-L71","name":"Lean.Elab.Tactic.evalManyTacticOptSemi","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalManyTacticOptSemi","doc":"Evaluate `many (group (tactic >> optional \";\")) "},"Lean.Elab.Tactic.evalIntros":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L215-L227","name":"Lean.Elab.Tactic.evalIntros","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalIntros","doc":""},"Lean.Elab.Tactic.evalIntroMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L210-L213","name":"Lean.Elab.Tactic.evalIntroMatch","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalIntroMatch","doc":""},"Lean.Elab.Tactic.evalIntro.introStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L202-L208","name":"Lean.Elab.Tactic.evalIntro.introStep","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalIntro.introStep","doc":""},"Lean.Elab.Tactic.evalIntro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L193-L208","name":"Lean.Elab.Tactic.evalIntro","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalIntro","doc":""},"Lean.Elab.Tactic.evalInjections":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Injection.lean#L30-L34","name":"Lean.Elab.Tactic.evalInjections","docLink":"./Lean/Elab/Tactic/Injection.html#Lean.Elab.Tactic.evalInjections","doc":""},"Lean.Elab.Tactic.evalInjection":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Injection.lean#L21-L28","name":"Lean.Elab.Tactic.evalInjection","docLink":"./Lean/Elab/Tactic/Injection.html#Lean.Elab.Tactic.evalInjection","doc":""},"Lean.Elab.Tactic.evalInduction.checkTargets":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L529-L535","name":"Lean.Elab.Tactic.evalInduction.checkTargets","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.evalInduction.checkTargets","doc":""},"Lean.Elab.Tactic.evalInduction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L500-L535","name":"Lean.Elab.Tactic.evalInduction","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.evalInduction","doc":""},"Lean.Elab.Tactic.evalGeneralize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Generalize.lean#L14-L22","name":"Lean.Elab.Tactic.evalGeneralize","docLink":"./Lean/Elab/Tactic/Generalize.html#Lean.Elab.Tactic.evalGeneralize","doc":""},"Lean.Elab.Tactic.evalFocus":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L83-L88","name":"Lean.Elab.Tactic.evalFocus","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalFocus","doc":""},"Lean.Elab.Tactic.evalFirst.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L350-L354","name":"Lean.Elab.Tactic.evalFirst.loop","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalFirst.loop","doc":""},"Lean.Elab.Tactic.evalFirst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L345-L354","name":"Lean.Elab.Tactic.evalFirst","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalFirst","doc":""},"Lean.Elab.Tactic.evalFailIfSuccess":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L169-L173","name":"Lean.Elab.Tactic.evalFailIfSuccess","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalFailIfSuccess","doc":""},"Lean.Elab.Tactic.evalFail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L356-L362","name":"Lean.Elab.Tactic.evalFail","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalFail","doc":""},"Lean.Elab.Tactic.evalExact":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L62-L69","name":"Lean.Elab.Tactic.evalExact","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalExact","doc":""},"Lean.Elab.Tactic.evalDone":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L19-L20","name":"Lean.Elab.Tactic.evalDone","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalDone","doc":""},"Lean.Elab.Tactic.evalDelta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Delta.lean#L32-L35","name":"Lean.Elab.Tactic.evalDelta","docLink":"./Lean/Elab/Tactic/Delta.html#Lean.Elab.Tactic.evalDelta","doc":"\"delta \" ident (location)?\n"},"Lean.Elab.Tactic.evalDecide":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L280-L290","name":"Lean.Elab.Tactic.evalDecide","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalDecide","doc":""},"Lean.Elab.Tactic.evalDbgTrace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L364-L367","name":"Lean.Elab.Tactic.evalDbgTrace","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalDbgTrace","doc":""},"Lean.Elab.Tactic.evalDSimp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L309-L311","name":"Lean.Elab.Tactic.evalDSimp","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.evalDSimp","doc":""},"Lean.Elab.Tactic.evalContradiction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L187-L188","name":"Lean.Elab.Tactic.evalContradiction","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalContradiction","doc":""},"Lean.Elab.Tactic.evalConstructor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L215-L219","name":"Lean.Elab.Tactic.evalConstructor","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalConstructor","doc":""},"Lean.Elab.Tactic.evalClear":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L236-L245","name":"Lean.Elab.Tactic.evalClear","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalClear","doc":""},"Lean.Elab.Tactic.evalChoiceAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L152-L159","name":"Lean.Elab.Tactic.evalChoiceAux","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalChoiceAux","doc":""},"Lean.Elab.Tactic.evalChoice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L161-L162","name":"Lean.Elab.Tactic.evalChoice","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalChoice","doc":""},"Lean.Elab.Tactic.evalCheckpoint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Cache.lean#L55-L78","name":"Lean.Elab.Tactic.evalCheckpoint","docLink":"./Lean/Elab/Tactic/Cache.html#Lean.Elab.Tactic.evalCheckpoint","doc":""},"Lean.Elab.Tactic.evalCases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L559-L585","name":"Lean.Elab.Tactic.evalCases","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.evalCases","doc":""},"Lean.Elab.Tactic.evalCase'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L328-L339","name":"Lean.Elab.Tactic.evalCase'","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalCase'","doc":""},"Lean.Elab.Tactic.evalCase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L317-L326","name":"Lean.Elab.Tactic.evalCase","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalCase","doc":""},"Lean.Elab.Tactic.evalCalc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Calc.lean#L26-L48","name":"Lean.Elab.Tactic.evalCalc","docLink":"./Lean/Elab/Tactic/Calc.html#Lean.Elab.Tactic.evalCalc","doc":"Elaborator for the `calc` tactic mode variant. "},"Lean.Elab.Tactic.evalAssumption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L184-L185","name":"Lean.Elab.Tactic.evalAssumption","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalAssumption","doc":""},"Lean.Elab.Tactic.evalApplyLikeTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L192-L197","name":"Lean.Elab.Tactic.evalApplyLikeTactic","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalApplyLikeTactic","doc":""},"Lean.Elab.Tactic.evalApply":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L210-L213","name":"Lean.Elab.Tactic.evalApply","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.evalApply","doc":""},"Lean.Elab.Tactic.evalAnyGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L132-L147","name":"Lean.Elab.Tactic.evalAnyGoals","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalAnyGoals","doc":""},"Lean.Elab.Tactic.evalAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L54-L69","name":"Lean.Elab.Tactic.evalAlt","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.evalAlt","doc":""},"Lean.Elab.Tactic.evalAllGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L115-L130","name":"Lean.Elab.Tactic.evalAllGoals","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.evalAllGoals","doc":""},"Lean.Elab.Tactic.ensureHasNoMVars":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L343-L348","name":"Lean.Elab.Tactic.ensureHasNoMVars","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.ensureHasNoMVars","doc":""},"Lean.Elab.Tactic.elabTermWithHoles":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L91-L92","name":"Lean.Elab.Tactic.elabTermWithHoles","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.elabTermWithHoles","doc":""},"Lean.Elab.Tactic.elabTermForApply":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L152-L190","name":"Lean.Elab.Tactic.elabTermForApply","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.elabTermForApply","doc":"Given a tactic\n```\napply f\n```\nwe want the `apply` tactic to create all metavariables. The following\ndefinition will return `@f` for `f`. That is, it will **not** create\nmetavariables for implicit arguments.\nA similar method is also used in Lean 3.\nThis method is useful when applying lemmas such as:\n```\ntheorem infLeRight {s t : Set α} : s ⊓ t ≤ t\n```\nwhere `s ≤ t` here is defined as\n```\n∀ {x : α}, x ∈ s → x ∈ t\n```\n"},"Lean.Elab.Tactic.elabTermEnsuringType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L36-L47","name":"Lean.Elab.Tactic.elabTermEnsuringType","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.elabTermEnsuringType","doc":"Elaborate `stx` in the current `MVarContext`. If given, the `expectedType` will be used to help\nelaboration and then a `TypeMismatchError` will be thrown if the elaborated type doesn't match.  "},"Lean.Elab.Tactic.elabTerm.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L28-L32","name":"Lean.Elab.Tactic.elabTerm.go","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.elabTerm.go","doc":""},"Lean.Elab.Tactic.elabTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L21-L32","name":"Lean.Elab.Tactic.elabTerm","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.elabTerm","doc":"Elaborate `stx` in the current `MVarContext`. If given, the `expectedType` will be used to help\nelaboration but not enforced (use `elabTermEnsuringType` to enforce an expected type). "},"Lean.Elab.Tactic.elabSimpConfigCtxCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L19-L19","name":"Lean.Elab.Tactic.elabSimpConfigCtxCore","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.elabSimpConfigCtxCore","doc":""},"Lean.Elab.Tactic.elabSimpConfigCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L18-L18","name":"Lean.Elab.Tactic.elabSimpConfigCore","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.elabSimpConfigCore","doc":""},"Lean.Elab.Tactic.elabSimpConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L84-L88","name":"Lean.Elab.Tactic.elabSimpConfig","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.elabSimpConfig","doc":""},"Lean.Elab.Tactic.elabSimpArgs.resolveSimpIdTheorem?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L178-L197","name":"Lean.Elab.Tactic.elabSimpArgs.resolveSimpIdTheorem?","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.elabSimpArgs.resolveSimpIdTheorem?","doc":""},"Lean.Elab.Tactic.elabSimpArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L133-L197","name":"Lean.Elab.Tactic.elabSimpArgs","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.elabSimpArgs","doc":"Elaborate extra simp theorems provided to `simp`. `stx` is of the form `\"[\" simpTheorem,* \"]\"`\nIf `eraseLocal == true`, then we consider local declarations when resolving names for erased theorems (`- id`),\nthis option only makes sense for `simp_all` or `*` is used.\n"},"Lean.Elab.Tactic.elabSetOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L110-L113","name":"Lean.Elab.Tactic.elabSetOption","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.elabSetOption","doc":""},"Lean.Elab.Tactic.elabRewriteConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Rewrite.lean#L59-L59","name":"Lean.Elab.Tactic.elabRewriteConfig","docLink":"./Lean/Elab/Tactic/Rewrite.html#Lean.Elab.Tactic.elabRewriteConfig","doc":""},"Lean.Elab.Tactic.elabDSimpConfigCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L20-L20","name":"Lean.Elab.Tactic.elabDSimpConfigCore","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.elabDSimpConfigCore","doc":""},"Lean.Elab.Tactic.elabCasesTargets":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L537-L557","name":"Lean.Elab.Tactic.elabCasesTargets","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.elabCasesTargets","doc":""},"Lean.Elab.Tactic.elabCalcSteps.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Calc.lean#L19-L22","name":"Lean.Elab.Tactic.elabCalcSteps.go","docLink":"./Lean/Elab/Tactic/Calc.html#Lean.Elab.Tactic.elabCalcSteps.go","doc":""},"Lean.Elab.Tactic.elabCalcSteps":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Calc.lean#L12-L22","name":"Lean.Elab.Tactic.elabCalcSteps","docLink":"./Lean/Elab/Tactic/Calc.html#Lean.Elab.Tactic.elabCalcSteps","doc":""},"Lean.Elab.Tactic.elabAsFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L233-L249","name":"Lean.Elab.Tactic.elabAsFVar","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.elabAsFVar","doc":"Elaborate `stx`. If it a free variable, return it. Otherwise, assert it, and return the free variable.\nNote that, the main goal is updated when `Meta.assert` is used in the second case. "},"Lean.Elab.Tactic.dsimpLocation.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L302-L307","name":"Lean.Elab.Tactic.dsimpLocation.go","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.dsimpLocation.go","doc":""},"Lean.Elab.Tactic.dsimpLocation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L292-L307","name":"Lean.Elab.Tactic.dsimpLocation","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.dsimpLocation","doc":""},"Lean.Elab.Tactic.done":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L212-L216","name":"Lean.Elab.Tactic.done","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.done","doc":""},"Lean.Elab.Tactic.deltaTarget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Delta.lean#L21-L27","name":"Lean.Elab.Tactic.deltaTarget","docLink":"./Lean/Elab/Tactic/Delta.html#Lean.Elab.Tactic.deltaTarget","doc":""},"Lean.Elab.Tactic.deltaLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Delta.lean#L13-L19","name":"Lean.Elab.Tactic.deltaLocalDecl","docLink":"./Lean/Elab/Tactic/Delta.html#Lean.Elab.Tactic.deltaLocalDecl","doc":""},"Lean.Elab.Tactic.configElab":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Config.lean#L13-L13","name":"Lean.Elab.Tactic.configElab","docLink":"./Lean/Elab/Tactic/Config.html#Lean.Elab.Tactic.configElab","doc":""},"Lean.Elab.Tactic.closeUsingOrAdmit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L233-L245","name":"Lean.Elab.Tactic.closeUsingOrAdmit","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.closeUsingOrAdmit","doc":"Close the main goal using the given tactic. If it fails, log the error and `admit` "},"Lean.Elab.Tactic.closeMainGoalUsing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/ElabTerm.lean#L50-L52","name":"Lean.Elab.Tactic.closeMainGoalUsing","docLink":"./Lean/Elab/Tactic/ElabTerm.html#Lean.Elab.Tactic.closeMainGoalUsing","doc":"Try to close main goal using `x target`, where `target` is the type of the main goal.  "},"Lean.Elab.Tactic.closeMainGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L351-L355","name":"Lean.Elab.Tactic.closeMainGoal","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.closeMainGoal","doc":"Close main goal using the given expression. If `checkUnassigned == true`, then `val` must not contain unassinged metavariables. "},"Lean.Elab.Tactic.checkConfigElab":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Config.lean#L31-L31","name":"Lean.Elab.Tactic.checkConfigElab","docLink":"./Lean/Elab/Tactic/Config.html#Lean.Elab.Tactic.checkConfigElab","doc":""},"Lean.Elab.Tactic.appendGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L294-L295","name":"Lean.Elab.Tactic.appendGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.appendGoals","doc":"Add the given goals at the end of the current goals collection. "},"Lean.Elab.Tactic.addCheckpoints.push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L45-L52","name":"Lean.Elab.Tactic.addCheckpoints.push","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.addCheckpoints.push","doc":""},"Lean.Elab.Tactic.addCheckpoints.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L54-L65","name":"Lean.Elab.Tactic.addCheckpoints.go","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.addCheckpoints.go","doc":""},"Lean.Elab.Tactic.addCheckpoints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/BuiltinTactic.lean#L38-L65","name":"Lean.Elab.Tactic.addCheckpoints","docLink":"./Lean/Elab/Tactic/BuiltinTactic.html#Lean.Elab.Tactic.addCheckpoints","doc":""},"Lean.Elab.Tactic.adaptExpander":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L289-L291","name":"Lean.Elab.Tactic.adaptExpander","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.adaptExpander","doc":"Adapt a syntax transformation to a regular tactic evaluator. "},"Lean.Elab.Tactic.TacticM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L52-L52","name":"Lean.Elab.Tactic.TacticM","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM","doc":""},"Lean.Elab.Tactic.Tactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L53-L53","name":"Lean.Elab.Tactic.Tactic","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic","doc":""},"Lean.Elab.Tactic.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L132-L134","name":"Lean.Elab.Tactic.State","docLink":"./Lean/Elab/Term.html#Lean.Elab.Tactic.State","doc":"State of the `TacticM` monad.\n"},"Lean.Elab.Tactic.Snapshot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L142-L148","name":"Lean.Elab.Tactic.Snapshot","docLink":"./Lean/Elab/Term.html#Lean.Elab.Tactic.Snapshot","doc":"Snapshots are used to implement the `save` tactic.\nThis tactic caches the state of the system, and allows us to \"replay\"\nexpensive proofs efficiently. This is only relevant implementing the\nLSP server.\n"},"Lean.Elab.Tactic.SimpKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L22-L26","name":"Lean.Elab.Tactic.SimpKind","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.SimpKind","doc":""},"Lean.Elab.Tactic.Simp.DischargeWrapper.with":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L64-L72","name":"Lean.Elab.Tactic.Simp.DischargeWrapper.with","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.Simp.DischargeWrapper.with","doc":""},"Lean.Elab.Tactic.Simp.DischargeWrapper":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L60-L62","name":"Lean.Elab.Tactic.Simp.DischargeWrapper","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.Simp.DischargeWrapper","doc":""},"Lean.Elab.Tactic.SavedState.restore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L103-L105","name":"Lean.Elab.Tactic.SavedState.restore","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.SavedState.restore","doc":""},"Lean.Elab.Tactic.SavedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L48-L50","name":"Lean.Elab.Tactic.SavedState","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.SavedState","doc":""},"Lean.Elab.Tactic.ResolveSimpIdResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L123-L126","name":"Lean.Elab.Tactic.ResolveSimpIdResult","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.ResolveSimpIdResult","doc":""},"Lean.Elab.Tactic.MkSimpContextResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L199-L202","name":"Lean.Elab.Tactic.MkSimpContextResult","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.MkSimpContextResult","doc":""},"Lean.Elab.Tactic.Location":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Location.lean#L12-L17","name":"Lean.Elab.Tactic.Location","docLink":"./Lean/Elab/Tactic/Location.html#Lean.Elab.Tactic.Location","doc":"Denotes a set of locations where a tactic should be applied for the main goal. See also `withLocation`. "},"Lean.Elab.Tactic.Lean.Elab.Tactic.evalCongr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Congr.lean#L12-L18","name":"Lean.Elab.Tactic.Lean.Elab.Tactic.evalCongr","docLink":"./Lean/Elab/Tactic/Congr.html#Lean.Elab.Tactic.Lean.Elab.Tactic.evalCongr","doc":""},"Lean.Elab.Tactic.EvalTacticFailure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L143-L145","name":"Lean.Elab.Tactic.EvalTacticFailure","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.EvalTacticFailure","doc":"Auxiliary datastructure for capturing exceptions at `evalTactic`.\n"},"Lean.Elab.Tactic.ElimApp.setMotiveArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L169-L176","name":"Lean.Elab.Tactic.ElimApp.setMotiveArg","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.ElimApp.setMotiveArg","doc":"Given a goal `... targets ... |- C[targets]` associated with `mvarId`, assign\n`motiveArg := fun targets => C[targets]` "},"Lean.Elab.Tactic.ElimApp.reorderAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L234-L245","name":"Lean.Elab.Tactic.ElimApp.reorderAlts","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.ElimApp.reorderAlts","doc":"If `altsSyntax` is not empty we reorder `alts` using the order the alternatives have been provided\n  in `altsSyntax`. Motivations:\n\n  1- It improves the effectiveness of the `checkpoint` and `save` tactics. Consider the following example:\n  ```lean\n  example (h₁ : p ∨ q) (h₂ : p → x = 0) (h₃ : q → y = 0) : x * y = 0 := by\n    cases h₁ with\n    | inr h =>\n      sleep 5000 -- sleeps for 5 seconds\n      save\n      have : y = 0 := h₃ h\n      -- We can confortably work here\n    | inl h => stop ...\n  ```\n  If we do reorder, the `inl` alternative will be executed first. Moreover, as we type in the `inr` alternative,\n  type errors will \"swallow\" the `inl` alternative and affect the tactic state at `save` making it ineffective.\n\n  2- The errors are produced in the same order the appear in the code above. This is not super important when using IDEs.\n"},"Lean.Elab.Tactic.ElimApp.mkElimApp.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L115-L151","name":"Lean.Elab.Tactic.ElimApp.mkElimApp.loop","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.ElimApp.mkElimApp.loop","doc":""},"Lean.Elab.Tactic.ElimApp.mkElimApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L114-L165","name":"Lean.Elab.Tactic.ElimApp.mkElimApp","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.ElimApp.mkElimApp","doc":"Construct the an eliminator/recursor application. `targets` contains the explicit and implicit targets for\nthe eliminator. For example, the indices of builtin recursors are considered implicit targets.\nRemark: the method `addImplicitTargets` may be used to compute the sequence of implicit and explicit targets\nfrom the explicit ones.\n"},"Lean.Elab.Tactic.ElimApp.evalAlts.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L257-L327","name":"Lean.Elab.Tactic.ElimApp.evalAlts.go","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.ElimApp.evalAlts.go","doc":""},"Lean.Elab.Tactic.ElimApp.evalAlts.applyPreTac":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L328-L332","name":"Lean.Elab.Tactic.ElimApp.evalAlts.applyPreTac","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.ElimApp.evalAlts.applyPreTac","doc":""},"Lean.Elab.Tactic.ElimApp.evalAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L247-L332","name":"Lean.Elab.Tactic.ElimApp.evalAlts","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.ElimApp.evalAlts","doc":""},"Lean.Elab.Tactic.ElimApp.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L80-L86","name":"Lean.Elab.Tactic.ElimApp.State","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.ElimApp.State","doc":""},"Lean.Elab.Tactic.ElimApp.Result":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L103-L106","name":"Lean.Elab.Tactic.ElimApp.Result","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.ElimApp.Result","doc":""},"Lean.Elab.Tactic.ElimApp.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L88-L88","name":"Lean.Elab.Tactic.ElimApp.M","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.ElimApp.M","doc":""},"Lean.Elab.Tactic.ElimApp.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Induction.lean#L76-L78","name":"Lean.Elab.Tactic.ElimApp.Context","docLink":"./Lean/Elab/Tactic/Induction.html#Lean.Elab.Tactic.ElimApp.Context","doc":""},"Lean.Elab.Tactic.ElabSimpArgsResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Simp.lean#L119-L121","name":"Lean.Elab.Tactic.ElabSimpArgsResult","docLink":"./Lean/Elab/Tactic/Simp.html#Lean.Elab.Tactic.ElabSimpArgsResult","doc":""},"Lean.Elab.Tactic.Conv.updateLhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L64-L68","name":"Lean.Elab.Tactic.Conv.updateLhs","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.updateLhs","doc":"`⊢ lhs = rhs` ~~> `⊢ lhs' = rhs` using `h : lhs = lhs'`. "},"Lean.Elab.Tactic.Conv.remarkAsConvGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L114-L124","name":"Lean.Elab.Tactic.Conv.remarkAsConvGoal","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.remarkAsConvGoal","doc":"Mark goals of the form `⊢ a = ?m ..` with the conv goal annotation "},"Lean.Elab.Tactic.Conv.mkConvGoalFor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L17-L22","name":"Lean.Elab.Tactic.Conv.mkConvGoalFor","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.mkConvGoalFor","doc":"Given `lhs`, returns a pair of metavariables `(?rhs, ?newGoal)`\nwhere `?newGoal : lhs = ?rhs`."},"Lean.Elab.Tactic.Conv.matchPattern?.go?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Pattern.lean#L25-L33","name":"Lean.Elab.Tactic.Conv.matchPattern?.go?","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.matchPattern?.go?","doc":""},"Lean.Elab.Tactic.Conv.matchPattern?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Pattern.lean#L20-L34","name":"Lean.Elab.Tactic.Conv.matchPattern?","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.matchPattern?","doc":""},"Lean.Elab.Tactic.Conv.markAsConvGoal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L24-L28","name":"Lean.Elab.Tactic.Conv.markAsConvGoal","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.markAsConvGoal","doc":""},"Lean.Elab.Tactic.Conv.getRhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L60-L61","name":"Lean.Elab.Tactic.Conv.getRhs","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.getRhs","doc":""},"Lean.Elab.Tactic.Conv.getLhsRhsCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L49-L52","name":"Lean.Elab.Tactic.Conv.getLhsRhsCore","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.getLhsRhsCore","doc":""},"Lean.Elab.Tactic.Conv.getLhsRhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L54-L55","name":"Lean.Elab.Tactic.Conv.getLhsRhs","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.getLhsRhs","doc":""},"Lean.Elab.Tactic.Conv.getLhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L57-L58","name":"Lean.Elab.Tactic.Conv.getLhs","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.getLhs","doc":""},"Lean.Elab.Tactic.Conv.extLetBodyCongr?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Congr.lean#L110-L136","name":"Lean.Elab.Tactic.Conv.extLetBodyCongr?","docLink":"./Lean/Elab/Tactic/Conv/Congr.html#Lean.Elab.Tactic.Conv.extLetBodyCongr?","doc":""},"Lean.Elab.Tactic.Conv.evalZeta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L84-L86","name":"Lean.Elab.Tactic.Conv.evalZeta","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalZeta","doc":""},"Lean.Elab.Tactic.Conv.evalWhnf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L76-L78","name":"Lean.Elab.Tactic.Conv.evalWhnf","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalWhnf","doc":""},"Lean.Elab.Tactic.Conv.evalUnfold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Unfold.lean#L12-L14","name":"Lean.Elab.Tactic.Conv.evalUnfold","docLink":"./Lean/Elab/Tactic/Conv/Unfold.html#Lean.Elab.Tactic.Conv.evalUnfold","doc":""},"Lean.Elab.Tactic.Conv.evalSkip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Congr.lean#L89-L89","name":"Lean.Elab.Tactic.Conv.evalSkip","docLink":"./Lean/Elab/Tactic/Conv/Congr.html#Lean.Elab.Tactic.Conv.evalSkip","doc":""},"Lean.Elab.Tactic.Conv.evalSimpMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Simp.lean#L25-L26","name":"Lean.Elab.Tactic.Conv.evalSimpMatch","docLink":"./Lean/Elab/Tactic/Conv/Simp.html#Lean.Elab.Tactic.Conv.evalSimpMatch","doc":""},"Lean.Elab.Tactic.Conv.evalSimp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Simp.lean#L19-L23","name":"Lean.Elab.Tactic.Conv.evalSimp","docLink":"./Lean/Elab/Tactic/Conv/Simp.html#Lean.Elab.Tactic.Conv.evalSimp","doc":""},"Lean.Elab.Tactic.Conv.evalRhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Congr.lean#L95-L97","name":"Lean.Elab.Tactic.Conv.evalRhs","docLink":"./Lean/Elab/Tactic/Conv/Congr.html#Lean.Elab.Tactic.Conv.evalRhs","doc":""},"Lean.Elab.Tactic.Conv.evalRewrite":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Rewrite.lean#L13-L20","name":"Lean.Elab.Tactic.Conv.evalRewrite","docLink":"./Lean/Elab/Tactic/Conv/Rewrite.html#Lean.Elab.Tactic.Conv.evalRewrite","doc":""},"Lean.Elab.Tactic.Conv.evalReduce":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L80-L82","name":"Lean.Elab.Tactic.Conv.evalReduce","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalReduce","doc":""},"Lean.Elab.Tactic.Conv.evalPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Pattern.lean#L57-L72","name":"Lean.Elab.Tactic.Conv.evalPattern","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.evalPattern","doc":""},"Lean.Elab.Tactic.Conv.evalParen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L110-L111","name":"Lean.Elab.Tactic.Conv.evalParen","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalParen","doc":""},"Lean.Elab.Tactic.Conv.evalNestedTacticCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L126-L128","name":"Lean.Elab.Tactic.Conv.evalNestedTacticCore","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalNestedTacticCore","doc":""},"Lean.Elab.Tactic.Conv.evalNestedTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L130-L136","name":"Lean.Elab.Tactic.Conv.evalNestedTactic","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalNestedTactic","doc":""},"Lean.Elab.Tactic.Conv.evalNestedConv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L99-L100","name":"Lean.Elab.Tactic.Conv.evalNestedConv","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalNestedConv","doc":""},"Lean.Elab.Tactic.Conv.evalLhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Congr.lean#L91-L93","name":"Lean.Elab.Tactic.Conv.evalLhs","docLink":"./Lean/Elab/Tactic/Conv/Congr.html#Lean.Elab.Tactic.Conv.evalLhs","doc":""},"Lean.Elab.Tactic.Conv.evalFirst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L163-L164","name":"Lean.Elab.Tactic.Conv.evalFirst","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalFirst","doc":""},"Lean.Elab.Tactic.Conv.evalExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Congr.lean#L172-L178","name":"Lean.Elab.Tactic.Conv.evalExt","docLink":"./Lean/Elab/Tactic/Conv/Congr.html#Lean.Elab.Tactic.Conv.evalExt","doc":""},"Lean.Elab.Tactic.Conv.evalDelta":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Delta.lean#L12-L15","name":"Lean.Elab.Tactic.Conv.evalDelta","docLink":"./Lean/Elab/Tactic/Conv/Delta.html#Lean.Elab.Tactic.Conv.evalDelta","doc":""},"Lean.Elab.Tactic.Conv.evalConvSeqBracketed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L91-L97","name":"Lean.Elab.Tactic.Conv.evalConvSeqBracketed","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalConvSeqBracketed","doc":""},"Lean.Elab.Tactic.Conv.evalConvSeq1Indented":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L88-L89","name":"Lean.Elab.Tactic.Conv.evalConvSeq1Indented","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalConvSeq1Indented","doc":""},"Lean.Elab.Tactic.Conv.evalConvSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L102-L103","name":"Lean.Elab.Tactic.Conv.evalConvSeq","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalConvSeq","doc":""},"Lean.Elab.Tactic.Conv.evalConvConvSeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L105-L108","name":"Lean.Elab.Tactic.Conv.evalConvConvSeq","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalConvConvSeq","doc":""},"Lean.Elab.Tactic.Conv.evalConv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L150-L161","name":"Lean.Elab.Tactic.Conv.evalConv","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.evalConv","doc":""},"Lean.Elab.Tactic.Conv.evalCongr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Congr.lean#L69-L70","name":"Lean.Elab.Tactic.Conv.evalCongr","docLink":"./Lean/Elab/Tactic/Conv/Congr.html#Lean.Elab.Tactic.Conv.evalCongr","doc":""},"Lean.Elab.Tactic.Conv.evalChange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Change.lean#L12-L22","name":"Lean.Elab.Tactic.Conv.evalChange","docLink":"./Lean/Elab/Tactic/Conv/Change.html#Lean.Elab.Tactic.Conv.evalChange","doc":""},"Lean.Elab.Tactic.Conv.evalArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Congr.lean#L99-L108","name":"Lean.Elab.Tactic.Conv.evalArg","docLink":"./Lean/Elab/Tactic/Conv/Congr.html#Lean.Elab.Tactic.Conv.evalArg","doc":""},"Lean.Elab.Tactic.Conv.convert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L33-L47","name":"Lean.Elab.Tactic.Conv.convert","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.convert","doc":"Given `lhs`, runs the `conv` tactic with the goal `⊢ lhs = ?rhs`.\n`conv` should produce no remaining goals that are not solvable with refl.\nReturns a pair of instantiated expressions `(?rhs, ?p)` where `?p : lhs = ?rhs`. "},"Lean.Elab.Tactic.Conv.congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Congr.lean#L25-L67","name":"Lean.Elab.Tactic.Conv.congr","docLink":"./Lean/Elab/Tactic/Conv/Congr.html#Lean.Elab.Tactic.Conv.congr","doc":""},"Lean.Elab.Tactic.Conv.changeLhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Basic.lean#L71-L74","name":"Lean.Elab.Tactic.Conv.changeLhs","docLink":"./Lean/Elab/Tactic/Conv/Basic.html#Lean.Elab.Tactic.Conv.changeLhs","doc":"Replace `lhs` with the definitionally equal `lhs'`. "},"Lean.Elab.Tactic.Conv.applySimpResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Conv/Simp.lean#L13-L17","name":"Lean.Elab.Tactic.Conv.applySimpResult","docLink":"./Lean/Elab/Tactic/Conv/Simp.html#Lean.Elab.Tactic.Conv.applySimpResult","doc":""},"Lean.Elab.Tactic.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L38-L46","name":"Lean.Elab.Tactic.Context","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Context","doc":""},"Lean.Elab.Tactic.CacheKey":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L153-L156","name":"Lean.Elab.Tactic.CacheKey","docLink":"./Lean/Elab/Term.html#Lean.Elab.Tactic.CacheKey","doc":"Key for the cache used to implement the `save` tactic.\n"},"Lean.Elab.Tactic.Cache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Term.lean#L161-L164","name":"Lean.Elab.Tactic.Cache","docLink":"./Lean/Elab/Term.html#Lean.Elab.Tactic.Cache","doc":"Cache for the `save` tactic.\n"},"Lean.Elab.Structural.structuralRecursion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Main.lean#L80-L93","name":"Lean.Elab.Structural.structuralRecursion","docLink":"./Lean/Elab/PreDefinition/Structural/Main.html#Lean.Elab.Structural.structuralRecursion","doc":""},"Lean.Elab.Structural.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L49-L50","name":"Lean.Elab.Structural.run","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.run","doc":""},"Lean.Elab.Structural.registerEqnsInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Eqns.lean#L82-L83","name":"Lean.Elab.Structural.registerEqnsInfo","docLink":"./Lean/Elab/PreDefinition/Structural/Eqns.html#Lean.Elab.Structural.registerEqnsInfo","doc":""},"Lean.Elab.Structural.refinedArgType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/BRecOn.lean#L90-L98","name":"Lean.Elab.Structural.refinedArgType","docLink":"./Lean/Elab/PreDefinition/Structural/BRecOn.html#Lean.Elab.Structural.refinedArgType","doc":"This method is used after `matcherApp.addArg arg` to check whether the new type of `arg` has been \"refined/modified\"\nin at least one alternative.\n"},"Lean.Elab.Structural.recArgHasLooseBVarsAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L61-L64","name":"Lean.Elab.Structural.recArgHasLooseBVarsAt","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.recArgHasLooseBVarsAt","doc":"Return true iff `e` contains an application `recFnName .. t ..` where the term `t` is\n  the argument we are trying to recurse on, and it contains loose bound variables.\n\n  We use this test to decide whether we should process a matcher-application as a regular\n  applicaton or not. That is, whether we should push the `below` argument should be affected by the matcher or not.\n  If `e` does not contain an application of the form `recFnName .. t ..`, then we know\n  the recursion doesn't depend on any pattern variable in this matcher.\n"},"Lean.Elab.Structural.preprocess":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Preprocess.lean#L27-L33","name":"Lean.Elab.Structural.preprocess","docLink":"./Lean/Elab/PreDefinition/Structural/Preprocess.html#Lean.Elab.Structural.preprocess","doc":"Beta reduce terms where the recursive function occurs in the lambda term.\nThis is useful to improve the effectiveness of `elimRecursion`.\nExample:\n```\ndef f : Nat → Nat\n  | 0 => 1\n  | i+1 => (fun x => f x) i\n```\n"},"Lean.Elab.Structural.mkIndPredBRecOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/IndPred.lean#L64-L97","name":"Lean.Elab.Structural.mkIndPredBRecOn","docLink":"./Lean/Elab/PreDefinition/Structural/IndPred.html#Lean.Elab.Structural.mkIndPredBRecOn","doc":""},"Lean.Elab.Structural.mkEqns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Eqns.lean#L58-L78","name":"Lean.Elab.Structural.mkEqns","docLink":"./Lean/Elab/PreDefinition/Structural/Eqns.html#Lean.Elab.Structural.mkEqns","doc":""},"Lean.Elab.Structural.mkBRecOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/BRecOn.lean#L199-L239","name":"Lean.Elab.Structural.mkBRecOn","docLink":"./Lean/Elab/PreDefinition/Structural/BRecOn.html#Lean.Elab.Structural.mkBRecOn","doc":""},"Lean.Elab.Structural.instInhabitedM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L46-L47","name":"Lean.Elab.Structural.instInhabitedM","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.instInhabitedM","doc":""},"Lean.Elab.Structural.instInhabitedEqnInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Eqns.lean#L22-L22","name":"Lean.Elab.Structural.instInhabitedEqnInfo","docLink":"./Lean/Elab/PreDefinition/Structural/Eqns.html#Lean.Elab.Structural.instInhabitedEqnInfo","doc":""},"Lean.Elab.Structural.getUnfoldFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Eqns.lean#L91-L93","name":"Lean.Elab.Structural.getUnfoldFor?","docLink":"./Lean/Elab/PreDefinition/Structural/Eqns.html#Lean.Elab.Structural.getUnfoldFor?","doc":""},"Lean.Elab.Structural.getStructuralRecArgPosImp?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Eqns.lean#L96-L98","name":"Lean.Elab.Structural.getStructuralRecArgPosImp?","docLink":"./Lean/Elab/PreDefinition/Structural/Eqns.html#Lean.Elab.Structural.getStructuralRecArgPosImp?","doc":""},"Lean.Elab.Structural.getEqnsFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Eqns.lean#L85-L89","name":"Lean.Elab.Structural.getEqnsFor?","docLink":"./Lean/Elab/PreDefinition/Structural/Eqns.html#Lean.Elab.Structural.getEqnsFor?","doc":""},"Lean.Elab.Structural.findRecArg.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/FindRecArg.lean#L74-L137","name":"Lean.Elab.Structural.findRecArg.go","docLink":"./Lean/Elab/PreDefinition/Structural/FindRecArg.html#Lean.Elab.Structural.findRecArg.go","doc":""},"Lean.Elab.Structural.findRecArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/FindRecArg.lean#L58-L139","name":"Lean.Elab.Structural.findRecArg","docLink":"./Lean/Elab/PreDefinition/Structural/FindRecArg.html#Lean.Elab.Structural.findRecArg","doc":"Try to find an argument that is structurally smaller in every recursive application.\n  We use this argument to justify termination using the auxiliary `brecOn` construction.\n\n  We give preference for arguments that are *not* indices of inductive types of other arguments.\n  See issue #837 for an example where we can show termination using the index of an inductive family, but\n  we don't get the desired definitional equalities.\n\n  We perform two passes. In the first-pass, we only consider arguments that are not indices.\n  In the second pass, we consider them.\n\n  TODO: explore whether there are better solutions, and whether there are other ways to break the heuristic used\n  for creating the smart unfolding auxiliary definition.\n"},"Lean.Elab.Structural.eqnInfoExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Eqns.lean#L80-L80","name":"Lean.Elab.Structural.eqnInfoExt","docLink":"./Lean/Elab/PreDefinition/Structural/Eqns.html#Lean.Elab.Structural.eqnInfoExt","doc":""},"Lean.Elab.Structural.addSmartUnfoldingDefAux.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/SmartUnfolding.lean#L29-L62","name":"Lean.Elab.Structural.addSmartUnfoldingDefAux.visit","docLink":"./Lean/Elab/PreDefinition/Structural/SmartUnfolding.html#Lean.Elab.Structural.addSmartUnfoldingDefAux.visit","doc":"Auxiliary method for annotating `match`-alternatives with `markSmartUnfoldingMatch` and `markSmartUnfoldingMatchAlt`.\n\n     It uses the following approach:\n     - Whenever it finds a `match` application `e` s.t. `recArgHasLooseBVarsAt preDef.declName recArgPos e`,\n       it marks the `match` with `markSmartUnfoldingMatch`, and each alternative that does not contain a nested marked `match`\n       is marked with `markSmartUnfoldingMatchAlt`.\n\n     Recall that the condition `recArgHasLooseBVarsAt preDef.declName recArgPos e` is the one used at `mkBRecOn`.\n  "},"Lean.Elab.Structural.addSmartUnfoldingDefAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/SmartUnfolding.lean#L12-L62","name":"Lean.Elab.Structural.addSmartUnfoldingDefAux","docLink":"./Lean/Elab/PreDefinition/Structural/SmartUnfolding.html#Lean.Elab.Structural.addSmartUnfoldingDefAux","doc":""},"Lean.Elab.Structural.addSmartUnfoldingDef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/SmartUnfolding.lean#L64-L69","name":"Lean.Elab.Structural.addSmartUnfoldingDef","docLink":"./Lean/Elab/PreDefinition/Structural/SmartUnfolding.html#Lean.Elab.Structural.addSmartUnfoldingDef","doc":""},"Lean.Elab.Structural.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L36-L42","name":"Lean.Elab.Structural.State","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.State","doc":""},"Lean.Elab.Structural.RecArgInfo.recArgPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L33-L34","name":"Lean.Elab.Structural.RecArgInfo.recArgPos","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.RecArgInfo.recArgPos","doc":""},"Lean.Elab.Structural.RecArgInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L11-L31","name":"Lean.Elab.Structural.RecArgInfo","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.RecArgInfo","doc":""},"Lean.Elab.Structural.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Basic.lean#L44-L44","name":"Lean.Elab.Structural.M","docLink":"./Lean/Elab/PreDefinition/Structural/Basic.html#Lean.Elab.Structural.M","doc":""},"Lean.Elab.Structural.EqnInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Structural/Eqns.lean#L20-L22","name":"Lean.Elab.Structural.EqnInfo","docLink":"./Lean/Elab/PreDefinition/Structural/Eqns.html#Lean.Elab.Structural.EqnInfo","doc":""},"Lean.Elab.RecKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L46-L48","name":"Lean.Elab.RecKind","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind","doc":"Whether a declaration is default, partial or nonrec. "},"Lean.Elab.PrintImportsResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Import.lean#L50-L52","name":"Lean.Elab.PrintImportsResult","docLink":"./Lean/Elab/Import.html#Lean.Elab.PrintImportsResult","doc":""},"Lean.Elab.PrintImportResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Import.lean#L45-L48","name":"Lean.Elab.PrintImportResult","docLink":"./Lean/Elab/Import.html#Lean.Elab.PrintImportResult","doc":""},"Lean.Elab.PreDefinition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Basic.lean#L22-L30","name":"Lean.Elab.PreDefinition","docLink":"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition","doc":"A (potentially recursive) definition.\nThe elaborator converts it into Kernel definitions using many different strategies.\n"},"Lean.Elab.OpenDecl.resolveOpenDeclId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Open.lean#L109-L111","name":"Lean.Elab.OpenDecl.resolveOpenDeclId","docLink":"./Lean/Elab/Open.html#Lean.Elab.OpenDecl.resolveOpenDeclId","doc":""},"Lean.Elab.OpenDecl.resolveNameUsingNamespaces":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Open.lean#L113-L115","name":"Lean.Elab.OpenDecl.resolveNameUsingNamespaces","docLink":"./Lean/Elab/Open.html#Lean.Elab.OpenDecl.resolveNameUsingNamespaces","doc":""},"Lean.Elab.OpenDecl.resolveId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Open.lean#L26-L31","name":"Lean.Elab.OpenDecl.resolveId","docLink":"./Lean/Elab/Open.html#Lean.Elab.OpenDecl.resolveId","doc":""},"Lean.Elab.OpenDecl.instMonadResolveNameM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Open.lean#L22-L24","name":"Lean.Elab.OpenDecl.instMonadResolveNameM","docLink":"./Lean/Elab/Open.html#Lean.Elab.OpenDecl.instMonadResolveNameM","doc":""},"Lean.Elab.OpenDecl.elabOpenDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Open.lean#L95-L107","name":"Lean.Elab.OpenDecl.elabOpenDecl","docLink":"./Lean/Elab/Open.html#Lean.Elab.OpenDecl.elabOpenDecl","doc":""},"Lean.Elab.OpenDecl.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Open.lean#L16-L18","name":"Lean.Elab.OpenDecl.State","docLink":"./Lean/Elab/Open.html#Lean.Elab.OpenDecl.State","doc":""},"Lean.Elab.OpenDecl.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Open.lean#L20-L20","name":"Lean.Elab.OpenDecl.M","docLink":"./Lean/Elab/Open.html#Lean.Elab.OpenDecl.M","doc":""},"Lean.Elab.MonadMacroAdapter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L150-L153","name":"Lean.Elab.MonadMacroAdapter","docLink":"./Lean/Elab/Util.html#Lean.Elab.MonadMacroAdapter","doc":""},"Lean.Elab.MonadInfoTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L180-L182","name":"Lean.Elab.MonadInfoTree","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MonadInfoTree","doc":""},"Lean.Elab.Modifiers.isProtected":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L64-L66","name":"Lean.Elab.Modifiers.isProtected","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isProtected","doc":""},"Lean.Elab.Modifiers.isPrivate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L60-L62","name":"Lean.Elab.Modifiers.isPrivate","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isPrivate","doc":""},"Lean.Elab.Modifiers.isPartial":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L68-L70","name":"Lean.Elab.Modifiers.isPartial","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isPartial","doc":""},"Lean.Elab.Modifiers.isNonrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L72-L74","name":"Lean.Elab.Modifiers.isNonrec","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isNonrec","doc":""},"Lean.Elab.Modifiers.addAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L77-L78","name":"Lean.Elab.Modifiers.addAttribute","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.addAttribute","doc":"Store `attr` in `modifiers` "},"Lean.Elab.Modifiers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L51-L58","name":"Lean.Elab.Modifiers","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers","doc":"Flags and data added to declarations (eg docstrings, attributes, `private`, `unsafe`, `partial`, ...). "},"Lean.Elab.MacroStackElem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L42-L44","name":"Lean.Elab.MacroStackElem","docLink":"./Lean/Elab/Util.html#Lean.Elab.MacroStackElem","doc":""},"Lean.Elab.MacroStack":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Util.lean#L46-L46","name":"Lean.Elab.MacroStack","docLink":"./Lean/Elab/Util.html#Lean.Elab.MacroStack","doc":""},"Lean.Elab.MacroExpansionInfo.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L144-L147","name":"Lean.Elab.MacroExpansionInfo.format","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.MacroExpansionInfo.format","doc":""},"Lean.Elab.MacroExpansionInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L74-L78","name":"Lean.Elab.MacroExpansionInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MacroExpansionInfo","doc":""},"Lean.Elab.Level.mkFreshLevelMVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Level.lean#L40-L43","name":"Lean.Elab.Level.mkFreshLevelMVar","docLink":"./Lean/Elab/Level.html#Lean.Elab.Level.mkFreshLevelMVar","doc":""},"Lean.Elab.Level.maxUniverseOffset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Level.lean#L45-L45","name":"Lean.Elab.Level.maxUniverseOffset","docLink":"./Lean/Elab/Level.html#Lean.Elab.Level.maxUniverseOffset","doc":""},"Lean.Elab.Level.instMonadRefLevelElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Level.lean#L28-L30","name":"Lean.Elab.Level.instMonadRefLevelElabM","docLink":"./Lean/Elab/Level.html#Lean.Elab.Level.instMonadRefLevelElabM","doc":""},"Lean.Elab.Level.instMonadOptionsLevelElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Level.lean#L25-L26","name":"Lean.Elab.Level.instMonadOptionsLevelElabM","docLink":"./Lean/Elab/Level.html#Lean.Elab.Level.instMonadOptionsLevelElabM","doc":""},"Lean.Elab.Level.instMonadNameGeneratorLevelElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Level.lean#L35-L38","name":"Lean.Elab.Level.instMonadNameGeneratorLevelElabM","docLink":"./Lean/Elab/Level.html#Lean.Elab.Level.instMonadNameGeneratorLevelElabM","doc":""},"Lean.Elab.Level.instAddMessageContextLevelElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Level.lean#L32-L33","name":"Lean.Elab.Level.instAddMessageContextLevelElabM","docLink":"./Lean/Elab/Level.html#Lean.Elab.Level.instAddMessageContextLevelElabM","doc":""},"Lean.Elab.Level.elabLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Level.lean#L55-L87","name":"Lean.Elab.Level.elabLevel","docLink":"./Lean/Elab/Level.html#Lean.Elab.Level.elabLevel","doc":""},"Lean.Elab.Level.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Level.lean#L18-L21","name":"Lean.Elab.Level.State","docLink":"./Lean/Elab/Level.html#Lean.Elab.Level.State","doc":""},"Lean.Elab.Level.LevelElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Level.lean#L23-L23","name":"Lean.Elab.Level.LevelElabM","docLink":"./Lean/Elab/Level.html#Lean.Elab.Level.LevelElabM","doc":""},"Lean.Elab.Level.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Level.lean#L13-L16","name":"Lean.Elab.Level.Context","docLink":"./Lean/Elab/Level.html#Lean.Elab.Level.Context","doc":""},"Lean.Elab.InfoTree.visitM.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L30-L37","name":"Lean.Elab.InfoTree.visitM.go","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.visitM.go","doc":""},"Lean.Elab.InfoTree.visitM'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L40-L43","name":"Lean.Elab.InfoTree.visitM'","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.visitM'","doc":"`InfoTree.visitM` specialized to `Unit` return type "},"Lean.Elab.InfoTree.visitM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L25-L37","name":"Lean.Elab.InfoTree.visitM","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.visitM","doc":"Visit nodes, passing in a surrounding context (the innermost one) and accumulating results on the way back up. "},"Lean.Elab.InfoTree.termGoalAt?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L320-L322","name":"Lean.Elab.InfoTree.termGoalAt?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.termGoalAt?","doc":""},"Lean.Elab.InfoTree.substitute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L65-L71","name":"Lean.Elab.InfoTree.substitute","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.InfoTree.substitute","doc":"Instantiate the holes on the given `tree` with the assignment table.\n(analoguous to instantiating the metavariables in an expression) "},"Lean.Elab.InfoTree.smallestInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L140-L147","name":"Lean.Elab.InfoTree.smallestInfo?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.smallestInfo?","doc":""},"Lean.Elab.InfoTree.hoverableInfoAt?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L150-L179","name":"Lean.Elab.InfoTree.hoverableInfoAt?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.hoverableInfoAt?","doc":"Find an info node, if any, which should be shown on hover/cursor at position `hoverPos`. "},"Lean.Elab.InfoTree.hasSorry.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L326-L336","name":"Lean.Elab.InfoTree.hasSorry.go","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.hasSorry.go","doc":""},"Lean.Elab.InfoTree.hasSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L324-L336","name":"Lean.Elab.InfoTree.hasSorry","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.hasSorry","doc":""},"Lean.Elab.InfoTree.goalsAt?.hasNestedTactic":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L306-L318","name":"Lean.Elab.InfoTree.goalsAt?.hasNestedTactic","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.goalsAt?.hasNestedTactic","doc":""},"Lean.Elab.InfoTree.goalsAt?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L281-L318","name":"Lean.Elab.InfoTree.goalsAt?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.goalsAt?","doc":"Try to retrieve `TacticInfo` for `hoverPos`.\n  We retrieve all `TacticInfo` nodes s.t. `hoverPos` is inside the node's range plus trailing whitespace.\n  We usually prefer the innermost such nodes so that for composite tactics such as `induction`, we show the nested proofs' states.\n  However, if `hoverPos` is after the tactic, we prefer nodes that are not indented relative to it, meaning that e.g. at `|` in\n  ```lean\n  have := by\n    exact foo\n  |\n  ```\n  we show the (final, see below) state of `have`, not `exact`.\n\n  Moreover, we instruct the LSP server to use the state after tactic execution if\n  - the hover position is after the info's start position *and*\n  - there is no nested tactic info after the hover position (tactic combinators should decide for themselves\n    where to show intermediate states by calling `withTacticInfoContext`) "},"Lean.Elab.InfoTree.getCompletionInfos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L82-L86","name":"Lean.Elab.InfoTree.getCompletionInfos","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.getCompletionInfos","doc":""},"Lean.Elab.InfoTree.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L200-L212","name":"Lean.Elab.InfoTree.format","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.InfoTree.format","doc":""},"Lean.Elab.InfoTree.foldInfo.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L65-L72","name":"Lean.Elab.InfoTree.foldInfo.go","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.foldInfo.go","doc":""},"Lean.Elab.InfoTree.foldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L63-L72","name":"Lean.Elab.InfoTree.foldInfo","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.foldInfo","doc":""},"Lean.Elab.InfoTree.findInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L53-L61","name":"Lean.Elab.InfoTree.findInfo?","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.InfoTree.findInfo?","doc":""},"Lean.Elab.InfoTree.deepestNodes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L54-L61","name":"Lean.Elab.InfoTree.deepestNodes","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.deepestNodes","doc":"For every branch of the `InfoTree`, find the deepest node in that branch for which `p` returns\n`some _`  and return the union of all such nodes. The visitor `p` is given a node together with\nits innermost surrounding `ContextInfo`. "},"Lean.Elab.InfoTree.collectNodesBottomUp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L47-L48","name":"Lean.Elab.InfoTree.collectNodesBottomUp","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.InfoTree.collectNodesBottomUp","doc":"Visit nodes bottom-up, passing in a surrounding context (the innermost one) and the union of nested results (empty at leaves). "},"Lean.Elab.InfoTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L152-L159","name":"Lean.Elab.InfoTree","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree","doc":"The InfoTree is a structure that is generated during elaboration and used\n    by the language server to look up information about objects at particular points\n    in the Lean document. For example, tactic information and expected type information in\n    the infoview and information about completions.\n\n    The infotree consists of nodes which may have child nodes. Each node\n    has an `Info` object that contains details about what kind of information\n    is present. Each `Info` object also contains a `Syntax` instance, this is used to\n    map positions in the Lean document to particular info objects.\n\n    An example of a function that extracts information from an infotree for a given\n    position is `InfoTree.goalsAt?` which finds `TacticInfo`.\n\n    Information concerning expressions requires that a context also be saved.\n    `context` nodes store a local context that is used to process expressions\n    in nodes below.\n\n    Because the info tree is generated during elaboration, some parts of the infotree\n    for a particular piece of syntax may not be ready yet. Hence InfoTree supports metavariable-like\n    `hole`s which are filled in later in the same way that unassigned metavariables are.\n"},"Lean.Elab.InfoState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L171-L178","name":"Lean.Elab.InfoState","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoState","doc":"This structure is the state that is being used to build an InfoTree object.\nDuring elaboration, some parts of the info tree may be `holes` which need to be filled later.\nThe `assignments` field is used to assign these holes.\nThe `trees` field is a list of pending child trees for the infotree node currently being built.\n\nYou should not need to use `InfoState` directly, instead infotrees should be built with the help of the methods here\nsuch as `pushInfoLeaf` to create leaf nodes and `withInfoContext` to create a nested child node.\n\nTo see how `trees` is used, look at the function body of `withInfoContext'`.\n"},"Lean.Elab.Info.updateContext?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L196-L198","name":"Lean.Elab.Info.updateContext?","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.Info.updateContext?","doc":"Helper function for propagating the tactic metavariable context to its children nodes.\n  We need this function because we preserve `TacticInfo` nodes during backtracking *and* their\n  children. Moreover, we backtrack the metavariable context to undo metavariable assignments.\n  `TacticInfo` nodes save the metavariable context before/after the tactic application, and\n  can be pretty printed without any extra information. This is not the case for `TermInfo` nodes.\n  Without this function, the formatting method would often fail when processing `TermInfo` nodes\n  that are children of `TacticInfo` nodes that have been preserved during backtracking.\n  Saving the metavariable context at `TermInfo` nodes is also not a good option because\n  at `TermInfo` creation time, the metavariable context often miss information, e.g.,\n  a TC problem has not been resolved, a postponed subterm has not been elaborated, etc.\n\n  See `Term.SavedState.restore`.\n"},"Lean.Elab.Info.type?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L181-L185","name":"Lean.Elab.Info.type?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.type?","doc":""},"Lean.Elab.Info.toElabInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L170-L180","name":"Lean.Elab.Info.toElabInfo?","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.Info.toElabInfo?","doc":""},"Lean.Elab.Info.tailPos?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L108-L109","name":"Lean.Elab.Info.tailPos?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.tailPos?","doc":""},"Lean.Elab.Info.stx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L88-L98","name":"Lean.Elab.Info.stx","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.stx","doc":""},"Lean.Elab.Info.size?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L117-L120","name":"Lean.Elab.Info.size?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.size?","doc":""},"Lean.Elab.Info.range?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L111-L112","name":"Lean.Elab.Info.range?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.range?","doc":""},"Lean.Elab.Info.pos?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L105-L106","name":"Lean.Elab.Info.pos?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.pos?","doc":""},"Lean.Elab.Info.occursInside?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L134-L138","name":"Lean.Elab.Info.occursInside?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.occursInside?","doc":""},"Lean.Elab.Info.occursBefore?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L129-L132","name":"Lean.Elab.Info.occursBefore?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.occursBefore?","doc":""},"Lean.Elab.Info.lctx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L100-L103","name":"Lean.Elab.Info.lctx","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.lctx","doc":""},"Lean.Elab.Info.isTerm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L74-L76","name":"Lean.Elab.Info.isTerm","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.isTerm","doc":""},"Lean.Elab.Info.isSmaller":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L123-L127","name":"Lean.Elab.Info.isSmaller","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.isSmaller","doc":""},"Lean.Elab.Info.isCompletion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L78-L80","name":"Lean.Elab.Info.isCompletion","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.isCompletion","doc":""},"Lean.Elab.Info.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L158-L168","name":"Lean.Elab.Info.format","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.Info.format","doc":""},"Lean.Elab.Info.fmtHover?.isAtomicFormat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L249-L254","name":"Lean.Elab.Info.fmtHover?.isAtomicFormat","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.fmtHover?.isAtomicFormat","doc":""},"Lean.Elab.Info.fmtHover?.fmtTerm?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L214-L247","name":"Lean.Elab.Info.fmtHover?.fmtTerm?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.fmtHover?.fmtTerm?","doc":""},"Lean.Elab.Info.fmtHover?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L199-L254","name":"Lean.Elab.Info.fmtHover?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.fmtHover?","doc":"Construct a hover popup, if any, from an info node in a context."},"Lean.Elab.Info.docString?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L187-L196","name":"Lean.Elab.Info.docString?","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.docString?","doc":""},"Lean.Elab.Info.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L114-L115","name":"Lean.Elab.Info.contains","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.Info.contains","doc":""},"Lean.Elab.Info":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L118-L129","name":"Lean.Elab.Info","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info","doc":"Header information for a node in `InfoTree`. "},"Lean.Elab.IO.processCommands":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L80-L82","name":"Lean.Elab.IO.processCommands","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.IO.processCommands","doc":""},"Lean.Elab.GoalsAtResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/InfoUtils.lean#L256-L263","name":"Lean.Elab.GoalsAtResult","docLink":"./Lean/Server/InfoUtils.html#Lean.Elab.GoalsAtResult","doc":""},"Lean.Elab.Frontend.updateCmdPos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L44-L45","name":"Lean.Elab.Frontend.updateCmdPos","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.updateCmdPos","doc":""},"Lean.Elab.Frontend.setParserState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L49-L49","name":"Lean.Elab.Frontend.setParserState","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.setParserState","doc":""},"Lean.Elab.Frontend.setMessages":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L50-L50","name":"Lean.Elab.Frontend.setMessages","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.setMessages","doc":""},"Lean.Elab.Frontend.setCommandState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L24-L25","name":"Lean.Elab.Frontend.setCommandState","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.setCommandState","doc":""},"Lean.Elab.Frontend.runCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L27-L38","name":"Lean.Elab.Frontend.runCommandElabM","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.runCommandElabM","doc":""},"Lean.Elab.Frontend.processCommands":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L71-L74","name":"Lean.Elab.Frontend.processCommands","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.processCommands","doc":""},"Lean.Elab.Frontend.processCommand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L53-L69","name":"Lean.Elab.Frontend.processCommand","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.processCommand","doc":""},"Lean.Elab.Frontend.getParserState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L47-L47","name":"Lean.Elab.Frontend.getParserState","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.getParserState","doc":""},"Lean.Elab.Frontend.getInputContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L51-L51","name":"Lean.Elab.Frontend.getInputContext","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.getInputContext","doc":""},"Lean.Elab.Frontend.getCommandState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L48-L48","name":"Lean.Elab.Frontend.getCommandState","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.getCommandState","doc":""},"Lean.Elab.Frontend.elabCommandAtFrontend":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L40-L42","name":"Lean.Elab.Frontend.elabCommandAtFrontend","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.elabCommandAtFrontend","doc":""},"Lean.Elab.Frontend.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L13-L17","name":"Lean.Elab.Frontend.State","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.State","doc":""},"Lean.Elab.Frontend.FrontendM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L22-L22","name":"Lean.Elab.Frontend.FrontendM","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.FrontendM","doc":""},"Lean.Elab.Frontend.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Frontend.lean#L19-L20","name":"Lean.Elab.Frontend.Context","docLink":"./Lean/Elab/Frontend.html#Lean.Elab.Frontend.Context","doc":""},"Lean.Elab.FieldRedeclInfo.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L155-L156","name":"Lean.Elab.FieldRedeclInfo.format","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.FieldRedeclInfo.format","doc":""},"Lean.Elab.FieldRedeclInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L114-L115","name":"Lean.Elab.FieldRedeclInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldRedeclInfo","doc":"Contains the syntax of an identifier which is part of a field redeclaration, like:\n```\nstructure Foo := x : Nat\nstructure Bar extends Foo :=\n  x := 0\n--^ here\n```\n"},"Lean.Elab.FieldInfo.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L127-L129","name":"Lean.Elab.FieldInfo.format","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.FieldInfo.format","doc":""},"Lean.Elab.FieldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L52-L60","name":"Lean.Elab.FieldInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldInfo","doc":""},"Lean.Elab.FVarAliasInfo.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L152-L153","name":"Lean.Elab.FVarAliasInfo.format","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.FVarAliasInfo.format","doc":""},"Lean.Elab.FVarAliasInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L101-L103","name":"Lean.Elab.FVarAliasInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FVarAliasInfo","doc":"Specifies that the given free variables should be considered semantically identical in the current local context.\nUsed for e.g. connecting variables before and after `match` generalization.\n"},"Lean.Elab.ExpandDeclIdResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L211-L217","name":"Lean.Elab.ExpandDeclIdResult","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult","doc":"`expandDeclId` resulting type. "},"Lean.Elab.Eqns.whnfReducibleLHS?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L294-L301","name":"Lean.Elab.Eqns.whnfReducibleLHS?","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.whnfReducibleLHS?","doc":"Apply `whnfR` to lhs, return `none` if `lhs` was not modified "},"Lean.Elab.Eqns.unfoldEqnExt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L311-L311","name":"Lean.Elab.Eqns.unfoldEqnExt","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.unfoldEqnExt","doc":""},"Lean.Elab.Eqns.tryURefl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L103-L105","name":"Lean.Elab.Eqns.tryURefl","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.tryURefl","doc":"Try to close goal using `rfl` with smart unfolding turned off. "},"Lean.Elab.Eqns.tryContradiction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L303-L304","name":"Lean.Elab.Eqns.tryContradiction","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.tryContradiction","doc":""},"Lean.Elab.Eqns.splitMatch?.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L81-L89","name":"Lean.Elab.Eqns.splitMatch?.go","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.splitMatch?.go","doc":""},"Lean.Elab.Eqns.splitMatch?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L79-L90","name":"Lean.Elab.Eqns.splitMatch?","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.splitMatch?","doc":""},"Lean.Elab.Eqns.simpMatch?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L42-L44","name":"Lean.Elab.Eqns.simpMatch?","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpMatch?","doc":""},"Lean.Elab.Eqns.simpIf?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L46-L48","name":"Lean.Elab.Eqns.simpIf?","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpIf?","doc":""},"Lean.Elab.Eqns.simpEqnType.collect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L138-L147","name":"Lean.Elab.Eqns.simpEqnType.collect","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpEqnType.collect","doc":""},"Lean.Elab.Eqns.simpEqnType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L110-L147","name":"Lean.Elab.Eqns.simpEqnType","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpEqnType","doc":"Eliminate `namedPatterns` from equation, and trivial hypotheses.\n"},"Lean.Elab.Eqns.removeUnusedEqnHypotheses.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L252-L271","name":"Lean.Elab.Eqns.removeUnusedEqnHypotheses.go","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.removeUnusedEqnHypotheses.go","doc":""},"Lean.Elab.Eqns.removeUnusedEqnHypotheses":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L249-L271","name":"Lean.Elab.Eqns.removeUnusedEqnHypotheses","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.removeUnusedEqnHypotheses","doc":"Some of the hypotheses added by `mkEqnTypes` may not be used by the actual proof (i.e., `value` argument).\n  This method eliminates them.\n\n  Alternative solution: improve `saveEqn` and make sure it never includes unnecessary hypotheses.\n  These hypotheses are leftovers from tactics such as `splitMatch?` used in `mkEqnTypes`.\n"},"Lean.Elab.Eqns.mkUnfoldProof.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L337-L354","name":"Lean.Elab.Eqns.mkUnfoldProof.go","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkUnfoldProof.go","doc":""},"Lean.Elab.Eqns.mkUnfoldProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L324-L355","name":"Lean.Elab.Eqns.mkUnfoldProof","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkUnfoldProof","doc":"Auxiliary method for `mkUnfoldEq`. The structure is based on `mkEqnTypes`.\n`mvarId` is the goal to be proved. It is a goal of the form\n```\ndeclName x_1 ... x_n = body[x_1, ..., x_n]\n```\nThe proof is constracted using the automatically generated equational theorems.\nWe basically keep splitting the `match` and `if-then-else` expressions in the right hand side\nuntil one of the equational theorems is applicable.\n"},"Lean.Elab.Eqns.mkUnfoldEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L358-L374","name":"Lean.Elab.Eqns.mkUnfoldEq","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkUnfoldEq","doc":"Generate the \"unfold\" lemma for `declName`. "},"Lean.Elab.Eqns.mkEqnTypes.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L221-L240","name":"Lean.Elab.Eqns.mkEqnTypes.go","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkEqnTypes.go","doc":""},"Lean.Elab.Eqns.mkEqnTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L217-L240","name":"Lean.Elab.Eqns.mkEqnTypes","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkEqnTypes","doc":""},"Lean.Elab.Eqns.instInhabitedUnfoldEqnExtState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L308-L308","name":"Lean.Elab.Eqns.instInhabitedUnfoldEqnExtState","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.instInhabitedUnfoldEqnExtState","doc":""},"Lean.Elab.Eqns.instInhabitedEqnInfoCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L20-L20","name":"Lean.Elab.Eqns.instInhabitedEqnInfoCore","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.instInhabitedEqnInfoCore","doc":""},"Lean.Elab.Eqns.getUnfoldFor?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L376-L385","name":"Lean.Elab.Eqns.getUnfoldFor?","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.getUnfoldFor?","doc":""},"Lean.Elab.Eqns.funext?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L33-L40","name":"Lean.Elab.Eqns.funext?","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.funext?","doc":""},"Lean.Elab.Eqns.expandRHS?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L27-L31","name":"Lean.Elab.Eqns.expandRHS?","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.expandRHS?","doc":""},"Lean.Elab.Eqns.expand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L22-L25","name":"Lean.Elab.Eqns.expand","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.expand","doc":""},"Lean.Elab.Eqns.deltaRHS?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L280-L284","name":"Lean.Elab.Eqns.deltaRHS?","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.deltaRHS?","doc":""},"Lean.Elab.Eqns.deltaLHS":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L274-L278","name":"Lean.Elab.Eqns.deltaLHS","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.deltaLHS","doc":"Delta reduce the equation left-hand-side "},"Lean.Elab.Eqns.UnfoldEqnExtState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L306-L308","name":"Lean.Elab.Eqns.UnfoldEqnExtState","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState","doc":""},"Lean.Elab.Eqns.EqnInfoCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L15-L20","name":"Lean.Elab.Eqns.EqnInfoCore","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore","doc":""},"Lean.Elab.Eqns.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/Eqns.lean#L92-L93","name":"Lean.Elab.Eqns.Context","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context","doc":""},"Lean.Elab.ElabInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L26-L29","name":"Lean.Elab.ElabInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ElabInfo","doc":"An elaboration step "},"Lean.Elab.DerivingHandlerNoArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Basic.lean#L13-L13","name":"Lean.Elab.DerivingHandlerNoArgs","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.DerivingHandlerNoArgs","doc":""},"Lean.Elab.DerivingHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Basic.lean#L12-L12","name":"Lean.Elab.DerivingHandler","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.DerivingHandler","doc":""},"Lean.Elab.DerivingClassView.applyHandlers":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Basic.lean#L79-L80","name":"Lean.Elab.DerivingClassView.applyHandlers","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.DerivingClassView.applyHandlers","doc":""},"Lean.Elab.DerivingClassView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Basic.lean#L64-L67","name":"Lean.Elab.DerivingClassView","docLink":"./Lean/Elab/Deriving/Basic.html#Lean.Elab.DerivingClassView","doc":""},"Lean.Elab.Deriving.mkLocalInstanceLetDecls":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L86-L102","name":"Lean.Elab.Deriving.mkLocalInstanceLetDecls","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.mkLocalInstanceLetDecls","doc":""},"Lean.Elab.Deriving.mkLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L104-L106","name":"Lean.Elab.Deriving.mkLet","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.mkLet","doc":""},"Lean.Elab.Deriving.mkInstanceCmds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L109-L123","name":"Lean.Elab.Deriving.mkInstanceCmds","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.mkInstanceCmds","doc":""},"Lean.Elab.Deriving.mkInstImplicitBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L48-L61","name":"Lean.Elab.Deriving.mkInstImplicitBinders","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.mkInstImplicitBinders","doc":"Return instance binder syntaxes binding `className α` for every generic parameter `α`\nof the inductive `indVal` for which such a binding is type-correct. `argNames` is expected\nto provide names for the parameters (see `mkInductArgNames`). The output matches `instBinder*`.\n\nFor example, given `inductive Foo {α : Type} (n : Nat) : (β : Type) → Type`, where `β` is an index,\ninvoking ``mkInstImplicitBinders `BarClass foo #[`α, `n, `β]`` gives `` `([BarClass α])``. "},"Lean.Elab.Deriving.mkInductiveApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L29-L32","name":"Lean.Elab.Deriving.mkInductiveApp","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.mkInductiveApp","doc":"Return the inductive declaration's type applied to the arguments in `argNames`. "},"Lean.Elab.Deriving.mkInductArgNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L19-L26","name":"Lean.Elab.Deriving.mkInductArgNames","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.mkInductArgNames","doc":"Make fresh, hygienic names for every parameter and index of an inductive declaration.\n\nFor example, `inductive Foo {α : Type} : Nat → Type` will give something like ``#[`α✝, `a✝]``. "},"Lean.Elab.Deriving.mkImplicitBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L38-L40","name":"Lean.Elab.Deriving.mkImplicitBinders","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.mkImplicitBinders","doc":"Return implicit binder syntaxes for the given `argNames`. The output matches `implicitBinder*`.\n\nFor example, ``#[`foo,`bar]`` gives `` `({foo} {bar})``. "},"Lean.Elab.Deriving.mkHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L135-L149","name":"Lean.Elab.Deriving.mkHeader","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.mkHeader","doc":""},"Lean.Elab.Deriving.mkDiscrs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L151-L156","name":"Lean.Elab.Deriving.mkDiscrs","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.mkDiscrs","doc":""},"Lean.Elab.Deriving.mkDiscr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L125-L126","name":"Lean.Elab.Deriving.mkDiscr","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.mkDiscr","doc":""},"Lean.Elab.Deriving.mkContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L68-L84","name":"Lean.Elab.Deriving.mkContext","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.mkContext","doc":""},"Lean.Elab.Deriving.instBinderF":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L13-L13","name":"Lean.Elab.Deriving.instBinderF","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.instBinderF","doc":""},"Lean.Elab.Deriving.implicitBinderF":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L12-L12","name":"Lean.Elab.Deriving.implicitBinderF","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.implicitBinderF","doc":""},"Lean.Elab.Deriving.explicitBinderF":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L14-L14","name":"Lean.Elab.Deriving.explicitBinderF","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.explicitBinderF","doc":""},"Lean.Elab.Deriving.SizeOf.mkSizeOfHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/SizeOf.lean#L18-L23","name":"Lean.Elab.Deriving.SizeOf.mkSizeOfHandler","docLink":"./Lean/Elab/Deriving/SizeOf.html#Lean.Elab.Deriving.SizeOf.mkSizeOfHandler","doc":""},"Lean.Elab.Deriving.Repr.mkReprInstanceHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Repr.lean#L117-L123","name":"Lean.Elab.Deriving.Repr.mkReprInstanceHandler","docLink":"./Lean/Elab/Deriving/Repr.html#Lean.Elab.Deriving.Repr.mkReprInstanceHandler","doc":""},"Lean.Elab.Deriving.Repr.mkReprHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Repr.lean#L16-L20","name":"Lean.Elab.Deriving.Repr.mkReprHeader","docLink":"./Lean/Elab/Deriving/Repr.html#Lean.Elab.Deriving.Repr.mkReprHeader","doc":""},"Lean.Elab.Deriving.Repr.mkMutualBlock":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Repr.lean#L101-L107","name":"Lean.Elab.Deriving.Repr.mkMutualBlock","docLink":"./Lean/Elab/Deriving/Repr.html#Lean.Elab.Deriving.Repr.mkMutualBlock","doc":""},"Lean.Elab.Deriving.Repr.mkBodyForStruct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Repr.lean#L22-L44","name":"Lean.Elab.Deriving.Repr.mkBodyForStruct","docLink":"./Lean/Elab/Deriving/Repr.html#Lean.Elab.Deriving.Repr.mkBodyForStruct","doc":""},"Lean.Elab.Deriving.Repr.mkBodyForInduct.mkAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Repr.lean#L51-L79","name":"Lean.Elab.Deriving.Repr.mkBodyForInduct.mkAlts","docLink":"./Lean/Elab/Deriving/Repr.html#Lean.Elab.Deriving.Repr.mkBodyForInduct.mkAlts","doc":""},"Lean.Elab.Deriving.Repr.mkBodyForInduct":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Repr.lean#L46-L79","name":"Lean.Elab.Deriving.Repr.mkBodyForInduct","docLink":"./Lean/Elab/Deriving/Repr.html#Lean.Elab.Deriving.Repr.mkBodyForInduct","doc":""},"Lean.Elab.Deriving.Repr.mkBody":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Repr.lean#L81-L85","name":"Lean.Elab.Deriving.Repr.mkBody","docLink":"./Lean/Elab/Deriving/Repr.html#Lean.Elab.Deriving.Repr.mkBody","doc":""},"Lean.Elab.Deriving.Repr.mkAuxFunction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Repr.lean#L87-L99","name":"Lean.Elab.Deriving.Repr.mkAuxFunction","docLink":"./Lean/Elab/Deriving/Repr.html#Lean.Elab.Deriving.Repr.mkAuxFunction","doc":""},"Lean.Elab.Deriving.Ord.mkOrdInstanceHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Ord.lean#L97-L103","name":"Lean.Elab.Deriving.Ord.mkOrdInstanceHandler","docLink":"./Lean/Elab/Deriving/Ord.html#Lean.Elab.Deriving.Ord.mkOrdInstanceHandler","doc":""},"Lean.Elab.Deriving.Ord.mkOrdHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Ord.lean#L14-L15","name":"Lean.Elab.Deriving.Ord.mkOrdHeader","docLink":"./Lean/Elab/Deriving/Ord.html#Lean.Elab.Deriving.Ord.mkOrdHeader","doc":""},"Lean.Elab.Deriving.Ord.mkMutualBlock":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Ord.lean#L81-L87","name":"Lean.Elab.Deriving.Ord.mkMutualBlock","docLink":"./Lean/Elab/Deriving/Ord.html#Lean.Elab.Deriving.Ord.mkMutualBlock","doc":""},"Lean.Elab.Deriving.Ord.mkMatch.mkAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Ord.lean#L22-L65","name":"Lean.Elab.Deriving.Ord.mkMatch.mkAlts","docLink":"./Lean/Elab/Deriving/Ord.html#Lean.Elab.Deriving.Ord.mkMatch.mkAlts","doc":""},"Lean.Elab.Deriving.Ord.mkMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Ord.lean#L17-L65","name":"Lean.Elab.Deriving.Ord.mkMatch","docLink":"./Lean/Elab/Deriving/Ord.html#Lean.Elab.Deriving.Ord.mkMatch","doc":""},"Lean.Elab.Deriving.Ord.mkAuxFunction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Ord.lean#L67-L79","name":"Lean.Elab.Deriving.Ord.mkAuxFunction","docLink":"./Lean/Elab/Deriving/Ord.html#Lean.Elab.Deriving.Ord.mkAuxFunction","doc":""},"Lean.Elab.Deriving.Header":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L128-L132","name":"Lean.Elab.Deriving.Header","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Header","doc":""},"Lean.Elab.Deriving.Hashable.mkMatch.mkAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Hashable.lean#L24-L55","name":"Lean.Elab.Deriving.Hashable.mkMatch.mkAlts","docLink":"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkMatch.mkAlts","doc":""},"Lean.Elab.Deriving.Hashable.mkMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Hashable.lean#L18-L55","name":"Lean.Elab.Deriving.Hashable.mkMatch","docLink":"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkMatch","doc":""},"Lean.Elab.Deriving.Hashable.mkHashableHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Hashable.lean#L15-L16","name":"Lean.Elab.Deriving.Hashable.mkHashableHeader","docLink":"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkHashableHeader","doc":""},"Lean.Elab.Deriving.Hashable.mkHashableHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Hashable.lean#L81-L87","name":"Lean.Elab.Deriving.Hashable.mkHashableHandler","docLink":"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkHashableHandler","doc":""},"Lean.Elab.Deriving.Hashable.mkHashFuncs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Hashable.lean#L69-L73","name":"Lean.Elab.Deriving.Hashable.mkHashFuncs","docLink":"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkHashFuncs","doc":""},"Lean.Elab.Deriving.Hashable.mkAuxFunction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Hashable.lean#L57-L67","name":"Lean.Elab.Deriving.Hashable.mkAuxFunction","docLink":"./Lean/Elab/Deriving/Hashable.html#Lean.Elab.Deriving.Hashable.mkAuxFunction","doc":""},"Lean.Elab.Deriving.FromToJson.mkToJsonInstanceHandler.mkAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/FromToJson.lean#L75-L102","name":"Lean.Elab.Deriving.FromToJson.mkToJsonInstanceHandler.mkAlts","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonInstanceHandler.mkAlts","doc":""},"Lean.Elab.Deriving.FromToJson.mkToJsonInstanceHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/FromToJson.lean#L22-L102","name":"Lean.Elab.Deriving.FromToJson.mkToJsonInstanceHandler","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkToJsonInstanceHandler","doc":""},"Lean.Elab.Deriving.FromToJson.mkJsonField":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/FromToJson.lean#L17-L20","name":"Lean.Elab.Deriving.FromToJson.mkJsonField","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkJsonField","doc":""},"Lean.Elab.Deriving.FromToJson.mkFromJsonInstanceHandler.mkAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/FromToJson.lean#L148-L182","name":"Lean.Elab.Deriving.FromToJson.mkFromJsonInstanceHandler.mkAlts","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonInstanceHandler.mkAlts","doc":""},"Lean.Elab.Deriving.FromToJson.mkFromJsonInstanceHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/FromToJson.lean#L104-L182","name":"Lean.Elab.Deriving.FromToJson.mkFromJsonInstanceHandler","docLink":"./Lean/Elab/Deriving/FromToJson.html#Lean.Elab.Deriving.FromToJson.mkFromJsonInstanceHandler","doc":""},"Lean.Elab.Deriving.DecEq.mkMatch.mkSameCtorRhs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/DecEq.lean#L23-L37","name":"Lean.Elab.Deriving.DecEq.mkMatch.mkSameCtorRhs","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkMatch.mkSameCtorRhs","doc":""},"Lean.Elab.Deriving.DecEq.mkMatch.mkAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/DecEq.lean#L39-L82","name":"Lean.Elab.Deriving.DecEq.mkMatch.mkAlts","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkMatch.mkAlts","doc":""},"Lean.Elab.Deriving.DecEq.mkMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/DecEq.lean#L18-L82","name":"Lean.Elab.Deriving.DecEq.mkMatch","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkMatch","doc":""},"Lean.Elab.Deriving.DecEq.mkEnumOfNatThm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/DecEq.lean#L136-L157","name":"Lean.Elab.Deriving.DecEq.mkEnumOfNatThm","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkEnumOfNatThm","doc":""},"Lean.Elab.Deriving.DecEq.mkEnumOfNat.mkDecTree":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/DecEq.lean#L116-L125","name":"Lean.Elab.Deriving.DecEq.mkEnumOfNat.mkDecTree","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkEnumOfNat.mkDecTree","doc":""},"Lean.Elab.Deriving.DecEq.mkEnumOfNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/DecEq.lean#L110-L134","name":"Lean.Elab.Deriving.DecEq.mkEnumOfNat","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkEnumOfNat","doc":""},"Lean.Elab.Deriving.DecEq.mkDecEqInstanceHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/DecEq.lean#L176-L183","name":"Lean.Elab.Deriving.DecEq.mkDecEqInstanceHandler","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEqInstanceHandler","doc":""},"Lean.Elab.Deriving.DecEq.mkDecEqHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/DecEq.lean#L15-L16","name":"Lean.Elab.Deriving.DecEq.mkDecEqHeader","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEqHeader","doc":""},"Lean.Elab.Deriving.DecEq.mkDecEqEnum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/DecEq.lean#L159-L174","name":"Lean.Elab.Deriving.DecEq.mkDecEqEnum","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEqEnum","doc":""},"Lean.Elab.Deriving.DecEq.mkDecEqCmds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/DecEq.lean#L93-L97","name":"Lean.Elab.Deriving.DecEq.mkDecEqCmds","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEqCmds","doc":""},"Lean.Elab.Deriving.DecEq.mkDecEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/DecEq.lean#L101-L108","name":"Lean.Elab.Deriving.DecEq.mkDecEq","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEq","doc":""},"Lean.Elab.Deriving.DecEq.mkAuxFunction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/DecEq.lean#L84-L91","name":"Lean.Elab.Deriving.DecEq.mkAuxFunction","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkAuxFunction","doc":""},"Lean.Elab.Deriving.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/Util.lean#L63-L66","name":"Lean.Elab.Deriving.Context","docLink":"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context","doc":""},"Lean.Elab.Deriving.BEq.mkMutualBlock":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/BEq.lean#L85-L92","name":"Lean.Elab.Deriving.BEq.mkMutualBlock","docLink":"./Lean/Elab/Deriving/BEq.html#Lean.Elab.Deriving.BEq.mkMutualBlock","doc":""},"Lean.Elab.Deriving.BEq.mkMatch.mkElseAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/BEq.lean#L22-L30","name":"Lean.Elab.Deriving.BEq.mkMatch.mkElseAlt","docLink":"./Lean/Elab/Deriving/BEq.html#Lean.Elab.Deriving.BEq.mkMatch.mkElseAlt","doc":""},"Lean.Elab.Deriving.BEq.mkMatch.mkAlts":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/BEq.lean#L32-L69","name":"Lean.Elab.Deriving.BEq.mkMatch.mkAlts","docLink":"./Lean/Elab/Deriving/BEq.html#Lean.Elab.Deriving.BEq.mkMatch.mkAlts","doc":""},"Lean.Elab.Deriving.BEq.mkMatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/BEq.lean#L17-L69","name":"Lean.Elab.Deriving.BEq.mkMatch","docLink":"./Lean/Elab/Deriving/BEq.html#Lean.Elab.Deriving.BEq.mkMatch","doc":""},"Lean.Elab.Deriving.BEq.mkBEqInstanceHandler":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/BEq.lean#L112-L122","name":"Lean.Elab.Deriving.BEq.mkBEqInstanceHandler","docLink":"./Lean/Elab/Deriving/BEq.html#Lean.Elab.Deriving.BEq.mkBEqInstanceHandler","doc":""},"Lean.Elab.Deriving.BEq.mkBEqHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/BEq.lean#L14-L15","name":"Lean.Elab.Deriving.BEq.mkBEqHeader","docLink":"./Lean/Elab/Deriving/BEq.html#Lean.Elab.Deriving.BEq.mkBEqHeader","doc":""},"Lean.Elab.Deriving.BEq.mkAuxFunction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Deriving/BEq.lean#L71-L83","name":"Lean.Elab.Deriving.BEq.mkAuxFunction","docLink":"./Lean/Elab/Deriving/BEq.html#Lean.Elab.Deriving.BEq.mkAuxFunction","doc":""},"Lean.Elab.DefViewElabHeader":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L21-L42","name":"Lean.Elab.DefViewElabHeader","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader","doc":"`DefView` after elaborating the header. "},"Lean.Elab.DefView.isInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L47-L48","name":"Lean.Elab.DefView.isInstance","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.isInstance","doc":""},"Lean.Elab.DefView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L36-L45","name":"Lean.Elab.DefView","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView","doc":""},"Lean.Elab.DefKind.isTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L22-L24","name":"Lean.Elab.DefKind.isTheorem","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isTheorem","doc":""},"Lean.Elab.DefKind.isExample":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L32-L34","name":"Lean.Elab.DefKind.isExample","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isExample","doc":""},"Lean.Elab.DefKind.isDefOrAbbrevOrOpaque":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L26-L30","name":"Lean.Elab.DefKind.isDefOrAbbrevOrOpaque","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isDefOrAbbrevOrOpaque","doc":""},"Lean.Elab.DefKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L18-L20","name":"Lean.Elab.DefKind","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind","doc":""},"Lean.Elab.CustomInfo.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L48-L49","name":"Lean.Elab.CustomInfo.format","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.CustomInfo.format","doc":""},"Lean.Elab.CustomInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L80-L83","name":"Lean.Elab.CustomInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CustomInfo","doc":""},"Lean.Elab.ContextInfo.toPPContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L84-L86","name":"Lean.Elab.ContextInfo.toPPContext","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.ContextInfo.toPPContext","doc":""},"Lean.Elab.ContextInfo.saveNoFileMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L22-L30","name":"Lean.Elab.ContextInfo.saveNoFileMap","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.ContextInfo.saveNoFileMap","doc":""},"Lean.Elab.ContextInfo.save":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L32-L34","name":"Lean.Elab.ContextInfo.save","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.ContextInfo.save","doc":""},"Lean.Elab.ContextInfo.runMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L73-L82","name":"Lean.Elab.ContextInfo.runMetaM","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.ContextInfo.runMetaM","doc":""},"Lean.Elab.ContextInfo.ppSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L88-L89","name":"Lean.Elab.ContextInfo.ppSyntax","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.ContextInfo.ppSyntax","doc":""},"Lean.Elab.ContextInfo.ppGoals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L131-L135","name":"Lean.Elab.ContextInfo.ppGoals","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.ContextInfo.ppGoals","doc":""},"Lean.Elab.ContextInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L15-L23","name":"Lean.Elab.ContextInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo","doc":"Context after executing `liftTermElabM`.\nNote that the term information collected during elaboration may contain metavariables, and their\nassignments are stored at `mctx`. "},"Lean.Elab.ComputedFields.validateComputedFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L70-L77","name":"Lean.Elab.ComputedFields.validateComputedFields","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.validateComputedFields","doc":""},"Lean.Elab.ComputedFields.setComputedFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L196-L215","name":"Lean.Elab.ComputedFields.setComputedFields","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.setComputedFields","doc":"Sets the computed fields for a block of mutual inductives,\nadding the implementation via `implementedBy`.\n\nThe `computedFields` argument contains a pair\nfor every inductive in the mutual block,\nconsisting of the name of the inductive\nand the names of the associated computed fields.\n"},"Lean.Elab.ComputedFields.overrideConstructors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L120-L137","name":"Lean.Elab.ComputedFields.overrideConstructors","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.overrideConstructors","doc":""},"Lean.Elab.ComputedFields.overrideComputedFields":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L139-L164","name":"Lean.Elab.ComputedFields.overrideComputedFields","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.overrideComputedFields","doc":""},"Lean.Elab.ComputedFields.overrideCasesOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L90-L118","name":"Lean.Elab.ComputedFields.overrideCasesOn","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.overrideCasesOn","doc":""},"Lean.Elab.ComputedFields.mkUnsafeCastTo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L40-L41","name":"Lean.Elab.ComputedFields.mkUnsafeCastTo","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.mkUnsafeCastTo","doc":""},"Lean.Elab.ComputedFields.mkImplType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L79-L88","name":"Lean.Elab.ComputedFields.mkImplType","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.mkImplType","doc":""},"Lean.Elab.ComputedFields.mkComputedFieldOverrides":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L166-L185","name":"Lean.Elab.ComputedFields.mkComputedFieldOverrides","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.mkComputedFieldOverrides","doc":""},"Lean.Elab.ComputedFields.isScalarField":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L43-L44","name":"Lean.Elab.ComputedFields.isScalarField","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.isScalarField","doc":""},"Lean.Elab.ComputedFields.getComputedFieldValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L57-L68","name":"Lean.Elab.ComputedFields.getComputedFieldValue","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.getComputedFieldValue","doc":""},"Lean.Elab.ComputedFields.computedFieldAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L35-L35","name":"Lean.Elab.ComputedFields.computedFieldAttr","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.computedFieldAttr","doc":""},"Lean.Elab.ComputedFields.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L54-L54","name":"Lean.Elab.ComputedFields.M","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.M","doc":""},"Lean.Elab.ComputedFields.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ComputedFields.lean#L46-L52","name":"Lean.Elab.ComputedFields.Context","docLink":"./Lean/Elab/ComputedFields.html#Lean.Elab.ComputedFields.Context","doc":""},"Lean.Elab.CompletionInfo.stx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L38-L46","name":"Lean.Elab.CompletionInfo.stx","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.CompletionInfo.stx","doc":""},"Lean.Elab.CompletionInfo.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L118-L122","name":"Lean.Elab.CompletionInfo.format","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.CompletionInfo.format","doc":""},"Lean.Elab.CompletionInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L41-L49","name":"Lean.Elab.CompletionInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CompletionInfo","doc":""},"Lean.Elab.CommandInfo.format":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Main.lean#L124-L125","name":"Lean.Elab.CommandInfo.format","docLink":"./Lean/Elab/InfoTree/Main.html#Lean.Elab.CommandInfo.format","doc":""},"Lean.Elab.CommandInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/InfoTree/Types.lean#L38-L39","name":"Lean.Elab.CommandInfo","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CommandInfo","doc":""},"Lean.Elab.Command.withScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L461-L469","name":"Lean.Elab.Command.withScope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.withScope","doc":""},"Lean.Elab.Command.withNamespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L43-L47","name":"Lean.Elab.Command.withNamespace","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.withNamespace","doc":""},"Lean.Elab.Command.withMacroExpansion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L244-L246","name":"Lean.Elab.Command.withMacroExpansion","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.withMacroExpansion","doc":"Elaborate `x` with `stx` on the macro stack "},"Lean.Elab.Command.withFreshMacroScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L209-L211","name":"Lean.Elab.Command.withFreshMacroScope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.withFreshMacroScope","doc":""},"Lean.Elab.Command.withExpectedType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ElabRules.lean#L14-L18","name":"Lean.Elab.Command.withExpectedType","docLink":"./Lean/Elab/ElabRules.html#Lean.Elab.Command.withExpectedType","doc":""},"Lean.Elab.Command.withCtorRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L492-L497","name":"Lean.Elab.Command.withCtorRef","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.withCtorRef","doc":"Execute `k` using the `Syntax` reference associated with constructor `ctorName`.\n"},"Lean.Elab.Command.structureDiamondWarning":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L239-L239","name":"Lean.Elab.Command.structureDiamondWarning","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.structureDiamondWarning","doc":""},"Lean.Elab.Command.strLitToPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L413-L416","name":"Lean.Elab.Command.strLitToPattern","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.strLitToPattern","doc":""},"Lean.Elab.Command.showPartialSyntaxErrors":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L258-L258","name":"Lean.Elab.Command.showPartialSyntaxErrors","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.showPartialSyntaxErrors","doc":""},"Lean.Elab.Command.shouldInferResultUniverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L396-L404","name":"Lean.Elab.Command.shouldInferResultUniverse","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.shouldInferResultUniverse","doc":"Return `some ?m` if `u` is of the form `?m + k`.\nReturn none if `u` does not contain universe metavariables.\nThrow exception otherwise. "},"Lean.Elab.Command.runTermElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L426-L443","name":"Lean.Elab.Command.runTermElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.runTermElabM","doc":"Execute the monadic action `elabFn xs` as a `CommandElabM` monadic action, where `xs` are free variables\ncorresponding to all active scoped variables declared using the `variable` command.\n\nThis method is similar to `liftTermElabM`, but it elaborates all scoped variables declared using the `variable`\ncommand.\n\nExample:\n```\nimport Lean\n\nopen Lean Elab Command Meta\n\nvariable {α : Type u} {f : α → α}\nvariable (n : Nat)\n\n#eval\n  runTermElabM fun xs => do\n    for x in xs do\n      IO.println s!\"{← ppExpr x} : {← ppExpr (← inferType x)}\"\n```\n"},"Lean.Elab.Command.runLinters":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L194-L204","name":"Lean.Elab.Command.runLinters","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.runLinters","doc":""},"Lean.Elab.Command.resolveSyntaxKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L338-L341","name":"Lean.Elab.Command.resolveSyntaxKind","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.resolveSyntaxKind","doc":""},"Lean.Elab.Command.removeParenthesesAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Notation.lean#L43-L48","name":"Lean.Elab.Command.removeParenthesesAux","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.removeParenthesesAux","doc":""},"Lean.Elab.Command.removeParentheses":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Notation.lean#L50-L56","name":"Lean.Elab.Command.removeParentheses","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.removeParentheses","doc":""},"Lean.Elab.Command.modifyScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L454-L459","name":"Lean.Elab.Command.modifyScope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.modifyScope","doc":""},"Lean.Elab.Command.mkState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L65-L70","name":"Lean.Elab.Command.mkState","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.mkState","doc":""},"Lean.Elab.Command.mkSimpleDelab":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Notation.lean#L74-L102","name":"Lean.Elab.Command.mkSimpleDelab","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.mkSimpleDelab","doc":"Try to derive a `SimpleDelab` from a notation.\nThe notation must be of the form `notation ... => c body`\nwhere `c` is a declaration in the current scope and `body` any syntax\nthat contains each variable from the LHS at most once. "},"Lean.Elab.Command.mkResultUniverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L424-L432","name":"Lean.Elab.Command.mkResultUniverse","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.mkResultUniverse","doc":""},"Lean.Elab.Command.mkNameFromParserSyntax.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L300-L312","name":"Lean.Elab.Command.mkNameFromParserSyntax.visit","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.mkNameFromParserSyntax.visit","doc":""},"Lean.Elab.Command.mkNameFromParserSyntax.appendCatName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L314-L317","name":"Lean.Elab.Command.mkNameFromParserSyntax.appendCatName","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.mkNameFromParserSyntax.appendCatName","doc":""},"Lean.Elab.Command.mkNameFromParserSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L297-L317","name":"Lean.Elab.Command.mkNameFromParserSyntax","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.mkNameFromParserSyntax","doc":"Auxiliary function for creating declaration names from parser descriptions.\nExample:\nGiven\n```\nsyntax term \"+\" term : term\nsyntax \"[\" sepBy(term, \", \") \"]\"  : term\n```\nIt generates the names `term_+_` and `term[_,]`\n"},"Lean.Elab.Command.mkMessageAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L113-L116","name":"Lean.Elab.Command.mkMessageAux","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.mkMessageAux","doc":""},"Lean.Elab.Command.mkInstanceName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L83-L107","name":"Lean.Elab.Command.mkInstanceName","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkInstanceName","doc":"Generate a name for an instance with the given type.\nNote that we elaborate the type twice. Once for producing the name, and another when elaborating the declaration. "},"Lean.Elab.Command.mkFreshInstanceName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L74-L78","name":"Lean.Elab.Command.mkFreshInstanceName","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkFreshInstanceName","doc":""},"Lean.Elab.Command.mkDefViewOfTheorem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L68-L72","name":"Lean.Elab.Command.mkDefViewOfTheorem","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfTheorem","doc":""},"Lean.Elab.Command.mkDefViewOfOpaque":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L126-L137","name":"Lean.Elab.Command.mkDefViewOfOpaque","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfOpaque","doc":""},"Lean.Elab.Command.mkDefViewOfInstance":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L109-L124","name":"Lean.Elab.Command.mkDefViewOfInstance","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfInstance","doc":""},"Lean.Elab.Command.mkDefViewOfExample":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L139-L145","name":"Lean.Elab.Command.mkDefViewOfExample","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfExample","doc":""},"Lean.Elab.Command.mkDefViewOfDef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L61-L66","name":"Lean.Elab.Command.mkDefViewOfDef","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfDef","doc":""},"Lean.Elab.Command.mkDefViewOfAbbrev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L53-L59","name":"Lean.Elab.Command.mkDefViewOfAbbrev","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfAbbrev","doc":""},"Lean.Elab.Command.mkDefView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L156-L171","name":"Lean.Elab.Command.mkDefView","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefView","doc":""},"Lean.Elab.Command.mkCommandElabAttributeUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L218-L219","name":"Lean.Elab.Command.mkCommandElabAttributeUnsafe","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.mkCommandElabAttributeUnsafe","doc":""},"Lean.Elab.Command.mkCommandElabAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L222-L222","name":"Lean.Elab.Command.mkCommandElabAttribute","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.mkCommandElabAttribute","doc":""},"Lean.Elab.Command.lintersRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L74-L74","name":"Lean.Elab.Command.lintersRef","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.lintersRef","doc":""},"Lean.Elab.Command.liftTermElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L380-L402","name":"Lean.Elab.Command.liftTermElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.liftTermElabM","doc":"Lift the `TermElabM` monadic action `x` into a `CommandElabM` monadic action.\n\nNote that `x` is executed with an empty message log. Thus, `x` cannot modify/view messages produced by\nprevious commands.\n\nIf you need to access the free variables corresponding to the ones declared using the `variable` command,\nconsider using `runTermElabM`.\n\nRecall that `TermElabM` actions can automatically lift `MetaM` and `CoreM` actions.\nExample:\n```\nimport Lean\n\nopen Lean Elab Command Meta\n\ndef printExpr (e : Expr) : MetaM Unit := do\n  IO.println s!\"{← ppExpr e} : {← ppExpr (← inferType e)}\"\n\n#eval\n  liftTermElabM do\n    printExpr (mkConst ``Nat)\n```\n"},"Lean.Elab.Command.liftIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L170-L172","name":"Lean.Elab.Command.liftIO","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.liftIO","doc":""},"Lean.Elab.Command.liftEIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L168-L168","name":"Lean.Elab.Command.liftEIO","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.liftEIO","doc":""},"Lean.Elab.Command.liftCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L145-L162","name":"Lean.Elab.Command.liftCoreM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.liftCoreM","doc":""},"Lean.Elab.Command.isDefLike":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DefView.lean#L147-L154","name":"Lean.Elab.Command.isDefLike","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.isDefLike","doc":""},"Lean.Elab.Command.instReprStructFieldKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L63-L63","name":"Lean.Elab.Command.instReprStructFieldKind","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.instReprStructFieldKind","doc":""},"Lean.Elab.Command.instReprStructFieldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L71-L71","name":"Lean.Elab.Command.instReprStructFieldInfo","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.instReprStructFieldInfo","doc":""},"Lean.Elab.Command.instMonadTraceCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L101-L103","name":"Lean.Elab.Command.instMonadTraceCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadTraceCommandElabM","doc":""},"Lean.Elab.Command.instMonadResolveNameCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L179-L181","name":"Lean.Elab.Command.instMonadResolveNameCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadResolveNameCommandElabM","doc":""},"Lean.Elab.Command.instMonadRefCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L97-L99","name":"Lean.Elab.Command.instMonadRefCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadRefCommandElabM","doc":""},"Lean.Elab.Command.instMonadRecDepthCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L253-L256","name":"Lean.Elab.Command.instMonadRecDepthCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadRecDepthCommandElabM","doc":""},"Lean.Elab.Command.instMonadQuotationCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L213-L216","name":"Lean.Elab.Command.instMonadQuotationCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadQuotationCommandElabM","doc":""},"Lean.Elab.Command.instMonadOptionsCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L88-L89","name":"Lean.Elab.Command.instMonadOptionsCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadOptionsCommandElabM","doc":""},"Lean.Elab.Command.instMonadMacroAdapterCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L248-L251","name":"Lean.Elab.Command.instMonadMacroAdapterCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadMacroAdapterCommandElabM","doc":""},"Lean.Elab.Command.instMonadLogCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L183-L192","name":"Lean.Elab.Command.instMonadLogCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadLogCommandElabM","doc":""},"Lean.Elab.Command.instMonadLiftTIOCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L174-L175","name":"Lean.Elab.Command.instMonadLiftTIOCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadLiftTIOCommandElabM","doc":""},"Lean.Elab.Command.instMonadInfoTreeCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L80-L82","name":"Lean.Elab.Command.instMonadInfoTreeCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadInfoTreeCommandElabM","doc":""},"Lean.Elab.Command.instMonadEnvCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L84-L86","name":"Lean.Elab.Command.instMonadEnvCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadEnvCommandElabM","doc":""},"Lean.Elab.Command.instMonadCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L63-L63","name":"Lean.Elab.Command.instMonadCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instMonadCommandElabM","doc":""},"Lean.Elab.Command.instInhabitedStructFieldKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L63-L63","name":"Lean.Elab.Command.instInhabitedStructFieldKind","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.instInhabitedStructFieldKind","doc":""},"Lean.Elab.Command.instInhabitedStructFieldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L71-L71","name":"Lean.Elab.Command.instInhabitedStructFieldInfo","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.instInhabitedStructFieldInfo","doc":""},"Lean.Elab.Command.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L44-L44","name":"Lean.Elab.Command.instInhabitedState","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instInhabitedState","doc":""},"Lean.Elab.Command.instInhabitedScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L32-L32","name":"Lean.Elab.Command.instInhabitedScope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instInhabitedScope","doc":""},"Lean.Elab.Command.instInhabitedInductiveView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L69-L69","name":"Lean.Elab.Command.instInhabitedInductiveView","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.instInhabitedInductiveView","doc":""},"Lean.Elab.Command.instInhabitedElabHeaderResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L77-L77","name":"Lean.Elab.Command.instInhabitedElabHeaderResult","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.instInhabitedElabHeaderResult","doc":""},"Lean.Elab.Command.instInhabitedCtorView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L48-L48","name":"Lean.Elab.Command.instInhabitedCtorView","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.instInhabitedCtorView","doc":""},"Lean.Elab.Command.instInhabitedCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L331-L332","name":"Lean.Elab.Command.instInhabitedCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instInhabitedCommandElabM","doc":""},"Lean.Elab.Command.instDecidableEqStructFieldKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L63-L63","name":"Lean.Elab.Command.instDecidableEqStructFieldKind","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.instDecidableEqStructFieldKind","doc":""},"Lean.Elab.Command.instAddMessageContextCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L94-L95","name":"Lean.Elab.Command.instAddMessageContextCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instAddMessageContextCommandElabM","doc":""},"Lean.Elab.Command.instAddErrorMessageContextCommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L105-L111","name":"Lean.Elab.Command.instAddErrorMessageContextCommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.instAddErrorMessageContextCommandElabM","doc":""},"Lean.Elab.Command.inferMacroRulesAltKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L387-L393","name":"Lean.Elab.Command.inferMacroRulesAltKind","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.inferMacroRulesAltKind","doc":""},"Lean.Elab.Command.hasNoErrorMessages":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L255-L256","name":"Lean.Elab.Command.hasNoErrorMessages","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.hasNoErrorMessages","doc":""},"Lean.Elab.Command.hasDuplicateAntiquot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Notation.lean#L58-L68","name":"Lean.Elab.Command.hasDuplicateAntiquot","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.hasDuplicateAntiquot","doc":""},"Lean.Elab.Command.getTerminationHints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L192-L199","name":"Lean.Elab.Command.getTerminationHints","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.getTerminationHints","doc":""},"Lean.Elab.Command.getScopes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L451-L452","name":"Lean.Elab.Command.getScopes","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getScopes","doc":""},"Lean.Elab.Command.getScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L177-L177","name":"Lean.Elab.Command.getScope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getScope","doc":""},"Lean.Elab.Command.getRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L91-L92","name":"Lean.Elab.Command.getRef","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getRef","doc":""},"Lean.Elab.Command.getMainModule":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L207-L207","name":"Lean.Elab.Command.getMainModule","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getMainModule","doc":""},"Lean.Elab.Command.getLevelNames":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L471-L472","name":"Lean.Elab.Command.getLevelNames","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getLevelNames","doc":""},"Lean.Elab.Command.getCurrMacroScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L206-L206","name":"Lean.Elab.Command.getCurrMacroScope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getCurrMacroScope","doc":""},"Lean.Elab.Command.getBracketedBinderIds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L339-L344","name":"Lean.Elab.Command.getBracketedBinderIds","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.getBracketedBinderIds","doc":"Return identifier names in the given bracketed binder. "},"Lean.Elab.Command.findCommonPrefix.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L282-L287","name":"Lean.Elab.Command.findCommonPrefix.go","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.findCommonPrefix.go","doc":""},"Lean.Elab.Command.findCommonPrefix.findCommon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L288-L291","name":"Lean.Elab.Command.findCommonPrefix.findCommon","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.findCommonPrefix.findCommon","doc":""},"Lean.Elab.Command.findCommonPrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L277-L291","name":"Lean.Elab.Command.findCommonPrefix","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.findCommonPrefix","doc":"Find the common namespace for the given names.\nExample:\n```\nfindCommonPrefix [`Lean.Elab.eval, `Lean.mkConst, `Lean.Elab.Tactic.evalTactic]\n-- `Lean\n```\n"},"Lean.Elab.Command.failIfSucceeds":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L258-L276","name":"Lean.Elab.Command.failIfSucceeds","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.failIfSucceeds","doc":""},"Lean.Elab.Command.expandNotationItemIntoSyntaxItem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Notation.lean#L28-L31","name":"Lean.Elab.Command.expandNotationItemIntoSyntaxItem","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.expandNotationItemIntoSyntaxItem","doc":"Convert `notation` command lhs item into a `syntax` command item "},"Lean.Elab.Command.expandNotationItemIntoPattern":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Notation.lean#L34-L41","name":"Lean.Elab.Command.expandNotationItemIntoPattern","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.expandNotationItemIntoPattern","doc":"Convert `notation` command lhs item into a pattern element "},"Lean.Elab.Command.expandNotation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Notation.lean#L140-L145","name":"Lean.Elab.Command.expandNotation","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.expandNotation","doc":""},"Lean.Elab.Command.expandNoKindMacroRulesAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L398-L411","name":"Lean.Elab.Command.expandNoKindMacroRulesAux","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.expandNoKindMacroRulesAux","doc":"Infer syntax kind `k` from first pattern, put alternatives of same kind into new `macro/elab_rules (kind := k)` via `mkCmd (some k)`,\nleave remaining alternatives (via `mkCmd none`) to be recursively expanded. "},"Lean.Elab.Command.expandMutualPreamble":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L326-L333","name":"Lean.Elab.Command.expandMutualPreamble","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.expandMutualPreamble","doc":""},"Lean.Elab.Command.expandMutualNamespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L295-L310","name":"Lean.Elab.Command.expandMutualNamespace","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.expandMutualNamespace","doc":""},"Lean.Elab.Command.expandMutualElement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L313-L323","name":"Lean.Elab.Command.expandMutualElement","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.expandMutualElement","doc":""},"Lean.Elab.Command.expandMixfix.withAttrKindGlobal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Mixfix.lean#L29-L33","name":"Lean.Elab.Command.expandMixfix.withAttrKindGlobal","docLink":"./Lean/Elab/Mixfix.html#Lean.Elab.Command.expandMixfix.withAttrKindGlobal","doc":""},"Lean.Elab.Command.expandMixfix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Mixfix.lean#L10-L33","name":"Lean.Elab.Command.expandMixfix","docLink":"./Lean/Elab/Mixfix.html#Lean.Elab.Command.expandMixfix","doc":""},"Lean.Elab.Command.expandMacroArg.mkSyntaxAndPat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MacroArgUtil.lean#L21-L44","name":"Lean.Elab.Command.expandMacroArg.mkSyntaxAndPat","docLink":"./Lean/Elab/MacroArgUtil.html#Lean.Elab.Command.expandMacroArg.mkSyntaxAndPat","doc":""},"Lean.Elab.Command.expandMacroArg.mkSplicePat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MacroArgUtil.lean#L45-L46","name":"Lean.Elab.Command.expandMacroArg.mkSplicePat","docLink":"./Lean/Elab/MacroArgUtil.html#Lean.Elab.Command.expandMacroArg.mkSplicePat","doc":""},"Lean.Elab.Command.expandMacroArg.mkAntiquotNode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MacroArgUtil.lean#L47-L77","name":"Lean.Elab.Command.expandMacroArg.mkAntiquotNode","docLink":"./Lean/Elab/MacroArgUtil.html#Lean.Elab.Command.expandMacroArg.mkAntiquotNode","doc":""},"Lean.Elab.Command.expandMacroArg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MacroArgUtil.lean#L14-L77","name":"Lean.Elab.Command.expandMacroArg","docLink":"./Lean/Elab/MacroArgUtil.html#Lean.Elab.Command.expandMacroArg","doc":"Convert `macro` arg into a `syntax` command item and a pattern element "},"Lean.Elab.Command.expandInitialize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L376-L388","name":"Lean.Elab.Command.expandInitialize","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.expandInitialize","doc":""},"Lean.Elab.Command.expandInCmd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L404-L406","name":"Lean.Elab.Command.expandInCmd","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.expandInCmd","doc":""},"Lean.Elab.Command.expandDeclId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L482-L489","name":"Lean.Elab.Command.expandDeclId","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.expandDeclId","doc":""},"Lean.Elab.Command.elabVariable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L217-L228","name":"Lean.Elab.Command.elabVariable","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabVariable","doc":""},"Lean.Elab.Command.elabUniverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L114-L115","name":"Lean.Elab.Command.elabUniverse","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabUniverse","doc":""},"Lean.Elab.Command.elabSynth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L389-L397","name":"Lean.Elab.Command.elabSynth","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabSynth","doc":""},"Lean.Elab.Command.elabSyntaxAbbrev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L376-L382","name":"Lean.Elab.Command.elabSyntaxAbbrev","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.elabSyntaxAbbrev","doc":""},"Lean.Elab.Command.elabSyntax":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L343-L374","name":"Lean.Elab.Command.elabSyntax","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.elabSyntax","doc":""},"Lean.Elab.Command.elabStructure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L868-L913","name":"Lean.Elab.Command.elabStructure","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.elabStructure","doc":""},"Lean.Elab.Command.elabSetOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L399-L402","name":"Lean.Elab.Command.elabSetOption","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabSetOption","doc":""},"Lean.Elab.Command.elabSection":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L67-L71","name":"Lean.Elab.Command.elabSection","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabSection","doc":""},"Lean.Elab.Command.elabReduce":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L244-L253","name":"Lean.Elab.Command.elabReduce","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabReduce","doc":""},"Lean.Elab.Command.elabPrintAxioms":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Print.lean#L124-L128","name":"Lean.Elab.Command.elabPrintAxioms","docLink":"./Lean/Elab/Print.html#Lean.Elab.Command.elabPrintAxioms","doc":""},"Lean.Elab.Command.elabPrint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Print.lean#L84-L87","name":"Lean.Elab.Command.elabPrint","docLink":"./Lean/Elab/Print.html#Lean.Elab.Command.elabPrint","doc":""},"Lean.Elab.Command.elabOpen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L136-L138","name":"Lean.Elab.Command.elabOpen","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabOpen","doc":""},"Lean.Elab.Command.elabNonComputableSection":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L73-L77","name":"Lean.Elab.Command.elabNonComputableSection","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabNonComputableSection","doc":""},"Lean.Elab.Command.elabNamespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L62-L65","name":"Lean.Elab.Command.elabNamespace","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabNamespace","doc":""},"Lean.Elab.Command.elabMutualDef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MutualDef.lean#L870-L876","name":"Lean.Elab.Command.elabMutualDef","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Command.elabMutualDef","doc":""},"Lean.Elab.Command.elabMutual":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L336-L353","name":"Lean.Elab.Command.elabMutual","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabMutual","doc":""},"Lean.Elab.Command.elabModuleDoc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L15-L21","name":"Lean.Elab.Command.elabModuleDoc","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabModuleDoc","doc":""},"Lean.Elab.Command.elabMacroRulesAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MacroRules.lean#L18-L40","name":"Lean.Elab.Command.elabMacroRulesAux","docLink":"./Lean/Elab/MacroRules.html#Lean.Elab.Command.elabMacroRulesAux","doc":"Remark: `k` is the user provided kind with the current namespace included.\nRecall that syntax node kinds contain the current namespace.\n"},"Lean.Elab.Command.elabMacroRules":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/MacroRules.lean#L42-L52","name":"Lean.Elab.Command.elabMacroRules","docLink":"./Lean/Elab/MacroRules.html#Lean.Elab.Command.elabMacroRules","doc":""},"Lean.Elab.Command.elabMacro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Macro.lean#L13-L38","name":"Lean.Elab.Command.elabMacro","docLink":"./Lean/Elab/Macro.html#Lean.Elab.Command.elabMacro","doc":""},"Lean.Elab.Command.elabInitQuot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L117-L120","name":"Lean.Elab.Command.elabInitQuot","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabInitQuot","doc":""},"Lean.Elab.Command.elabInductiveViews":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L837-L850","name":"Lean.Elab.Command.elabInductiveViews","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.elabInductiveViews","doc":""},"Lean.Elab.Command.elabInductive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L183-L185","name":"Lean.Elab.Command.elabInductive","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabInductive","doc":""},"Lean.Elab.Command.elabGenInjectiveTheorems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/GenInjective.lean#L11-L14","name":"Lean.Elab.Command.elabGenInjectiveTheorems","docLink":"./Lean/Elab/GenInjective.html#Lean.Elab.Command.elabGenInjectiveTheorems","doc":""},"Lean.Elab.Command.elabExport":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L122-L134","name":"Lean.Elab.Command.elabExport","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabExport","doc":""},"Lean.Elab.Command.elabEvalUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L317-L384","name":"Lean.Elab.Command.elabEvalUnsafe","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabEvalUnsafe","doc":""},"Lean.Elab.Command.elabEval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L387-L387","name":"Lean.Elab.Command.elabEval","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabEval","doc":""},"Lean.Elab.Command.elabEnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L79-L100","name":"Lean.Elab.Command.elabEnd","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabEnd","doc":""},"Lean.Elab.Command.elabElabRulesAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ElabRules.lean#L20-L69","name":"Lean.Elab.Command.elabElabRulesAux","docLink":"./Lean/Elab/ElabRules.html#Lean.Elab.Command.elabElabRulesAux","doc":""},"Lean.Elab.Command.elabElabRules":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ElabRules.lean#L71-L78","name":"Lean.Elab.Command.elabElabRules","docLink":"./Lean/Elab/ElabRules.html#Lean.Elab.Command.elabElabRules","doc":""},"Lean.Elab.Command.elabElab":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/ElabRules.lean#L81-L94","name":"Lean.Elab.Command.elabElab","docLink":"./Lean/Elab/ElabRules.html#Lean.Elab.Command.elabElab","doc":""},"Lean.Elab.Command.elabDeclareSyntaxCat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L270-L285","name":"Lean.Elab.Command.elabDeclareSyntaxCat","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.elabDeclareSyntaxCat","doc":""},"Lean.Elab.Command.elabDeclaration":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L202-L226","name":"Lean.Elab.Command.elabDeclaration","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabDeclaration","doc":""},"Lean.Elab.Command.elabCommandTopLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L296-L321","name":"Lean.Elab.Command.elabCommandTopLevel","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.elabCommandTopLevel","doc":"`elabCommand` wrapper that should be used for the initial invocation, not for recursive calls after\nmacro expansion etc.\n"},"Lean.Elab.Command.elabCommand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L265-L288","name":"Lean.Elab.Command.elabCommand","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.elabCommand","doc":""},"Lean.Elab.Command.elabClassInductive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L187-L190","name":"Lean.Elab.Command.elabClassInductive","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabClassInductive","doc":""},"Lean.Elab.Command.elabChoice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L111-L112","name":"Lean.Elab.Command.elabChoice","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabChoice","doc":""},"Lean.Elab.Command.elabCheckFailure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L278-L281","name":"Lean.Elab.Command.elabCheckFailure","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabCheckFailure","doc":""},"Lean.Elab.Command.elabCheckCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L232-L240","name":"Lean.Elab.Command.elabCheckCore","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabCheckCore","doc":""},"Lean.Elab.Command.elabCheck":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L242-L242","name":"Lean.Elab.Command.elabCheck","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabCheck","doc":""},"Lean.Elab.Command.elabAxiom":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L100-L135","name":"Lean.Elab.Command.elabAxiom","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabAxiom","doc":""},"Lean.Elab.Command.elabAuxDef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/AuxDef.lean#L20-L32","name":"Lean.Elab.Command.elabAuxDef","docLink":"./Lean/Elab/AuxDef.html#Lean.Elab.Command.elabAuxDef","doc":""},"Lean.Elab.Command.elabAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Declaration.lean#L356-L374","name":"Lean.Elab.Command.elabAttr","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabAttr","doc":""},"Lean.Elab.Command.elabAddDeclDoc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/BuiltinCommand.lean#L408-L413","name":"Lean.Elab.Command.elabAddDeclDoc","docLink":"./Lean/Elab/BuiltinCommand.html#Lean.Elab.Command.elabAddDeclDoc","doc":""},"Lean.Elab.Command.commandElabAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L224-L224","name":"Lean.Elab.Command.commandElabAttribute","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.commandElabAttribute","doc":""},"Lean.Elab.Command.checkValidInductiveModifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L26-L30","name":"Lean.Elab.Command.checkValidInductiveModifier","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.checkValidInductiveModifier","doc":""},"Lean.Elab.Command.checkValidFieldModifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L127-L135","name":"Lean.Elab.Command.checkValidFieldModifier","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.checkValidFieldModifier","doc":""},"Lean.Elab.Command.checkValidCtorModifier":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L32-L40","name":"Lean.Elab.Command.checkValidCtorModifier","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.checkValidCtorModifier","doc":""},"Lean.Elab.Command.checkRuleKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Syntax.lean#L384-L385","name":"Lean.Elab.Command.checkRuleKind","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.checkRuleKind","doc":""},"Lean.Elab.Command.checkResultingUniverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L532-L536","name":"Lean.Elab.Command.checkResultingUniverse","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.checkResultingUniverse","doc":""},"Lean.Elab.Command.catchExceptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L445-L446","name":"Lean.Elab.Command.catchExceptions","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.catchExceptions","doc":""},"Lean.Elab.Command.bootstrap.inductiveCheckResultingUniverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L526-L526","name":"Lean.Elab.Command.bootstrap.inductiveCheckResultingUniverse","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.bootstrap.inductiveCheckResultingUniverse","doc":""},"Lean.Elab.Command.aux_def":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/AuxDef.lean#L12-L17","name":"Lean.Elab.Command.aux_def","docLink":"./Lean/Elab/AuxDef.html#Lean.Elab.Command.aux_def","doc":"Declares an auxiliary definition with an automatically generated name.\nFor example, `aux_def foo : Nat := 42` creates a definition\nwith an internal, unused name based on the suggestion `foo`.\n"},"Lean.Elab.Command.addUnivLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L474-L480","name":"Lean.Elab.Command.addUnivLevel","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.addUnivLevel","doc":""},"Lean.Elab.Command.addLinter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L76-L78","name":"Lean.Elab.Command.addLinter","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.addLinter","doc":""},"Lean.Elab.Command.adaptExpander":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L324-L326","name":"Lean.Elab.Command.adaptExpander","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.adaptExpander","doc":"Adapt a syntax transformation to a regular, command-producing elaborator. "},"Lean.Elab.Command.accLevelAtCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L473-L487","name":"Lean.Elab.Command.accLevelAtCtor","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.accLevelAtCtor","doc":"Auxiliary function for `updateResultingUniverse`\n  `accLevelAtCtor ctor ctorParam r rOffset` add `u` (`ctorParam`'s universe) to state if it is not already there and\n  it is different from the resulting universe level `r+rOffset`.\n\n  See `accLevel`.\n"},"Lean.Elab.Command.accLevel.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L448-L464","name":"Lean.Elab.Command.accLevel.go","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.accLevel.go","doc":""},"Lean.Elab.Command.accLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L445-L464","name":"Lean.Elab.Command.accLevel","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.accLevel","doc":"Auxiliary function for `updateResultingUniverse`\n   `accLevel u r rOffset` add `u` to state if it is not already there and\n   it is different from the resulting universe level `r+rOffset`.\n\n\n   If `u` is a `max`, then its components are recursively processed.\n   If `u` is a `succ` and `rOffset > 0`, we process the `u`s child using `rOffset-1`.\n\n   This method is used to infer the resulting universe level of an inductive datatype.\n "},"Lean.Elab.Command.StructView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L47-L59","name":"Lean.Elab.Command.StructView","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructView","doc":""},"Lean.Elab.Command.StructFieldView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L36-L45","name":"Lean.Elab.Command.StructFieldView","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldView","doc":""},"Lean.Elab.Command.StructFieldKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L61-L63","name":"Lean.Elab.Command.StructFieldKind","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldKind","doc":""},"Lean.Elab.Command.StructFieldInfo.isSubobject":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L78-L81","name":"Lean.Elab.Command.StructFieldInfo.isSubobject","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.isSubobject","doc":""},"Lean.Elab.Command.StructFieldInfo.isFromParent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L73-L76","name":"Lean.Elab.Command.StructFieldInfo.isFromParent","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo.isFromParent","doc":""},"Lean.Elab.Command.StructFieldInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L65-L71","name":"Lean.Elab.Command.StructFieldInfo","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructFieldInfo","doc":""},"Lean.Elab.Command.StructCtorView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L30-L34","name":"Lean.Elab.Command.StructCtorView","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.StructCtorView","doc":""},"Lean.Elab.Command.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L34-L44","name":"Lean.Elab.Command.State","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.State","doc":""},"Lean.Elab.Command.Scope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L20-L32","name":"Lean.Elab.Command.Scope","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Scope","doc":""},"Lean.Elab.Command.Linter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L59-L59","name":"Lean.Elab.Command.Linter","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Linter","doc":""},"Lean.Elab.Command.InductiveView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L57-L69","name":"Lean.Elab.Command.InductiveView","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.InductiveView","doc":""},"Lean.Elab.Command.FieldMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L321-L321","name":"Lean.Elab.Command.FieldMap","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.FieldMap","doc":""},"Lean.Elab.Command.ElabStructResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Structure.lean#L83-L90","name":"Lean.Elab.Command.ElabStructResult","docLink":"./Lean/Elab/Structure.html#Lean.Elab.Command.ElabStructResult","doc":""},"Lean.Elab.Command.ElabHeaderResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L71-L77","name":"Lean.Elab.Command.ElabHeaderResult","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.ElabHeaderResult","doc":""},"Lean.Elab.Command.CtorView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L42-L48","name":"Lean.Elab.Command.CtorView","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.CtorView","doc":""},"Lean.Elab.Command.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L46-L54","name":"Lean.Elab.Command.Context","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.Context","doc":""},"Lean.Elab.Command.ComputedFieldView":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Inductive.lean#L50-L55","name":"Lean.Elab.Command.ComputedFieldView","docLink":"./Lean/Elab/Inductive.html#Lean.Elab.Command.ComputedFieldView","doc":""},"Lean.Elab.Command.CommandElabM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L57-L57","name":"Lean.Elab.Command.CommandElabM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM","doc":""},"Lean.Elab.Command.CommandElabCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L56-L56","name":"Lean.Elab.Command.CommandElabCoreM","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabCoreM","doc":""},"Lean.Elab.Command.CommandElab":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Command.lean#L58-L58","name":"Lean.Elab.Command.CommandElab","docLink":"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab","doc":""},"Lean.Elab.Command.CollectAxioms.collect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Print.lean#L97-L112","name":"Lean.Elab.Command.CollectAxioms.collect","docLink":"./Lean/Elab/Print.html#Lean.Elab.Command.CollectAxioms.collect","doc":""},"Lean.Elab.Command.CollectAxioms.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Print.lean#L91-L93","name":"Lean.Elab.Command.CollectAxioms.State","docLink":"./Lean/Elab/Print.html#Lean.Elab.Command.CollectAxioms.State","doc":""},"Lean.Elab.Command.CollectAxioms.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Print.lean#L95-L95","name":"Lean.Elab.Command.CollectAxioms.M","docLink":"./Lean/Elab/Print.html#Lean.Elab.Command.CollectAxioms.M","doc":""},"Lean.Elab.Attribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Attributes.lean#L12-L16","name":"Lean.Elab.Attribute","docLink":"./Lean/Elab/Attributes.html#Lean.Elab.Attribute","doc":""},"Lean.DependsOn.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L661-L662","name":"Lean.DependsOn.main","docLink":"./Lean/MetavarContext.html#Lean.DependsOn.main","doc":""},"Lean.DependsOn.instMonadMCtxM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L607-L609","name":"Lean.DependsOn.instMonadMCtxM","docLink":"./Lean/MetavarContext.html#Lean.DependsOn.instMonadMCtxM","doc":""},"Lean.DependsOn.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L601-L603","name":"Lean.DependsOn.State","docLink":"./Lean/MetavarContext.html#Lean.DependsOn.State","doc":""},"Lean.DelayedMetavarAssignment":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/MetavarContext.lean#L289-L291","name":"Lean.DelayedMetavarAssignment","docLink":"./Lean/MetavarContext.html#Lean.DelayedMetavarAssignment","doc":"A delayed assignment for a metavariable `?m`. It represents an assignment of the form `?m := (fun fvars => (mkMVar mvarIdPending))`.\n  `mvarIdPending` is a `syntheticOpaque` metavariable that has not been synthesized yet. The delayed assignment becomes a real one\n  as soon as `mvarIdPending` has been fully synthesized.\n  `fvars` are variables in the `mvarIdPending` local context.\n\n  See the comment below `assignDelayedMVar ` for the rationale of delayed assignments.\n\n  Recall that we use a locally nameless approach when dealing with binders. Suppose we are\n  trying to synthesize `?n` in the expression `e`, in the context of `(fun x => e)`.\n  The metavariable `?n` might depend on the bound variable `x`. However, since we are locally nameless,\n  the bound variable `x` is in fact represented by some free variable `fvar_x`. Thus, when we exit\n  the scope, we must rebind the value of `fvar_x` in `?n` to the de-bruijn index of the bound variable `x`.\n"},"Lean.DefinitionVal.getSafetyEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L113-L114","name":"Lean.DefinitionVal.getSafetyEx","docLink":"./Lean/Declaration.html#Lean.DefinitionVal.getSafetyEx","doc":""},"Lean.DefinitionVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L94-L106","name":"Lean.DefinitionVal","docLink":"./Lean/Declaration.html#Lean.DefinitionVal","doc":""},"Lean.DefinitionSafety":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L90-L92","name":"Lean.DefinitionSafety","docLink":"./Lean/Declaration.html#Lean.DefinitionSafety","doc":""},"Lean.DeclarationRanges":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L29-L32","name":"Lean.DeclarationRanges","docLink":"./Lean/DeclarationRange.html#Lean.DeclarationRanges","doc":""},"Lean.DeclarationRange":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/DeclarationRange.lean#L13-L23","name":"Lean.DeclarationRange","docLink":"./Lean/DeclarationRange.html#Lean.DeclarationRange","doc":"Store position information for declarations. "},"Lean.Declaration.isUnsafeInductiveDeclEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L169-L171","name":"Lean.Declaration.isUnsafeInductiveDeclEx","docLink":"./Lean/Declaration.html#Lean.Declaration.isUnsafeInductiveDeclEx","doc":""},"Lean.Declaration.hasSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Sorry.lean#L61-L62","name":"Lean.Declaration.hasSorry","docLink":"./Lean/Util/Sorry.html#Lean.Declaration.hasSorry","doc":""},"Lean.Declaration.hasNonSyntheticSorry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/Sorry.lean#L64-L65","name":"Lean.Declaration.hasNonSyntheticSorry","docLink":"./Lean/Util/Sorry.html#Lean.Declaration.hasNonSyntheticSorry","doc":""},"Lean.Declaration.forExprM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L188-L189","name":"Lean.Declaration.forExprM","docLink":"./Lean/Declaration.html#Lean.Declaration.forExprM","doc":""},"Lean.Declaration.foldExprM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L173-L186","name":"Lean.Declaration.foldExprM","docLink":"./Lean/Declaration.html#Lean.Declaration.foldExprM","doc":""},"Lean.Declaration":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L154-L162","name":"Lean.Declaration","docLink":"./Lean/Declaration.html#Lean.Declaration","doc":"Declaration object that can be sent to the kernel. "},"Lean.DataValue.str":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L39-L45","name":"Lean.DataValue.str","docLink":"./Lean/Data/KVMap.html#Lean.DataValue.str","doc":""},"Lean.DataValue.sameCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L29-L36","name":"Lean.DataValue.sameCtor","docLink":"./Lean/Data/KVMap.html#Lean.DataValue.sameCtor","doc":""},"Lean.DataValue.getBoolEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L25-L27","name":"Lean.DataValue.getBoolEx","docLink":"./Lean/Data/KVMap.html#Lean.DataValue.getBoolEx","doc":""},"Lean.DataValue.beqExp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L21-L22","name":"Lean.DataValue.beqExp","docLink":"./Lean/Data/KVMap.html#Lean.DataValue.beqExp","doc":""},"Lean.DataValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/KVMap.lean#L11-L18","name":"Lean.DataValue","docLink":"./Lean/Data/KVMap.html#Lean.DataValue","doc":"Value stored in a key-value map. "},"Lean.Data.AC.sort.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L70-L72","name":"Lean.Data.AC.sort.loop","docLink":"./Init/Data/AC.html#Lean.Data.AC.sort.loop","doc":""},"Lean.Data.AC.sort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L69-L73","name":"Lean.Data.AC.sort","docLink":"./Init/Data/AC.html#Lean.Data.AC.sort","doc":""},"Lean.Data.AC.removeNeutrals.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L94-L99","name":"Lean.Data.AC.removeNeutrals.loop","docLink":"./Init/Data/AC.html#Lean.Data.AC.removeNeutrals.loop","doc":""},"Lean.Data.AC.removeNeutrals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L88-L99","name":"Lean.Data.AC.removeNeutrals","docLink":"./Init/Data/AC.html#Lean.Data.AC.removeNeutrals","doc":""},"Lean.Data.AC.norm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L101-L105","name":"Lean.Data.AC.norm","docLink":"./Init/Data/AC.html#Lean.Data.AC.norm","doc":""},"Lean.Data.AC.mergeIdem.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L76-L82","name":"Lean.Data.AC.mergeIdem.loop","docLink":"./Init/Data/AC.html#Lean.Data.AC.mergeIdem.loop","doc":""},"Lean.Data.AC.mergeIdem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L75-L86","name":"Lean.Data.AC.mergeIdem","docLink":"./Init/Data/AC.html#Lean.Data.AC.mergeIdem","doc":""},"Lean.Data.AC.instReprExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L15-L15","name":"Lean.Data.AC.instReprExpr","docLink":"./Init/Data/AC.html#Lean.Data.AC.instReprExpr","doc":""},"Lean.Data.AC.instInhabitedExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L15-L15","name":"Lean.Data.AC.instInhabitedExpr","docLink":"./Init/Data/AC.html#Lean.Data.AC.instInhabitedExpr","doc":""},"Lean.Data.AC.instEvalInformationContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L47-L50","name":"Lean.Data.AC.instEvalInformationContext","docLink":"./Init/Data/AC.html#Lean.Data.AC.instEvalInformationContext","doc":""},"Lean.Data.AC.instContextInformationContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L42-L45","name":"Lean.Data.AC.instContextInformationContext","docLink":"./Init/Data/AC.html#Lean.Data.AC.instContextInformationContext","doc":""},"Lean.Data.AC.instBEqExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L15-L15","name":"Lean.Data.AC.instBEqExpr","docLink":"./Init/Data/AC.html#Lean.Data.AC.instBEqExpr","doc":""},"Lean.Data.AC.insert_nonEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L160-L163","name":"Lean.Data.AC.insert_nonEmpty","docLink":"./Init/Data/AC.html#Lean.Data.AC.insert_nonEmpty","doc":""},"Lean.Data.AC.insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L65-L67","name":"Lean.Data.AC.insert","docLink":"./Init/Data/AC.html#Lean.Data.AC.insert","doc":""},"Lean.Data.AC.evalList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L60-L63","name":"Lean.Data.AC.evalList","docLink":"./Init/Data/AC.html#Lean.Data.AC.evalList","doc":""},"Lean.Data.AC.eval":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L52-L54","name":"Lean.Data.AC.eval","docLink":"./Init/Data/AC.html#Lean.Data.AC.eval","doc":""},"Lean.Data.AC.Variable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L17-L19","name":"Lean.Data.AC.Variable","docLink":"./Init/Data/AC.html#Lean.Data.AC.Variable","doc":""},"Lean.Data.AC.List.two_step_induction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L107-L116","name":"Lean.Data.AC.List.two_step_induction","docLink":"./Init/Data/AC.html#Lean.Data.AC.List.two_step_induction","doc":""},"Lean.Data.AC.Expr.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L56-L58","name":"Lean.Data.AC.Expr.toList","docLink":"./Init/Data/AC.html#Lean.Data.AC.Expr.toList","doc":""},"Lean.Data.AC.Expr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L12-L15","name":"Lean.Data.AC.Expr","docLink":"./Init/Data/AC.html#Lean.Data.AC.Expr","doc":""},"Lean.Data.AC.EvalInformation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L34-L37","name":"Lean.Data.AC.EvalInformation","docLink":"./Init/Data/AC.html#Lean.Data.AC.EvalInformation","doc":""},"Lean.Data.AC.ContextInformation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L29-L32","name":"Lean.Data.AC.ContextInformation","docLink":"./Init/Data/AC.html#Lean.Data.AC.ContextInformation","doc":""},"Lean.Data.AC.Context.var":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L39-L40","name":"Lean.Data.AC.Context.var","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.var","doc":""},"Lean.Data.AC.Context.unwrap_isNeutral":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L269-L276","name":"Lean.Data.AC.Context.unwrap_isNeutral","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.unwrap_isNeutral","doc":""},"Lean.Data.AC.Context.toList_nonEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L260-L267","name":"Lean.Data.AC.Context.toList_nonEmpty","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.toList_nonEmpty","doc":""},"Lean.Data.AC.Context.sort_loop_nonEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L165-L168","name":"Lean.Data.AC.Context.sort_loop_nonEmpty","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.sort_loop_nonEmpty","doc":""},"Lean.Data.AC.Context.mergeIdem_nonEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L118-L122","name":"Lean.Data.AC.Context.mergeIdem_nonEmpty","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.mergeIdem_nonEmpty","doc":""},"Lean.Data.AC.Context.mergeIdem_head2":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L127-L128","name":"Lean.Data.AC.Context.mergeIdem_head2","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.mergeIdem_head2","doc":""},"Lean.Data.AC.Context.mergeIdem_head":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L124-L125","name":"Lean.Data.AC.Context.mergeIdem_head","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.mergeIdem_head","doc":""},"Lean.Data.AC.Context.eval_toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L305-L310","name":"Lean.Data.AC.Context.eval_toList","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.eval_toList","doc":""},"Lean.Data.AC.Context.eval_norm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L312-L315","name":"Lean.Data.AC.Context.eval_norm","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.eval_norm","doc":""},"Lean.Data.AC.Context.evalList_sort_loop_swap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L210-L223","name":"Lean.Data.AC.Context.evalList_sort_loop_swap","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.evalList_sort_loop_swap","doc":""},"Lean.Data.AC.Context.evalList_sort_cons":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L225-L247","name":"Lean.Data.AC.Context.evalList_sort_cons","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.evalList_sort_cons","doc":""},"Lean.Data.AC.Context.evalList_sort_congr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L191-L208","name":"Lean.Data.AC.Context.evalList_sort_congr","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.evalList_sort_congr","doc":""},"Lean.Data.AC.Context.evalList_sort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L249-L258","name":"Lean.Data.AC.Context.evalList_sort","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.evalList_sort","doc":""},"Lean.Data.AC.Context.evalList_removeNeutrals":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L278-L289","name":"Lean.Data.AC.Context.evalList_removeNeutrals","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.evalList_removeNeutrals","doc":""},"Lean.Data.AC.Context.evalList_mergeIdem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L130-L158","name":"Lean.Data.AC.Context.evalList_mergeIdem","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.evalList_mergeIdem","doc":""},"Lean.Data.AC.Context.evalList_insert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L170-L189","name":"Lean.Data.AC.Context.evalList_insert","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.evalList_insert","doc":""},"Lean.Data.AC.Context.evalList_append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L291-L303","name":"Lean.Data.AC.Context.evalList_append","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.evalList_append","doc":""},"Lean.Data.AC.Context.eq_of_norm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L317-L320","name":"Lean.Data.AC.Context.eq_of_norm","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context.eq_of_norm","doc":""},"Lean.Data.AC.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/AC.lean#L21-L27","name":"Lean.Data.AC.Context","docLink":"./Init/Data/AC.html#Lean.Data.AC.Context","doc":""},"Lean.Core.withIncRecDepth":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L197-L198","name":"Lean.Core.withIncRecDepth","docLink":"./Lean/CoreM.html#Lean.Core.withIncRecDepth","doc":""},"Lean.Core.withFreshMacroScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L118-L120","name":"Lean.Core.withFreshMacroScope","docLink":"./Lean/CoreM.html#Lean.Core.withFreshMacroScope","doc":""},"Lean.Core.withCurrHeartbeats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L217-L218","name":"Lean.Core.withCurrHeartbeats","docLink":"./Lean/CoreM.html#Lean.Core.withCurrHeartbeats","doc":""},"Lean.Core.viewSubexpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprLens.lean#L146-L147","name":"Lean.Core.viewSubexpr","docLink":"./Lean/Meta/ExprLens.html#Lean.Core.viewSubexpr","doc":"Given a valid SubExpr, will return the raw current expression without performing any instantiation.\nIf the SubExpr has a type subexpression coordinate then will error.\n\nThis is a cheaper version of `Lean.Meta.viewSubexpr` and can be used to quickly view the\nsubexpression at a position. Note that because the resulting expression will contain\nloose bound variables it can't be used in any `MetaM` methods. "},"Lean.Core.viewBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprLens.lean#L156-L165","name":"Lean.Core.viewBinders","docLink":"./Lean/Meta/ExprLens.html#Lean.Core.viewBinders","doc":"`viewBinders p e` returns a list of all of the binders (name, type) above the given position `p` in the root expression `e` "},"Lean.Core.transform.visit.visitPost":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L38-L41","name":"Lean.Core.transform.visit.visitPost","docLink":"./Lean/Meta/Transform.html#Lean.Core.transform.visit.visitPost","doc":""},"Lean.Core.transform.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L36-L51","name":"Lean.Core.transform.visit","docLink":"./Lean/Meta/Transform.html#Lean.Core.transform.visit","doc":""},"Lean.Core.transform":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L29-L52","name":"Lean.Core.transform","docLink":"./Lean/Meta/Transform.html#Lean.Core.transform","doc":"Tranform the expression `input` using `pre` and `post`.\n  - `pre s` is invoked before visiting the children of subterm 's'. If the result is `TransformStep.visit sNew`, then\n     `sNew` is traversed by transform. If the result is `TransformStep.done sNew`, then `s` is just replaced with `sNew`.\n     In both cases, `sNew` must be definitionally equal to `s`\n  - `post s` is invoked after visiting the children of subterm `s`.\n\n  The term `s` in both `pre s` and `post s` may contain loose bound variables. So, this method is not appropriate for\n  if one needs to apply operations (e.g., `whnf`, `inferType`) that do not handle loose bound variables.\n  Consider using `Meta.transform` to avoid loose bound variables.\n\n  This method is useful for applying transformations such as beta-reduction and delta-reduction.\n"},"Lean.Core.throwMaxHeartbeat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L200-L202","name":"Lean.Core.throwMaxHeartbeat","docLink":"./Lean/CoreM.html#Lean.Core.throwMaxHeartbeat","doc":""},"Lean.Core.setMessageLog":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L220-L221","name":"Lean.Core.setMessageLog","docLink":"./Lean/CoreM.html#Lean.Core.setMessageLog","doc":""},"Lean.Core.restore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L168-L169","name":"Lean.Core.restore","docLink":"./Lean/CoreM.html#Lean.Core.restore","doc":"Restore backtrackable parts of the state. "},"Lean.Core.resetMessageLog":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L223-L224","name":"Lean.Core.resetMessageLog","docLink":"./Lean/CoreM.html#Lean.Core.resetMessageLog","doc":""},"Lean.Core.numBinders":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/ExprLens.lean#L168-L169","name":"Lean.Core.numBinders","docLink":"./Lean/Meta/ExprLens.html#Lean.Core.numBinders","doc":"Returns the number of binders above a given subexpr position. "},"Lean.Core.modifyInstLevelValueCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L137-L138","name":"Lean.Core.modifyInstLevelValueCache","docLink":"./Lean/CoreM.html#Lean.Core.modifyInstLevelValueCache","doc":""},"Lean.Core.modifyInstLevelTypeCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L134-L135","name":"Lean.Core.modifyInstLevelTypeCache","docLink":"./Lean/CoreM.html#Lean.Core.modifyInstLevelTypeCache","doc":""},"Lean.Core.modifyCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L131-L132","name":"Lean.Core.modifyCache","docLink":"./Lean/CoreM.html#Lean.Core.modifyCache","doc":""},"Lean.Core.mkFreshUserName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L175-L176","name":"Lean.Core.mkFreshUserName","docLink":"./Lean/CoreM.html#Lean.Core.mkFreshUserName","doc":""},"Lean.Core.maxHeartbeats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L21-L21","name":"Lean.Core.maxHeartbeats","docLink":"./Lean/CoreM.html#Lean.Core.maxHeartbeats","doc":""},"Lean.Core.liftIOCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L156-L158","name":"Lean.Core.liftIOCore","docLink":"./Lean/CoreM.html#Lean.Core.liftIOCore","doc":""},"Lean.Core.instantiateValueLevelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L148-L154","name":"Lean.Core.instantiateValueLevelParams","docLink":"./Lean/CoreM.html#Lean.Core.instantiateValueLevelParams","doc":""},"Lean.Core.instantiateTypeLevelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L140-L146","name":"Lean.Core.instantiateTypeLevelParams","docLink":"./Lean/CoreM.html#Lean.Core.instantiateTypeLevelParams","doc":""},"Lean.Core.instMonadWithOptionsCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L99-L100","name":"Lean.Core.instMonadWithOptionsCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadWithOptionsCoreM","doc":""},"Lean.Core.instMonadTraceCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L163-L165","name":"Lean.Core.instMonadTraceCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadTraceCoreM","doc":""},"Lean.Core.instMonadResolveNameCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L114-L116","name":"Lean.Core.instMonadResolveNameCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadResolveNameCoreM","doc":""},"Lean.Core.instMonadRefCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L88-L90","name":"Lean.Core.instMonadRefCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadRefCoreM","doc":""},"Lean.Core.instMonadRecDepthCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L109-L112","name":"Lean.Core.instMonadRecDepthCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadRecDepthCoreM","doc":""},"Lean.Core.instMonadQuotationCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L122-L125","name":"Lean.Core.instMonadQuotationCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadQuotationCoreM","doc":""},"Lean.Core.instMonadOptionsCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L96-L97","name":"Lean.Core.instMonadOptionsCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadOptionsCoreM","doc":""},"Lean.Core.instMonadNameGeneratorCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L105-L107","name":"Lean.Core.instMonadNameGeneratorCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadNameGeneratorCoreM","doc":""},"Lean.Core.instMonadLogCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L229-L237","name":"Lean.Core.instMonadLogCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadLogCoreM","doc":""},"Lean.Core.instMonadLiftIOCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L160-L161","name":"Lean.Core.instMonadLiftIOCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadLiftIOCoreM","doc":""},"Lean.Core.instMonadInfoTreeCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L127-L129","name":"Lean.Core.instMonadInfoTreeCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadInfoTreeCoreM","doc":""},"Lean.Core.instMonadEnvCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L92-L94","name":"Lean.Core.instMonadEnvCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadEnvCoreM","doc":""},"Lean.Core.instMonadCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L83-L83","name":"Lean.Core.instMonadCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMonadCoreM","doc":""},"Lean.Core.instMetaEvalCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L190-L194","name":"Lean.Core.instMetaEvalCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instMetaEvalCoreM","doc":""},"Lean.Core.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L53-L53","name":"Lean.Core.instInhabitedState","docLink":"./Lean/CoreM.html#Lean.Core.instInhabitedState","doc":""},"Lean.Core.instInhabitedCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L85-L86","name":"Lean.Core.instInhabitedCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instInhabitedCoreM","doc":""},"Lean.Core.instInhabitedCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L35-L35","name":"Lean.Core.instInhabitedCache","docLink":"./Lean/CoreM.html#Lean.Core.instInhabitedCache","doc":""},"Lean.Core.instAddMessageContextCoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L102-L103","name":"Lean.Core.instAddMessageContextCoreM","docLink":"./Lean/CoreM.html#Lean.Core.instAddMessageContextCoreM","doc":""},"Lean.Core.getMessageLog":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L226-L227","name":"Lean.Core.getMessageLog","docLink":"./Lean/CoreM.html#Lean.Core.getMessageLog","doc":""},"Lean.Core.getMaxHeartbeats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L26-L27","name":"Lean.Core.getMaxHeartbeats","docLink":"./Lean/CoreM.html#Lean.Core.getMaxHeartbeats","doc":""},"Lean.Core.checkMaxHeartbeatsCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L204-L208","name":"Lean.Core.checkMaxHeartbeatsCore","docLink":"./Lean/CoreM.html#Lean.Core.checkMaxHeartbeatsCore","doc":""},"Lean.Core.checkMaxHeartbeats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L210-L211","name":"Lean.Core.checkMaxHeartbeats","docLink":"./Lean/CoreM.html#Lean.Core.checkMaxHeartbeats","doc":""},"Lean.Core.betaReduce":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Transform.lean#L54-L55","name":"Lean.Core.betaReduce","docLink":"./Lean/Meta/Transform.html#Lean.Core.betaReduce","doc":""},"Lean.Core.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L38-L53","name":"Lean.Core.State","docLink":"./Lean/CoreM.html#Lean.Core.State","doc":"State for the CoreM monad. "},"Lean.Core.InstantiateLevelCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L29-L29","name":"Lean.Core.InstantiateLevelCache","docLink":"./Lean/CoreM.html#Lean.Core.InstantiateLevelCache","doc":""},"Lean.Core.CoreM.toIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L184-L188","name":"Lean.Core.CoreM.toIO","docLink":"./Lean/CoreM.html#Lean.Core.CoreM.toIO","doc":""},"Lean.Core.CoreM.run'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L181-L182","name":"Lean.Core.CoreM.run'","docLink":"./Lean/CoreM.html#Lean.Core.CoreM.run'","doc":""},"Lean.Core.CoreM.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L178-L179","name":"Lean.Core.CoreM.run","docLink":"./Lean/CoreM.html#Lean.Core.CoreM.run","doc":""},"Lean.Core.CoreM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L79-L79","name":"Lean.Core.CoreM","docLink":"./Lean/CoreM.html#Lean.Core.CoreM","doc":"CoreM is a monad for manipulating the Lean environment.\nIt is the base monad for `MetaM`.\nThe main features it provides are:\n- name generator state\n- environment state\n- Lean options context\n- the current open namespace\n"},"Lean.Core.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L56-L69","name":"Lean.Core.Context","docLink":"./Lean/CoreM.html#Lean.Core.Context","doc":"Context for the CoreM monad. "},"Lean.Core.Cache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/CoreM.lean#L32-L35","name":"Lean.Core.Cache","docLink":"./Lean/CoreM.html#Lean.Core.Cache","doc":"Cache for the `CoreM` monad "},"Lean.ConstructorVal.isUnsafeEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L289-L289","name":"Lean.ConstructorVal.isUnsafeEx","docLink":"./Lean/Declaration.html#Lean.ConstructorVal.isUnsafeEx","doc":""},"Lean.ConstructorVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L265-L275","name":"Lean.ConstructorVal","docLink":"./Lean/Declaration.html#Lean.ConstructorVal","doc":""},"Lean.Constructor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L142-L145","name":"Lean.Constructor","docLink":"./Lean/Declaration.html#Lean.Constructor","doc":""},"Lean.ConstantVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L69-L73","name":"Lean.ConstantVal","docLink":"./Lean/Declaration.html#Lean.ConstantVal","doc":"Base structure for `AxiomVal`, `DefinitionVal`, `TheoremVal`, `InductiveVal`, `ConstructorVal`, `RecursorVal` and `QuotVal`. "},"Lean.ConstantInfo.value?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L413-L416","name":"Lean.ConstantInfo.value?","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.value?","doc":""},"Lean.ConstantInfo.value!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L423-L426","name":"Lean.ConstantInfo.value!","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.value!","doc":""},"Lean.ConstantInfo.type":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L410-L411","name":"Lean.ConstantInfo.type","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.type","doc":""},"Lean.ConstantInfo.toConstantVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L381-L389","name":"Lean.ConstantInfo.toConstantVal","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.toConstantVal","doc":""},"Lean.ConstantInfo.numLevelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L407-L408","name":"Lean.ConstantInfo.numLevelParams","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.numLevelParams","doc":""},"Lean.ConstantInfo.name":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L401-L402","name":"Lean.ConstantInfo.name","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.name","doc":""},"Lean.ConstantInfo.levelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L404-L405","name":"Lean.ConstantInfo.levelParams","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.levelParams","doc":""},"Lean.ConstantInfo.isUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L391-L399","name":"Lean.ConstantInfo.isUnsafe","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.isUnsafe","doc":""},"Lean.ConstantInfo.isInductive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L436-L438","name":"Lean.ConstantInfo.isInductive","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.isInductive","doc":""},"Lean.ConstantInfo.isCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L432-L434","name":"Lean.ConstantInfo.isCtor","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.isCtor","doc":""},"Lean.ConstantInfo.instantiateValueLevelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L454-L454","name":"Lean.ConstantInfo.instantiateValueLevelParams","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.instantiateValueLevelParams","doc":""},"Lean.ConstantInfo.instantiateTypeLevelParams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L451-L451","name":"Lean.ConstantInfo.instantiateTypeLevelParams","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.instantiateTypeLevelParams","doc":""},"Lean.ConstantInfo.hints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L428-L430","name":"Lean.ConstantInfo.hints","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.hints","doc":""},"Lean.ConstantInfo.hasValue":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L418-L421","name":"Lean.ConstantInfo.hasValue","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.hasValue","doc":""},"Lean.ConstantInfo.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L443-L448","name":"Lean.ConstantInfo.all","docLink":"./Lean/Declaration.html#Lean.ConstantInfo.all","doc":"List of all (including this one) declarations in the same mutual block.\n"},"Lean.ConstantInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L368-L377","name":"Lean.ConstantInfo","docLink":"./Lean/Declaration.html#Lean.ConstantInfo","doc":"Information associated with constant declarations. "},"Lean.ConstMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L26-L26","name":"Lean.ConstMap","docLink":"./Lean/Environment.html#Lean.ConstMap","doc":""},"Lean.Compiler.withNewScopeImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L95-L101","name":"Lean.Compiler.withNewScopeImp","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.withNewScopeImp","doc":""},"Lean.Compiler.withNewScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L103-L104","name":"Lean.Compiler.withNewScope","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.withNewScope","doc":""},"Lean.Compiler.whnf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L31-L31","name":"Lean.Compiler.whnf","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.whnf","doc":""},"Lean.Compiler.visitLetImp.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L114-L122","name":"Lean.Compiler.visitLetImp.go","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.visitLetImp.go","doc":""},"Lean.Compiler.visitLetImp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L111-L122","name":"Lean.Compiler.visitLetImp","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.visitLetImp","doc":""},"Lean.Compiler.visitLambda.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L74-L80","name":"Lean.Compiler.visitLambda.go","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.visitLambda.go","doc":""},"Lean.Compiler.visitLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L71-L80","name":"Lean.Compiler.visitLambda","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.visitLambda","doc":""},"Lean.Compiler.visitBoundedLambda.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L85-L93","name":"Lean.Compiler.visitBoundedLambda.go","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.visitBoundedLambda.go","doc":""},"Lean.Compiler.visitBoundedLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L82-L93","name":"Lean.Compiler.visitBoundedLambda","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.visitBoundedLambda","doc":""},"Lean.Compiler.updateMotive":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L108-L111","name":"Lean.Compiler.updateMotive","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.updateMotive","doc":""},"Lean.Compiler.unFoldFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L200-L203","name":"Lean.Compiler.unFoldFns","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.unFoldFns","doc":""},"Lean.Compiler.uintFoldToNatFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L197-L198","name":"Lean.Compiler.uintFoldToNatFns","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.uintFoldToNatFns","doc":""},"Lean.Compiler.uintBinFoldFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L74-L75","name":"Lean.Compiler.uintBinFoldFns","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.uintBinFoldFns","doc":""},"Lean.Compiler.toDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Decl.lean#L51-L60","name":"Lean.Compiler.toDecl","docLink":"./Lean/Compiler/Decl.html#Lean.Compiler.toDecl","doc":"Convert the given declaration from the Lean environment into `Decl`.\n\nRemarks:\n- If the declaration has an unsafe-rec version, we use it.\n- We eta-expand the declaration value.\n- We expand declarations tagged with the `[MacroInline]` attribute\n"},"Lean.Compiler.toDecidableExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L107-L112","name":"Lean.Compiler.toDecidableExpr","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.toDecidableExpr","doc":""},"Lean.Compiler.specializeAttrs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L14-L14","name":"Lean.Compiler.specializeAttrs","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.specializeAttrs","doc":""},"Lean.Compiler.specExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L76-L76","name":"Lean.Compiler.specExtension","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.specExtension","doc":""},"Lean.Compiler.shouldGenerateCode.isCompIrrelevant":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Main.lean#L27-L29","name":"Lean.Compiler.shouldGenerateCode.isCompIrrelevant","docLink":"./Lean/Compiler/Main.html#Lean.Compiler.shouldGenerateCode.isCompIrrelevant","doc":""},"Lean.Compiler.shouldGenerateCode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Main.lean#L21-L29","name":"Lean.Compiler.shouldGenerateCode","docLink":"./Lean/Compiler/Main.html#Lean.Compiler.shouldGenerateCode","doc":"We do not generate code for `declName` if\n- Its type is a proposition.\n- Its type is a type former.\n- It is tagged as `[macroInline]`.\n- It is a type class instance.\n\nRemark: we still generate code for declarations tagged as `[inline]`\nand `[specialize]` since they can be partially applied.\n"},"Lean.Compiler.setInlineAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InlineAttrs.lean#L69-L70","name":"Lean.Compiler.setInlineAttribute","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.setInlineAttribute","doc":""},"Lean.Compiler.setImplementedBy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ImplementedByAttr.lean#L36-L37","name":"Lean.Compiler.setImplementedBy","docLink":"./Lean/Compiler/ImplementedByAttr.html#Lean.Compiler.setImplementedBy","doc":""},"Lean.Compiler.preUIntBinFoldFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L70-L72","name":"Lean.Compiler.preUIntBinFoldFns","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.preUIntBinFoldFns","doc":""},"Lean.Compiler.numScalarTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L26-L28","name":"Lean.Compiler.numScalarTypes","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.numScalarTypes","doc":""},"Lean.Compiler.natPowThreshold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L88-L88","name":"Lean.Compiler.natPowThreshold","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.natPowThreshold","doc":""},"Lean.Compiler.natFoldFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L136-L148","name":"Lean.Compiler.natFoldFns","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.natFoldFns","doc":""},"Lean.Compiler.mkUnsafeRecName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Old.lean#L45-L46","name":"Lean.Compiler.mkUnsafeRecName","docLink":"./Lean/Compiler/Old.html#Lean.Compiler.mkUnsafeRecName","doc":"We generate auxiliary unsafe definitions for regular recursive definitions.\nThe auxiliary unsafe definition has a clear runtime cost execution model.\nThis function returns the auxiliary unsafe definition name for the given name. "},"Lean.Compiler.mkUIntTypeName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L16-L17","name":"Lean.Compiler.mkUIntTypeName","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.mkUIntTypeName","doc":""},"Lean.Compiler.mkUIntLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L52-L53","name":"Lean.Compiler.mkUIntLit","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.mkUIntLit","doc":""},"Lean.Compiler.mkUInt32Lit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L55-L56","name":"Lean.Compiler.mkUInt32Lit","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.mkUInt32Lit","doc":""},"Lean.Compiler.mkNatLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L101-L102","name":"Lean.Compiler.mkNatLt","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.mkNatLt","doc":""},"Lean.Compiler.mkNatLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L104-L105","name":"Lean.Compiler.mkNatLe","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.mkNatLe","doc":""},"Lean.Compiler.mkNatEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L98-L99","name":"Lean.Compiler.mkNatEq","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.mkNatEq","doc":""},"Lean.Compiler.mkLocalDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L41-L44","name":"Lean.Compiler.mkLocalDecl","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.mkLocalDecl","doc":""},"Lean.Compiler.mkLetUsingScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L132-L133","name":"Lean.Compiler.mkLetUsingScope","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.mkLetUsingScope","doc":""},"Lean.Compiler.mkLetDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L46-L50","name":"Lean.Compiler.mkLetDecl","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.mkLetDecl","doc":""},"Lean.Compiler.mkLcUnreachable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L46-L49","name":"Lean.Compiler.mkLcUnreachable","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.mkLcUnreachable","doc":"Create `lcUnreachable type` "},"Lean.Compiler.mkLcProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L42-L43","name":"Lean.Compiler.mkLcProof","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.mkLcProof","doc":"Create `lcProof p` "},"Lean.Compiler.mkLcCast":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L52-L57","name":"Lean.Compiler.mkLcCast","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.mkLcCast","doc":"Create `lcCast expectedType e : expectedType` "},"Lean.Compiler.mkLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L135-L136","name":"Lean.Compiler.mkLambda","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.mkLambda","doc":""},"Lean.Compiler.mkJpDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L61-L62","name":"Lean.Compiler.mkJpDecl","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.mkJpDecl","doc":""},"Lean.Compiler.mkEagerLambdaLiftingName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Old.lean#L14-L15","name":"Lean.Compiler.mkEagerLambdaLiftingName","docLink":"./Lean/Compiler/Old.html#Lean.Compiler.mkEagerLambdaLiftingName","doc":""},"Lean.Compiler.mkAuxLetDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L52-L59","name":"Lean.Compiler.mkAuxLetDecl","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.mkAuxLetDecl","doc":""},"Lean.Compiler.macroInline":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Decl.lean#L23-L28","name":"Lean.Compiler.macroInline","docLink":"./Lean/Compiler/Decl.html#Lean.Compiler.macroInline","doc":"Inline constants tagged with the `[macroInline]` attribute occurring in `e`.\n"},"Lean.Compiler.liftMetaM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L26-L27","name":"Lean.Compiler.liftMetaM","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.liftMetaM","doc":""},"Lean.Compiler.isUnsafeRecName?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Old.lean#L50-L52","name":"Lean.Compiler.isUnsafeRecName?","docLink":"./Lean/Compiler/Old.html#Lean.Compiler.isUnsafeRecName?","doc":"Return `some _` if the given name was created using `mkUnsafeRecName` "},"Lean.Compiler.isTypeFormerType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L37-L37","name":"Lean.Compiler.isTypeFormerType","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.isTypeFormerType","doc":""},"Lean.Compiler.isToNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L33-L34","name":"Lean.Compiler.isToNat","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.isToNat","doc":""},"Lean.Compiler.isRuntimeBultinType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L132-L133","name":"Lean.Compiler.isRuntimeBultinType","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.isRuntimeBultinType","doc":"Return `true` iff `declName` is the name of a type with builtin support in the runtime.\n"},"Lean.Compiler.isProp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L35-L35","name":"Lean.Compiler.isProp","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.isProp","doc":""},"Lean.Compiler.isOfNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L30-L31","name":"Lean.Compiler.isOfNat","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.isOfNat","doc":""},"Lean.Compiler.isLcUnreachable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L29-L30","name":"Lean.Compiler.isLcUnreachable","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.isLcUnreachable","doc":"Return `true` if `e` is a `lcUnreachable` application.\n"},"Lean.Compiler.isLcCast?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L35-L39","name":"Lean.Compiler.isLcCast?","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.isLcCast?","doc":"Return `true` if `e` is a `lcCast` application.\n"},"Lean.Compiler.isLCProof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L23-L24","name":"Lean.Compiler.isLCProof","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.isLCProof","doc":"Return `true` if `e` is a `lcProof` application.\nRecall that we use `lcProof` to erase all nested proofs.\n"},"Lean.Compiler.isEagerLambdaLiftingName":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Old.lean#L18-L21","name":"Lean.Compiler.isEagerLambdaLiftingName","docLink":"./Lean/Compiler/Old.html#Lean.Compiler.isEagerLambdaLiftingName","doc":""},"Lean.Compiler.isDefEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L39-L39","name":"Lean.Compiler.isDefEq","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.isDefEq","doc":""},"Lean.Compiler.isCompilerRelevantMData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L16-L17","name":"Lean.Compiler.isCompilerRelevantMData","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.isCompilerRelevantMData","doc":"Return `true` if `mdata` should be preserved.\nRight now, we don't preserve any `MData`, but this may\nchange in the future when we add support for debugging information\n"},"Lean.Compiler.isCasesApp?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L100-L106","name":"Lean.Compiler.isCasesApp?","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.isCasesApp?","doc":""},"Lean.Compiler.instVisitLetStateRefT'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L130-L130","name":"Lean.Compiler.instVisitLetStateRefT'","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.instVisitLetStateRefT'","doc":""},"Lean.Compiler.instVisitLetReaderT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L127-L128","name":"Lean.Compiler.instVisitLetReaderT","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.instVisitLetReaderT","doc":""},"Lean.Compiler.instVisitLetCompilerM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L124-L125","name":"Lean.Compiler.instVisitLetCompilerM","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.instVisitLetCompilerM","doc":""},"Lean.Compiler.instInhabitedSpecializeAttributeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L12-L12","name":"Lean.Compiler.instInhabitedSpecializeAttributeKind","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecializeAttributeKind","doc":""},"Lean.Compiler.instInhabitedSpecState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L57-L57","name":"Lean.Compiler.instInhabitedSpecState","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecState","doc":""},"Lean.Compiler.instInhabitedSpecInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L52-L52","name":"Lean.Compiler.instInhabitedSpecInfo","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecInfo","doc":""},"Lean.Compiler.instInhabitedSpecEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L62-L62","name":"Lean.Compiler.instInhabitedSpecEntry","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecEntry","doc":""},"Lean.Compiler.instInhabitedSpecArgKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L47-L47","name":"Lean.Compiler.instInhabitedSpecArgKind","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instInhabitedSpecArgKind","doc":""},"Lean.Compiler.instInhabitedInlineAttributeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InlineAttrs.lean#L13-L13","name":"Lean.Compiler.instInhabitedInlineAttributeKind","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instInhabitedInlineAttributeKind","doc":""},"Lean.Compiler.instBEqSpecializeAttributeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L12-L12","name":"Lean.Compiler.instBEqSpecializeAttributeKind","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.instBEqSpecializeAttributeKind","doc":""},"Lean.Compiler.instBEqInlineAttributeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InlineAttrs.lean#L13-L13","name":"Lean.Compiler.instBEqInlineAttributeKind","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.instBEqInlineAttributeKind","doc":""},"Lean.Compiler.instAddMessageContextCompilerM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L19-L24","name":"Lean.Compiler.instAddMessageContextCompilerM","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.instAddMessageContextCompilerM","doc":""},"Lean.Compiler.inlineAttrs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InlineAttrs.lean#L34-L34","name":"Lean.Compiler.inlineAttrs","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.inlineAttrs","doc":""},"Lean.Compiler.inferType'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L33-L33","name":"Lean.Compiler.inferType'","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.inferType'","doc":""},"Lean.Compiler.inferType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L29-L29","name":"Lean.Compiler.inferType","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.inferType","doc":""},"Lean.Compiler.implementedByAttr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ImplementedByAttr.lean#L13-L13","name":"Lean.Compiler.implementedByAttr","docLink":"./Lean/Compiler/ImplementedByAttr.html#Lean.Compiler.implementedByAttr","doc":""},"Lean.Compiler.hasSpecializeAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L34-L35","name":"Lean.Compiler.hasSpecializeAttribute","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.hasSpecializeAttribute","doc":""},"Lean.Compiler.hasNospecializeAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L38-L39","name":"Lean.Compiler.hasNospecializeAttribute","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.hasNospecializeAttribute","doc":""},"Lean.Compiler.hasNoInlineAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InlineAttrs.lean#L62-L63","name":"Lean.Compiler.hasNoInlineAttribute","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasNoInlineAttribute","doc":""},"Lean.Compiler.hasMacroInlineAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InlineAttrs.lean#L66-L67","name":"Lean.Compiler.hasMacroInlineAttribute","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasMacroInlineAttribute","doc":""},"Lean.Compiler.hasInlineIfReduceAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InlineAttrs.lean#L58-L59","name":"Lean.Compiler.hasInlineIfReduceAttribute","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineIfReduceAttribute","doc":""},"Lean.Compiler.hasInlineAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InlineAttrs.lean#L54-L55","name":"Lean.Compiler.hasInlineAttribute","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.hasInlineAttribute","doc":""},"Lean.Compiler.hasCSimpAttribute":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CSimpAttr.lean#L73-L74","name":"Lean.Compiler.hasCSimpAttribute","docLink":"./Lean/Compiler/CSimpAttr.html#Lean.Compiler.hasCSimpAttribute","doc":""},"Lean.Compiler.getSpecializationInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L88-L89","name":"Lean.Compiler.getSpecializationInfo","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.getSpecializationInfo","doc":""},"Lean.Compiler.getNumLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L47-L50","name":"Lean.Compiler.getNumLit","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.getNumLit","doc":""},"Lean.Compiler.getMaxLetVarIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L64-L69","name":"Lean.Compiler.getMaxLetVarIdx","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.getMaxLetVarIdx","doc":""},"Lean.Compiler.getInfoFromVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L42-L44","name":"Lean.Compiler.getInfoFromVal","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.getInfoFromVal","doc":""},"Lean.Compiler.getInfoFromFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L36-L40","name":"Lean.Compiler.getInfoFromFn","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.getInfoFromFn","doc":""},"Lean.Compiler.getImplementedBy?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ImplementedByAttr.lean#L33-L34","name":"Lean.Compiler.getImplementedBy?","docLink":"./Lean/Compiler/ImplementedByAttr.html#Lean.Compiler.getImplementedBy?","doc":""},"Lean.Compiler.getDeclNamesForCodeGen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Old.lean#L26-L31","name":"Lean.Compiler.getDeclNamesForCodeGen","docLink":"./Lean/Compiler/Old.html#Lean.Compiler.getDeclNamesForCodeGen","doc":"Return the name of new definitions in the a given declaration.\nHere we consider only declarations we generate code for.\nWe use this definition to implement `add_and_compile`. "},"Lean.Compiler.getCtorArity?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L113-L115","name":"Lean.Compiler.getCtorArity?","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.getCtorArity?","doc":""},"Lean.Compiler.getCasesInfo?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L88-L98","name":"Lean.Compiler.getCasesInfo?","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.getCasesInfo?","doc":""},"Lean.Compiler.getCachedSpecialization":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L96-L97","name":"Lean.Compiler.getCachedSpecialization","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.getCachedSpecialization","doc":""},"Lean.Compiler.getBoolLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L150-L153","name":"Lean.Compiler.getBoolLit","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.getBoolLit","doc":""},"Lean.Compiler.foldUnOp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L221-L226","name":"Lean.Compiler.foldUnOp","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldUnOp","doc":""},"Lean.Compiler.foldUIntSub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L68-L68","name":"Lean.Compiler.foldUIntSub","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldUIntSub","doc":""},"Lean.Compiler.foldUIntMul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L65-L65","name":"Lean.Compiler.foldUIntMul","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldUIntMul","doc":""},"Lean.Compiler.foldUIntMod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L67-L67","name":"Lean.Compiler.foldUIntMod","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldUIntMod","doc":""},"Lean.Compiler.foldUIntDiv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L66-L66","name":"Lean.Compiler.foldUIntDiv","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldUIntDiv","doc":""},"Lean.Compiler.foldUIntAdd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L64-L64","name":"Lean.Compiler.foldUIntAdd","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldUIntAdd","doc":""},"Lean.Compiler.foldToNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L193-L195","name":"Lean.Compiler.foldToNat","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldToNat","doc":""},"Lean.Compiler.foldStrictOr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L165-L173","name":"Lean.Compiler.foldStrictOr","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldStrictOr","doc":""},"Lean.Compiler.foldStrictAnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L155-L163","name":"Lean.Compiler.foldStrictAnd","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldStrictAnd","doc":""},"Lean.Compiler.foldNatSucc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L181-L183","name":"Lean.Compiler.foldNatSucc","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatSucc","doc":""},"Lean.Compiler.foldNatPow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L90-L96","name":"Lean.Compiler.foldNatPow","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatPow","doc":""},"Lean.Compiler.foldNatMul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L83-L83","name":"Lean.Compiler.foldNatMul","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatMul","doc":""},"Lean.Compiler.foldNatMod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L85-L85","name":"Lean.Compiler.foldNatMod","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatMod","doc":""},"Lean.Compiler.foldNatDiv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L84-L84","name":"Lean.Compiler.foldNatDiv","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatDiv","doc":""},"Lean.Compiler.foldNatDecLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L121-L121","name":"Lean.Compiler.foldNatDecLt","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatDecLt","doc":""},"Lean.Compiler.foldNatDecLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L122-L122","name":"Lean.Compiler.foldNatDecLe","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatDecLe","doc":""},"Lean.Compiler.foldNatDecEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L120-L120","name":"Lean.Compiler.foldNatDecEq","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatDecEq","doc":""},"Lean.Compiler.foldNatBlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L134-L134","name":"Lean.Compiler.foldNatBlt","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatBlt","doc":""},"Lean.Compiler.foldNatBle":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L133-L133","name":"Lean.Compiler.foldNatBle","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatBle","doc":""},"Lean.Compiler.foldNatBinPred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L114-L118","name":"Lean.Compiler.foldNatBinPred","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatBinPred","doc":""},"Lean.Compiler.foldNatBinOp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L77-L80","name":"Lean.Compiler.foldNatBinOp","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatBinOp","doc":""},"Lean.Compiler.foldNatBinBoolPred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L124-L130","name":"Lean.Compiler.foldNatBinBoolPred","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatBinBoolPred","doc":""},"Lean.Compiler.foldNatBeq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L132-L132","name":"Lean.Compiler.foldNatBeq","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatBeq","doc":""},"Lean.Compiler.foldNatAdd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L82-L82","name":"Lean.Compiler.foldNatAdd","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldNatAdd","doc":""},"Lean.Compiler.foldCharOfNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L185-L191","name":"Lean.Compiler.foldCharOfNat","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldCharOfNat","doc":""},"Lean.Compiler.foldBinUInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L58-L62","name":"Lean.Compiler.foldBinUInt","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldBinUInt","doc":""},"Lean.Compiler.foldBinOp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L212-L218","name":"Lean.Compiler.foldBinOp","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.foldBinOp","doc":""},"Lean.Compiler.findUnFoldFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L208-L209","name":"Lean.Compiler.findUnFoldFn","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.findUnFoldFn","doc":""},"Lean.Compiler.findBinFoldFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L205-L206","name":"Lean.Compiler.findBinFoldFn","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.findBinFoldFn","doc":""},"Lean.Compiler.compile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Main.lean#L37-L42","name":"Lean.Compiler.compile","docLink":"./Lean/Compiler/Main.html#Lean.Compiler.compile","doc":""},"Lean.Compiler.checkpoint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Main.lean#L31-L35","name":"Lean.Compiler.checkpoint","docLink":"./Lean/Compiler/Main.html#Lean.Compiler.checkpoint","doc":""},"Lean.Compiler.checkIsDefinition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Old.lean#L33-L38","name":"Lean.Compiler.checkIsDefinition","docLink":"./Lean/Compiler/Old.html#Lean.Compiler.checkIsDefinition","doc":""},"Lean.Compiler.cacheSpecialization":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L92-L93","name":"Lean.Compiler.cacheSpecialization","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.cacheSpecialization","doc":""},"Lean.Compiler.builtinRuntimeTypes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L120-L127","name":"Lean.Compiler.builtinRuntimeTypes","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.builtinRuntimeTypes","doc":"List of types that have builtin runtime support\n"},"Lean.Compiler.boolFoldFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L175-L176","name":"Lean.Compiler.boolFoldFns","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.boolFoldFns","doc":""},"Lean.Compiler.binFoldFns":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L178-L179","name":"Lean.Compiler.binFoldFns","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.binFoldFns","doc":""},"Lean.Compiler.atMostOnce.visitFVar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/AtMostOnce.lean#L28-L31","name":"Lean.Compiler.atMostOnce.visitFVar","docLink":"./Lean/Compiler/AtMostOnce.html#Lean.Compiler.atMostOnce.visitFVar","doc":""},"Lean.Compiler.atMostOnce.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/AtMostOnce.lean#L33-L41","name":"Lean.Compiler.atMostOnce.visit","docLink":"./Lean/Compiler/AtMostOnce.html#Lean.Compiler.atMostOnce.visit","doc":""},"Lean.Compiler.atMostOnce.skip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/AtMostOnce.lean#L26-L26","name":"Lean.Compiler.atMostOnce.skip","docLink":"./Lean/Compiler/AtMostOnce.html#Lean.Compiler.atMostOnce.skip","doc":""},"Lean.Compiler.atMostOnce.seq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/AtMostOnce.lean#L18-L21","name":"Lean.Compiler.atMostOnce.seq","docLink":"./Lean/Compiler/AtMostOnce.html#Lean.Compiler.atMostOnce.seq","doc":""},"Lean.Compiler.atMostOnce.instAndThenVisitor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/AtMostOnce.lean#L23-L24","name":"Lean.Compiler.atMostOnce.instAndThenVisitor","docLink":"./Lean/Compiler/AtMostOnce.html#Lean.Compiler.atMostOnce.instAndThenVisitor","doc":""},"Lean.Compiler.atMostOnce.Visitor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/AtMostOnce.lean#L16-L16","name":"Lean.Compiler.atMostOnce.Visitor","docLink":"./Lean/Compiler/AtMostOnce.html#Lean.Compiler.atMostOnce.Visitor","doc":""},"Lean.Compiler.atMostOnce.AtMostOnceData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/AtMostOnce.lean#L12-L14","name":"Lean.Compiler.atMostOnce.AtMostOnceData","docLink":"./Lean/Compiler/AtMostOnce.html#Lean.Compiler.atMostOnce.AtMostOnceData","doc":""},"Lean.Compiler.atMostOnce":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/AtMostOnce.lean#L48-L50","name":"Lean.Compiler.atMostOnce","docLink":"./Lean/Compiler/AtMostOnce.html#Lean.Compiler.atMostOnce","doc":"Return true iff the free variable with id `x` occurs at most once in `e` "},"Lean.Compiler.addSpecializationInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L84-L85","name":"Lean.Compiler.addSpecializationInfo","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.addSpecializationInfo","doc":""},"Lean.Compiler.VisitLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L106-L107","name":"Lean.Compiler.VisitLet","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.VisitLet","doc":""},"Lean.Compiler.UnFoldFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L14-L14","name":"Lean.Compiler.UnFoldFn","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.UnFoldFn","doc":""},"Lean.Compiler.ToLCNF.withRoot":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L34-L35","name":"Lean.Compiler.ToLCNF.withRoot","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.withRoot","doc":""},"Lean.Compiler.ToLCNF.withNewRootScope":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L37-L42","name":"Lean.Compiler.ToLCNF.withNewRootScope","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.withNewRootScope","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitQuotLift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L148-L159","name":"Lean.Compiler.ToLCNF.toLCNF.visitQuotLift","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitQuotLift","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitProjFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L221-L234","name":"Lean.Compiler.ToLCNF.toLCNF.visitProjFn","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitProjFn","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitProj":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L274-L275","name":"Lean.Compiler.ToLCNF.toLCNF.visitProj","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitProj","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitNoConfusion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L186-L208","name":"Lean.Compiler.ToLCNF.toLCNF.visitNoConfusion","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitNoConfusion","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitMData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L268-L272","name":"Lean.Compiler.ToLCNF.toLCNF.visitMData","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitMData","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L261-L266","name":"Lean.Compiler.ToLCNF.toLCNF.visitLambda","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitLambda","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitFalseRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L171-L174","name":"Lean.Compiler.ToLCNF.toLCNF.visitFalseRec","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitFalseRec","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitEqRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L161-L169","name":"Lean.Compiler.ToLCNF.toLCNF.visitEqRec","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitEqRec","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitCtor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L144-L146","name":"Lean.Compiler.ToLCNF.toLCNF.visitCtor","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitCtor","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitChild":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L71-L72","name":"Lean.Compiler.ToLCNF.toLCNF.visitChild","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitChild","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitCases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L134-L142","name":"Lean.Compiler.ToLCNF.toLCNF.visitCases","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitCases","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitAppDefault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L75-L77","name":"Lean.Compiler.ToLCNF.toLCNF.visitAppDefault","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitAppDefault","doc":"Visit args, and return `f args` "},"Lean.Compiler.ToLCNF.toLCNF.visitApp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L236-L259","name":"Lean.Compiler.ToLCNF.toLCNF.visitApp","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitApp","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitAndRec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L176-L184","name":"Lean.Compiler.ToLCNF.toLCNF.visitAndRec","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitAndRec","doc":""},"Lean.Compiler.ToLCNF.toLCNF.visitAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L123-L132","name":"Lean.Compiler.ToLCNF.toLCNF.visitAlt","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visitAlt","doc":"Visit a `matcher`/`casesOn` alternative.\n"},"Lean.Compiler.ToLCNF.toLCNF.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L277-L304","name":"Lean.Compiler.ToLCNF.toLCNF.visit","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.visit","doc":""},"Lean.Compiler.ToLCNF.toLCNF.mkOverApplication":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L95-L103","name":"Lean.Compiler.ToLCNF.toLCNF.mkOverApplication","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.mkOverApplication","doc":"If `args.size == arity`, then just return `app`.\nOtherwise return\n```\nlet k := app\nk args[arity:]\n```\n"},"Lean.Compiler.ToLCNF.toLCNF.mkAppWithArity":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L114-L118","name":"Lean.Compiler.ToLCNF.toLCNF.mkAppWithArity","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.mkAppWithArity","doc":"Create an application `f args` that is expected to have arity `arity`.\nIf `arity > args.size`, we say `f` is over-applied, we visit the \"extra\" arguments,\nand produce an output of the form\n```\nlet k := f args[:arity]\nk args[arity:]\n```\n"},"Lean.Compiler.ToLCNF.toLCNF.expandNoConfusionMajor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L210-L219","name":"Lean.Compiler.ToLCNF.toLCNF.expandNoConfusionMajor","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.expandNoConfusionMajor","doc":""},"Lean.Compiler.ToLCNF.toLCNF.etaIfUnderApplied":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L80-L85","name":"Lean.Compiler.ToLCNF.toLCNF.etaIfUnderApplied","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF.etaIfUnderApplied","doc":"Eta expand if under applied, otherwise apply k "},"Lean.Compiler.ToLCNF.toLCNF":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L67-L304","name":"Lean.Compiler.ToLCNF.toLCNF","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.toLCNF","doc":"Put the given expression in `LCNF`.\n\n- Nested proofs are replaced with `lcProof`-applications.\n- Eta-expand applications of declarations that satisfy `shouldEtaExpand`.\n- Put computationally relevant expressions in A-normal form.\n"},"Lean.Compiler.ToLCNF.mkAuxLetDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L54-L58","name":"Lean.Compiler.ToLCNF.mkAuxLetDecl","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.mkAuxLetDecl","doc":""},"Lean.Compiler.ToLCNF.etaExpandN":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L47-L52","name":"Lean.Compiler.ToLCNF.etaExpandN","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.etaExpandN","doc":"Eta-expand with `n` lambdas.\n"},"Lean.Compiler.ToLCNF.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L29-L30","name":"Lean.Compiler.ToLCNF.State","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.State","doc":""},"Lean.Compiler.ToLCNF.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L32-L32","name":"Lean.Compiler.ToLCNF.M","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.M","doc":""},"Lean.Compiler.ToLCNF.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/LCNF.lean#L26-L27","name":"Lean.Compiler.ToLCNF.Context","docLink":"./Lean/Compiler/LCNF.html#Lean.Compiler.ToLCNF.Context","doc":""},"Lean.Compiler.TerminalCases.visitLet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/TerminalCases.lean#L42-L104","name":"Lean.Compiler.TerminalCases.visitLet","docLink":"./Lean/Compiler/TerminalCases.html#Lean.Compiler.TerminalCases.visitLet","doc":""},"Lean.Compiler.TerminalCases.visitLambda":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/TerminalCases.lean#L36-L40","name":"Lean.Compiler.TerminalCases.visitLambda","docLink":"./Lean/Compiler/TerminalCases.html#Lean.Compiler.TerminalCases.visitLambda","doc":""},"Lean.Compiler.TerminalCases.visitCases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/TerminalCases.lean#L27-L34","name":"Lean.Compiler.TerminalCases.visitCases","docLink":"./Lean/Compiler/TerminalCases.html#Lean.Compiler.TerminalCases.visitCases","doc":""},"Lean.Compiler.TerminalCases.visitAlt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/TerminalCases.lean#L21-L25","name":"Lean.Compiler.TerminalCases.visitAlt","docLink":"./Lean/Compiler/TerminalCases.html#Lean.Compiler.TerminalCases.visitAlt","doc":""},"Lean.Compiler.TerminalCases.M":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/TerminalCases.lean#L17-L17","name":"Lean.Compiler.TerminalCases.M","docLink":"./Lean/Compiler/TerminalCases.html#Lean.Compiler.TerminalCases.M","doc":""},"Lean.Compiler.TerminalCases.Context":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/TerminalCases.lean#L14-L15","name":"Lean.Compiler.TerminalCases.Context","docLink":"./Lean/Compiler/TerminalCases.html#Lean.Compiler.TerminalCases.Context","doc":""},"Lean.Compiler.SpecializeAttributeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L10-L12","name":"Lean.Compiler.SpecializeAttributeKind","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecializeAttributeKind","doc":""},"Lean.Compiler.SpecState.switch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L71-L72","name":"Lean.Compiler.SpecState.switch","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState.switch","doc":""},"Lean.Compiler.SpecState.addEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L66-L69","name":"Lean.Compiler.SpecState.addEntry","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState.addEntry","doc":""},"Lean.Compiler.SpecState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L54-L57","name":"Lean.Compiler.SpecState","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecState","doc":""},"Lean.Compiler.SpecInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L49-L52","name":"Lean.Compiler.SpecInfo","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecInfo","doc":""},"Lean.Compiler.SpecEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L59-L62","name":"Lean.Compiler.SpecEntry","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecEntry","doc":""},"Lean.Compiler.SpecArgKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Specialize.lean#L41-L47","name":"Lean.Compiler.SpecArgKind","docLink":"./Lean/Compiler/Specialize.html#Lean.Compiler.SpecArgKind","doc":""},"Lean.Compiler.NumScalarTypeInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L19-L24","name":"Lean.Compiler.NumScalarTypeInfo","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.NumScalarTypeInfo","doc":""},"Lean.Compiler.InlineAttributeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/InlineAttrs.lean#L11-L13","name":"Lean.Compiler.InlineAttributeKind","docLink":"./Lean/Compiler/InlineAttrs.html#Lean.Compiler.InlineAttributeKind","doc":""},"Lean.Compiler.FFI.getLinkerFlags":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/FFI.lean#L22-L23","name":"Lean.Compiler.FFI.getLinkerFlags","docLink":"./Lean/Compiler/FFI.html#Lean.Compiler.FFI.getLinkerFlags","doc":"Return linker flags for linking against Lean's libraries. "},"Lean.Compiler.FFI.getCFlags":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/FFI.lean#L15-L16","name":"Lean.Compiler.FFI.getCFlags","docLink":"./Lean/Compiler/FFI.html#Lean.Compiler.FFI.getCFlags","doc":"Return C compiler flags for including Lean's headers. "},"Lean.Compiler.Decl.terminalCases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/TerminalCases.lean#L113-L114","name":"Lean.Compiler.Decl.terminalCases","docLink":"./Lean/Compiler/TerminalCases.html#Lean.Compiler.Decl.terminalCases","doc":"(Try to) ensure all `casesOn` and `matcher` applications are terminal.\n"},"Lean.Compiler.Decl.check":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Decl.lean#L62-L63","name":"Lean.Compiler.Decl.check","docLink":"./Lean/Compiler/Decl.html#Lean.Compiler.Decl.check","doc":""},"Lean.Compiler.Decl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Decl.lean#L15-L18","name":"Lean.Compiler.Decl","docLink":"./Lean/Compiler/Decl.html#Lean.Compiler.Decl","doc":"Declaration being processed by the Lean to Lean compiler passes.\n"},"Lean.Compiler.CompilerM.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L11-L15","name":"Lean.Compiler.CompilerM.State","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.CompilerM.State","doc":""},"Lean.Compiler.CompilerM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CompilerM.lean#L17-L17","name":"Lean.Compiler.CompilerM","docLink":"./Lean/Compiler/CompilerM.html#Lean.Compiler.CompilerM","doc":""},"Lean.Compiler.CasesInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Util.lean#L64-L69","name":"Lean.Compiler.CasesInfo","docLink":"./Lean/Compiler/Util.html#Lean.Compiler.CasesInfo","doc":"Store information about `matcher` and `casesOn` declarations.\n\nWe treat them uniformly in the code generator.\n"},"Lean.Compiler.CSimp.replaceConstants":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CSimpAttr.lean#L61-L69","name":"Lean.Compiler.CSimp.replaceConstants","docLink":"./Lean/Compiler/CSimpAttr.html#Lean.Compiler.CSimp.replaceConstants","doc":""},"Lean.Compiler.CSimp.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CSimpAttr.lean#L22-L22","name":"Lean.Compiler.CSimp.instInhabitedState","docLink":"./Lean/Compiler/CSimpAttr.html#Lean.Compiler.CSimp.instInhabitedState","doc":""},"Lean.Compiler.CSimp.instInhabitedEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CSimpAttr.lean#L17-L17","name":"Lean.Compiler.CSimp.instInhabitedEntry","docLink":"./Lean/Compiler/CSimpAttr.html#Lean.Compiler.CSimp.instInhabitedEntry","doc":""},"Lean.Compiler.CSimp.ext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CSimpAttr.lean#L27-L27","name":"Lean.Compiler.CSimp.ext","docLink":"./Lean/Compiler/CSimpAttr.html#Lean.Compiler.CSimp.ext","doc":""},"Lean.Compiler.CSimp.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CSimpAttr.lean#L45-L49","name":"Lean.Compiler.CSimp.add","docLink":"./Lean/Compiler/CSimpAttr.html#Lean.Compiler.CSimp.add","doc":""},"Lean.Compiler.CSimp.State.switch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CSimpAttr.lean#L24-L25","name":"Lean.Compiler.CSimp.State.switch","docLink":"./Lean/Compiler/CSimpAttr.html#Lean.Compiler.CSimp.State.switch","doc":""},"Lean.Compiler.CSimp.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CSimpAttr.lean#L19-L22","name":"Lean.Compiler.CSimp.State","docLink":"./Lean/Compiler/CSimpAttr.html#Lean.Compiler.CSimp.State","doc":""},"Lean.Compiler.CSimp.Entry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/CSimpAttr.lean#L13-L17","name":"Lean.Compiler.CSimp.Entry","docLink":"./Lean/Compiler/CSimpAttr.html#Lean.Compiler.CSimp.Entry","doc":""},"Lean.Compiler.BinFoldFn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ConstFolding.lean#L13-L13","name":"Lean.Compiler.BinFoldFn","docLink":"./Lean/Compiler/ConstFolding.html#Lean.Compiler.BinFoldFn","doc":""},"Lean.CompactedRegion.isMemoryMapped":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L41-L41","name":"Lean.CompactedRegion.isMemoryMapped","docLink":"./Lean/Environment.html#Lean.CompactedRegion.isMemoryMapped","doc":""},"Lean.CompactedRegion.free":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L45-L45","name":"Lean.CompactedRegion.free","docLink":"./Lean/Environment.html#Lean.CompactedRegion.free","doc":"Free a compacted region and its contents. No live references to the contents may exist at the time of invocation. "},"Lean.CompactedRegion":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Environment.lean#L38-L38","name":"Lean.CompactedRegion","docLink":"./Lean/Environment.html#Lean.CompactedRegion","doc":"A compacted region holds multiple Lean objects in a contiguous memory region, which can be read/written to/from disk.\nObjects inside the region do not have reference counters and cannot be freed individually. The contents of .olean\nfiles are compacted regions. "},"Lean.CollectMVars.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectMVars.lean#L21-L23","name":"Lean.CollectMVars.visit","docLink":"./Lean/Util/CollectMVars.html#Lean.CollectMVars.visit","doc":""},"Lean.CollectMVars.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectMVars.lean#L25-L33","name":"Lean.CollectMVars.main","docLink":"./Lean/Util/CollectMVars.html#Lean.CollectMVars.main","doc":""},"Lean.CollectMVars.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectMVars.lean#L16-L16","name":"Lean.CollectMVars.instInhabitedState","docLink":"./Lean/Util/CollectMVars.html#Lean.CollectMVars.instInhabitedState","doc":""},"Lean.CollectMVars.Visitor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectMVars.lean#L18-L18","name":"Lean.CollectMVars.Visitor","docLink":"./Lean/Util/CollectMVars.html#Lean.CollectMVars.Visitor","doc":""},"Lean.CollectMVars.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectMVars.lean#L12-L14","name":"Lean.CollectMVars.State","docLink":"./Lean/Util/CollectMVars.html#Lean.CollectMVars.State","doc":""},"Lean.CollectLevelParams.visitLevel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectLevelParams.lean#L22-L24","name":"Lean.CollectLevelParams.visitLevel","docLink":"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.visitLevel","doc":""},"Lean.CollectLevelParams.visitExpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectLevelParams.lean#L35-L38","name":"Lean.CollectLevelParams.visitExpr","docLink":"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.visitExpr","doc":""},"Lean.CollectLevelParams.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectLevelParams.lean#L40-L49","name":"Lean.CollectLevelParams.main","docLink":"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.main","doc":""},"Lean.CollectLevelParams.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectLevelParams.lean#L17-L17","name":"Lean.CollectLevelParams.instInhabitedState","docLink":"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.instInhabitedState","doc":""},"Lean.CollectLevelParams.collect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectLevelParams.lean#L26-L31","name":"Lean.CollectLevelParams.collect","docLink":"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.collect","doc":""},"Lean.CollectLevelParams.Visitor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectLevelParams.lean#L19-L19","name":"Lean.CollectLevelParams.Visitor","docLink":"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.Visitor","doc":""},"Lean.CollectLevelParams.State.getUnusedLevelParam.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectLevelParams.lean#L55-L57","name":"Lean.CollectLevelParams.State.getUnusedLevelParam.loop","docLink":"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.State.getUnusedLevelParam.loop","doc":""},"Lean.CollectLevelParams.State.getUnusedLevelParam":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectLevelParams.lean#L52-L60","name":"Lean.CollectLevelParams.State.getUnusedLevelParam","docLink":"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.State.getUnusedLevelParam","doc":""},"Lean.CollectLevelParams.State.collect":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectLevelParams.lean#L67-L68","name":"Lean.CollectLevelParams.State.collect","docLink":"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.State.collect","doc":""},"Lean.CollectLevelParams.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectLevelParams.lean#L12-L15","name":"Lean.CollectLevelParams.State","docLink":"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.State","doc":""},"Lean.CollectFVars.visit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectFVars.lean#L23-L25","name":"Lean.CollectFVars.visit","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.visit","doc":""},"Lean.CollectFVars.main":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectFVars.lean#L27-L35","name":"Lean.CollectFVars.main","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.main","doc":""},"Lean.CollectFVars.instInhabitedState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectFVars.lean#L15-L15","name":"Lean.CollectFVars.instInhabitedState","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.instInhabitedState","doc":""},"Lean.CollectFVars.Visitor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectFVars.lean#L20-L20","name":"Lean.CollectFVars.Visitor","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.Visitor","doc":""},"Lean.CollectFVars.State.addDependencies.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CollectFVars.lean#L37-L44","name":"Lean.CollectFVars.State.addDependencies.go","docLink":"./Lean/Meta/CollectFVars.html#Lean.CollectFVars.State.addDependencies.go","doc":""},"Lean.CollectFVars.State.addDependencies.getNext?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CollectFVars.lean#L27-L35","name":"Lean.CollectFVars.State.addDependencies.getNext?","docLink":"./Lean/Meta/CollectFVars.html#Lean.CollectFVars.State.addDependencies.getNext?","doc":""},"Lean.CollectFVars.State.addDependencies":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/CollectFVars.lean#L23-L44","name":"Lean.CollectFVars.State.addDependencies","docLink":"./Lean/Meta/CollectFVars.html#Lean.CollectFVars.State.addDependencies","doc":"For each variable in `s.fvarSet`, include its dependencies. "},"Lean.CollectFVars.State.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectFVars.lean#L17-L18","name":"Lean.CollectFVars.State.add","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State.add","doc":""},"Lean.CollectFVars.State":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Util/CollectFVars.lean#L11-L15","name":"Lean.CollectFVars.State","docLink":"./Lean/Util/CollectFVars.html#Lean.CollectFVars.State","doc":""},"Lean.ClosedTermCache":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/ClosedTermCache.lean#L10-L13","name":"Lean.ClosedTermCache","docLink":"./Lean/Compiler/ClosedTermCache.html#Lean.ClosedTermCache","doc":""},"Lean.ClassState.switch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Class.lean#L46-L47","name":"Lean.ClassState.switch","docLink":"./Lean/Class.html#Lean.ClassState.switch","doc":"Switch the state into persistent mode. We switch to this mode after\nwe read all imported .olean files.\nRecall that we use a `SMap` for implementing the state of the type class environment extension.\n"},"Lean.ClassState.addEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Class.lean#L38-L39","name":"Lean.ClassState.addEntry","docLink":"./Lean/Class.html#Lean.ClassState.addEntry","doc":""},"Lean.ClassState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Class.lean#L32-L34","name":"Lean.ClassState","docLink":"./Lean/Class.html#Lean.ClassState","doc":"State of the type class environment extension. "},"Lean.ClassEntry.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Class.lean#L26-L27","name":"Lean.ClassEntry.lt","docLink":"./Lean/Class.html#Lean.ClassEntry.lt","doc":""},"Lean.ClassEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Class.lean#L11-L22","name":"Lean.ClassEntry","docLink":"./Lean/Class.html#Lean.ClassEntry","doc":"An entry for the persistent environment extension for declared type classes "},"Lean.BinderInfo.toUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L174-L179","name":"Lean.BinderInfo.toUInt64","docLink":"./Lean/Expr.html#Lean.BinderInfo.toUInt64","doc":""},"Lean.BinderInfo.isStrictImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L119-L121","name":"Lean.BinderInfo.isStrictImplicit","docLink":"./Lean/Expr.html#Lean.BinderInfo.isStrictImplicit","doc":"Return `true` if the given `BinderInfo` is a strict implicit annotation (e.g., `{{α : Type u}}`) "},"Lean.BinderInfo.isInstImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L109-L111","name":"Lean.BinderInfo.isInstImplicit","docLink":"./Lean/Expr.html#Lean.BinderInfo.isInstImplicit","doc":"Return `true` if the given `BinderInfo` is an instance implicit annotation (e.g., `[Decidable α]`) "},"Lean.BinderInfo.isImplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L114-L116","name":"Lean.BinderInfo.isImplicit","docLink":"./Lean/Expr.html#Lean.BinderInfo.isImplicit","doc":"Return `true` if the given `BinderInfo` is a regular implicit annotation (e.g., `{α : Type u}`) "},"Lean.BinderInfo.isExplicit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L100-L104","name":"Lean.BinderInfo.isExplicit","docLink":"./Lean/Expr.html#Lean.BinderInfo.isExplicit","doc":"Return `true` if the given `BinderInfo` does not correspond to an implicit binder annotation\n(i.e., `implicit`, `strictImplicit`, or `instImplicit`).\n"},"Lean.BinderInfo.isAuxDecl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L123-L125","name":"Lean.BinderInfo.isAuxDecl","docLink":"./Lean/Expr.html#Lean.BinderInfo.isAuxDecl","doc":""},"Lean.BinderInfo.hash":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L89-L94","name":"Lean.BinderInfo.hash","docLink":"./Lean/Expr.html#Lean.BinderInfo.hash","doc":""},"Lean.BinderInfo":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Expr.lean#L65-L87","name":"Lean.BinderInfo","docLink":"./Lean/Expr.html#Lean.BinderInfo","doc":"Arguments in forallE binders can be labelled as implicit or explicit.\n\nEach `lam` or `forallE` binder comes with a `binderInfo` argument (stored in ExprData).\nThis can be set to\n- `default` -- `(x : α)`\n- `implicit` --  `{x : α}`\n- `strict_implicit` -- `⦃x : α⦄`\n- `inst_implicit` -- `[x : α]`.\n- `aux_decl` -- Auxillary definitions are helper methods that\n  Lean generates. `aux_decl` is used for `_match`, `_fun_match`,\n  `_let_match` and the self reference that appears in recursive pattern matching.\n\nThe difference between implicit `{}` and strict-implicit `⦃⦄` is how\nimplicit arguments are treated that are *not* followed by explicit arguments.\n`{}` arguments are applied eagerly, while `⦃⦄` arguments are left partially applied:\n```\ndef foo {x : Nat} : Nat := x\ndef bar ⦃x : Nat⦄ : Nat := x\n#check foo -- foo : Nat\n#check bar -- bar : ⦃x : Nat⦄ → Nat\n```\n\nSee also the Lean manual: https://leanprover.github.io/lean4/doc/expressions.html#implicit-arguments\n"},"Lean.AxiomVal.isUnsafeEx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L87-L88","name":"Lean.AxiomVal.isUnsafeEx","docLink":"./Lean/Declaration.html#Lean.AxiomVal.isUnsafeEx","doc":""},"Lean.AxiomVal":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Declaration.lean#L75-L77","name":"Lean.AxiomVal","docLink":"./Lean/Declaration.html#Lean.AxiomVal","doc":""},"Lean.AttributeKind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L40-L42","name":"Lean.AttributeKind","docLink":"./Lean/Attributes.html#Lean.AttributeKind","doc":"You can tag attributes with the 'local' or 'scoped' kind.\nFor example: `attribute [local myattr, scoped yourattr, theirattr]`.\n\nThis is used to indicate how an attribute should be scoped.\n- local means that the attribute should only be applied in the current scope and forgotten once the current section, namespace, or file is closed.\n- scoped means that the attribute should only be applied while the namespace is open.\n- global means that the attribute should always be applied.\n\nNote that the attribute handler (`AttributeImpl.add`) is responsible for interpreting the kind and\nmaking sure that these kinds are respected.\n"},"Lean.AttributeImplCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L21-L27","name":"Lean.AttributeImplCore","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore","doc":""},"Lean.AttributeImplBuilderTable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L310-L310","name":"Lean.AttributeImplBuilderTable","docLink":"./Lean/Attributes.html#Lean.AttributeImplBuilderTable","doc":""},"Lean.AttributeImplBuilder":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L309-L309","name":"Lean.AttributeImplBuilder","docLink":"./Lean/Attributes.html#Lean.AttributeImplBuilder","doc":""},"Lean.AttributeImpl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L50-L54","name":"Lean.AttributeImpl","docLink":"./Lean/Attributes.html#Lean.AttributeImpl","doc":""},"Lean.AttributeExtensionState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L329-L332","name":"Lean.AttributeExtensionState","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionState","doc":""},"Lean.AttributeExtensionOLeanEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L325-L327","name":"Lean.AttributeExtensionOLeanEntry","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry","doc":""},"Lean.AttributeExtension":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L334-L334","name":"Lean.AttributeExtension","docLink":"./Lean/Attributes.html#Lean.AttributeExtension","doc":""},"Lean.AttributeApplicationTime":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L12-L14","name":"Lean.AttributeApplicationTime","docLink":"./Lean/Attributes.html#Lean.AttributeApplicationTime","doc":""},"Lean.Attribute.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L433-L435","name":"Lean.Attribute.erase","docLink":"./Lean/Attributes.html#Lean.Attribute.erase","doc":""},"Lean.Attribute.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L429-L431","name":"Lean.Attribute.add","docLink":"./Lean/Attributes.html#Lean.Attribute.add","doc":""},"Lean.Attribute.Builtin.getPrio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L121-L125","name":"Lean.Attribute.Builtin.getPrio","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getPrio","doc":""},"Lean.Attribute.Builtin.getIdent?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L90-L100","name":"Lean.Attribute.Builtin.getIdent?","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getIdent?","doc":""},"Lean.Attribute.Builtin.getIdent":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L102-L105","name":"Lean.Attribute.Builtin.getIdent","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getIdent","doc":""},"Lean.Attribute.Builtin.getId?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L107-L109","name":"Lean.Attribute.Builtin.getId?","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getId?","doc":""},"Lean.Attribute.Builtin.getId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L111-L112","name":"Lean.Attribute.Builtin.getId","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getId","doc":""},"Lean.Attribute.Builtin.ensureNoArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L81-L88","name":"Lean.Attribute.Builtin.ensureNoArgs","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.ensureNoArgs","doc":""},"Lean.AttrM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Attributes.lean#L16-L16","name":"Lean.AttrM","docLink":"./Lean/Attributes.html#Lean.AttrM","doc":""},"Lean.AliasState":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L17-L17","name":"Lean.AliasState","docLink":"./Lean/ResolveName.html#Lean.AliasState","doc":""},"Lean.AliasEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/ResolveName.lean#L18-L18","name":"Lean.AliasEntry","docLink":"./Lean/ResolveName.html#Lean.AliasEntry","doc":""},"Lean.AddMessageContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Message.lean#L261-L262","name":"Lean.AddMessageContext","docLink":"./Lean/Message.html#Lean.AddMessageContext","doc":""},"Lean.AddErrorMessageContext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Exception.lean#L42-L43","name":"Lean.AddErrorMessageContext","docLink":"./Lean/Exception.html#Lean.AddErrorMessageContext","doc":"Similar to `AddMessageContext`, but for error messages.\nThe default instance just uses `AddMessageContext`.\nIn error messages, we may want to provide additional information (e.g., macro expansion stack),\nand refine the `(ref : Syntax)`. "},"LawfulMonad":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L46-L59","name":"LawfulMonad","docLink":"./Init/Control/Lawful.html#LawfulMonad","doc":""},"LawfulFunctor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L16-L19","name":"LawfulFunctor","docLink":"./Init/Control/Lawful.html#LawfulFunctor","doc":""},"LawfulBEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L192-L194","name":"LawfulBEq","docLink":"./Init/Core.html#LawfulBEq","doc":""},"LawfulApplicative":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L28-L37","name":"LawfulApplicative","docLink":"./Init/Control/Lawful.html#LawfulApplicative","doc":""},"LT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L975-L975","name":"LT","docLink":"./Init/Prelude.html#LT","doc":""},"LSpec.«command#lspec_»":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L149-L156","name":"LSpec.«command#lspec_»","docLink":"./LSpec/LSpec.html#LSpec.«command#lspec_»","doc":"A custom command to run `LSpec` tests. Example:\n\n```lean\n#lspec test \"four equals four\" (4 = 4)\n```\n"},"LSpec.withOptionSome":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L92-L96","name":"LSpec.withOptionSome","docLink":"./LSpec/LSpec.html#LSpec.withOptionSome","doc":"A test pipeline to run a function assuming that `opt` is `Option.some _` "},"LSpec.withOptionNone":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L99-L103","name":"LSpec.withOptionNone","docLink":"./LSpec/LSpec.html#LSpec.withOptionNone","doc":"A test pipeline to run a function assuming that `opt` is `Option.none` "},"LSpec.withExceptOk":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L106-L110","name":"LSpec.withExceptOk","docLink":"./LSpec/LSpec.html#LSpec.withExceptOk","doc":"A test pipeline to run a function assuming that `exc` is `Except.ok _` "},"LSpec.withExceptError":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L113-L117","name":"LSpec.withExceptError","docLink":"./LSpec/LSpec.html#LSpec.withExceptError","doc":"A test pipeline to run a function assuming that `exc` is `Except.error _` "},"LSpec.test":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L75-L77","name":"LSpec.test","docLink":"./LSpec/LSpec.html#LSpec.test","doc":"Allows the composition of tests with propositions for which a `Testable`\ninstance exists.\n"},"LSpec.succeed":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L183-L184","name":"LSpec.succeed","docLink":"./LSpec/LSpec.html#LSpec.succeed","doc":""},"LSpec.runInTermElabMAsUnit":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L144-L147","name":"LSpec.runInTermElabMAsUnit","docLink":"./LSpec/LSpec.html#LSpec.runInTermElabMAsUnit","doc":"Runs a `TestSeq` with an output meant for the Lean Infoview.\nThis function is meant to be called from a custom command. It runs in\n`TermElabM` to have access to `logInfo` and `throwError`.\n"},"LSpec.lspecM":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L190-L192","name":"LSpec.lspecM","docLink":"./LSpec/LSpec.html#LSpec.lspecM","doc":"Runs a `TestSeq` in a monad with `MonadEmit` and `MonadTest`. "},"LSpec.lspecIO":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L223-L224","name":"LSpec.lspecIO","docLink":"./LSpec/LSpec.html#LSpec.lspecIO","doc":"Runs a `TestSeq` with an output meant for the terminal.\n\nThis function is designed to be plugged to a `main` function from a Lean file\nthat can be compiled. Example:\n\n```lean\ndef main := lspecIO $\n  test \"four equals four\" (4 = 4)\n```\n"},"LSpec.lspecEachM":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L198-L202","name":"LSpec.lspecEachM","docLink":"./LSpec/LSpec.html#LSpec.lspecEachM","doc":"Interspersedly creates a `TestSeq` from each element `β` of a list with a\nfunction `β → m TestSeq` and runs the test sequence.\n"},"LSpec.lspecEachIO":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L234-L235","name":"LSpec.lspecEachIO","docLink":"./LSpec/LSpec.html#LSpec.lspecEachIO","doc":"Runs a sequence of tests that are created from a `List α` and a function\n`α → IO TestSeq`. Instead of creating all tests and running them consecutively,\nthis function alternates between test creation and test execution.\n\nIt's rather useful for when the test creation process involves heavy\ncomputations in `IO` (e.g. when `f` reads data from files and processes it).\n"},"LSpec.instTestable_1":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L42-L49","name":"LSpec.instTestable_1","docLink":"./LSpec/LSpec.html#LSpec.instTestable_1","doc":""},"LSpec.instTestableNe":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/Instances.lean#L17-L21","name":"LSpec.instTestableNe","docLink":"./LSpec/Instances.html#LSpec.instTestableNe","doc":""},"LSpec.instTestableExpectationFailure":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L88-L89","name":"LSpec.instTestableExpectationFailure","docLink":"./LSpec/LSpec.html#LSpec.instTestableExpectationFailure","doc":""},"LSpec.instTestableEqBoolBneTrue":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/Instances.lean#L23-L27","name":"LSpec.instTestableEqBoolBneTrue","docLink":"./LSpec/Instances.html#LSpec.instTestableEqBoolBneTrue","doc":""},"LSpec.instTestableEqBoolBeqTrue":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/Instances.lean#L11-L15","name":"LSpec.instTestableEqBoolBeqTrue","docLink":"./LSpec/Instances.html#LSpec.instTestableEqBoolBeqTrue","doc":""},"LSpec.instTestableEq":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/Instances.lean#L5-L9","name":"LSpec.instTestableEq","docLink":"./LSpec/Instances.html#LSpec.instTestableEq","doc":""},"LSpec.instTestable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L36-L39","name":"LSpec.instTestable","docLink":"./LSpec/LSpec.html#LSpec.instTestable","doc":"A default `Testable` instance with low priority. "},"LSpec.instMonadTestIOInstMonadEIOErrorUInt32":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L209-L210","name":"LSpec.instMonadTestIOInstMonadEIOErrorUInt32","docLink":"./LSpec/LSpec.html#LSpec.instMonadTestIOInstMonadEIOErrorUInt32","doc":""},"LSpec.instMonadEmitIOInstMonadEIOError":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L206-L207","name":"LSpec.instMonadEmitIOInstMonadEIOError","docLink":"./LSpec/LSpec.html#LSpec.instMonadEmitIOInstMonadEIOError","doc":""},"LSpec.instAppendTestSeq":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L68-L69","name":"LSpec.instAppendTestSeq","docLink":"./LSpec/LSpec.html#LSpec.instAppendTestSeq","doc":""},"LSpec.formatErrorMsg":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L52-L54","name":"LSpec.formatErrorMsg","docLink":"./LSpec/LSpec.html#LSpec.formatErrorMsg","doc":"Formats the extra error message from `Testable` failures. "},"LSpec.fail":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L186-L187","name":"LSpec.fail","docLink":"./LSpec/LSpec.html#LSpec.fail","doc":""},"LSpec.check":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L81-L84","name":"LSpec.check","docLink":"./LSpec/LSpec.html#LSpec.check","doc":"TODO: Add documentation "},"LSpec.Testable":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L29-L33","name":"LSpec.Testable","docLink":"./LSpec/LSpec.html#LSpec.Testable","doc":"# TODO: No longer accurate\n\nA variant of `Decidable` for tests. \n\nIn the failing case, it may contain an explanatory message.\n"},"LSpec.TestSeq.runM":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L169-L176","name":"LSpec.TestSeq.runM","docLink":"./LSpec/LSpec.html#LSpec.TestSeq.runM","doc":"A monadic runner that emits test outputs as they're produced. "},"LSpec.TestSeq.run.aux":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L125-L136","name":"LSpec.TestSeq.run.aux","docLink":"./LSpec/LSpec.html#LSpec.TestSeq.run.aux","doc":""},"LSpec.TestSeq.run":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L124-L137","name":"LSpec.TestSeq.run","docLink":"./LSpec/LSpec.html#LSpec.TestSeq.run","doc":"A generic runner for `TestSeq` "},"LSpec.TestSeq.append":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L64-L66","name":"LSpec.TestSeq.append","docLink":"./LSpec/LSpec.html#LSpec.TestSeq.append","doc":"Appends two sequences of tests. "},"LSpec.TestSeq":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L59-L61","name":"LSpec.TestSeq","docLink":"./LSpec/LSpec.html#LSpec.TestSeq","doc":"The datatype used to represent a sequence of tests "},"LSpec.Nat.Testable_forall_lt":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/Instances.lean#L35-L60","name":"LSpec.Nat.Testable_forall_lt","docLink":"./LSpec/Instances.html#LSpec.Nat.Testable_forall_lt","doc":"A fancier example of `Testable` instance that allows us to write:\n```lean\n#lspec test \"forall n < 10, n - 5 < 5\" $ ∀ n, n < 10 → n - 5 < 5\n```\n"},"LSpec.MonadTest":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L178-L181","name":"LSpec.MonadTest","docLink":"./LSpec/LSpec.html#LSpec.MonadTest","doc":""},"LSpec.MonadEmit":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L163-L164","name":"LSpec.MonadEmit","docLink":"./LSpec/LSpec.html#LSpec.MonadEmit","doc":""},"LSpec.ExpectationFailure":{"sourceLink":"https://github.com/yatima-inc/LSpec/blob/28c24d851c614b88f3c7f1874f29f393ee35ba8e/LSpec/LSpec.lean#L86-L86","name":"LSpec.ExpectationFailure","docLink":"./LSpec/LSpec.html#LSpec.ExpectationFailure","doc":""},"LE":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L974-L974","name":"LE","docLink":"./Init/Prelude.html#LE","doc":""},"InvImage.wf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L123-L124","name":"InvImage.wf","docLink":"./Init/WF.html#InvImage.wf","doc":""},"InvImage.accessible":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L120-L121","name":"InvImage.accessible","docLink":"./Init/WF.html#InvImage.accessible","doc":""},"InvImage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L569-L570","name":"InvImage","docLink":"./Init/Core.html#InvImage","doc":""},"Int.toNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L160-L162","name":"Int.toNat","docLink":"./Init/Data/Int/Basic.html#Int.toNat","doc":""},"Int.subNatNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L42-L45","name":"Int.subNatNat","docLink":"./Init/Data/Int/Basic.html#Int.subNatNat","doc":""},"Int.sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L81-L82","name":"Int.sub","docLink":"./Init/Data/Int/Basic.html#Int.sub","doc":""},"Int.repr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L170-L172","name":"Int.repr","docLink":"./Init/Data/Repr.html#Int.repr","doc":""},"Int.pow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L166-L168","name":"Int.pow","docLink":"./Init/Data/Int/Basic.html#Int.pow","doc":""},"Int.negOfNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L31-L33","name":"Int.negOfNat","docLink":"./Init/Data/Int/Basic.html#Int.negOfNat","doc":""},"Int.neg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L37-L40","name":"Int.neg","docLink":"./Init/Data/Int/Basic.html#Int.neg","doc":""},"Int.natMod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L164-L164","name":"Int.natMod","docLink":"./Init/Data/Int/Basic.html#Int.natMod","doc":""},"Int.natAbs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L132-L135","name":"Int.natAbs","docLink":"./Init/Data/Int/Basic.html#Int.natAbs","doc":""},"Int.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L58-L63","name":"Int.mul","docLink":"./Init/Data/Int/Basic.html#Int.mul","doc":""},"Int.mod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L148-L152","name":"Int.mod","docLink":"./Init/Data/Int/Basic.html#Int.mod","doc":""},"Int.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L95-L95","name":"Int.lt","docLink":"./Init/Data/Int/Basic.html#Int.lt","doc":""},"Int.le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L90-L90","name":"Int.le","docLink":"./Init/Data/Int/Basic.html#Int.le","doc":""},"Int.instSubInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L84-L85","name":"Int.instSubInt","docLink":"./Init/Data/Int/Basic.html#Int.instSubInt","doc":""},"Int.instOfNatInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L137-L138","name":"Int.instOfNatInt","docLink":"./Init/Data/Int/Basic.html#Int.instOfNatInt","doc":""},"Int.instNegInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L73-L74","name":"Int.instNegInt","docLink":"./Init/Data/Int/Basic.html#Int.instNegInt","doc":"The `Neg Int` default instance must have priority higher than `low` since\nthe default instance `OfNat Nat n` has `low` priority.\n```\n#check -42\n```\n"},"Int.instMulInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L77-L78","name":"Int.instMulInt","docLink":"./Init/Data/Int/Basic.html#Int.instMulInt","doc":""},"Int.instModInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L157-L158","name":"Int.instModInt","docLink":"./Init/Data/Int/Basic.html#Int.instModInt","doc":""},"Int.instLawfulBEqIntInstBEqInstDecidableEqInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L173-L175","name":"Int.instLawfulBEqIntInstBEqInstDecidableEqInt","docLink":"./Init/Data/Int/Basic.html#Int.instLawfulBEqIntInstBEqInstDecidableEqInt","doc":""},"Int.instLTInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L97-L98","name":"Int.instLTInt","docLink":"./Init/Data/Int/Basic.html#Int.instLTInt","doc":""},"Int.instLEInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L92-L93","name":"Int.instLEInt","docLink":"./Init/Data/Int/Basic.html#Int.instLEInt","doc":""},"Int.instInhabitedInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L29-L29","name":"Int.instInhabitedInt","docLink":"./Init/Data/Int/Basic.html#Int.instInhabitedInt","doc":""},"Int.instHPowIntNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L170-L171","name":"Int.instHPowIntNat","docLink":"./Init/Data/Int/Basic.html#Int.instHPowIntNat","doc":""},"Int.instDivInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L154-L155","name":"Int.instDivInt","docLink":"./Init/Data/Int/Basic.html#Int.instDivInt","doc":""},"Int.instDecidableEqInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L113-L113","name":"Int.instDecidableEqInt","docLink":"./Init/Data/Int/Basic.html#Int.instDecidableEqInt","doc":""},"Int.instAddInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L75-L76","name":"Int.instAddInt","docLink":"./Init/Data/Int/Basic.html#Int.instAddInt","doc":""},"Int.div":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L141-L145","name":"Int.div","docLink":"./Init/Data/Int/Basic.html#Int.div","doc":""},"Int.decLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L127-L128","name":"Int.decLt","docLink":"./Init/Data/Int/Basic.html#Int.decLt","doc":""},"Int.decLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L123-L124","name":"Int.decLe","docLink":"./Init/Data/Int/Basic.html#Int.decLe","doc":""},"Int.decEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L102-L111","name":"Int.decEq","docLink":"./Init/Data/Int/Basic.html#Int.decEq","doc":""},"Int.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L49-L54","name":"Int.add","docLink":"./Init/Data/Int/Basic.html#Int.add","doc":""},"Int.NonNeg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L87-L88","name":"Int.NonNeg","docLink":"./Init/Data/Int/Basic.html#Int.NonNeg","doc":""},"Int":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Int/Basic.lean#L16-L18","name":"Int","docLink":"./Init/Data/Int/Basic.html#Int","doc":""},"Inhabited":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L643-L647","name":"Inhabited","docLink":"./Init/Prelude.html#Inhabited","doc":"`Inhabited α` is a typeclass that says that `α` has a designated element,\ncalled `(default : α)`. This is sometimes referred to as a \"pointed type\".\n\nThis class is used by functions that need to return a value of the type\nwhen called \"out of domain\". For example, `Array.get! arr i : α` returns\na value of type `α` when `arr : Array α`, but if `i` is not in range of\nthe array, it reports a panic message, but this does not halt the program,\nso it must still return a value of type `α` (and in fact this is required\nfor logical consistency), so in this case it returns `default`.\n"},"Iff.trans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L349-L352","name":"Iff.trans","docLink":"./Init/Core.html#Iff.trans","doc":""},"Iff.symm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L354-L355","name":"Iff.symm","docLink":"./Init/Core.html#Iff.symm","doc":""},"Iff.subst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L755-L756","name":"Iff.subst","docLink":"./Init/Core.html#Iff.subst","doc":"Iff can now be used to do substitutions in a calculation "},"Iff.rfl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L346-L347","name":"Iff.rfl","docLink":"./Init/Core.html#Iff.rfl","doc":""},"Iff.refl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L343-L344","name":"Iff.refl","docLink":"./Init/Core.html#Iff.refl","doc":""},"Iff.comm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L357-L358","name":"Iff.comm","docLink":"./Init/Core.html#Iff.comm","doc":""},"Iff":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L51-L52","name":"Iff","docLink":"./Init/Core.html#Iff","doc":""},"Id.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Id.lean#L25-L25","name":"Id.run","docLink":"./Init/Control/Id.html#Id.run","doc":""},"Id.pure_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L99-L99","name":"Id.pure_eq","docLink":"./Init/Control/Lawful.html#Id.pure_eq","doc":""},"Id.map_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L97-L97","name":"Id.map_eq","docLink":"./Init/Control/Lawful.html#Id.map_eq","doc":""},"Id.instOfNatId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Id.lean#L27-L28","name":"Id.instOfNatId","docLink":"./Init/Control/Id.html#Id.instOfNatId","doc":""},"Id.instMonadId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Id.lean#L17-L20","name":"Id.instMonadId","docLink":"./Init/Control/Id.html#Id.instMonadId","doc":""},"Id.instLawfulMonadIdInstMonadId":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L101-L102","name":"Id.instLawfulMonadIdInstMonadId","docLink":"./Init/Control/Lawful.html#Id.instLawfulMonadIdInstMonadId","doc":""},"Id.hasBind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Id.lean#L22-L23","name":"Id.hasBind","docLink":"./Init/Control/Id.html#Id.hasBind","doc":""},"Id.finally":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L165-L169","name":"Id.finally","docLink":"./Init/Control/Except.html#Id.finally","doc":""},"Id.bind_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L98-L98","name":"Id.bind_eq","docLink":"./Init/Control/Lawful.html#Id.bind_eq","doc":""},"Id":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Id.lean#L13-L13","name":"Id","docLink":"./Init/Control/Id.html#Id","doc":""},"IO.withStdout":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L437-L442","name":"IO.withStdout","docLink":"./Init/System/IO.html#IO.withStdout","doc":""},"IO.withStdin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L433-L435","name":"IO.withStdin","docLink":"./Init/System/IO.html#IO.withStdin","doc":""},"IO.withStderr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L444-L446","name":"IO.withStderr","docLink":"./Init/System/IO.html#IO.withStderr","doc":""},"IO.waitAny":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L209-L209","name":"IO.waitAny","docLink":"./Init/System/IO.html#IO.waitAny","doc":"Wait until any of the tasks in the given list has finished, then return its result. "},"IO.wait":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L205-L206","name":"IO.wait","docLink":"./Init/System/IO.html#IO.wait","doc":"Wait for the task to finish, then return its result. "},"IO.userError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L57-L58","name":"IO.userError","docLink":"./Init/System/IOError.html#IO.userError","doc":""},"IO.toEIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L74-L75","name":"IO.toEIO","docLink":"./Init/System/IO.html#IO.toEIO","doc":""},"IO.throwServerError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L15-L16","name":"IO.throwServerError","docLink":"./Lean/Server/Utils.html#IO.throwServerError","doc":""},"IO.stdGenRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L115-L115","name":"IO.stdGenRef","docLink":"./Init/Data/Random.html#IO.stdGenRef","doc":""},"IO.sleep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L175-L177","name":"IO.sleep","docLink":"./Init/System/IO.html#IO.sleep","doc":""},"IO.setStdout":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L240-L240","name":"IO.setStdout","docLink":"./Init/System/IO.html#IO.setStdout","doc":"Replaces the stdout stream of the current thread and returns its previous value. "},"IO.setStdin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L238-L238","name":"IO.setStdin","docLink":"./Init/System/IO.html#IO.setStdin","doc":"Replaces the stdin stream of the current thread and returns its previous value. "},"IO.setStderr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L242-L242","name":"IO.setStderr","docLink":"./Init/System/IO.html#IO.setStderr","doc":"Replaces the stderr stream of the current thread and returns its previous value. "},"IO.setRandSeed":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L119-L120","name":"IO.setRandSeed","docLink":"./Init/Data/Random.html#IO.setRandSeed","doc":""},"IO.setAccessRights":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L599-L600","name":"IO.setAccessRights","docLink":"./Init/System/IO.html#IO.setAccessRights","doc":""},"IO.rand":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Random.lean#L122-L126","name":"IO.rand","docLink":"./Init/Data/Random.html#IO.rand","doc":""},"IO.println":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L452-L453","name":"IO.println","docLink":"./Init/System/IO.html#IO.println","doc":""},"IO.print":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L448-L450","name":"IO.print","docLink":"./Init/System/IO.html#IO.print","doc":""},"IO.ofExcept":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L157-L160","name":"IO.ofExcept","docLink":"./Init/System/IO.html#IO.ofExcept","doc":""},"IO.monoNanosNow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L169-L169","name":"IO.monoNanosNow","docLink":"./Init/System/IO.html#IO.monoNanosNow","doc":"Monotonically increasing time since an unspecified past point in nanoseconds. No relation to wall clock time. "},"IO.monoMsNow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L166-L166","name":"IO.monoMsNow","docLink":"./Init/System/IO.html#IO.monoMsNow","doc":"Monotonically increasing time since an unspecified past point in milliseconds. No relation to wall clock time. "},"IO.mkRef":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L607-L608","name":"IO.mkRef","docLink":"./Init/System/IO.html#IO.mkRef","doc":""},"IO.mapTasks":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L192-L193","name":"IO.mapTasks","docLink":"./Init/System/IO.html#IO.mapTasks","doc":"`IO` specialization of `EIO.mapTasks`. "},"IO.mapTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L184-L185","name":"IO.mapTask","docLink":"./Init/System/IO.html#IO.mapTask","doc":"`IO` specialization of `EIO.mapTask`. "},"IO.lazyPure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L162-L163","name":"IO.lazyPure","docLink":"./Init/System/IO.html#IO.lazyPure","doc":""},"IO.iterate":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L244-L248","name":"IO.iterate","docLink":"./Init/System/IO.html#IO.iterate","doc":""},"IO.instMonadLiftSTRealWorldBaseIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L605-L605","name":"IO.instMonadLiftSTRealWorldBaseIO","docLink":"./Init/System/IO.html#IO.instMonadLiftSTRealWorldBaseIO","doc":""},"IO.instInhabitedError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L54-L54","name":"IO.instInhabitedError","docLink":"./Init/System/IOError.html#IO.instInhabitedError","doc":""},"IO.initializing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L99-L99","name":"IO.initializing","docLink":"./Init/System/IO.html#IO.initializing","doc":"Programs can execute IO actions during initialization that occurs before\n   the `main` function is executed. The attribute `[init <action>]` specifies\n   which IO action is executed to set the value of an opaque constant.\n\n   The action `initializing` returns `true` iff it is invoked during initialization. "},"IO.hasFinished":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L202-L202","name":"IO.hasFinished","docLink":"./Init/System/IO.html#IO.hasFinished","doc":"Check if the task has finished execution, at which point calling `Task.get` will return immediately. "},"IO.getStdout":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L234-L234","name":"IO.getStdout","docLink":"./Init/System/IO.html#IO.getStdout","doc":""},"IO.getStdin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L233-L233","name":"IO.getStdin","docLink":"./Init/System/IO.html#IO.getStdin","doc":""},"IO.getStderr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L235-L235","name":"IO.getStderr","docLink":"./Init/System/IO.html#IO.getStderr","doc":""},"IO.getRandomBytes":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L173-L173","name":"IO.getRandomBytes","docLink":"./Init/System/IO.html#IO.getRandomBytes","doc":"Read bytes from a system entropy source. Not guaranteed to be cryptographically secure.\nIf `nBytes = 0`, return immediately with an empty buffer. "},"IO.getNumHeartbeats":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L212-L212","name":"IO.getNumHeartbeats","docLink":"./Init/System/IO.html#IO.getNumHeartbeats","doc":"Helper method for implementing \"deterministic\" timeouts. It is the number of \"small\" memory allocations performed by the current execution thread. "},"IO.getEnv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L292-L292","name":"IO.getEnv","docLink":"./Init/System/IO.html#IO.getEnv","doc":""},"IO.eprintln":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L459-L460","name":"IO.eprintln","docLink":"./Init/System/IO.html#IO.eprintln","doc":""},"IO.eprint":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L455-L457","name":"IO.eprint","docLink":"./Init/System/IO.html#IO.eprint","doc":""},"IO.currentDir":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L294-L294","name":"IO.currentDir","docLink":"./Init/System/IO.html#IO.currentDir","doc":""},"IO.checkCanceled":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L196-L196","name":"IO.checkCanceled","docLink":"./Init/System/IO.html#IO.checkCanceled","doc":"Check if the task's cancellation flag has been set by calling `IO.cancel` or dropping the last reference to the task. "},"IO.cancel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L199-L199","name":"IO.cancel","docLink":"./Init/System/IO.html#IO.cancel","doc":"Request cooperative cancellation of the task. The task must explicitly call `IO.checkCanceled` to react to the cancellation. "},"IO.bindTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L188-L189","name":"IO.bindTask","docLink":"./Init/System/IO.html#IO.bindTask","doc":"`IO` specialization of `EIO.bindTask`. "},"IO.asTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L180-L181","name":"IO.asTask","docLink":"./Init/System/IO.html#IO.asTask","doc":"`IO` specialization of `EIO.asTask`. "},"IO.appPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L293-L293","name":"IO.appPath","docLink":"./Init/System/IO.html#IO.appPath","doc":""},"IO.appDir":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L470-L474","name":"IO.appDir","docLink":"./Init/System/IO.html#IO.appDir","doc":""},"IO.Ref":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L603-L603","name":"IO.Ref","docLink":"./Init/System/IO.html#IO.Ref","doc":"References "},"IO.RealWorld":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L23-L23","name":"IO.RealWorld","docLink":"./Init/System/IO.html#IO.RealWorld","doc":"Like https://hackage.haskell.org/package/ghc-Prim-0.5.2.0/docs/GHC-Prim.html#t:RealWorld.\n    Makes sure we never reorder `IO` operations.\n\n    TODO: mark opaque "},"IO.Process.spawn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L537-L537","name":"IO.Process.spawn","docLink":"./Init/System/IO.html#IO.Process.spawn","doc":""},"IO.Process.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L565-L569","name":"IO.Process.run","docLink":"./Init/System/IO.html#IO.Process.run","doc":"Run process to completion and return stdout on success. "},"IO.Process.output":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L556-L562","name":"IO.Process.output","docLink":"./Init/System/IO.html#IO.Process.output","doc":"Run process to completion and capture output. "},"IO.Process.exit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L571-L571","name":"IO.Process.exit","docLink":"./Init/System/IO.html#IO.Process.exit","doc":""},"IO.Process.StdioConfig":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L513-L519","name":"IO.Process.StdioConfig","docLink":"./Init/System/IO.html#IO.Process.StdioConfig","doc":""},"IO.Process.Stdio.toHandleType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L508-L511","name":"IO.Process.Stdio.toHandleType","docLink":"./Init/System/IO.html#IO.Process.Stdio.toHandleType","doc":""},"IO.Process.Stdio":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L503-L506","name":"IO.Process.Stdio","docLink":"./Init/System/IO.html#IO.Process.Stdio","doc":""},"IO.Process.SpawnArgs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L521-L529","name":"IO.Process.SpawnArgs","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs","doc":""},"IO.Process.Output":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L550-L553","name":"IO.Process.Output","docLink":"./Init/System/IO.html#IO.Process.Output","doc":""},"IO.Process.Child.wait":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L539-L539","name":"IO.Process.Child.wait","docLink":"./Init/System/IO.html#IO.Process.Child.wait","doc":""},"IO.Process.Child.takeStdin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L547-L548","name":"IO.Process.Child.takeStdin","docLink":"./Init/System/IO.html#IO.Process.Child.takeStdin","doc":"Extract the `stdin` field from a `Child` object, allowing them to be freed independently.\nThis operation is necessary for closing the child process' stdin while still holding on to a process handle,\ne.g. for `Child.wait`. A file handle is closed when all references to it are dropped, which without this\noperation includes the `Child` object.\n"},"IO.Process.Child":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L532-L535","name":"IO.Process.Child","docLink":"./Init/System/IO.html#IO.Process.Child","doc":""},"IO.Prim.setAccessRights":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L597-L597","name":"IO.Prim.setAccessRights","docLink":"./Init/System/IO.html#IO.Prim.setAccessRights","doc":""},"IO.FileRight.flags":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L591-L595","name":"IO.FileRight.flags","docLink":"./Init/System/IO.html#IO.FileRight.flags","doc":""},"IO.FileRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L586-L589","name":"IO.FileRight","docLink":"./Init/System/IO.html#IO.FileRight","doc":""},"IO.FS.writeFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L349-L351","name":"IO.FS.writeFile","docLink":"./Init/System/IO.html#IO.FS.writeFile","doc":""},"IO.FS.writeBinFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L345-L347","name":"IO.FS.writeBinFile","docLink":"./Init/System/IO.html#IO.FS.writeBinFile","doc":""},"IO.FS.withIsolatedStreams":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L649-L659","name":"IO.FS.withIsolatedStreams","docLink":"./Init/System/IO.html#IO.FS.withIsolatedStreams","doc":"Run action with `stdin` emptied and `stdout+stderr` captured into a `String`. "},"IO.FS.withFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L299-L300","name":"IO.FS.withFile","docLink":"./Init/System/IO.html#IO.FS.withFile","doc":""},"IO.FS.removeFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L285-L285","name":"IO.FS.removeFile","docLink":"./Init/System/IO.html#IO.FS.removeFile","doc":""},"IO.FS.removeDirAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L494-L500","name":"IO.FS.removeDirAll","docLink":"./Init/System/IO.html#IO.FS.removeDirAll","doc":"Fully remove given directory by deleting all contained files and directories in an unspecified order.\nFails if any contained entry cannot be deleted or was newly created during execution. "},"IO.FS.removeDir":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L287-L287","name":"IO.FS.removeDir","docLink":"./Init/System/IO.html#IO.FS.removeDir","doc":"Remove given directory. Fails if not empty; see also `IO.FS.removeDirAll`. "},"IO.FS.realPath":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L284-L284","name":"IO.FS.realPath","docLink":"./Init/System/IO.html#IO.FS.realPath","doc":""},"IO.FS.readFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L327-L329","name":"IO.FS.readFile","docLink":"./Init/System/IO.html#IO.FS.readFile","doc":""},"IO.FS.readBinFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L323-L325","name":"IO.FS.readBinFile","docLink":"./Init/System/IO.html#IO.FS.readBinFile","doc":""},"IO.FS.lines.read":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L333-L342","name":"IO.FS.lines.read","docLink":"./Init/System/IO.html#IO.FS.lines.read","doc":""},"IO.FS.lines":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L331-L343","name":"IO.FS.lines","docLink":"./Init/System/IO.html#IO.FS.lines","doc":""},"IO.FS.instReprSystemTime":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L374-L374","name":"IO.FS.instReprSystemTime","docLink":"./Init/System/IO.html#IO.FS.instReprSystemTime","doc":""},"IO.FS.instReprMetadata":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L385-L385","name":"IO.FS.instReprMetadata","docLink":"./Init/System/IO.html#IO.FS.instReprMetadata","doc":""},"IO.FS.instReprFileType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L369-L369","name":"IO.FS.instReprFileType","docLink":"./Init/System/IO.html#IO.FS.instReprFileType","doc":""},"IO.FS.instReprDirEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L359-L359","name":"IO.FS.instReprDirEntry","docLink":"./Init/System/IO.html#IO.FS.instReprDirEntry","doc":""},"IO.FS.instOrdSystemTime":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L374-L374","name":"IO.FS.instOrdSystemTime","docLink":"./Init/System/IO.html#IO.FS.instOrdSystemTime","doc":""},"IO.FS.instLTSystemTime":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L376-L376","name":"IO.FS.instLTSystemTime","docLink":"./Init/System/IO.html#IO.FS.instLTSystemTime","doc":""},"IO.FS.instLESystemTime":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L377-L377","name":"IO.FS.instLESystemTime","docLink":"./Init/System/IO.html#IO.FS.instLESystemTime","doc":""},"IO.FS.instInhabitedSystemTime":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L374-L374","name":"IO.FS.instInhabitedSystemTime","docLink":"./Init/System/IO.html#IO.FS.instInhabitedSystemTime","doc":""},"IO.FS.instInhabitedStream":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L229-L229","name":"IO.FS.instInhabitedStream","docLink":"./Init/System/IO.html#IO.FS.instInhabitedStream","doc":""},"IO.FS.instBEqSystemTime":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L374-L374","name":"IO.FS.instBEqSystemTime","docLink":"./Init/System/IO.html#IO.FS.instBEqSystemTime","doc":""},"IO.FS.instBEqFileType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L369-L369","name":"IO.FS.instBEqFileType","docLink":"./Init/System/IO.html#IO.FS.instBEqFileType","doc":""},"IO.FS.createDirAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L477-L489","name":"IO.FS.createDirAll","docLink":"./Init/System/IO.html#IO.FS.createDirAll","doc":"Create given path and all missing parents as directories. "},"IO.FS.createDir":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L288-L288","name":"IO.FS.createDir","docLink":"./Init/System/IO.html#IO.FS.createDir","doc":""},"IO.FS.SystemTime":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L371-L374","name":"IO.FS.SystemTime","docLink":"./Init/System/IO.html#IO.FS.SystemTime","doc":""},"IO.FS.Stream.writeResponseErrorWithData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L282-L283","name":"IO.FS.Stream.writeResponseErrorWithData","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeResponseErrorWithData","doc":""},"IO.FS.Stream.writeResponseError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L279-L280","name":"IO.FS.Stream.writeResponseError","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeResponseError","doc":""},"IO.FS.Stream.writeResponse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L276-L277","name":"IO.FS.Stream.writeResponse","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeResponse","doc":""},"IO.FS.Stream.writeRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L270-L271","name":"IO.FS.Stream.writeRequest","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeRequest","doc":""},"IO.FS.Stream.writeNotification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L273-L274","name":"IO.FS.Stream.writeNotification","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeNotification","doc":""},"IO.FS.Stream.writeMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L267-L268","name":"IO.FS.Stream.writeMessage","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeMessage","doc":""},"IO.FS.Stream.writeLspResponseErrorWithData":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Communication.lean#L118-L119","name":"IO.FS.Stream.writeLspResponseErrorWithData","docLink":"./Lean/Data/Lsp/Communication.html#IO.FS.Stream.writeLspResponseErrorWithData","doc":""},"IO.FS.Stream.writeLspResponseError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Communication.lean#L115-L116","name":"IO.FS.Stream.writeLspResponseError","docLink":"./Lean/Data/Lsp/Communication.html#IO.FS.Stream.writeLspResponseError","doc":""},"IO.FS.Stream.writeLspResponse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Communication.lean#L112-L113","name":"IO.FS.Stream.writeLspResponse","docLink":"./Lean/Data/Lsp/Communication.html#IO.FS.Stream.writeLspResponse","doc":""},"IO.FS.Stream.writeLspRequest":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Communication.lean#L106-L107","name":"IO.FS.Stream.writeLspRequest","docLink":"./Lean/Data/Lsp/Communication.html#IO.FS.Stream.writeLspRequest","doc":""},"IO.FS.Stream.writeLspNotification":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Communication.lean#L109-L110","name":"IO.FS.Stream.writeLspNotification","docLink":"./Lean/Data/Lsp/Communication.html#IO.FS.Stream.writeLspNotification","doc":""},"IO.FS.Stream.writeLspMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Communication.lean#L98-L104","name":"IO.FS.Stream.writeLspMessage","docLink":"./Lean/Data/Lsp/Communication.html#IO.FS.Stream.writeLspMessage","doc":""},"IO.FS.Stream.writeJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Stream.lean#L22-L24","name":"IO.FS.Stream.writeJson","docLink":"./Lean/Data/Json/Stream.html#IO.FS.Stream.writeJson","doc":""},"IO.FS.Stream.withPrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L54-L60","name":"IO.FS.Stream.withPrefix","docLink":"./Lean/Server/Utils.html#IO.FS.Stream.withPrefix","doc":"Prefixes all written outputs with `pre`. "},"IO.FS.Stream.readResponseAs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L250-L261","name":"IO.FS.Stream.readResponseAs","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.readResponseAs","doc":""},"IO.FS.Stream.readRequestAs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L224-L235","name":"IO.FS.Stream.readRequestAs","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.readRequestAs","doc":""},"IO.FS.Stream.readNotificationAs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L237-L248","name":"IO.FS.Stream.readNotificationAs","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.readNotificationAs","doc":""},"IO.FS.Stream.readMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/JsonRpc.lean#L218-L222","name":"IO.FS.Stream.readMessage","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.readMessage","doc":""},"IO.FS.Stream.readLspResponseAs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Communication.lean#L87-L92","name":"IO.FS.Stream.readLspResponseAs","docLink":"./Lean/Data/Lsp/Communication.html#IO.FS.Stream.readLspResponseAs","doc":""},"IO.FS.Stream.readLspRequestAs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Communication.lean#L73-L78","name":"IO.FS.Stream.readLspRequestAs","docLink":"./Lean/Data/Lsp/Communication.html#IO.FS.Stream.readLspRequestAs","doc":""},"IO.FS.Stream.readLspNotificationAs":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Communication.lean#L80-L85","name":"IO.FS.Stream.readLspNotificationAs","docLink":"./Lean/Data/Lsp/Communication.html#IO.FS.Stream.readLspNotificationAs","doc":""},"IO.FS.Stream.readLspMessage":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Communication.lean#L66-L71","name":"IO.FS.Stream.readLspMessage","docLink":"./Lean/Data/Lsp/Communication.html#IO.FS.Stream.readLspMessage","doc":""},"IO.FS.Stream.readJson":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Json/Stream.lean#L17-L20","name":"IO.FS.Stream.readJson","docLink":"./Lean/Data/Json/Stream.html#IO.FS.Stream.readJson","doc":""},"IO.FS.Stream.putStrLn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L353-L354","name":"IO.FS.Stream.putStrLn","docLink":"./Init/System/IO.html#IO.FS.Stream.putStrLn","doc":""},"IO.FS.Stream.ofHandle":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L614-L621","name":"IO.FS.Stream.ofHandle","docLink":"./Init/System/IO.html#IO.FS.Stream.ofHandle","doc":""},"IO.FS.Stream.ofBuffer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L627-L645","name":"IO.FS.Stream.ofBuffer","docLink":"./Init/System/IO.html#IO.FS.Stream.ofBuffer","doc":""},"IO.FS.Stream.chainRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L26-L38","name":"IO.FS.Stream.chainRight","docLink":"./Lean/Server/Utils.html#IO.FS.Stream.chainRight","doc":"Chains two streams by creating a new stream s.t. writing to it\njust writes to `a` but reading from it also duplicates the read output\ninto `b`, c.f. `a | tee b` on Unix.\nNB: if `a` is written to but this stream is never read from,\nthe output will *not* be duplicated. Use this if you only care\nabout the data that was actually read. "},"IO.FS.Stream.chainLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/Utils.lean#L41-L51","name":"IO.FS.Stream.chainLeft","docLink":"./Lean/Server/Utils.html#IO.FS.Stream.chainLeft","doc":"Like `tee a | b` on Unix. See `chainOut`. "},"IO.FS.Stream.Buffer":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L623-L625","name":"IO.FS.Stream.Buffer","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer","doc":""},"IO.FS.Stream":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L222-L229","name":"IO.FS.Stream","docLink":"./Init/System/IO.html#IO.FS.Stream","doc":"A pure-Lean abstraction of POSIX streams. We use `Stream`s for the standard streams stdin/stdout/stderr so we can\ncapture output of `#eval` commands into memory. "},"IO.FS.Mode":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L214-L215","name":"IO.FS.Mode","docLink":"./Init/System/IO.html#IO.FS.Mode","doc":""},"IO.FS.Metadata":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L379-L385","name":"IO.FS.Metadata","docLink":"./Init/System/IO.html#IO.FS.Metadata","doc":""},"IO.FS.Handle.write":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L277-L277","name":"IO.FS.Handle.write","docLink":"./Init/System/IO.html#IO.FS.Handle.write","doc":""},"IO.FS.Handle.readToEnd.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L315-L320","name":"IO.FS.Handle.readToEnd.loop","docLink":"./Init/System/IO.html#IO.FS.Handle.readToEnd.loop","doc":""},"IO.FS.Handle.readToEnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L314-L321","name":"IO.FS.Handle.readToEnd","docLink":"./Init/System/IO.html#IO.FS.Handle.readToEnd","doc":""},"IO.FS.Handle.readBinToEnd.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L306-L311","name":"IO.FS.Handle.readBinToEnd.loop","docLink":"./Init/System/IO.html#IO.FS.Handle.readBinToEnd.loop","doc":""},"IO.FS.Handle.readBinToEnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L305-L312","name":"IO.FS.Handle.readBinToEnd","docLink":"./Init/System/IO.html#IO.FS.Handle.readBinToEnd","doc":""},"IO.FS.Handle.read":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L276-L276","name":"IO.FS.Handle.read","docLink":"./Init/System/IO.html#IO.FS.Handle.read","doc":""},"IO.FS.Handle.putStrLn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L302-L303","name":"IO.FS.Handle.putStrLn","docLink":"./Init/System/IO.html#IO.FS.Handle.putStrLn","doc":""},"IO.FS.Handle.putStr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L280-L280","name":"IO.FS.Handle.putStr","docLink":"./Init/System/IO.html#IO.FS.Handle.putStr","doc":""},"IO.FS.Handle.mkPrim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L264-L264","name":"IO.FS.Handle.mkPrim","docLink":"./Init/System/IO.html#IO.FS.Handle.mkPrim","doc":""},"IO.FS.Handle.mk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L266-L267","name":"IO.FS.Handle.mk","docLink":"./Init/System/IO.html#IO.FS.Handle.mk","doc":""},"IO.FS.Handle.isEof":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L274-L274","name":"IO.FS.Handle.isEof","docLink":"./Init/System/IO.html#IO.FS.Handle.isEof","doc":"Returns whether the end of the file has been reached while reading a file.\n`h.isEof` returns true /after/ the first attempt at reading past the end of `h`.\nOnce `h.isEof` is true, reading `h` will always return an empty array.\n"},"IO.FS.Handle.getLine":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L279-L279","name":"IO.FS.Handle.getLine","docLink":"./Init/System/IO.html#IO.FS.Handle.getLine","doc":""},"IO.FS.Handle.flush":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L275-L275","name":"IO.FS.Handle.flush","docLink":"./Init/System/IO.html#IO.FS.Handle.flush","doc":""},"IO.FS.Handle":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L217-L217","name":"IO.FS.Handle","docLink":"./Init/System/IO.html#IO.FS.Handle","doc":""},"IO.FS.FileType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L364-L369","name":"IO.FS.FileType","docLink":"./Init/System/IO.html#IO.FS.FileType","doc":""},"IO.FS.DirEntry.path":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L361-L362","name":"IO.FS.DirEntry.path","docLink":"./Init/System/IO.html#IO.FS.DirEntry.path","doc":""},"IO.FS.DirEntry":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L356-L359","name":"IO.FS.DirEntry","docLink":"./Init/System/IO.html#IO.FS.DirEntry","doc":""},"IO.Error.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L171-L196","name":"IO.Error.toString","docLink":"./Init/System/IOError.html#IO.Error.toString","doc":""},"IO.Error.otherErrorToString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L166-L168","name":"IO.Error.otherErrorToString","docLink":"./Init/System/IOError.html#IO.Error.otherErrorToString","doc":""},"IO.Error.mkUnsupportedOperation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L101-L102","name":"IO.Error.mkUnsupportedOperation","docLink":"./Init/System/IOError.html#IO.Error.mkUnsupportedOperation","doc":""},"IO.Error.mkUnsatisfiedConstraints":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L145-L146","name":"IO.Error.mkUnsatisfiedConstraints","docLink":"./Init/System/IOError.html#IO.Error.mkUnsatisfiedConstraints","doc":""},"IO.Error.mkTimeExpired":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L157-L158","name":"IO.Error.mkTimeExpired","docLink":"./Init/System/IOError.html#IO.Error.mkTimeExpired","doc":""},"IO.Error.mkResourceVanished":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L121-L122","name":"IO.Error.mkResourceVanished","docLink":"./Init/System/IOError.html#IO.Error.mkResourceVanished","doc":""},"IO.Error.mkResourceExhaustedFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L97-L98","name":"IO.Error.mkResourceExhaustedFile","docLink":"./Init/System/IOError.html#IO.Error.mkResourceExhaustedFile","doc":""},"IO.Error.mkResourceExhausted":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L105-L106","name":"IO.Error.mkResourceExhausted","docLink":"./Init/System/IOError.html#IO.Error.mkResourceExhausted","doc":""},"IO.Error.mkResourceBusy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L125-L126","name":"IO.Error.mkResourceBusy","docLink":"./Init/System/IOError.html#IO.Error.mkResourceBusy","doc":""},"IO.Error.mkProtocolError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L153-L154","name":"IO.Error.mkProtocolError","docLink":"./Init/System/IOError.html#IO.Error.mkProtocolError","doc":""},"IO.Error.mkPermissionDeniedFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L93-L94","name":"IO.Error.mkPermissionDeniedFile","docLink":"./Init/System/IOError.html#IO.Error.mkPermissionDeniedFile","doc":""},"IO.Error.mkPermissionDenied":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L137-L138","name":"IO.Error.mkPermissionDenied","docLink":"./Init/System/IOError.html#IO.Error.mkPermissionDenied","doc":""},"IO.Error.mkOtherError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L133-L134","name":"IO.Error.mkOtherError","docLink":"./Init/System/IOError.html#IO.Error.mkOtherError","doc":""},"IO.Error.mkNoSuchThingFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L89-L90","name":"IO.Error.mkNoSuchThingFile","docLink":"./Init/System/IOError.html#IO.Error.mkNoSuchThingFile","doc":""},"IO.Error.mkNoSuchThing":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L117-L118","name":"IO.Error.mkNoSuchThing","docLink":"./Init/System/IOError.html#IO.Error.mkNoSuchThing","doc":""},"IO.Error.mkNoFileOrDirectory":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L85-L86","name":"IO.Error.mkNoFileOrDirectory","docLink":"./Init/System/IOError.html#IO.Error.mkNoFileOrDirectory","doc":""},"IO.Error.mkInvalidArgumentFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L81-L82","name":"IO.Error.mkInvalidArgumentFile","docLink":"./Init/System/IOError.html#IO.Error.mkInvalidArgumentFile","doc":""},"IO.Error.mkInvalidArgument":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L129-L130","name":"IO.Error.mkInvalidArgument","docLink":"./Init/System/IOError.html#IO.Error.mkInvalidArgument","doc":""},"IO.Error.mkInterrupted":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L77-L78","name":"IO.Error.mkInterrupted","docLink":"./Init/System/IOError.html#IO.Error.mkInterrupted","doc":""},"IO.Error.mkInappropriateTypeFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L73-L74","name":"IO.Error.mkInappropriateTypeFile","docLink":"./Init/System/IOError.html#IO.Error.mkInappropriateTypeFile","doc":""},"IO.Error.mkInappropriateType":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L113-L114","name":"IO.Error.mkInappropriateType","docLink":"./Init/System/IOError.html#IO.Error.mkInappropriateType","doc":""},"IO.Error.mkIllegalOperation":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L149-L150","name":"IO.Error.mkIllegalOperation","docLink":"./Init/System/IOError.html#IO.Error.mkIllegalOperation","doc":""},"IO.Error.mkHardwareFault":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L141-L142","name":"IO.Error.mkHardwareFault","docLink":"./Init/System/IOError.html#IO.Error.mkHardwareFault","doc":""},"IO.Error.mkEofError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L69-L70","name":"IO.Error.mkEofError","docLink":"./Init/System/IOError.html#IO.Error.mkEofError","doc":""},"IO.Error.mkAlreadyExistsFile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L65-L66","name":"IO.Error.mkAlreadyExistsFile","docLink":"./Init/System/IOError.html#IO.Error.mkAlreadyExistsFile","doc":""},"IO.Error.mkAlreadyExists":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L109-L110","name":"IO.Error.mkAlreadyExists","docLink":"./Init/System/IOError.html#IO.Error.mkAlreadyExists","doc":""},"IO.Error.instToStringError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L198-L198","name":"IO.Error.instToStringError","docLink":"./Init/System/IOError.html#IO.Error.instToStringError","doc":""},"IO.Error.fopenErrorToString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L162-L164","name":"IO.Error.fopenErrorToString","docLink":"./Init/System/IOError.html#IO.Error.fopenErrorToString","doc":""},"IO.Error":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IOError.lean#L17-L54","name":"IO.Error","docLink":"./Init/System/IOError.html#IO.Error","doc":"Imitate the structure of IOErrorType in Haskell:\nhttps://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO-Error.html#t:IOErrorType\n"},"IO.AsyncList.waitHead?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L108-L108","name":"IO.AsyncList.waitHead?","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList.waitHead?","doc":""},"IO.AsyncList.waitFind?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L85-L93","name":"IO.AsyncList.waitFind?","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList.waitFind?","doc":"Spawns a `Task` acting like `List.find?` but which will wait for tail evalution\nwhen necessary to traverse the list. If the tail terminates before a matching element\nis found, the task throws the terminating value. "},"IO.AsyncList.waitAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L69-L80","name":"IO.AsyncList.waitAll","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList.waitAll","doc":"Spawns a `Task` waiting on the prefix of elements for which `p` is true. "},"IO.AsyncList.unfoldAsync.step":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L45-L51","name":"IO.AsyncList.unfoldAsync.step","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList.unfoldAsync.step","doc":""},"IO.AsyncList.unfoldAsync":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L43-L54","name":"IO.AsyncList.unfoldAsync","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList.unfoldAsync","doc":"A stateful step computation `f` is applied iteratively, forming an async\nstream. The stream ends once `f` returns `none` for the first time.\n\nFor cooperatively cancelling an ongoing computation, we recommend referencing\na cancellation token in `f` and checking it when appropriate. "},"IO.AsyncList.ofList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L33-L34","name":"IO.AsyncList.ofList","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList.ofList","doc":""},"IO.AsyncList.instInhabitedAsyncList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L23-L23","name":"IO.AsyncList.instInhabitedAsyncList","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList.instInhabitedAsyncList","doc":""},"IO.AsyncList.instCoeListAsyncList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L36-L36","name":"IO.AsyncList.instCoeListAsyncList","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList.instCoeListAsyncList","doc":""},"IO.AsyncList.instAppendAsyncList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L31-L31","name":"IO.AsyncList.instAppendAsyncList","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList.instAppendAsyncList","doc":""},"IO.AsyncList.getFinishedPrefix":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L96-L106","name":"IO.AsyncList.getFinishedPrefix","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList.getFinishedPrefix","doc":"Retrieve the already-computed prefix of the list. If computation has finished with an error, return it as well. "},"IO.AsyncList.getAll":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L58-L66","name":"IO.AsyncList.getAll","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList.getAll","doc":"The computed, synchronous list. If an async tail was present, returns also\nits terminating value. "},"IO.AsyncList.append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L26-L29","name":"IO.AsyncList.append","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList.append","doc":""},"IO.AsyncList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Server/AsyncList.lean#L16-L19","name":"IO.AsyncList","docLink":"./Lean/Server/AsyncList.html#IO.AsyncList","doc":"An async IO list is like a lazy list but instead of being *unevaluated* `Thunk`s,\n`delayed` suffixes are `Task`s *being evaluated asynchronously*. A delayed suffix can signal the end\nof computation (successful or due to a failure) with a terminating value of type `ε`. "},"IO.AccessRight.flags":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L580-L584","name":"IO.AccessRight.flags","docLink":"./Init/System/IO.html#IO.AccessRight.flags","doc":""},"IO.AccessRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L575-L578","name":"IO.AccessRight","docLink":"./Init/System/IO.html#IO.AccessRight","doc":""},"IO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L63-L63","name":"IO","docLink":"./Init/System/IO.html#IO","doc":""},"Hashable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2315-L2316","name":"Hashable","docLink":"./Init/Prelude.html#Hashable","doc":""},"HasEquiv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L122-L123","name":"HasEquiv","docLink":"./Init/Core.html#HasEquiv","doc":""},"HXor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1028-L1029","name":"HXor","docLink":"./Init/Prelude.html#HXor","doc":""},"HSub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1001-L1002","name":"HSub","docLink":"./Init/Prelude.html#HSub","doc":""},"HShiftRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1037-L1038","name":"HShiftRight","docLink":"./Init/Prelude.html#HShiftRight","doc":""},"HShiftLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1034-L1035","name":"HShiftLeft","docLink":"./Init/Prelude.html#HShiftLeft","doc":""},"HPow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1013-L1014","name":"HPow","docLink":"./Init/Prelude.html#HPow","doc":""},"HOrElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1019-L1020","name":"HOrElse","docLink":"./Init/Prelude.html#HOrElse","doc":""},"HOr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1031-L1032","name":"HOr","docLink":"./Init/Prelude.html#HOr","doc":""},"HMul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1004-L1005","name":"HMul","docLink":"./Init/Prelude.html#HMul","doc":""},"HMod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1010-L1011","name":"HMod","docLink":"./Init/Prelude.html#HMod","doc":""},"HEq.trans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L313-L314","name":"HEq.trans","docLink":"./Init/Core.html#HEq.trans","doc":""},"HEq.symm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L307-L308","name":"HEq.symm","docLink":"./Init/Core.html#HEq.symm","doc":""},"HEq.subst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L304-L305","name":"HEq.subst","docLink":"./Init/Core.html#HEq.subst","doc":""},"HEq.rfl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L444-L445","name":"HEq.rfl","docLink":"./Init/Prelude.html#HEq.rfl","doc":"A version of `HEq.refl` with an implicit argument. "},"HEq.ndrecOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L298-L299","name":"HEq.ndrecOn","docLink":"./Init/Core.html#HEq.ndrecOn","doc":""},"HEq.ndrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L295-L296","name":"HEq.ndrec","docLink":"./Init/Core.html#HEq.ndrec","doc":""},"HEq.elim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L301-L302","name":"HEq.elim","docLink":"./Init/Core.html#HEq.elim","doc":""},"HEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L439-L441","name":"HEq","docLink":"./Init/Prelude.html#HEq","doc":"Heterogeneous equality. `HEq a b` asserts that `a` and `b` have the same\ntype, and casting `a` across the equality yields `b`, and vice versa.\n\nYou should avoid using this type if you can. Heterogeneous equality does not\nhave all the same properties as `Eq`, because the assumption that the types of\n`a` and `b` are equal is often too weak to prove theorems of interest. One\nimportant non-theorem is the analogue of `congr`: If `HEq f g` and `HEq x y`\nand `f x` and `g y` are well typed it does not follow that `HEq (f x) (g y)`.\n(This does follow if you have `f = g` instead.) However if `a` and `b` have\nthe same type then `a = b` and `HEq a b` ae equivalent.\n"},"HDiv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1007-L1008","name":"HDiv","docLink":"./Init/Prelude.html#HDiv","doc":""},"HAppend":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1016-L1017","name":"HAppend","docLink":"./Init/Prelude.html#HAppend","doc":""},"HAndThen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1022-L1023","name":"HAndThen","docLink":"./Init/Prelude.html#HAndThen","doc":""},"HAnd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1025-L1026","name":"HAnd","docLink":"./Init/Prelude.html#HAnd","doc":""},"HAdd":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L998-L999","name":"HAdd","docLink":"./Init/Prelude.html#HAdd","doc":""},"GetElem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1822-L1823","name":"GetElem","docLink":"./Init/Prelude.html#GetElem","doc":""},"GT.gt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L978-L978","name":"GT.gt","docLink":"./Init/Prelude.html#GT.gt","doc":""},"GE.ge":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L977-L977","name":"GE.ge","docLink":"./Init/Prelude.html#GE.ge","doc":""},"Functor.mapRev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L11-L12","name":"Functor.mapRev","docLink":"./Init/Control/Basic.html#Functor.mapRev","doc":""},"Functor.discard":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L16-L17","name":"Functor.discard","docLink":"./Init/Control/Basic.html#Functor.discard","doc":""},"Functor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1917-L1919","name":"Functor","docLink":"./Init/Prelude.html#Functor","doc":""},"Function.const_apply":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L19-L19","name":"Function.const_apply","docLink":"./Init/Core.html#Function.const_apply","doc":""},"Function.const":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L65-L66","name":"Function.const","docLink":"./Init/Prelude.html#Function.const","doc":"The constant function. If `a : α`, then `Function.const β a : β → α` is the\n\"constant function with value `a`\", that is, `Function.const β a b = a`.\n```\nexample (b : Bool) : Function.const Bool 10 b = 10 :=\n  rfl\n\n#check Function.const Bool 10\n-- Bool → Nat\n```\n"},"Function.comp_apply":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L21-L21","name":"Function.comp_apply","docLink":"./Init/Core.html#Function.comp_apply","doc":""},"Function.comp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L51-L52","name":"Function.comp","docLink":"./Init/Prelude.html#Function.comp","doc":"Function composition is the act of pipelining the result of one function, to the input of another, creating an entirely new function.\nExample:\n```\n#eval Function.comp List.reverse (List.drop 2) [3, 2, 4, 1]\n-- [1, 4]\n```\nYou can use the notation `f ∘ g` as shorthand for `Function.comp f g`.\n```\n#eval (List.reverse ∘ List.drop 2) [3, 2, 4, 1]\n-- [1, 4]\n```\nA simpler way of thinking about it, is that `List.reverse ∘ List.drop 2`\nis equivalent to `fun xs => List.reverse (List.drop 2 xs)`,\nthe benefit is that the meaning of composition is obvious,\nand the representation is compact.\n"},"Function.Equiv.trans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1050-L1051","name":"Function.Equiv.trans","docLink":"./Init/Core.html#Function.Equiv.trans","doc":""},"Function.Equiv.symm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1047-L1048","name":"Function.Equiv.symm","docLink":"./Init/Core.html#Function.Equiv.symm","doc":""},"Function.Equiv.refl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1044-L1045","name":"Function.Equiv.refl","docLink":"./Init/Core.html#Function.Equiv.refl","doc":""},"Function.Equiv.isEquivalence":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1053-L1057","name":"Function.Equiv.isEquivalence","docLink":"./Init/Core.html#Function.Equiv.isEquivalence","doc":""},"Function.Equiv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1042-L1042","name":"Function.Equiv","docLink":"./Init/Core.html#Function.Equiv","doc":""},"ForM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L227-L228","name":"ForM","docLink":"./Init/Control/Basic.html#ForM","doc":"Typeclass for the polymorphic `forM` operation described in the \"do unchained\" paper.\nRemark:\n- `γ` is a \"container\" type of elements of type `α`.\n- `α` is treated as an output parameter by the typeclass resolution procedure.\n  That is, it tries to find an instance using only `m` and `γ`.\n"},"ForInStep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L83-L86","name":"ForInStep","docLink":"./Init/Core.html#ForInStep","doc":"Auxiliary type used to compile `for x in xs` notation. "},"ForIn'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L93-L94","name":"ForIn'","docLink":"./Init/Core.html#ForIn'","doc":""},"ForIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L88-L89","name":"ForIn","docLink":"./Init/Core.html#ForIn","doc":""},"FloatSpec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L11-L17","name":"FloatSpec","docLink":"./Init/Data/Float.html#FloatSpec","doc":""},"FloatArray.uset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L65-L66","name":"FloatArray.uset","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.uset","doc":""},"FloatArray.uget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L41-L42","name":"FloatArray.uget","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.uget","doc":""},"FloatArray.toList.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L80-L84","name":"FloatArray.toList.loop","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.toList.loop","doc":""},"FloatArray.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L79-L85","name":"FloatArray.toList","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.toList","doc":""},"FloatArray.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L37-L38","name":"FloatArray.size","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.size","doc":""},"FloatArray.set!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L73-L74","name":"FloatArray.set!","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.set!","doc":""},"FloatArray.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L69-L70","name":"FloatArray.set","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.set","doc":""},"FloatArray.push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L33-L34","name":"FloatArray.push","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.push","doc":""},"FloatArray.mkEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L20-L21","name":"FloatArray.mkEmpty","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.mkEmpty","doc":""},"FloatArray.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L76-L77","name":"FloatArray.isEmpty","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.isEmpty","doc":""},"FloatArray.instInhabitedFloatArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L26-L27","name":"FloatArray.instInhabitedFloatArray","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.instInhabitedFloatArray","doc":""},"FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L61-L62","name":"FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.instGetElemFloatArrayUSizeFloatLtNatInstLTNatValSizeValSize","doc":""},"FloatArray.instGetElemFloatArrayNatFloatLtInstLTNatSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L58-L59","name":"FloatArray.instGetElemFloatArrayNatFloatLtInstLTNatSize","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.instGetElemFloatArrayNatFloatLtInstLTNatSize","doc":""},"FloatArray.instForInFloatArrayFloat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L119-L120","name":"FloatArray.instForInFloatArrayFloat","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.instForInFloatArrayFloat","doc":""},"FloatArray.instEmptyCollectionFloatArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L29-L30","name":"FloatArray.instEmptyCollectionFloatArray","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.instEmptyCollectionFloatArray","doc":""},"FloatArray.get?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L52-L56","name":"FloatArray.get?","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.get?","doc":""},"FloatArray.get!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L49-L50","name":"FloatArray.get!","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.get!","doc":""},"FloatArray.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L45-L46","name":"FloatArray.get","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.get","doc":""},"FloatArray.forInUnsafe.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L94-L101","name":"FloatArray.forInUnsafe.loop","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.forInUnsafe.loop","doc":""},"FloatArray.forInUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L92-L102","name":"FloatArray.forInUnsafe","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.forInUnsafe","doc":"We claim this unsafe implementation is correct because an array cannot have more than `usizeSz` elements in our runtime.\nThis is similar to the `Array` version.\n"},"FloatArray.forIn.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L107-L116","name":"FloatArray.forIn.loop","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.forIn.loop","doc":""},"FloatArray.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L106-L117","name":"FloatArray.forIn","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.forIn","doc":"Reference implementation for `forIn` "},"FloatArray.foldlMUnsafe.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L126-L130","name":"FloatArray.foldlMUnsafe.fold","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.foldlMUnsafe.fold","doc":""},"FloatArray.foldlMUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L125-L137","name":"FloatArray.foldlMUnsafe","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.foldlMUnsafe","doc":"See comment at `forInUnsafe` "},"FloatArray.foldlM.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L143-L150","name":"FloatArray.foldlM.loop","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.foldlM.loop","doc":""},"FloatArray.foldlM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L141-L155","name":"FloatArray.foldlM","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.foldlM","doc":"Reference implementation for `foldlM` "},"FloatArray.foldl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L158-L159","name":"FloatArray.foldl","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.foldl","doc":""},"FloatArray.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L23-L24","name":"FloatArray.empty","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray.empty","doc":""},"FloatArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/FloatArray/Basic.lean#L12-L13","name":"FloatArray","docLink":"./Init/Data/FloatArray/Basic.html#FloatArray","doc":""},"Float.toUSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L77-L77","name":"Float.toUSize","docLink":"./Init/Data/Float.html#Float.toUSize","doc":""},"Float.toUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L73-L73","name":"Float.toUInt8","docLink":"./Init/Data/Float.html#Float.toUInt8","doc":""},"Float.toUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L76-L76","name":"Float.toUInt64","docLink":"./Init/Data/Float.html#Float.toUInt64","doc":""},"Float.toUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L75-L75","name":"Float.toUInt32","docLink":"./Init/Data/Float.html#Float.toUInt32","doc":""},"Float.toUInt16":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L74-L74","name":"Float.toUInt16","docLink":"./Init/Data/Float.html#Float.toUInt16","doc":""},"Float.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L71-L71","name":"Float.toString","docLink":"./Init/Data/Float.html#Float.toString","doc":""},"Float.tanh":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L98-L98","name":"Float.tanh","docLink":"./Init/Data/Float.html#Float.tanh","doc":""},"Float.tan":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L91-L91","name":"Float.tan","docLink":"./Init/Data/Float.html#Float.tan","doc":""},"Float.sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L35-L35","name":"Float.sub","docLink":"./Init/Data/Float.html#Float.sub","doc":""},"Float.sqrt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L108-L108","name":"Float.sqrt","docLink":"./Init/Data/Float.html#Float.sqrt","doc":""},"Float.sinh":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L96-L96","name":"Float.sinh","docLink":"./Init/Data/Float.html#Float.sinh","doc":""},"Float.sin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L89-L89","name":"Float.sin","docLink":"./Init/Data/Float.html#Float.sin","doc":""},"Float.scaleB":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L120-L120","name":"Float.scaleB","docLink":"./Init/Data/Float.html#Float.scaleB","doc":"Efficiently computes `x * 2^i`.\n"},"Float.round":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L112-L112","name":"Float.round","docLink":"./Init/Data/Float.html#Float.round","doc":""},"Float.pow":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L107-L107","name":"Float.pow","docLink":"./Init/Data/Float.html#Float.pow","doc":""},"Float.ofScientific":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/OfScientific.lean#L26-L32","name":"Float.ofScientific","docLink":"./Init/Data/OfScientific.html#Float.ofScientific","doc":""},"Float.ofNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/OfScientific.lean#L46-L47","name":"Float.ofNat","docLink":"./Init/Data/OfScientific.html#Float.ofNat","doc":""},"Float.ofInt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/OfScientific.lean#L49-L51","name":"Float.ofInt","docLink":"./Init/Data/OfScientific.html#Float.ofInt","doc":""},"Float.ofBinaryScientific":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/OfScientific.lean#L20-L24","name":"Float.ofBinaryScientific","docLink":"./Init/Data/OfScientific.html#Float.ofBinaryScientific","doc":"Computes `m * 2^e`. "},"Float.neg":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L38-L38","name":"Float.neg","docLink":"./Init/Data/Float.html#Float.neg","doc":""},"Float.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L36-L36","name":"Float.mul","docLink":"./Init/Data/Float.html#Float.mul","doc":""},"Float.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L41-L43","name":"Float.lt","docLink":"./Init/Data/Float.html#Float.lt","doc":""},"Float.log2":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L105-L105","name":"Float.log2","docLink":"./Init/Data/Float.html#Float.log2","doc":""},"Float.log10":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L106-L106","name":"Float.log10","docLink":"./Init/Data/Float.html#Float.log10","doc":""},"Float.log":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L104-L104","name":"Float.log","docLink":"./Init/Data/Float.html#Float.log","doc":""},"Float.le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L45-L46","name":"Float.le","docLink":"./Init/Data/Float.html#Float.le","doc":""},"Float.floor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L111-L111","name":"Float.floor","docLink":"./Init/Data/Float.html#Float.floor","doc":""},"Float.exp2":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L103-L103","name":"Float.exp2","docLink":"./Init/Data/Float.html#Float.exp2","doc":""},"Float.exp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L102-L102","name":"Float.exp","docLink":"./Init/Data/Float.html#Float.exp","doc":""},"Float.div":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L37-L37","name":"Float.div","docLink":"./Init/Data/Float.html#Float.div","doc":""},"Float.decLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L60-L62","name":"Float.decLt","docLink":"./Init/Data/Float.html#Float.decLt","doc":""},"Float.decLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L64-L66","name":"Float.decLe","docLink":"./Init/Data/Float.html#Float.decLe","doc":""},"Float.cosh":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L97-L97","name":"Float.cosh","docLink":"./Init/Data/Float.html#Float.cosh","doc":""},"Float.cos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L90-L90","name":"Float.cos","docLink":"./Init/Data/Float.html#Float.cos","doc":""},"Float.ceil":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L110-L110","name":"Float.ceil","docLink":"./Init/Data/Float.html#Float.ceil","doc":""},"Float.cbrt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L109-L109","name":"Float.cbrt","docLink":"./Init/Data/Float.html#Float.cbrt","doc":""},"Float.beq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L56-L56","name":"Float.beq","docLink":"./Init/Data/Float.html#Float.beq","doc":""},"Float.atanh":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L101-L101","name":"Float.atanh","docLink":"./Init/Data/Float.html#Float.atanh","doc":""},"Float.atan2":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L95-L95","name":"Float.atan2","docLink":"./Init/Data/Float.html#Float.atan2","doc":""},"Float.atan":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L94-L94","name":"Float.atan","docLink":"./Init/Data/Float.html#Float.atan","doc":""},"Float.asinh":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L99-L99","name":"Float.asinh","docLink":"./Init/Data/Float.html#Float.asinh","doc":""},"Float.asin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L92-L92","name":"Float.asin","docLink":"./Init/Data/Float.html#Float.asin","doc":""},"Float.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L34-L34","name":"Float.add","docLink":"./Init/Data/Float.html#Float.add","doc":""},"Float.acosh":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L100-L100","name":"Float.acosh","docLink":"./Init/Data/Float.html#Float.acosh","doc":""},"Float.acos":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L93-L93","name":"Float.acos","docLink":"./Init/Data/Float.html#Float.acos","doc":""},"Float":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Float.lean#L29-L30","name":"Float","docLink":"./Init/Data/Float.html#Float","doc":""},"Fin.xor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L68-L69","name":"Fin.xor","docLink":"./Init/Data/Fin/Basic.html#Fin.xor","doc":""},"Fin.val_ne_of_ne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L109-L110","name":"Fin.val_ne_of_ne","docLink":"./Init/Data/Fin/Basic.html#Fin.val_ne_of_ne","doc":""},"Fin.val_lt_of_le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L115-L116","name":"Fin.val_lt_of_le","docLink":"./Init/Data/Fin/Basic.html#Fin.val_lt_of_le","doc":""},"Fin.val_eq_of_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1395-L1396","name":"Fin.val_eq_of_eq","docLink":"./Init/Prelude.html#Fin.val_eq_of_eq","doc":""},"Fin.succ":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L21-L22","name":"Fin.succ","docLink":"./Init/Data/Fin/Basic.html#Fin.succ","doc":""},"Fin.sub":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L44-L45","name":"Fin.sub","docLink":"./Init/Data/Fin/Basic.html#Fin.sub","doc":""},"Fin.sizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOfLemmas.lean#L11-L12","name":"Fin.sizeOf","docLink":"./Init/SizeOfLemmas.html#Fin.sizeOf","doc":""},"Fin.shiftRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L74-L75","name":"Fin.shiftRight","docLink":"./Init/Data/Fin/Basic.html#Fin.shiftRight","doc":""},"Fin.shiftLeft":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L71-L72","name":"Fin.shiftLeft","docLink":"./Init/Data/Fin/Basic.html#Fin.shiftLeft","doc":""},"Fin.ofNat'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L29-L30","name":"Fin.ofNat'","docLink":"./Init/Data/Fin/Basic.html#Fin.ofNat'","doc":""},"Fin.ofNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L26-L27","name":"Fin.ofNat","docLink":"./Init/Data/Fin/Basic.html#Fin.ofNat","doc":""},"Fin.ne_of_val_ne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1398-L1399","name":"Fin.ne_of_val_ne","docLink":"./Init/Prelude.html#Fin.ne_of_val_ne","doc":""},"Fin.mul":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L41-L42","name":"Fin.mul","docLink":"./Init/Data/Fin/Basic.html#Fin.mul","doc":""},"Fin.modn_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L112-L113","name":"Fin.modn_lt","docLink":"./Init/Data/Fin/Basic.html#Fin.modn_lt","doc":""},"Fin.modn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L59-L60","name":"Fin.modn","docLink":"./Init/Data/Fin/Basic.html#Fin.modn","doc":""},"Fin.mod":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L53-L54","name":"Fin.mod","docLink":"./Init/Data/Fin/Basic.html#Fin.mod","doc":""},"Fin.lor":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L65-L66","name":"Fin.lor","docLink":"./Init/Data/Fin/Basic.html#Fin.lor","doc":""},"Fin.land":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L62-L63","name":"Fin.land","docLink":"./Init/Data/Fin/Basic.html#Fin.land","doc":""},"Fin.instXorFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L96-L97","name":"Fin.instXorFin","docLink":"./Init/Data/Fin/Basic.html#Fin.instXorFin","doc":""},"Fin.instSubFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L80-L81","name":"Fin.instSubFin","docLink":"./Init/Data/Fin/Basic.html#Fin.instSubFin","doc":""},"Fin.instShiftRightFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L100-L101","name":"Fin.instShiftRightFin","docLink":"./Init/Data/Fin/Basic.html#Fin.instShiftRightFin","doc":""},"Fin.instShiftLeftFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L98-L99","name":"Fin.instShiftLeftFin","docLink":"./Init/Data/Fin/Basic.html#Fin.instShiftLeftFin","doc":""},"Fin.instOrOpFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L94-L95","name":"Fin.instOrOpFin","docLink":"./Init/Data/Fin/Basic.html#Fin.instOrOpFin","doc":""},"Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L103-L104","name":"Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat","docLink":"./Init/Data/Fin/Basic.html#Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat","doc":""},"Fin.instMulFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L83-L84","name":"Fin.instMulFin","docLink":"./Init/Data/Fin/Basic.html#Fin.instMulFin","doc":""},"Fin.instModFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L86-L87","name":"Fin.instModFin","docLink":"./Init/Data/Fin/Basic.html#Fin.instModFin","doc":""},"Fin.instInhabitedFinHAddNatInstHAddInstAddNatOfNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L106-L107","name":"Fin.instInhabitedFinHAddNatInstHAddInstAddNatOfNat","docLink":"./Init/Data/Fin/Basic.html#Fin.instInhabitedFinHAddNatInstHAddInstAddNatOfNat","doc":""},"Fin.instDivFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L89-L90","name":"Fin.instDivFin","docLink":"./Init/Data/Fin/Basic.html#Fin.instDivFin","doc":""},"Fin.instAndOpFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L92-L93","name":"Fin.instAndOpFin","docLink":"./Init/Data/Fin/Basic.html#Fin.instAndOpFin","doc":""},"Fin.instAddFin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L77-L78","name":"Fin.instAddFin","docLink":"./Init/Data/Fin/Basic.html#Fin.instAddFin","doc":""},"Fin.eq_of_val_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1392-L1393","name":"Fin.eq_of_val_eq","docLink":"./Init/Prelude.html#Fin.eq_of_val_eq","doc":""},"Fin.elim0":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L18-L19","name":"Fin.elim0","docLink":"./Init/Data/Fin/Basic.html#Fin.elim0","doc":""},"Fin.div":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L56-L57","name":"Fin.div","docLink":"./Init/Data/Fin/Basic.html#Fin.div","doc":""},"Fin.decLt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1413-L1413","name":"Fin.decLt","docLink":"./Init/Prelude.html#Fin.decLt","doc":""},"Fin.decLe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1414-L1414","name":"Fin.decLe","docLink":"./Init/Prelude.html#Fin.decLe","doc":""},"Fin.coeToNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L15-L16","name":"Fin.coeToNat","docLink":"./Init/Data/Fin/Basic.html#Fin.coeToNat","doc":""},"Fin.add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Fin/Basic.lean#L38-L39","name":"Fin.add","docLink":"./Init/Data/Fin/Basic.html#Fin.add","doc":""},"Fin":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1388-L1390","name":"Fin","docLink":"./Init/Prelude.html#Fin","doc":"`Fin n` is a natural number `i` with the constraint that `0 ≤ i < n`. "},"False.elim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L219-L220","name":"False.elim","docLink":"./Init/Prelude.html#False.elim","doc":"`False.elim : False → C` says that from `False`, any desired proposition\n`C` holds. Also known as ex falso quodlibet (EFQ) or the principle of explosion.\n\nThe target type is actually `C : Sort u` which means it works for both\npropositions and types. When executed, this acts like an \"unreachable\"\ninstruction: it is **undefined behavior** to run, but it will probably print\n\"unreachable code\". (You would need to construct a proof of false to run it\nanyway, which you can only do using `sorry` or unsound axioms.)\n"},"False":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L185-L185","name":"False","docLink":"./Init/Prelude.html#False","doc":"`False` is the empty proposition. Thus, it has no introduction rules.\nIt represents a contradiction. `False` elimination rule, `False.rec`,\nexpresses the fact that anything follows from a contradiction.\nThis rule is sometimes called ex falso (short for ex falso sequitur quodlibet),\nor the principle of explosion.\nFor more information: [Propositional Logic](https://leanprover.github.io/theorem_proving_in_lean4/propositions_and_proofs.html#propositional-logic)\n"},"Exists.elim":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L365-L368","name":"Exists.elim","docLink":"./Init/Core.html#Exists.elim","doc":""},"Exists":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L79-L80","name":"Exists","docLink":"./Init/Core.html#Exists","doc":""},"ExceptT.tryCatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L96-L99","name":"ExceptT.tryCatch","docLink":"./Init/Control/Except.html#ExceptT.tryCatch","doc":""},"ExceptT.seq_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L143-L144","name":"ExceptT.seq_eq","docLink":"./Init/Control/Lawful.html#ExceptT.seq_eq","doc":""},"ExceptT.seqRight_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L161-L167","name":"ExceptT.seqRight_eq","docLink":"./Init/Control/Lawful.html#ExceptT.seqRight_eq","doc":""},"ExceptT.seqLeft_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L149-L159","name":"ExceptT.seqLeft_eq","docLink":"./Init/Control/Lawful.html#ExceptT.seqLeft_eq","doc":""},"ExceptT.run_throw":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L118-L118","name":"ExceptT.run_throw","docLink":"./Init/Control/Lawful.html#ExceptT.run_throw","doc":""},"ExceptT.run_pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L114-L114","name":"ExceptT.run_pure","docLink":"./Init/Control/Lawful.html#ExceptT.run_pure","doc":""},"ExceptT.run_map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L137-L141","name":"ExceptT.run_map","docLink":"./Init/Control/Lawful.html#ExceptT.run_map","doc":""},"ExceptT.run_lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L116-L116","name":"ExceptT.run_lift","docLink":"./Init/Control/Lawful.html#ExceptT.run_lift","doc":""},"ExceptT.run_bind_lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L120-L121","name":"ExceptT.run_bind_lift","docLink":"./Init/Control/Lawful.html#ExceptT.run_bind_lift","doc":""},"ExceptT.run_bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L126-L132","name":"ExceptT.run_bind","docLink":"./Init/Control/Lawful.html#ExceptT.run_bind","doc":""},"ExceptT.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L69-L69","name":"ExceptT.run","docLink":"./Init/Control/Except.html#ExceptT.run","doc":""},"ExceptT.pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L75-L76","name":"ExceptT.pure","docLink":"./Init/Control/Except.html#ExceptT.pure","doc":""},"ExceptT.mk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L68-L68","name":"ExceptT.mk","docLink":"./Init/Control/Except.html#ExceptT.mk","doc":""},"ExceptT.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L85-L88","name":"ExceptT.map","docLink":"./Init/Control/Except.html#ExceptT.map","doc":""},"ExceptT.lift_pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L134-L135","name":"ExceptT.lift_pure","docLink":"./Init/Control/Lawful.html#ExceptT.lift_pure","doc":""},"ExceptT.lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L90-L91","name":"ExceptT.lift","docLink":"./Init/Control/Except.html#ExceptT.lift","doc":""},"ExceptT.instMonadLiftExceptT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L94-L94","name":"ExceptT.instMonadLiftExceptT","docLink":"./Init/Control/Except.html#ExceptT.instMonadLiftExceptT","doc":""},"ExceptT.instMonadLiftExceptExceptT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L93-L93","name":"ExceptT.instMonadLiftExceptExceptT","docLink":"./Init/Control/Except.html#ExceptT.instMonadLiftExceptExceptT","doc":""},"ExceptT.instMonadFunctorExceptT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L101-L101","name":"ExceptT.instMonadFunctorExceptT","docLink":"./Init/Control/Except.html#ExceptT.instMonadFunctorExceptT","doc":""},"ExceptT.instMonadExceptT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L103-L106","name":"ExceptT.instMonadExceptT","docLink":"./Init/Control/Except.html#ExceptT.instMonadExceptT","doc":""},"ExceptT.instLawfulMonadExceptTInstMonadExceptT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L169-L178","name":"ExceptT.instLawfulMonadExceptTInstMonadExceptT","docLink":"./Init/Control/Lawful.html#ExceptT.instLawfulMonadExceptTInstMonadExceptT","doc":""},"ExceptT.finally":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L171-L179","name":"ExceptT.finally","docLink":"./Init/Control/Except.html#ExceptT.finally","doc":""},"ExceptT.ext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L110-L112","name":"ExceptT.ext","docLink":"./Init/Control/Lawful.html#ExceptT.ext","doc":""},"ExceptT.bind_throw":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L123-L124","name":"ExceptT.bind_throw","docLink":"./Init/Control/Lawful.html#ExceptT.bind_throw","doc":""},"ExceptT.bind_pure_comp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Lawful.lean#L146-L147","name":"ExceptT.bind_pure_comp","docLink":"./Init/Control/Lawful.html#ExceptT.bind_pure_comp","doc":""},"ExceptT.bindCont":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L78-L80","name":"ExceptT.bindCont","docLink":"./Init/Control/Except.html#ExceptT.bindCont","doc":""},"ExceptT.bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L82-L83","name":"ExceptT.bind","docLink":"./Init/Control/Except.html#ExceptT.bind","doc":""},"ExceptT.adapt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L108-L109","name":"ExceptT.adapt","docLink":"./Init/Control/Except.html#ExceptT.adapt","doc":""},"ExceptT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L65-L66","name":"ExceptT","docLink":"./Init/Control/Except.html#ExceptT","doc":""},"ExceptCpsT.run_throw":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L51-L51","name":"ExceptCpsT.run_throw","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.run_throw","doc":""},"ExceptCpsT.run_pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L47-L47","name":"ExceptCpsT.run_pure","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.run_pure","doc":""},"ExceptCpsT.run_lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L49-L49","name":"ExceptCpsT.run_lift","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.run_lift","doc":""},"ExceptCpsT.run_bind_throw":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L55-L55","name":"ExceptCpsT.run_bind_throw","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.run_bind_throw","doc":""},"ExceptCpsT.run_bind_lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L53-L53","name":"ExceptCpsT.run_bind_lift","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.run_bind_lift","doc":""},"ExceptCpsT.runK":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L20-L21","name":"ExceptCpsT.runK","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.runK","doc":""},"ExceptCpsT.runCatch_throw":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L62-L62","name":"ExceptCpsT.runCatch_throw","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.runCatch_throw","doc":""},"ExceptCpsT.runCatch_pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L57-L57","name":"ExceptCpsT.runCatch_pure","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.runCatch_pure","doc":""},"ExceptCpsT.runCatch_lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L59-L60","name":"ExceptCpsT.runCatch_lift","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.runCatch_lift","doc":""},"ExceptCpsT.runCatch_bind_throw":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L66-L66","name":"ExceptCpsT.runCatch_bind_throw","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.runCatch_bind_throw","doc":""},"ExceptCpsT.runCatch_bind_lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L64-L64","name":"ExceptCpsT.runCatch_bind_lift","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.runCatch_bind_lift","doc":""},"ExceptCpsT.runCatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L23-L24","name":"ExceptCpsT.runCatch","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.runCatch","doc":""},"ExceptCpsT.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L17-L18","name":"ExceptCpsT.run","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.run","doc":""},"ExceptCpsT.lift":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L38-L39","name":"ExceptCpsT.lift","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.lift","doc":""},"ExceptCpsT.instMonadLiftExceptCpsT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L41-L42","name":"ExceptCpsT.instMonadLiftExceptCpsT","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.instMonadLiftExceptCpsT","doc":""},"ExceptCpsT.instMonadExceptOfExceptCpsT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L34-L36","name":"ExceptCpsT.instMonadExceptOfExceptCpsT","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.instMonadExceptOfExceptCpsT","doc":""},"ExceptCpsT.instMonadExceptCpsT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L26-L29","name":"ExceptCpsT.instMonadExceptCpsT","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.instMonadExceptCpsT","doc":""},"ExceptCpsT.instLawfulMonadExceptCpsTInstMonadExceptCpsT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L31-L32","name":"ExceptCpsT.instLawfulMonadExceptCpsTInstMonadExceptCpsT","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.instLawfulMonadExceptCpsTInstMonadExceptCpsT","doc":""},"ExceptCpsT.instInhabitedExceptCpsT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L44-L45","name":"ExceptCpsT.instInhabitedExceptCpsT","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT.instInhabitedExceptCpsT","doc":""},"ExceptCpsT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/ExceptCps.lean#L13-L13","name":"ExceptCpsT","docLink":"./Init/Control/ExceptCps.html#ExceptCpsT","doc":""},"Except.tryCatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L48-L51","name":"Except.tryCatch","docLink":"./Init/Control/Except.html#Except.tryCatch","doc":""},"Except.toOption":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L44-L46","name":"Except.toOption","docLink":"./Init/Control/Except.html#Except.toOption","doc":""},"Except.toBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L38-L40","name":"Except.toBool","docLink":"./Init/Control/Except.html#Except.toBool","doc":"Returns true if the value is `Except.ok`, false otherwise. "},"Except.pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L16-L17","name":"Except.pure","docLink":"./Init/Control/Except.html#Except.pure","doc":""},"Except.orElseLazy":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L53-L56","name":"Except.orElseLazy","docLink":"./Init/Control/Except.html#Except.orElseLazy","doc":""},"Except.map_id":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L23-L26","name":"Except.map_id","docLink":"./Init/Control/Except.html#Except.map_id","doc":""},"Except.mapError":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L28-L30","name":"Except.mapError","docLink":"./Init/Control/Except.html#Except.mapError","doc":""},"Except.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L19-L21","name":"Except.map","docLink":"./Init/Control/Except.html#Except.map","doc":""},"Except.isOk":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L42-L42","name":"Except.isOk","docLink":"./Init/Control/Except.html#Except.isOk","doc":""},"Except.instMonadExcept":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L58-L61","name":"Except.instMonadExcept","docLink":"./Init/Control/Except.html#Except.instMonadExcept","doc":""},"Except.bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L32-L35","name":"Except.bind","docLink":"./Init/Control/Except.html#Except.bind","doc":""},"Except":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2001-L2003","name":"Except","docLink":"./Init/Prelude.html#Except","doc":""},"Equivalence":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L558-L561","name":"Equivalence","docLink":"./Init/Core.html#Equivalence","doc":""},"Eq.trans":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L318-L319","name":"Eq.trans","docLink":"./Init/Prelude.html#Eq.trans","doc":"Equality is transitive: if `a = b` and `b = c` then `a = c`.\n\nBecause this is in the `Eq` namespace, if you variables or expressions\n`h₁ : a = b` and `h₂ : b = c`, you can use `h₁.trans h₂ : a = c` as shorthand\nfor `Eq.trans h₁ h₃`.\n\nFor more information: [Equality](https://leanprover.github.io/theorem_proving_in_lean4/quantifiers_and_equality.html#equality)\n"},"Eq.symm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L306-L307","name":"Eq.symm","docLink":"./Init/Prelude.html#Eq.symm","doc":"Equality is symmetric: if `a = b` then `b = a`.\n\nBecause this is in the `Eq` namespace, if you have a variable `h : a = b`,\n`h.symm` can be used as shorthand for `Eq.symm h` as a proof of `b = a`.\n\nFor more information: [Equality](https://leanprover.github.io/theorem_proving_in_lean4/quantifiers_and_equality.html#equality)\n"},"Eq.substr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L237-L238","name":"Eq.substr","docLink":"./Init/Core.html#Eq.substr","doc":""},"Eq.subst":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L295-L296","name":"Eq.subst","docLink":"./Init/Prelude.html#Eq.subst","doc":"The substitution principle for equality. If `a = b ` and `P a` holds,\nthen `P b` also holds. We conventionally use the name `motive` for `P` here,\nso that you can specify it explicitly using e.g.\n`Eq.subst (motive := fun x => x < 5)` if it is not otherwise inferred correctly.\n\nThis theorem is the underlying mechanism behind the `rw` tactic, which is\nessentially a fancy algorithm for finding good `motive` arguments to usefully\napply this theorem to replace occurrences of `a` with `b` in the goal or\nhypotheses.\n\nFor more information: [Equality](https://leanprover.github.io/theorem_proving_in_lean4/quantifiers_and_equality.html#equality)\n"},"Eq.propIntro":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L724-L725","name":"Eq.propIntro","docLink":"./Init/Core.html#Eq.propIntro","doc":""},"Eq.mpr_prop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L79-L80","name":"Eq.mpr_prop","docLink":"./Init/SimpLemmas.html#Eq.mpr_prop","doc":""},"Eq.mpr_not":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L82-L83","name":"Eq.mpr_not","docLink":"./Init/SimpLemmas.html#Eq.mpr_not","doc":""},"Eq.mpr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L234-L235","name":"Eq.mpr","docLink":"./Init/Core.html#Eq.mpr","doc":""},"Eq.mp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L231-L232","name":"Eq.mp","docLink":"./Init/Core.html#Eq.mp","doc":""},"Eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L259-L262","name":"Eq","docLink":"./Init/Prelude.html#Eq","doc":"The equality relation. It has one introduction rule, `Eq.refl`.\nWe use `a = b` as notation for `Eq a b`.\nA fundamental property of equality is that it is an equivalence relation.\n```\nvariable (α : Type) (a b c d : α)\nvariable (hab : a = b) (hcb : c = b) (hcd : c = d)\n\nexample : a = d :=\n  Eq.trans (Eq.trans hab (Eq.symm hcb)) hcd\n```\nEquality is much more than an equivalence relation, however. It has the important property that every assertion\nrespects the equivalence, in the sense that we can substitute equal expressions without changing the truth value.\nThat is, given `h1 : a = b` and `h2 : p a`, we can construct a proof for `p b` using substitution: `Eq.subst h1 h2`.\nExample:\n```\nexample (α : Type) (a b : α) (p : α → Prop)\n        (h1 : a = b) (h2 : p a) : p b :=\n  Eq.subst h1 h2\n\nexample (α : Type) (a b : α) (p : α → Prop)\n    (h1 : a = b) (h2 : p a) : p b :=\n  h1 ▸ h2\n```\nThe triangle in the second presentation is a macro built on top of `Eq.subst` and `Eq.symm`, and you can enter it by typing `\\t`.\nFor more information: [Equality](https://leanprover.github.io/theorem_proving_in_lean4/quantifiers_and_equality.html#equality)\n"},"EmptyCollection":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L127-L128","name":"EmptyCollection","docLink":"./Init/Core.html#EmptyCollection","doc":""},"Empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L191-L191","name":"Empty","docLink":"./Init/Prelude.html#Empty","doc":"The empty type. It has no constructors. The `Empty.rec`\neliminator expresses the fact that anything follows from the empty type.\n"},"EStateM.tryCatch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2246-L2250","name":"EStateM.tryCatch","docLink":"./Init/Prelude.html#EStateM.tryCatch","doc":""},"EStateM.throw":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2238-L2239","name":"EStateM.throw","docLink":"./Init/Prelude.html#EStateM.throw","doc":""},"EStateM.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2228-L2229","name":"EStateM.set","docLink":"./Init/Prelude.html#EStateM.set","doc":""},"EStateM.seqRight":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2273-L2276","name":"EStateM.seqRight","docLink":"./Init/Prelude.html#EStateM.seqRight","doc":""},"EStateM.run'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2299-L2302","name":"EStateM.run'","docLink":"./Init/Prelude.html#EStateM.run'","doc":""},"EStateM.run":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2296-L2297","name":"EStateM.run","docLink":"./Init/Prelude.html#EStateM.run","doc":""},"EStateM.pure":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2225-L2226","name":"EStateM.pure","docLink":"./Init/Prelude.html#EStateM.pure","doc":""},"EStateM.orElse'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/EState.lean#L34-L41","name":"EStateM.orElse'","docLink":"./Init/Control/EState.html#EStateM.orElse'","doc":"Alternative orElse operator that allows to select which exception should be used.\nThe default is to use the first exception since the standard `orElse` uses the second. "},"EStateM.orElse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2252-L2256","name":"EStateM.orElse","docLink":"./Init/Prelude.html#EStateM.orElse","doc":""},"EStateM.nonBacktrackable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2309-L2311","name":"EStateM.nonBacktrackable","docLink":"./Init/Prelude.html#EStateM.nonBacktrackable","doc":"Dummy default instance "},"EStateM.modifyGet":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2234-L2236","name":"EStateM.modifyGet","docLink":"./Init/Prelude.html#EStateM.modifyGet","doc":""},"EStateM.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2268-L2271","name":"EStateM.map","docLink":"./Init/Prelude.html#EStateM.map","doc":""},"EStateM.instToStringResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/EState.lean#L16-L19","name":"EStateM.instToStringResult","docLink":"./Init/Control/EState.html#EStateM.instToStringResult","doc":""},"EStateM.instReprResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/EState.lean#L21-L24","name":"EStateM.instReprResult","docLink":"./Init/Control/EState.html#EStateM.instReprResult","doc":""},"EStateM.instOrElseEStateM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2284-L2285","name":"EStateM.instOrElseEStateM","docLink":"./Init/Prelude.html#EStateM.instOrElseEStateM","doc":""},"EStateM.instMonadStateOfEStateM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2287-L2290","name":"EStateM.instMonadStateOfEStateM","docLink":"./Init/Prelude.html#EStateM.instMonadStateOfEStateM","doc":""},"EStateM.instMonadFinallyEStateM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/EState.lean#L43-L53","name":"EStateM.instMonadFinallyEStateM","docLink":"./Init/Control/EState.html#EStateM.instMonadFinallyEStateM","doc":""},"EStateM.instMonadExceptOfEStateM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2292-L2294","name":"EStateM.instMonadExceptOfEStateM","docLink":"./Init/Prelude.html#EStateM.instMonadExceptOfEStateM","doc":""},"EStateM.instMonadEStateM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2278-L2282","name":"EStateM.instMonadEStateM","docLink":"./Init/Prelude.html#EStateM.instMonadEStateM","doc":""},"EStateM.instInhabitedResult":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2210-L2211","name":"EStateM.instInhabitedResult","docLink":"./Init/Prelude.html#EStateM.instInhabitedResult","doc":""},"EStateM.instInhabitedEStateM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2222-L2223","name":"EStateM.instInhabitedEStateM","docLink":"./Init/Prelude.html#EStateM.instInhabitedEStateM","doc":""},"EStateM.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2231-L2232","name":"EStateM.get","docLink":"./Init/Prelude.html#EStateM.get","doc":""},"EStateM.fromStateM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/EState.lean#L55-L57","name":"EStateM.fromStateM","docLink":"./Init/Control/EState.html#EStateM.fromStateM","doc":""},"EStateM.dummySave":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2304-L2304","name":"EStateM.dummySave","docLink":"./Init/Prelude.html#EStateM.dummySave","doc":""},"EStateM.dummyRestore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2306-L2306","name":"EStateM.dummyRestore","docLink":"./Init/Prelude.html#EStateM.dummyRestore","doc":""},"EStateM.bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2263-L2266","name":"EStateM.bind","docLink":"./Init/Prelude.html#EStateM.bind","doc":""},"EStateM.adaptExcept":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2258-L2261","name":"EStateM.adaptExcept","docLink":"./Init/Prelude.html#EStateM.adaptExcept","doc":""},"EStateM.Result":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2204-L2206","name":"EStateM.Result","docLink":"./Init/Prelude.html#EStateM.Result","doc":""},"EStateM.Backtrackable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2242-L2244","name":"EStateM.Backtrackable","docLink":"./Init/Prelude.html#EStateM.Backtrackable","doc":"Auxiliary instance for saving/restoring the \"backtrackable\" part of the state. "},"EStateM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L2216-L2216","name":"EStateM","docLink":"./Init/Prelude.html#EStateM","doc":""},"EST":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/ST.lean#L11-L11","name":"EST","docLink":"./Init/System/ST.html#EST","doc":""},"EIO.toIO'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L71-L72","name":"EIO.toIO'","docLink":"./Init/System/IO.html#EIO.toIO'","doc":""},"EIO.toIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L68-L69","name":"EIO.toIO","docLink":"./Init/System/IO.html#EIO.toIO","doc":""},"EIO.toBaseIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L52-L55","name":"EIO.toBaseIO","docLink":"./Init/System/IO.html#EIO.toBaseIO","doc":""},"EIO.mapTasks":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L150-L151","name":"EIO.mapTasks","docLink":"./Init/System/IO.html#EIO.mapTasks","doc":"`EIO` specialization of `BaseIO.mapTasks`. "},"EIO.mapTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L142-L143","name":"EIO.mapTask","docLink":"./Init/System/IO.html#EIO.mapTask","doc":"`EIO` specialization of `BaseIO.mapTask`. "},"EIO.catchExceptions":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L57-L60","name":"EIO.catchExceptions","docLink":"./Init/System/IO.html#EIO.catchExceptions","doc":""},"EIO.bindTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L146-L147","name":"EIO.bindTask","docLink":"./Init/System/IO.html#EIO.bindTask","doc":"`EIO` specialization of `BaseIO.bindTask`. "},"EIO.asTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L138-L139","name":"EIO.asTask","docLink":"./Init/System/IO.html#EIO.asTask","doc":"`EIO` specialization of `BaseIO.asTask`. "},"EIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L32-L32","name":"EIO","docLink":"./Init/System/IO.html#EIO","doc":""},"DoResultSBC":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L117-L120","name":"DoResultSBC","docLink":"./Init/Core.html#DoResultSBC","doc":"Auxiliary type used to compile `do` notation. "},"DoResultPRBC":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L100-L104","name":"DoResultPRBC","docLink":"./Init/Core.html#DoResultPRBC","doc":"Auxiliary type used to compile `do` notation. "},"DoResultPR":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L107-L109","name":"DoResultPR","docLink":"./Init/Core.html#DoResultPR","doc":"Auxiliary type used to compile `do` notation. "},"DoResultBC":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L112-L114","name":"DoResultBC","docLink":"./Init/Core.html#DoResultBC","doc":"Auxiliary type used to compile `do` notation. "},"Div":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1052-L1053","name":"Div","docLink":"./Init/Prelude.html#Div","doc":""},"DecidableRel":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L805-L806","name":"DecidableRel","docLink":"./Init/Prelude.html#DecidableRel","doc":"A decidable relation. See `Decidable`. "},"DecidablePred":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L801-L802","name":"DecidablePred","docLink":"./Init/Prelude.html#DecidablePred","doc":"A decidable predicate. See `Decidable`. "},"DecidableEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L812-L813","name":"DecidableEq","docLink":"./Init/Prelude.html#DecidableEq","doc":"Asserts that `α` has decidable equality, that is, `a = b` is decidable\nfor all `a b : α`. See `Decidable`.\n"},"Decidable.of_not_not":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L416-L417","name":"Decidable.of_not_not","docLink":"./Init/Core.html#Decidable.of_not_not","doc":""},"Decidable.not_and_iff_or_not":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L419-L427","name":"Decidable.not_and_iff_or_not","docLink":"./Init/Core.html#Decidable.not_and_iff_or_not","doc":""},"Decidable.em":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L409-L410","name":"Decidable.em","docLink":"./Init/Core.html#Decidable.em","doc":""},"Decidable.decide":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L795-L796","name":"Decidable.decide","docLink":"./Init/Prelude.html#Decidable.decide","doc":"Convert a decidable proposition into a boolean value.\n\nIf `p : Prop` is decidable, then `decide p : Bool` is the boolean value\nwhich is `true` if `p` is true and `false` if `p` is false.\n"},"Decidable.byContradiction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L413-L414","name":"Decidable.byContradiction","docLink":"./Init/Core.html#Decidable.byContradiction","doc":""},"Decidable.byCases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L404-L407","name":"Decidable.byCases","docLink":"./Init/Core.html#Decidable.byCases","doc":""},"Decidable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L783-L787","name":"Decidable","docLink":"./Init/Prelude.html#Decidable","doc":"`Decidable p` is a data-carrying class that supplies a proof that `p` is\neither `true` or `false`. It is equivalent to `Bool` (and in fact it has the\nsame code generation as `Bool`) together with a proof that the `Bool` is\ntrue iff `p` is.\n\n`Decidable` instances are used to infer \"computation strategies\" for\npropositions, so that you can have the convenience of writing propositions\ninside `if` statements and executing them (which actually executes the inferred\ndecidability instance instead of the proposition, which has no code).\n\nIf a proposition `p` is `Decidable`, then `(by decide : p)` will prove it by\nevaluating the decidability instance to `isTrue h` and returning `h`.\n"},"Complement":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1079-L1080","name":"Complement","docLink":"./Init/Prelude.html#Complement","doc":""},"CoeTail":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L23-L24","name":"CoeTail","docLink":"./Init/Coe.html#CoeTail","doc":"Expensive coercion that can only appear at the end of a sequence of coercions. "},"CoeTC":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L15-L16","name":"CoeTC","docLink":"./Init/Coe.html#CoeTC","doc":"Auxiliary class that contains the transitive closure of `Coe`. "},"CoeT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L34-L35","name":"CoeT","docLink":"./Init/Coe.html#CoeT","doc":"Combines CoeHead, CoeTC, CoeTail, CoeDep "},"CoeSort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L40-L41","name":"CoeSort","docLink":"./Init/Coe.html#CoeSort","doc":""},"CoeHead":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L19-L20","name":"CoeHead","docLink":"./Init/Coe.html#CoeHead","doc":"Expensive coercion that can only appear at the beginning of a sequence of coercions. "},"CoeHTCT":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L27-L28","name":"CoeHTCT","docLink":"./Init/Coe.html#CoeHTCT","doc":"Auxiliary class that contains `CoeHead` + `CoeTC` + `CoeTail`. "},"CoeFun":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L37-L38","name":"CoeFun","docLink":"./Init/Coe.html#CoeFun","doc":""},"CoeDep":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L30-L31","name":"CoeDep","docLink":"./Init/Coe.html#CoeDep","doc":""},"Coe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Coe.lean#L11-L12","name":"Coe","docLink":"./Init/Coe.html#Coe","doc":""},"Classical.«tacticBy_cases_:_»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L126-L129","name":"Classical.«tacticBy_cases_:_»","docLink":"./Init/Classical.html#Classical.«tacticBy_cases_:_»","doc":"`by_cases (h :)? p` splits the main goal into two cases, assuming `h : p` in the first branch, and `h : ¬ p` in the second branch.\n"},"Classical.typeDecidableEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L77-L78","name":"Classical.typeDecidableEq","docLink":"./Init/Classical.html#Classical.typeDecidableEq","doc":""},"Classical.typeDecidable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L80-L83","name":"Classical.typeDecidable","docLink":"./Init/Classical.html#Classical.typeDecidable","doc":""},"Classical.strongIndefiniteDescription":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L85-L91","name":"Classical.strongIndefiniteDescription","docLink":"./Init/Classical.html#Classical.strongIndefiniteDescription","doc":""},"Classical.skolem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L110-L111","name":"Classical.skolem","docLink":"./Init/Classical.html#Classical.skolem","doc":""},"Classical.propDecidable":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L69-L72","name":"Classical.propDecidable","docLink":"./Init/Classical.html#Classical.propDecidable","doc":"All propositions are `Decidable`. "},"Classical.propComplete":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L113-L116","name":"Classical.propComplete","docLink":"./Init/Classical.html#Classical.propComplete","doc":""},"Classical.ofNonempty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L704-L705","name":"Classical.ofNonempty","docLink":"./Init/Prelude.html#Classical.ofNonempty","doc":"A variation on `Classical.choice` that uses typeclass inference to\ninfer the proof of `Nonempty α`.\n"},"Classical.inhabited_of_nonempty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L62-L63","name":"Classical.inhabited_of_nonempty","docLink":"./Init/Classical.html#Classical.inhabited_of_nonempty","doc":""},"Classical.inhabited_of_exists":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L65-L66","name":"Classical.inhabited_of_exists","docLink":"./Init/Classical.html#Classical.inhabited_of_exists","doc":""},"Classical.indefiniteDescription":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L16-L17","name":"Classical.indefiniteDescription","docLink":"./Init/Classical.html#Classical.indefiniteDescription","doc":""},"Classical.exists_true_of_nonempty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L59-L60","name":"Classical.exists_true_of_nonempty","docLink":"./Init/Classical.html#Classical.exists_true_of_nonempty","doc":""},"Classical.epsilon_spec_aux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L97-L98","name":"Classical.epsilon_spec_aux","docLink":"./Init/Classical.html#Classical.epsilon_spec_aux","doc":""},"Classical.epsilon_spec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L100-L101","name":"Classical.epsilon_spec","docLink":"./Init/Classical.html#Classical.epsilon_spec","doc":""},"Classical.epsilon_singleton":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L103-L104","name":"Classical.epsilon_singleton","docLink":"./Init/Classical.html#Classical.epsilon_singleton","doc":""},"Classical.epsilon":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L94-L95","name":"Classical.epsilon","docLink":"./Init/Classical.html#Classical.epsilon","doc":"the Hilbert epsilon Function "},"Classical.em":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L26-L57","name":"Classical.em","docLink":"./Init/Classical.html#Classical.em","doc":"Diaconescu's theorem: excluded middle from choice, Function extensionality and propositional extensionality. "},"Classical.decidableInhabited":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L74-L75","name":"Classical.decidableInhabited","docLink":"./Init/Classical.html#Classical.decidableInhabited","doc":""},"Classical.choose_spec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L22-L23","name":"Classical.choose_spec","docLink":"./Init/Classical.html#Classical.choose_spec","doc":""},"Classical.choose":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L19-L20","name":"Classical.choose","docLink":"./Init/Classical.html#Classical.choose","doc":""},"Classical.choice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L685-L685","name":"Classical.choice","docLink":"./Init/Prelude.html#Classical.choice","doc":"**The axiom of choice**. `Nonempty α` is a proof that `α` has an element,\nbut the element itself is erased. The axiom `choice` supplies a particular\nelement of `α` given only this proof.\n\nThe textbook axiom of choice normally makes a family of choices all at once,\nbut that is implied from this formulation, because if `α : ι → Type` is a\nfamily of types and `h : ∀ i, Nonempty (α i)` is a proof that they are all\nnonempty, then `fun i => Classical.choice (h i) : ∀ i, α i` is a family of\nchosen elements. This is actually a bit stronger than the ZFC choice axiom;\nthis is sometimes called \"[global choice](https://en.wikipedia.org/wiki/Axiom_of_global_choice)\".\n\nIn lean, we use the axiom of choice to derive the law of excluded middle\n(see `Classical.em`), so it will often show up in axiom listings where you\nmay not expect. You can use `#print axioms my_thm` to find out if a given\ntheorem depends on this or other axioms.\n\nThis axiom can be used to construct \"data\", but obviously there is no algorithm\nto compute it, so lean will require you to mark any definition that would\ninvolve executing `Classical.choice` or other axioms as `noncomputable`, and\nwill not produce any executable code for such definitions.\n"},"Classical.byContradiction":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L123-L124","name":"Classical.byContradiction","docLink":"./Init/Classical.html#Classical.byContradiction","doc":""},"Classical.byCases":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L119-L120","name":"Classical.byCases","docLink":"./Init/Classical.html#Classical.byCases","doc":""},"Classical.axiomOfChoice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Classical.lean#L107-L108","name":"Classical.axiomOfChoice","docLink":"./Init/Classical.html#Classical.axiomOfChoice","doc":"the axiom of choice "},"Char.val_ne_of_ne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1625-L1626","name":"Char.val_ne_of_ne","docLink":"./Init/Prelude.html#Char.val_ne_of_ne","doc":""},"Char.val_eq_of_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1619-L1620","name":"Char.val_eq_of_eq","docLink":"./Init/Prelude.html#Char.val_eq_of_eq","doc":""},"Char.utf8Size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1634-L1642","name":"Char.utf8Size","docLink":"./Init/Prelude.html#Char.utf8Size","doc":""},"Char.utf16Size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/Lsp/Utf16.lean#L17-L18","name":"Char.utf16Size","docLink":"./Lean/Data/Lsp/Utf16.html#Char.utf16Size","doc":""},"Char.toUpper":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L74-L76","name":"Char.toUpper","docLink":"./Init/Data/Char/Basic.html#Char.toUpper","doc":""},"Char.toString":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/String/Basic.lean#L621-L622","name":"Char.toString","docLink":"./Init/Data/String/Basic.html#Char.toString","doc":""},"Char.toNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L46-L47","name":"Char.toNat","docLink":"./Init/Data/Char/Basic.html#Char.toNat","doc":""},"Char.toLower":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L70-L72","name":"Char.toLower","docLink":"./Init/Data/Char/Basic.html#Char.toLower","doc":""},"Char.sizeOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOfLemmas.lean#L29-L30","name":"Char.sizeOf","docLink":"./Init/SizeOfLemmas.html#Char.sizeOf","doc":""},"Char.repr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L200-L201","name":"Char.repr","docLink":"./Init/Data/Repr.html#Char.repr","doc":""},"Char.quoteCore.smallCharToHex":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L188-L192","name":"Char.quoteCore.smallCharToHex","docLink":"./Init/Data/Repr.html#Char.quoteCore.smallCharToHex","doc":""},"Char.quoteCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L180-L192","name":"Char.quoteCore","docLink":"./Init/Data/Repr.html#Char.quoteCore","doc":""},"Char.quote":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Repr.lean#L194-L195","name":"Char.quote","docLink":"./Init/Data/Repr.html#Char.quote","doc":""},"Char.ofNatAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1607-L1608","name":"Char.ofNatAux","docLink":"./Init/Prelude.html#Char.ofNatAux","doc":""},"Char.ofNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1611-L1614","name":"Char.ofNat","docLink":"./Init/Prelude.html#Char.ofNat","doc":""},"Char.ne_of_val_ne":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1622-L1623","name":"Char.ne_of_val_ne","docLink":"./Init/Prelude.html#Char.ne_of_val_ne","doc":""},"Char.lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L14-L14","name":"Char.lt","docLink":"./Init/Data/Char/Basic.html#Char.lt","doc":""},"Char.le":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L15-L15","name":"Char.le","docLink":"./Init/Data/Char/Basic.html#Char.le","doc":""},"Char.isWhitespace":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L52-L53","name":"Char.isWhitespace","docLink":"./Init/Data/Char/Basic.html#Char.isWhitespace","doc":""},"Char.isValidUInt32":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L29-L36","name":"Char.isValidUInt32","docLink":"./Init/Data/Char/Basic.html#Char.isValidUInt32","doc":""},"Char.isValidChar_zero":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L43-L44","name":"Char.isValidChar_zero","docLink":"./Init/Data/Char/Basic.html#Char.isValidChar_zero","doc":""},"Char.isValidChar_of_isValidChar_Nat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L38-L41","name":"Char.isValidChar_of_isValidChar_Nat","docLink":"./Init/Data/Char/Basic.html#Char.isValidChar_of_isValidChar_Nat","doc":""},"Char.isValidCharNat":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L26-L27","name":"Char.isValidCharNat","docLink":"./Init/Data/Char/Basic.html#Char.isValidCharNat","doc":""},"Char.isUpper":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L55-L56","name":"Char.isUpper","docLink":"./Init/Data/Char/Basic.html#Char.isUpper","doc":""},"Char.isLower":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L58-L59","name":"Char.isLower","docLink":"./Init/Data/Char/Basic.html#Char.isLower","doc":""},"Char.isDigit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L64-L65","name":"Char.isDigit","docLink":"./Init/Data/Char/Basic.html#Char.isDigit","doc":""},"Char.isAlphanum":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L67-L68","name":"Char.isAlphanum","docLink":"./Init/Data/Char/Basic.html#Char.isAlphanum","doc":""},"Char.isAlpha":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L61-L62","name":"Char.isAlpha","docLink":"./Init/Data/Char/Basic.html#Char.isAlpha","doc":""},"Char.instLTChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L17-L17","name":"Char.instLTChar","docLink":"./Init/Data/Char/Basic.html#Char.instLTChar","doc":""},"Char.instLEChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L18-L18","name":"Char.instLEChar","docLink":"./Init/Data/Char/Basic.html#Char.instLEChar","doc":""},"Char.instInhabitedChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L49-L50","name":"Char.instInhabitedChar","docLink":"./Init/Data/Char/Basic.html#Char.instInhabitedChar","doc":""},"Char.instDecidableLtCharInstLTChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L20-L21","name":"Char.instDecidableLtCharInstLTChar","docLink":"./Init/Data/Char/Basic.html#Char.instDecidableLtCharInstLTChar","doc":""},"Char.instDecidableLeCharInstLEChar":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Char/Basic.lean#L23-L24","name":"Char.instDecidableLeCharInstLEChar","docLink":"./Init/Data/Char/Basic.html#Char.instDecidableLeCharInstLEChar","doc":""},"Char.eq_of_val_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1616-L1617","name":"Char.eq_of_val_eq","docLink":"./Init/Prelude.html#Char.eq_of_val_eq","doc":""},"Char":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1597-L1599","name":"Char","docLink":"./Init/Prelude.html#Char","doc":"The `Char` Type represents an unicode scalar value.\nSee http://www.unicode.org/glossary/#unicode_scalar_value). "},"ByteArray.uset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L67-L68","name":"ByteArray.uset","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.uset","doc":""},"ByteArray.uget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L41-L42","name":"ByteArray.uget","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.uget","doc":""},"ByteArray.toUInt64LE!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L191-L200","name":"ByteArray.toUInt64LE!","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.toUInt64LE!","doc":"Interpret a `ByteArray` of size 8 as a little-endian `UInt64`. "},"ByteArray.toUInt64BE!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L203-L212","name":"ByteArray.toUInt64BE!","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.toUInt64BE!","doc":"Interpret a `ByteArray` of size 8 as a big-endian `UInt64`. "},"ByteArray.toList.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L90-L94","name":"ByteArray.toList.loop","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.toList.loop","doc":""},"ByteArray.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L89-L95","name":"ByteArray.toList","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.toList","doc":""},"ByteArray.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L37-L38","name":"ByteArray.size","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.size","doc":""},"ByteArray.set!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L59-L60","name":"ByteArray.set!","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.set!","doc":""},"ByteArray.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L63-L64","name":"ByteArray.set","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.set","doc":""},"ByteArray.push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L33-L34","name":"ByteArray.push","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.push","doc":""},"ByteArray.mkEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L21-L22","name":"ByteArray.mkEmpty","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.mkEmpty","doc":""},"ByteArray.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L70-L71","name":"ByteArray.isEmpty","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.isEmpty","doc":""},"ByteArray.instInhabitedByteArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L26-L27","name":"ByteArray.instInhabitedByteArray","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.instInhabitedByteArray","doc":""},"ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L55-L56","name":"ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.instGetElemByteArrayUSizeUInt8LtNatInstLTNatValSizeValSize","doc":""},"ByteArray.instGetElemByteArrayNatUInt8LtInstLTNatSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L52-L53","name":"ByteArray.instGetElemByteArrayNatUInt8LtInstLTNatSize","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.instGetElemByteArrayNatUInt8LtInstLTNatSize","doc":""},"ByteArray.instForInByteArrayUInt8":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L138-L139","name":"ByteArray.instForInByteArrayUInt8","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.instForInByteArrayUInt8","doc":""},"ByteArray.instEmptyCollectionByteArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L29-L30","name":"ByteArray.instEmptyCollectionByteArray","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.instEmptyCollectionByteArray","doc":""},"ByteArray.instAppendByteArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L87-L87","name":"ByteArray.instAppendByteArray","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.instAppendByteArray","doc":""},"ByteArray.get!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L45-L46","name":"ByteArray.get!","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.get!","doc":""},"ByteArray.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L49-L50","name":"ByteArray.get","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.get","doc":""},"ByteArray.forInUnsafe.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L113-L120","name":"ByteArray.forInUnsafe.loop","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.forInUnsafe.loop","doc":""},"ByteArray.forInUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L111-L121","name":"ByteArray.forInUnsafe","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.forInUnsafe","doc":"We claim this unsafe implementation is correct because an array cannot have more than `usizeSz` elements in our runtime.\n  This is similar to the `Array` version.\n\n  TODO: avoid code duplication in the future after we improve the compiler.\n"},"ByteArray.forIn.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L126-L135","name":"ByteArray.forIn.loop","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.forIn.loop","doc":""},"ByteArray.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L125-L136","name":"ByteArray.forIn","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.forIn","doc":"Reference implementation for `forIn` "},"ByteArray.foldlMUnsafe.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L145-L149","name":"ByteArray.foldlMUnsafe.fold","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.foldlMUnsafe.fold","doc":""},"ByteArray.foldlMUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L144-L156","name":"ByteArray.foldlMUnsafe","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.foldlMUnsafe","doc":"See comment at `forInUnsafe` "},"ByteArray.foldlM.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L162-L169","name":"ByteArray.foldlM.loop","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.foldlM.loop","doc":""},"ByteArray.foldlM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L160-L174","name":"ByteArray.foldlM","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.foldlM","doc":"Reference implementation for `foldlM` "},"ByteArray.foldl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L177-L178","name":"ByteArray.foldl","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.foldl","doc":""},"ByteArray.findIdx?.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L98-L102","name":"ByteArray.findIdx?.loop","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.findIdx?.loop","doc":""},"ByteArray.findIdx?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L97-L103","name":"ByteArray.findIdx?","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.findIdx?","doc":""},"ByteArray.extract":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L80-L81","name":"ByteArray.extract","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.extract","doc":""},"ByteArray.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L24-L24","name":"ByteArray.empty","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.empty","doc":""},"ByteArray.copySlice":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L77-L78","name":"ByteArray.copySlice","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.copySlice","doc":"Copy the slice at `[srcOff, srcOff + len)` in `src` to `[destOff, destOff + len)` in `dest`, growing `dest` if necessary.\nIf `exact` is `false`, the capacity will be doubled when grown. "},"ByteArray.append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L83-L85","name":"ByteArray.append","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray.append","doc":""},"ByteArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/ByteArray/Basic.lean#L13-L14","name":"ByteArray","docLink":"./Init/Data/ByteArray/Basic.html#ByteArray","doc":""},"Bool.true_or":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L124-L124","name":"Bool.true_or","docLink":"./Init/SimpLemmas.html#Bool.true_or","doc":""},"Bool.true_and":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L131-L131","name":"Bool.true_and","docLink":"./Init/SimpLemmas.html#Bool.true_and","doc":""},"Bool.toUInt64":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/UInt.lean#L264-L264","name":"Bool.toUInt64","docLink":"./Init/Data/UInt.html#Bool.toUInt64","doc":""},"Bool.toLBool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Data/LBool.lean#L37-L39","name":"Bool.toLBool","docLink":"./Lean/Data/LBool.html#Bool.toLBool","doc":""},"Bool.sizeOf_eq_one":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SizeOf.lean#L61-L61","name":"Bool.sizeOf_eq_one","docLink":"./Init/SizeOf.html#Bool.sizeOf_eq_one","doc":""},"Bool.or_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L122-L122","name":"Bool.or_true","docLink":"./Init/SimpLemmas.html#Bool.or_true","doc":""},"Bool.or_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L125-L125","name":"Bool.or_self","docLink":"./Init/SimpLemmas.html#Bool.or_self","doc":""},"Bool.or_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L121-L121","name":"Bool.or_false","docLink":"./Init/SimpLemmas.html#Bool.or_false","doc":""},"Bool.or_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L126-L126","name":"Bool.or_eq_true","docLink":"./Init/SimpLemmas.html#Bool.or_eq_true","doc":""},"Bool.of_not_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L276-L278","name":"Bool.of_not_eq_true","docLink":"./Init/Core.html#Bool.of_not_eq_true","doc":""},"Bool.of_not_eq_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L280-L282","name":"Bool.of_not_eq_false","docLink":"./Init/Core.html#Bool.of_not_eq_false","doc":""},"Bool.not_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L136-L136","name":"Bool.not_true","docLink":"./Init/SimpLemmas.html#Bool.not_true","doc":""},"Bool.not_not":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L135-L135","name":"Bool.not_not","docLink":"./Init/SimpLemmas.html#Bool.not_not","doc":""},"Bool.not_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L137-L137","name":"Bool.not_false","docLink":"./Init/SimpLemmas.html#Bool.not_false","doc":""},"Bool.not_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L144-L144","name":"Bool.not_eq_true","docLink":"./Init/SimpLemmas.html#Bool.not_eq_true","doc":""},"Bool.not_eq_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L145-L145","name":"Bool.not_eq_false","docLink":"./Init/SimpLemmas.html#Bool.not_eq_false","doc":""},"Bool.not_beq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L138-L138","name":"Bool.not_beq_true","docLink":"./Init/SimpLemmas.html#Bool.not_beq_true","doc":""},"Bool.not_beq_to_not_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L142-L142","name":"Bool.not_beq_to_not_eq","docLink":"./Init/SimpLemmas.html#Bool.not_beq_to_not_eq","doc":""},"Bool.not_beq_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L139-L139","name":"Bool.not_beq_false","docLink":"./Init/SimpLemmas.html#Bool.not_beq_false","doc":""},"Bool.false_or":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L123-L123","name":"Bool.false_or","docLink":"./Init/SimpLemmas.html#Bool.false_or","doc":""},"Bool.false_and":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L130-L130","name":"Bool.false_and","docLink":"./Init/SimpLemmas.html#Bool.false_and","doc":""},"Bool.beq_to_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L141-L141","name":"Bool.beq_to_eq","docLink":"./Init/SimpLemmas.html#Bool.beq_to_eq","doc":""},"Bool.and_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L129-L129","name":"Bool.and_true","docLink":"./Init/SimpLemmas.html#Bool.and_true","doc":""},"Bool.and_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L132-L132","name":"Bool.and_self","docLink":"./Init/SimpLemmas.html#Bool.and_self","doc":""},"Bool.and_false":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L128-L128","name":"Bool.and_false","docLink":"./Init/SimpLemmas.html#Bool.and_false","doc":""},"Bool.and_eq_true":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/SimpLemmas.lean#L133-L133","name":"Bool.and_eq_true","docLink":"./Init/SimpLemmas.html#Bool.and_eq_true","doc":""},"Bool":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L541-L545","name":"Bool","docLink":"./Init/Prelude.html#Bool","doc":"`Bool` is the type of boolean values, `true` and `false`. Classically,\nthis is equivalent to `Prop` (the type of propositions), but the distinction\nis important for programming, because values of type `Prop` are erased in the\ncode generator, while `Bool` corresponds to the type called `bool` or `boolean`\nin most programming languages.\n"},"Bind":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1907-L1908","name":"Bind","docLink":"./Init/Prelude.html#Bind","doc":""},"BaseIO.toIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L65-L66","name":"BaseIO.toIO","docLink":"./Init/System/IO.html#BaseIO.toIO","doc":""},"BaseIO.toEIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L46-L48","name":"BaseIO.toEIO","docLink":"./Init/System/IO.html#BaseIO.toEIO","doc":""},"BaseIO.mapTasks.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L128-L131","name":"BaseIO.mapTasks.go","docLink":"./Init/System/IO.html#BaseIO.mapTasks.go","doc":""},"BaseIO.mapTasks":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L125-L131","name":"BaseIO.mapTasks","docLink":"./Init/System/IO.html#BaseIO.mapTasks","doc":""},"BaseIO.mapTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L117-L118","name":"BaseIO.mapTask","docLink":"./Init/System/IO.html#BaseIO.mapTask","doc":"See `BaseIO.asTask`. "},"BaseIO.bindTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L122-L123","name":"BaseIO.bindTask","docLink":"./Init/System/IO.html#BaseIO.bindTask","doc":"See `BaseIO.asTask`. "},"BaseIO.asTask":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L112-L113","name":"BaseIO.asTask","docLink":"./Init/System/IO.html#BaseIO.asTask","doc":"Run `act` in a separate `Task`.\nThis is similar to Haskell's [`unsafeInterleaveIO`](http://hackage.haskell.org/package/base-4.14.0.0/docs/System-IO-Unsafe.html#v:unsafeInterleaveIO),\nexcept that the `Task` is started eagerly as usual. Thus pure accesses to the `Task` do not influence the impure `act`\ncomputation.\nUnlike with pure tasks created by `Task.spawn`, tasks created by this function will be run even if the last reference\nto the task is dropped. The `act` should manually check for cancellation via `IO.checkCanceled` if it wants to react\nto that. "},"BaseIO":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/System/IO.lean#L41-L41","name":"BaseIO","docLink":"./Init/System/IO.html#BaseIO","doc":"An `EIO` monad that cannot throw exceptions. "},"BEq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L858-L860","name":"BEq","docLink":"./Init/Prelude.html#BEq","doc":"`BEq α` is a typeclass for supplying a boolean-valued equality relation on\n`α`, notated as `a == b`. Unlike `DecidableEq α` (which uses `a = b`), this\nis `Bool` valued instead of `Prop` valued, and it also does not have any\naxioms like being reflexive or agreeing with `=`. It is mainly intended for\nprogramming applications. See `LawfulBEq` for a version that requires that\n`==` and `=` coincide.\n"},"Array.«term__[_:_]»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L135-L135","name":"Array.«term__[_:_]»","docLink":"./Init/Data/Array/Subarray.html#Array.«term__[_:_]»","doc":""},"Array.«term__[_:]»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L136-L136","name":"Array.«term__[_:]»","docLink":"./Init/Data/Array/Subarray.html#Array.«term__[_:]»","doc":""},"Array.«term__[:_]»":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L137-L137","name":"Array.«term__[:_]»","docLink":"./Init/Data/Array/Subarray.html#Array.«term__[:_]»","doc":""},"Array.zipWithAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L783-L793","name":"Array.zipWithAux","docLink":"./Init/Data/Array/Basic.html#Array.zipWithAux","doc":""},"Array.zipWith":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L795-L796","name":"Array.zipWith","docLink":"./Init/Data/Array/Basic.html#Array.zipWith","doc":""},"Array.zip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L798-L799","name":"Array.zip","docLink":"./Init/Data/Array/Basic.html#Array.zip","doc":""},"Array.uset":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L71-L72","name":"Array.uset","docLink":"./Init/Data/Array/Basic.html#Array.uset","doc":"Low-level version of `fset` which is as fast as a C array fset.\n`Fin` values are represented as tag pointers in the Lean runtime. Thus,\n`fset` may be slightly slower than `uset`. "},"Array.unzip":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L801-L802","name":"Array.unzip","docLink":"./Init/Data/Array/Basic.html#Array.unzip","doc":""},"Array.uget":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L41-L42","name":"Array.uget","docLink":"./Init/Data/Array/Basic.html#Array.uget","doc":"Low-level version of `fget` which is as fast as a C array read.\n`Fin` values are represented as tag pointers in the Lean runtime. Thus,\n`fget` may be slightly slower than `uget`. "},"Array.toSubarray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L112-L122","name":"Array.toSubarray","docLink":"./Init/Data/Array/Subarray.html#Array.toSubarray","doc":""},"Array.toPersistentArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L384-L385","name":"Array.toPersistentArray","docLink":"./Std/Data/PersistentArray.html#Array.toPersistentArray","doc":""},"Array.toPArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Std/Data/PersistentArray.lean#L387-L388","name":"Array.toPArray","docLink":"./Std/Data/PersistentArray.html#Array.toPArray","doc":""},"Array.toListLitAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L715-L717","name":"Array.toListLitAux","docLink":"./Init/Data/Array/Basic.html#Array.toListLitAux","doc":""},"Array.toList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L474-L475","name":"Array.toList","docLink":"./Init/Data/Array/Basic.html#Array.toList","doc":""},"Array.toArrayLit_eq.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L743-L744","name":"Array.toArrayLit_eq.go","docLink":"./Init/Data/Array/Basic.html#Array.toArrayLit_eq.go","doc":""},"Array.toArrayLit_eq.getLit_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L740-L741","name":"Array.toArrayLit_eq.getLit_eq","docLink":"./Init/Data/Array/Basic.html#Array.toArrayLit_eq.getLit_eq","doc":""},"Array.toArrayLit_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L731-L744","name":"Array.toArrayLit_eq","docLink":"./Init/Data/Array/Basic.html#Array.toArrayLit_eq","doc":""},"Array.toArrayLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L719-L720","name":"Array.toArrayLit","docLink":"./Init/Data/Array/Basic.html#Array.toArrayLit","doc":""},"Array.toArrayAux_eq":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L725-L726","name":"Array.toArrayAux_eq","docLink":"./Init/Data/Array/Basic.html#Array.toArrayAux_eq","doc":""},"Array.takeWhile.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L654-L662","name":"Array.takeWhile.go","docLink":"./Init/Data/Array/Basic.html#Array.takeWhile.go","doc":""},"Array.takeWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L653-L664","name":"Array.takeWhile","docLink":"./Init/Data/Array/Basic.html#Array.takeWhile","doc":""},"Array.tacticArray_get_dec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Mem.lean#L50-L53","name":"Array.tacticArray_get_dec","docLink":"./Init/Data/Array/Mem.html#Array.tacticArray_get_dec","doc":"This tactic, added to the `decreasing_trivial` toolbox, proves that\n`sizeOf arr[i] < sizeOf arr`, which is useful for well founded recursions\nover a nested inductive like `inductive T | mk : Array T → T`. "},"Array.swapAt!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L94-L99","name":"Array.swapAt!","docLink":"./Init/Data/Array/Basic.html#Array.swapAt!","doc":""},"Array.swapAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L88-L91","name":"Array.swapAt","docLink":"./Init/Data/Array/Basic.html#Array.swapAt","doc":""},"Array.swap!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L82-L86","name":"Array.swap!","docLink":"./Init/Data/Array/Basic.html#Array.swap!","doc":""},"Array.swap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L75-L79","name":"Array.swap","docLink":"./Init/Data/Array/Basic.html#Array.swap","doc":""},"Array.split":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L804-L806","name":"Array.split","docLink":"./Init/Data/Array/Basic.html#Array.split","doc":""},"Array.size_swap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L634-L636","name":"Array.size_swap","docLink":"./Init/Data/Array/Basic.html#Array.size_swap","doc":""},"Array.size_set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L61-L62","name":"Array.size_set","docLink":"./Init/Data/Array/Basic.html#Array.size_set","doc":""},"Array.size_push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L64-L65","name":"Array.size_push","docLink":"./Init/Data/Array/Basic.html#Array.size_push","doc":""},"Array.size_pop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L638-L641","name":"Array.size_pop","docLink":"./Init/Data/Array/Basic.html#Array.size_pop","doc":""},"Array.size_mkArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L24-L25","name":"Array.size_mkArray","docLink":"./Init/Data/Array/Basic.html#Array.size_mkArray","doc":""},"Array.sizeOf_lt_of_mem.aux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Mem.lean#L34-L40","name":"Array.sizeOf_lt_of_mem.aux","docLink":"./Init/Data/Array/Mem.html#Array.sizeOf_lt_of_mem.aux","doc":""},"Array.sizeOf_lt_of_mem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Mem.lean#L32-L42","name":"Array.sizeOf_lt_of_mem","docLink":"./Init/Data/Array/Mem.html#Array.sizeOf_lt_of_mem","doc":""},"Array.sizeOf_get_lt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Mem.lean#L26-L30","name":"Array.sizeOf_get_lt","docLink":"./Init/Data/Array/Mem.html#Array.sizeOf_get_lt","doc":""},"Array.sizeOf_get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Mem.lean#L44-L48","name":"Array.sizeOf_get","docLink":"./Init/Data/Array/Mem.html#Array.sizeOf_get","doc":""},"Array.size":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1847-L1848","name":"Array.size","docLink":"./Init/Prelude.html#Array.size","doc":""},"Array.singleton":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L34-L35","name":"Array.singleton","docLink":"./Init/Data/Array/Basic.html#Array.singleton","doc":""},"Array.shrink.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L107-L109","name":"Array.shrink.loop","docLink":"./Init/Data/Array/Basic.html#Array.shrink.loop","doc":""},"Array.shrink":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L106-L110","name":"Array.shrink","docLink":"./Init/Data/Array/Basic.html#Array.shrink","doc":""},"Array.setD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1875-L1876","name":"Array.setD","docLink":"./Init/Prelude.html#Array.setD","doc":""},"Array.set!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1879-L1880","name":"Array.set!","docLink":"./Init/Prelude.html#Array.set!","doc":""},"Array.set":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1871-L1873","name":"Array.set","docLink":"./Init/Prelude.html#Array.set","doc":""},"Array.sequenceMap.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1949-L1955","name":"Array.sequenceMap.loop","docLink":"./Init/Prelude.html#Array.sequenceMap.loop","doc":""},"Array.sequenceMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1948-L1956","name":"Array.sequenceMap","docLink":"./Init/Prelude.html#Array.sequenceMap","doc":""},"Array.reverse.rev":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L458-L462","name":"Array.reverse.rev","docLink":"./Init/Data/Array/Basic.html#Array.reverse.rev","doc":""},"Array.reverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L455-L464","name":"Array.reverse","docLink":"./Init/Data/Array/Basic.html#Array.reverse","doc":""},"Array.qsort.sort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/QSort.lean#L33-L43","name":"Array.qsort.sort","docLink":"./Init/Data/Array/QSort.html#Array.qsort.sort","doc":""},"Array.qsort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/QSort.lean#L32-L44","name":"Array.qsort","docLink":"./Init/Data/Array/QSort.html#Array.qsort","doc":""},"Array.qpartition.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/QSort.lean#L19-L28","name":"Array.qpartition.loop","docLink":"./Init/Data/Array/QSort.html#Array.qpartition.loop","doc":""},"Array.qpartition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/QSort.lean#L13-L30","name":"Array.qpartition","docLink":"./Init/Data/Array/QSort.html#Array.qpartition","doc":""},"Array.push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1866-L1868","name":"Array.push","docLink":"./Init/Prelude.html#Array.push","doc":""},"Array.popWhile":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L643-L651","name":"Array.popWhile","docLink":"./Init/Data/Array/Basic.html#Array.popWhile","doc":""},"Array.pop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L102-L104","name":"Array.pop","docLink":"./Init/Data/Array/Basic.html#Array.pop","doc":""},"Array.partition":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L567-L575","name":"Array.partition","docLink":"./Init/Data/Array/Basic.html#Array.partition","doc":""},"Array.of_push_eq_push":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/BasicAux.lean#L11-L15","name":"Array.of_push_eq_push","docLink":"./Init/Data/Array/BasicAux.html#Array.of_push_eq_push","doc":""},"Array.ofSubarray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L124-L128","name":"Array.ofSubarray","docLink":"./Init/Data/Array/Subarray.html#Array.ofSubarray","doc":""},"Array.modifyOp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L141-L142","name":"Array.modifyOp","docLink":"./Init/Data/Array/Basic.html#Array.modifyOp","doc":""},"Array.modifyMUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L113-L124","name":"Array.modifyMUnsafe","docLink":"./Init/Data/Array/Basic.html#Array.modifyMUnsafe","doc":""},"Array.modifyM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L127-L134","name":"Array.modifyM","docLink":"./Init/Data/Array/Basic.html#Array.modifyM","doc":""},"Array.modify":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L137-L138","name":"Array.modify","docLink":"./Init/Data/Array/Basic.html#Array.modify","doc":""},"Array.mkEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1839-L1841","name":"Array.mkEmpty","docLink":"./Init/Prelude.html#Array.mkEmpty","doc":"The parameter `c` is the initial capacity "},"Array.mkArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L20-L22","name":"Array.mkArray","docLink":"./Init/Data/Array/Basic.html#Array.mkArray","doc":""},"Array.mapSepElemsM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1048-L1049","name":"Array.mapSepElemsM","docLink":"./Init/Meta.html#Array.mapSepElemsM","doc":""},"Array.mapSepElems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1051-L1052","name":"Array.mapSepElems","docLink":"./Init/Meta.html#Array.mapSepElems","doc":""},"Array.mapMUnsafe.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L256-L266","name":"Array.mapMUnsafe.map","docLink":"./Init/Data/Array/Basic.html#Array.mapMUnsafe.map","doc":""},"Array.mapMUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L254-L267","name":"Array.mapMUnsafe","docLink":"./Init/Data/Array/Basic.html#Array.mapMUnsafe","doc":"See comment at `forInUnsafe` "},"Array.mapM'.go":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/BasicAux.lean#L43-L49","name":"Array.mapM'.go","docLink":"./Init/Data/Array/BasicAux.html#Array.mapM'.go","doc":""},"Array.mapM'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/BasicAux.lean#L40-L50","name":"Array.mapM'","docLink":"./Init/Data/Array/BasicAux.html#Array.mapM'","doc":""},"Array.mapM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L271-L272","name":"Array.mapM","docLink":"./Init/Data/Array/Basic.html#Array.mapM","doc":"Reference implementation for `mapM` "},"Array.mapIdxM.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L276-L285","name":"Array.mapIdxM.map","docLink":"./Init/Data/Array/Basic.html#Array.mapIdxM.map","doc":""},"Array.mapIdxM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L275-L286","name":"Array.mapIdxM","docLink":"./Init/Data/Array/Basic.html#Array.mapIdxM","doc":""},"Array.mapIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L392-L393","name":"Array.mapIdx","docLink":"./Init/Data/Array/Basic.html#Array.mapIdx","doc":""},"Array.map":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L388-L389","name":"Array.map","docLink":"./Init/Data/Array/Basic.html#Array.map","doc":""},"Array.isPrefixOfAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L746-L757","name":"Array.isPrefixOfAux","docLink":"./Init/Data/Array/Basic.html#Array.isPrefixOfAux","doc":""},"Array.isPrefixOf":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L761-L765","name":"Array.isPrefixOf","docLink":"./Init/Data/Array/Basic.html#Array.isPrefixOf","doc":"Return true iff `as` is a prefix of `bs`.\nThat is, `bs = as ++ t` for some `t : List α`."},"Array.isEqv_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/DecidableEq.lean#L41-L42","name":"Array.isEqv_self","docLink":"./Init/Data/Array/DecidableEq.html#Array.isEqv_self","doc":""},"Array.isEqvAux_self":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/DecidableEq.lean#L34-L39","name":"Array.isEqvAux_self","docLink":"./Init/Data/Array/DecidableEq.html#Array.isEqvAux_self","doc":""},"Array.isEqvAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L519-L525","name":"Array.isEqvAux","docLink":"./Init/Data/Array/Basic.html#Array.isEqvAux","doc":""},"Array.isEqv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L527-L531","name":"Array.isEqv","docLink":"./Init/Data/Array/Basic.html#Array.isEqv","doc":""},"Array.isEmpty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L31-L32","name":"Array.isEmpty","docLink":"./Init/Data/Array/Basic.html#Array.isEmpty","doc":""},"Array.instToStringArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L485-L486","name":"Array.instToStringArray","docLink":"./Init/Data/Array/Basic.html#Array.instToStringArray","doc":""},"Array.instReprArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L477-L483","name":"Array.instReprArray","docLink":"./Init/Data/Array/Basic.html#Array.instReprArray","doc":""},"Array.instMembershipArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Mem.lean#L23-L24","name":"Array.instMembershipArray","docLink":"./Init/Data/Array/Mem.html#Array.instMembershipArray","doc":""},"Array.instInhabitedArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L28-L29","name":"Array.instInhabitedArray","docLink":"./Init/Data/Array/Basic.html#Array.instInhabitedArray","doc":""},"Array.instHAppendArrayList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L496-L496","name":"Array.instHAppendArrayList","docLink":"./Init/Data/Array/Basic.html#Array.instHAppendArrayList","doc":""},"Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L44-L45","name":"Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize","docLink":"./Init/Data/Array/Basic.html#Array.instGetElemArrayUSizeLtNatInstLTNatToNatSize","doc":""},"Array.instForInArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L175-L176","name":"Array.instForInArray","docLink":"./Init/Data/Array/Basic.html#Array.instForInArray","doc":""},"Array.instEmptyCollectionArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L27-L27","name":"Array.instEmptyCollectionArray","docLink":"./Init/Data/Array/Basic.html#Array.instEmptyCollectionArray","doc":""},"Array.instDecidableEqArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/DecidableEq.lean#L44-L48","name":"Array.instDecidableEqArray","docLink":"./Init/Data/Array/DecidableEq.html#Array.instDecidableEqArray","doc":""},"Array.instCoeSubarrayArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L133-L133","name":"Array.instCoeSubarrayArray","docLink":"./Init/Data/Array/Subarray.html#Array.instCoeSubarrayArray","doc":""},"Array.instBEqArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L533-L534","name":"Array.instBEqArray","docLink":"./Init/Data/Array/Basic.html#Array.instBEqArray","doc":""},"Array.instAppendArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L491-L491","name":"Array.instAppendArray","docLink":"./Init/Data/Array/Basic.html#Array.instAppendArray","doc":""},"Array.insertionSort.traverse":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/InsertionSort.lean#L12-L19","name":"Array.insertionSort.traverse","docLink":"./Init/Data/Array/InsertionSort.html#Array.insertionSort.traverse","doc":""},"Array.insertionSort.swapLoop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/InsertionSort.lean#L20-L28","name":"Array.insertionSort.swapLoop","docLink":"./Init/Data/Array/InsertionSort.html#Array.insertionSort.swapLoop","doc":""},"Array.insertionSort":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/InsertionSort.lean#L9-L28","name":"Array.insertionSort","docLink":"./Init/Data/Array/InsertionSort.html#Array.insertionSort","doc":""},"Array.insertAtAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L699-L704","name":"Array.insertAtAux","docLink":"./Init/Data/Array/Basic.html#Array.insertAtAux","doc":""},"Array.insertAt":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L709-L713","name":"Array.insertAt","docLink":"./Init/Data/Array/Basic.html#Array.insertAt","doc":"Insert element `a` at position `i`.\nPre: `i < as.size` "},"Array.indexOfAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L623-L629","name":"Array.indexOfAux","docLink":"./Init/Data/Array/Basic.html#Array.indexOfAux","doc":""},"Array.indexOf?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L631-L632","name":"Array.indexOf?","docLink":"./Init/Data/Array/Basic.html#Array.indexOf?","doc":""},"Array.getSepElems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1009-L1009","name":"Array.getSepElems","docLink":"./Init/Meta.html#Array.getSepElems","doc":""},"Array.getMax?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L558-L564","name":"Array.getMax?","docLink":"./Init/Data/Array/Basic.html#Array.getMax?","doc":""},"Array.getLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L57-L59","name":"Array.getLit","docLink":"./Init/Data/Array/Basic.html#Array.getLit","doc":""},"Array.getIdx?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L438-L439","name":"Array.getIdx?","docLink":"./Init/Data/Array/Basic.html#Array.getIdx?","doc":""},"Array.getEvenElems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L466-L471","name":"Array.getEvenElems","docLink":"./Init/Data/Array/Basic.html#Array.getEvenElems","doc":""},"Array.getD":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1854-L1855","name":"Array.getD","docLink":"./Init/Prelude.html#Array.getD","doc":""},"Array.get?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L50-L51","name":"Array.get?","docLink":"./Init/Data/Array/Basic.html#Array.get?","doc":""},"Array.get!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1859-L1860","name":"Array.get!","docLink":"./Init/Prelude.html#Array.get!","doc":"\"Comfortable\" version of `fget`. It performs a bound check at runtime. "},"Array.get":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1851-L1852","name":"Array.get","docLink":"./Init/Prelude.html#Array.get","doc":""},"Array.forRevM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L376-L377","name":"Array.forRevM","docLink":"./Init/Data/Array/Basic.html#Array.forRevM","doc":""},"Array.forM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L372-L373","name":"Array.forM","docLink":"./Init/Data/Array/Basic.html#Array.forM","doc":""},"Array.forInUnsafe.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L150-L157","name":"Array.forInUnsafe.loop","docLink":"./Init/Data/Array/Basic.html#Array.forInUnsafe.loop","doc":""},"Array.forInUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L148-L158","name":"Array.forInUnsafe","docLink":"./Init/Data/Array/Basic.html#Array.forInUnsafe","doc":"We claim this unsafe implementation is correct because an array cannot have more than `usizeSz` elements in our runtime.\n\n  This kind of low level trick can be removed with a little bit of compiler support. For example, if the compiler simplifies `as.size < usizeSz` to true. "},"Array.forIn.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L163-L172","name":"Array.forIn.loop","docLink":"./Init/Data/Array/Basic.html#Array.forIn.loop","doc":""},"Array.forIn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L162-L173","name":"Array.forIn","docLink":"./Init/Data/Array/Basic.html#Array.forIn","doc":"Reference implementation for `forIn` "},"Array.foldrMUnsafe.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L216-L220","name":"Array.foldrMUnsafe.fold","docLink":"./Init/Data/Array/Basic.html#Array.foldrMUnsafe.fold","doc":""},"Array.foldrMUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L215-L229","name":"Array.foldrMUnsafe","docLink":"./Init/Data/Array/Basic.html#Array.foldrMUnsafe","doc":"See comment at `forInUnsafe` "},"Array.foldrM.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L234-L241","name":"Array.foldrM.fold","docLink":"./Init/Data/Array/Basic.html#Array.foldrM.fold","doc":""},"Array.foldrM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L233-L250","name":"Array.foldrM","docLink":"./Init/Data/Array/Basic.html#Array.foldrM","doc":"Reference implementation for `foldrM` "},"Array.foldr":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L384-L385","name":"Array.foldr","docLink":"./Init/Data/Array/Basic.html#Array.foldr","doc":""},"Array.foldlMUnsafe.fold":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L181-L185","name":"Array.foldlMUnsafe.fold","docLink":"./Init/Data/Array/Basic.html#Array.foldlMUnsafe.fold","doc":""},"Array.foldlMUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L180-L192","name":"Array.foldlMUnsafe","docLink":"./Init/Data/Array/Basic.html#Array.foldlMUnsafe","doc":"See comment at `forInUnsafe` "},"Array.foldlM.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L198-L206","name":"Array.foldlM.loop","docLink":"./Init/Data/Array/Basic.html#Array.foldlM.loop","doc":""},"Array.foldlM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L196-L211","name":"Array.foldlM","docLink":"./Init/Data/Array/Basic.html#Array.foldlM","doc":"Reference implementation for `foldlM` "},"Array.foldl":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L380-L381","name":"Array.foldl","docLink":"./Init/Data/Array/Basic.html#Array.foldl","doc":""},"Array.findSomeRevM?.find":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L355-L364","name":"Array.findSomeRevM?.find","docLink":"./Init/Data/Array/Basic.html#Array.findSomeRevM?.find","doc":""},"Array.findSomeRevM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L354-L365","name":"Array.findSomeRevM?","docLink":"./Init/Data/Array/Basic.html#Array.findSomeRevM?","doc":""},"Array.findSomeRev?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L410-L411","name":"Array.findSomeRev?","docLink":"./Init/Data/Array/Basic.html#Array.findSomeRev?","doc":""},"Array.findSomeM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L289-L294","name":"Array.findSomeM?","docLink":"./Init/Data/Array/Basic.html#Array.findSomeM?","doc":""},"Array.findSome?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L400-L401","name":"Array.findSome?","docLink":"./Init/Data/Array/Basic.html#Array.findSome?","doc":""},"Array.findSome!":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L404-L407","name":"Array.findSome!","docLink":"./Init/Data/Array/Basic.html#Array.findSome!","doc":""},"Array.findRevM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L368-L369","name":"Array.findRevM?","docLink":"./Init/Data/Array/Basic.html#Array.findRevM?","doc":""},"Array.findRev?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L414-L415","name":"Array.findRev?","docLink":"./Init/Data/Array/Basic.html#Array.findRev?","doc":""},"Array.findM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L297-L301","name":"Array.findM?","docLink":"./Init/Data/Array/Basic.html#Array.findM?","doc":""},"Array.findIdxM?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L304-L310","name":"Array.findIdxM?","docLink":"./Init/Data/Array/Basic.html#Array.findIdxM?","doc":""},"Array.findIdx?.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L419-L435","name":"Array.findIdx?.loop","docLink":"./Init/Data/Array/Basic.html#Array.findIdx?.loop","doc":""},"Array.findIdx?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L418-L436","name":"Array.findIdx?","docLink":"./Init/Data/Array/Basic.html#Array.findIdx?","doc":""},"Array.find?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L396-L397","name":"Array.find?","docLink":"./Init/Data/Array/Basic.html#Array.find?","doc":""},"Array.filterSepElemsM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1031-L1032","name":"Array.filterSepElemsM","docLink":"./Init/Meta.html#Array.filterSepElemsM","doc":""},"Array.filterSepElems":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Meta.lean#L1034-L1035","name":"Array.filterSepElems","docLink":"./Init/Meta.html#Array.filterSepElems","doc":""},"Array.filterMapM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L547-L551","name":"Array.filterMapM","docLink":"./Init/Data/Array/Basic.html#Array.filterMapM","doc":""},"Array.filterMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L554-L555","name":"Array.filterMap","docLink":"./Init/Data/Array/Basic.html#Array.filterMap","doc":""},"Array.filterM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L542-L544","name":"Array.filterM","docLink":"./Init/Data/Array/Basic.html#Array.filterM","doc":""},"Array.filter":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L537-L539","name":"Array.filter","docLink":"./Init/Data/Array/Basic.html#Array.filter","doc":""},"Array.feraseIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L676-L677","name":"Array.feraseIdx","docLink":"./Init/Data/Array/Basic.html#Array.feraseIdx","doc":""},"Array.extract":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Subarray.lean#L130-L131","name":"Array.extract","docLink":"./Init/Data/Array/Subarray.html#Array.extract","doc":""},"Array.extLit":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L612-L616","name":"Array.extLit","docLink":"./Init/Data/Array/Basic.html#Array.extLit","doc":""},"Array.ext.extAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L581-L605","name":"Array.ext.extAux","docLink":"./Init/Data/Array/Basic.html#Array.ext.extAux","doc":""},"Array.ext'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L722-L723","name":"Array.ext'","docLink":"./Init/Data/Array/Basic.html#Array.ext'","doc":""},"Array.ext":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L577-L610","name":"Array.ext","docLink":"./Init/Data/Array/Basic.html#Array.ext","doc":""},"Array.eraseIdxSzAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L682-L689","name":"Array.eraseIdxSzAux","docLink":"./Init/Data/Array/Basic.html#Array.eraseIdxSzAux","doc":""},"Array.eraseIdxAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L666-L674","name":"Array.eraseIdxAux","docLink":"./Init/Data/Array/Basic.html#Array.eraseIdxAux","doc":""},"Array.eraseIdx'":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L691-L692","name":"Array.eraseIdx'","docLink":"./Init/Data/Array/Basic.html#Array.eraseIdx'","doc":""},"Array.eraseIdx":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L679-L680","name":"Array.eraseIdx","docLink":"./Init/Data/Array/Basic.html#Array.eraseIdx","doc":""},"Array.erase":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L694-L697","name":"Array.erase","docLink":"./Init/Data/Array/Basic.html#Array.erase","doc":""},"Array.eq_of_isEqvAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/DecidableEq.lean#L12-L23","name":"Array.eq_of_isEqvAux","docLink":"./Init/Data/Array/DecidableEq.html#Array.eq_of_isEqvAux","doc":""},"Array.eq_of_isEqv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/DecidableEq.lean#L25-L32","name":"Array.eq_of_isEqv","docLink":"./Init/Data/Array/DecidableEq.html#Array.eq_of_isEqv","doc":""},"Array.empty":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1843-L1844","name":"Array.empty","docLink":"./Init/Prelude.html#Array.empty","doc":""},"Array.elem":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L452-L453","name":"Array.elem","docLink":"./Init/Data/Array/Basic.html#Array.elem","doc":""},"Array.data_toArray":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L728-L729","name":"Array.data_toArray","docLink":"./Init/Data/Array/Basic.html#Array.data_toArray","doc":""},"Array.contains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L449-L450","name":"Array.contains","docLink":"./Init/Data/Array/Basic.html#Array.contains","doc":""},"Array.concatMapM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L499-L500","name":"Array.concatMapM","docLink":"./Init/Data/Array/Basic.html#Array.concatMapM","doc":""},"Array.concatMap":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L503-L504","name":"Array.concatMap","docLink":"./Init/Data/Array/Basic.html#Array.concatMap","doc":""},"Array.binSearchContains":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/BinSearch.lean#L35-L40","name":"Array.binSearchContains","docLink":"./Init/Data/Array/BinSearch.html#Array.binSearchContains","doc":""},"Array.binSearchAux":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/BinSearch.lean#L16-L26","name":"Array.binSearchAux","docLink":"./Init/Data/Array/BinSearch.html#Array.binSearchAux","doc":""},"Array.binSearch":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/BinSearch.lean#L28-L33","name":"Array.binSearch","docLink":"./Init/Data/Array/BinSearch.html#Array.binSearch","doc":""},"Array.binInsertM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/BinSearch.lean#L60-L71","name":"Array.binInsertM","docLink":"./Init/Data/Array/BinSearch.html#Array.binInsertM","doc":""},"Array.binInsert":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/BinSearch.lean#L73-L74","name":"Array.binInsert","docLink":"./Init/Data/Array/BinSearch.html#Array.binInsert","doc":""},"Array.back?":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L53-L54","name":"Array.back?","docLink":"./Init/Data/Array/Basic.html#Array.back?","doc":""},"Array.back":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L47-L48","name":"Array.back","docLink":"./Init/Data/Array/Basic.html#Array.back","doc":""},"Array.appendList":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L493-L494","name":"Array.appendList","docLink":"./Init/Data/Array/Basic.html#Array.appendList","doc":""},"Array.appendCore.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1884-L1890","name":"Array.appendCore.loop","docLink":"./Init/Prelude.html#Array.appendCore.loop","doc":""},"Array.appendCore":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1883-L1891","name":"Array.appendCore","docLink":"./Init/Prelude.html#Array.appendCore","doc":""},"Array.append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L488-L489","name":"Array.append","docLink":"./Init/Data/Array/Basic.html#Array.append","doc":""},"Array.anyMUnsafe.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L314-L321","name":"Array.anyMUnsafe.any","docLink":"./Init/Data/Array/Basic.html#Array.anyMUnsafe.any","doc":""},"Array.anyMUnsafe":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L313-L328","name":"Array.anyMUnsafe","docLink":"./Init/Data/Array/Basic.html#Array.anyMUnsafe","doc":""},"Array.anyM.loop":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L333-L341","name":"Array.anyM.loop","docLink":"./Init/Data/Array/Basic.html#Array.anyM.loop","doc":""},"Array.anyM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L331-L347","name":"Array.anyM","docLink":"./Init/Data/Array/Basic.html#Array.anyM","doc":""},"Array.any":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L442-L443","name":"Array.any","docLink":"./Init/Data/Array/Basic.html#Array.any","doc":""},"Array.allM":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L350-L351","name":"Array.allM","docLink":"./Init/Data/Array/Basic.html#Array.allM","doc":""},"Array.allDiff":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L780-L781","name":"Array.allDiff","docLink":"./Init/Data/Array/Basic.html#Array.allDiff","doc":""},"Array.all":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Data/Array/Basic.lean#L446-L447","name":"Array.all","docLink":"./Init/Data/Array/Basic.html#Array.all","doc":""},"Array":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1831-L1832","name":"Array","docLink":"./Init/Prelude.html#Array","doc":"The Compiler has special support for arrays.\nThey are implemented using dynamic arrays: https://en.wikipedia.org/wiki/Dynamic_array\n"},"Applicative":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1930-L1933","name":"Applicative","docLink":"./Init/Prelude.html#Applicative","doc":""},"Append":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1061-L1062","name":"Append","docLink":"./Init/Prelude.html#Append","doc":""},"Antisymm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L1107-L1108","name":"Antisymm","docLink":"./Init/Core.html#Antisymm","doc":""},"AndThen":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1067-L1068","name":"AndThen","docLink":"./Init/Prelude.html#AndThen","doc":""},"AndOp":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1070-L1071","name":"AndOp","docLink":"./Init/Prelude.html#AndOp","doc":""},"And.comm":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Core.lean#L360-L361","name":"And.comm","docLink":"./Init/Core.html#And.comm","doc":""},"And":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L495-L503","name":"And","docLink":"./Init/Prelude.html#And","doc":"`And a b`, or `a ∧ b`, is the conjunction of propositions. It can be\nconstructed and destructed like a pair: if `ha : a` and `hb : b` then\n`⟨ha, hb⟩ : a ∧ b`, and if `h : a ∧ b` then `h.left : a` and `h.right : b`.\n"},"Alternative":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L21-L23","name":"Alternative","docLink":"./Init/Control/Basic.html#Alternative","doc":""},"Add":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Prelude.lean#L1040-L1041","name":"Add","docLink":"./Init/Prelude.html#Add","doc":""},"Acc.ndrecOn":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L20-L24","name":"Acc.ndrecOn","docLink":"./Init/WF.html#Acc.ndrecOn","doc":""},"Acc.ndrec":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L15-L18","name":"Acc.ndrec","docLink":"./Init/WF.html#Acc.ndrec","doc":""},"Acc.inv":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L29-L30","name":"Acc.inv","docLink":"./Init/WF.html#Acc.inv","doc":""},"Acc":{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/WF.lean#L12-L13","name":"Acc","docLink":"./Init/WF.html#Acc","doc":""}}}