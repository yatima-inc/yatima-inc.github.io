{"name":"Lean.Elab.PreDefinition.WF.PackMutual","instances":[],"imports":["Init","Lean.Elab.PreDefinition.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L173-L187","name":"Lean.Elab.WF.packMutual","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.packMutual","doc":"If `preDefs.size > 1`, combine different functions in a single one using `PSum`.\n  This method assumes all `preDefs` have arity 1, and have already been processed using `packDomain`.\n  Here is a small example. Suppose the input is\n  ```\n  f x :=\n    match x.2.1, x.2.2.1, x.2.2.2 with\n    | 0, a, b => a\n    | Nat.succ n, a, b => (g ⟨x.1, n, a, b⟩).fst\n  g x :=\n    match x.2.1, x.2.2.1, x.2.2.2 with\n    | 0, a, b => (a, b)\n    | Nat.succ n, a, b => (h ⟨x.1, n, a, b⟩, a)\n  h x =>\n    match x.2.1, x.2.2.1, x.2.2.2 with\n    | 0, a, b => b\n    | Nat.succ n, a, b => f ⟨x.1, n, a, b⟩\n  ```\n  this method produces the following pre definition\n  ```\n  f._mutual x :=\n    PSum.casesOn x\n      (fun val =>\n        match val.2.1, val.2.2.1, val.2.2.2 with\n        | 0, a, b => a\n        | Nat.succ n, a, b => (f._mutual (PSum.inr (PSum.inl ⟨val.1, n, a, b⟩))).fst\n      fun val =>\n        PSum.casesOn val\n          (fun val =>\n            match val.2.1, val.2.2.1, val.2.2.2 with\n            | 0, a, b => (a, b)\n            | Nat.succ n, a, b => (f._mutual (PSum.inr (PSum.inr ⟨val.1, n, a, b⟩)), a)\n          fun val =>\n            match val.2.1, val.2.2.1, val.2.2.2 with\n            | 0, a, b => b\n            | Nat.succ n, a, b =>\n              f._mutual (PSum.inl ⟨val.1, n, a, b⟩)\n  ```\n\n  Remark: `preDefsOriginal` is used for error reporting, it contains the definitions before applying `packDomain`.\n "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L125-L130","name":"Lean.Elab.WF.withFixedPrefix.go","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.withFixedPrefix.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L122-L130","name":"Lean.Elab.WF.withFixedPrefix","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.withFixedPrefix","doc":""}]}