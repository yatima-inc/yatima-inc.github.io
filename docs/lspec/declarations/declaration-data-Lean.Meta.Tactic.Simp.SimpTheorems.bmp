{"name":"Lean.Meta.Tactic.Simp.SimpTheorems","instances":[{"typeNames":["Lean.Meta.SimpTheorem"],"name":"Lean.Meta.instInhabitedSimpTheorem","className":"Inhabited"},{"typeNames":["Lean.Meta.SimpTheorem"],"name":"Lean.Meta.instToFormatSimpTheorem","className":"Std.ToFormat"},{"typeNames":["Lean.Meta.SimpTheorem"],"name":"Lean.Meta.instToMessageDataSimpTheorem","className":"Lean.ToMessageData"},{"typeNames":["Lean.Meta.SimpTheorem"],"name":"Lean.Meta.instBEqSimpTheorem","className":"BEq"},{"typeNames":["Lean.Meta.SimpTheorems"],"name":"Lean.Meta.instInhabitedSimpTheorems","className":"Inhabited"},{"typeNames":["Lean.Meta.SimpEntry"],"name":"Lean.Meta.instInhabitedSimpEntry","className":"Inhabited"}],"imports":["Init","Lean.ScopedEnvExtension","Lean.Util.Recognizers","Lean.Meta.DiscrTree","Lean.Meta.AppBuilder","Lean.Meta.Eqns","Lean.Meta.Tactic.AuxLemma"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L418-L419","name":"Lean.Parser.Command.registerSimpAttr","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Parser.Command.registerSimpAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L415-L416","name":"Lean.Meta.SimpTheoremsArray.isDeclToUnfold","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray.isDeclToUnfold","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L412-L413","name":"Lean.Meta.SimpTheoremsArray.isErased","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray.isErased","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L409-L410","name":"Lean.Meta.SimpTheoremsArray.eraseTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray.eraseTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L402-L407","name":"Lean.Meta.SimpTheoremsArray.addTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray.addTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L400-L400","name":"Lean.Meta.SimpTheoremsArray","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheoremsArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L389-L398","name":"Lean.Meta.SimpTheorems.addDeclToUnfold","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.addDeclToUnfold","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L376-L387","name":"Lean.Meta.SimpTheorems.add.getName?","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.add.getName?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L369-L387","name":"Lean.Meta.SimpTheorems.add","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.add","doc":"Auxiliary method for adding a local simp theorem to a `SimpTheorems` datastructure. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L364-L366","name":"Lean.Meta.mkSimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.mkSimpTheorems","doc":"Auxiliary method for creating simp theorems from a proof term `val`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L346-L355","name":"Lean.Meta.SimpTheorem.getValue","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorem.getValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L341-L344","name":"Lean.Meta.SimpTheorems.addConst","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.addConst","doc":"Auxiliary method for adding a global declaration to a `SimpTheorems` datastructure. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L337-L338","name":"Lean.Meta.getSimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.getSimpTheorems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L334-L335","name":"Lean.Meta.getSimpExtension?","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.getSimpExtension?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L332-L332","name":"Lean.Meta.simpExtension","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.simpExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L324-L330","name":"Lean.Meta.registerSimpAttr","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.registerSimpAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L322-L322","name":"Lean.Meta.simpExtensionMapRef","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.simpExtensionMapRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L320-L320","name":"Lean.Meta.SimpExtensionMap","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpExtensionMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L309-L318","name":"Lean.Meta.mkSimpExt","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.mkSimpExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L277-L307","name":"Lean.Meta.mkSimpAttr","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.mkSimpAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L272-L275","name":"Lean.Meta.addSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.addSimpTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L269-L270","name":"Lean.Meta.SimpExtension.getTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpExtension.getTheorems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L267-L267","name":"Lean.Meta.SimpExtension","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L265-L265","name":"Lean.Meta.instInhabitedSimpEntry","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instInhabitedSimpEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L261-L265","name":"Lean.Meta.SimpEntry","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L138-L141","name":"Lean.Meta.SimpTheorems.erase","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.erase","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L131-L136","name":"Lean.Meta.SimpTheorems.eraseCore","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.eraseCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L128-L129","name":"Lean.Meta.SimpTheorems.registerDeclToUnfoldThms","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.registerDeclToUnfoldThms","doc":"Register the equational theorems for the given definition. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L124-L125","name":"Lean.Meta.SimpTheorems.isLemma","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.isLemma","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L121-L122","name":"Lean.Meta.SimpTheorems.isDeclToUnfold","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.isDeclToUnfold","doc":"Return `true` if `declName` is tagged to be unfolded using `unfoldDefinition?` (i.e., without using equational theorems). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L117-L118","name":"Lean.Meta.SimpTheorems.addDeclToUnfoldCore","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems.addDeclToUnfoldCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L112-L115","name":"Lean.Meta.addSimpTheoremEntry.updateLemmaNames","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.addSimpTheoremEntry.updateLemmaNames","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L106-L115","name":"Lean.Meta.addSimpTheoremEntry","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.addSimpTheoremEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L104-L104","name":"Lean.Meta.instInhabitedSimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instInhabitedSimpTheorems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L97-L104","name":"Lean.Meta.SimpTheorems","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L94-L95","name":"Lean.Meta.instBEqSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instBEqSimpTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L91-L92","name":"Lean.Meta.instToMessageDataSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instToMessageDataSimpTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L84-L89","name":"Lean.Meta.instToFormatSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instToFormatSimpTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L78-L82","name":"Lean.Meta.isRflProof","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.isRflProof","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L73-L75","name":"Lean.Meta.isRflTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.isRflTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L51-L71","name":"Lean.Meta.isRflProofCore","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.isRflProofCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L45-L48","name":"Lean.Meta.SimpTheorem.getName","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorem.getName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L43-L43","name":"Lean.Meta.instInhabitedSimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.instInhabitedSimpTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Simp/SimpTheorems.lean#L23-L43","name":"Lean.Meta.SimpTheorem","docLink":"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorem","doc":"The fields `levelParams` and `proof` are used to encode the proof of the simp theorem.\n  If the `proof` is a global declaration `c`, we store `Expr.const c []` at `proof` without the universe levels, and `levelParams` is set to `#[]`\n  When using the lemma, we create fresh universe metavariables.\n  Motivation: most simp theorems are global declarations, and this approach is faster and saves memory.\n\n  The field `levelParams` is not empty only when we elaborate an expression provided by the user, and it contains universe metavariables.\n  Then, we use `abstractMVars` to abstract the universe metavariables and create new fresh universe parameters that are stored at the field `levelParams`.\n"}]}