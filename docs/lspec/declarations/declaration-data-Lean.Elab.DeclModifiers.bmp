{"name":"Lean.Elab.DeclModifiers","instances":[{"typeNames":["Lean.Elab.Visibility"],"name":"Lean.Elab.instInhabitedVisibility","className":"Inhabited"},{"typeNames":["Lean.Elab.Visibility"],"name":"Lean.Elab.instToStringVisibility","className":"ToString"},{"typeNames":["Lean.Elab.RecKind"],"name":"Lean.Elab.instInhabitedRecKind","className":"Inhabited"},{"typeNames":["Lean.Elab.Modifiers"],"name":"Lean.Elab.instInhabitedModifiers","className":"Inhabited"},{"typeNames":["Lean.Elab.Modifiers"],"name":"Lean.Elab.instToFormatModifiers","className":"Std.ToFormat"},{"typeNames":["Lean.Elab.Modifiers"],"name":"Lean.Elab.instToStringModifiers","className":"ToString"}],"imports":["Init","Lean.Modifiers","Lean.DocString","Lean.Structure","Lean.Elab.Attributes","Lean.Elab.Exception","Lean.Elab.DeclUtil"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L229-L246","name":"Lean.Elab.expandDeclId","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandDeclId","doc":"Given a declaration identifier (e.g., `ident (\".{\" ident,+ \"}\")?`) that may contain explicit universe parameters\n- Ensure the new universe parameters do not shadow universe parameters declared using `universe` command.\n- Create the fully qualified named for the declaration using the current namespace, and given `modifiers`\n- Create a short version for recursively referring to the declaration. Recall that the `protected` modifier affects the generation of the short name.\n\nThe result also contains the universe parameters provided using `universe` command, and the `.{...}` notation.\n\nThis commands also stores the doc string stored in `modifiers`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L211-L217","name":"Lean.Elab.ExpandDeclIdResult","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult","doc":"`expandDeclId` resulting type. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L202-L208","name":"Lean.Elab.expandDeclIdCore","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandDeclIdCore","doc":"`declId` is of the form\n```\nleading_parser ident >> optional (\".{\" >> sepBy1 ident \", \" >> \"}\")\n```\nbut we also accept a single identifier to users to make macro writing more convenient .\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L173-L193","name":"Lean.Elab.mkDeclName","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.mkDeclName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L163-L171","name":"Lean.Elab.checkIfShadowingStructureField","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.checkIfShadowingStructureField","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L149-L161","name":"Lean.Elab.applyVisibility","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.applyVisibility","doc":"Ensure the function has not already been declared, and apply the given visibility setting to `declName`.\nIf `private`, return the updated name using our internal encoding for private names.\nIf `protected`, register `declName` as protected in the environment.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L112-L142","name":"Lean.Elab.elabModifiers","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.elabModifiers","doc":"Elaborate declaration modifiers (i.e., attributes, `partial`, `private`, `proctected`, `unsafe`, `noncomputable`, doc string)"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L100-L105","name":"Lean.Elab.expandOptDocComment?","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandOptDocComment?","doc":"Retrieve doc string from `stx` of the form `(docComment)?`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L95-L95","name":"Lean.Elab.instToStringModifiers","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToStringModifiers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L80-L93","name":"Lean.Elab.instToFormatModifiers","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToFormatModifiers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L77-L78","name":"Lean.Elab.Modifiers.addAttribute","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.addAttribute","doc":"Store `attr` in `modifiers` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L72-L74","name":"Lean.Elab.Modifiers.isNonrec","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isNonrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L68-L70","name":"Lean.Elab.Modifiers.isPartial","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isPartial","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L64-L66","name":"Lean.Elab.Modifiers.isProtected","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isProtected","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L60-L62","name":"Lean.Elab.Modifiers.isPrivate","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isPrivate","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L58-L58","name":"Lean.Elab.instInhabitedModifiers","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedModifiers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L51-L58","name":"Lean.Elab.Modifiers","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers","doc":"Flags and data added to declarations (eg docstrings, attributes, `private`, `unsafe`, `partial`, ...). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L48-L48","name":"Lean.Elab.instInhabitedRecKind","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedRecKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L46-L48","name":"Lean.Elab.RecKind","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind","doc":"Whether a declaration is default, partial or nonrec. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L39-L43","name":"Lean.Elab.instToStringVisibility","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToStringVisibility","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L37-L37","name":"Lean.Elab.instInhabitedVisibility","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedVisibility","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L35-L37","name":"Lean.Elab.Visibility","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility","doc":"Declaration visibility modifier. That is, whether a declaration is regular, protected or private. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/DeclModifiers.lean#L20-L32","name":"Lean.Elab.checkNotAlreadyDeclared","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.checkNotAlreadyDeclared","doc":"Ensure the environment does not contain a declaration with name `declName`.\nRecall that a private declaration cannot shadow a non-private one and vice-versa, although\nthey internally have different names.\n"}]}