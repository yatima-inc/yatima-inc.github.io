{"name":"Lean.Compiler.Decl","instances":[],"imports":["Init","Lean.Meta.Transform","Lean.Meta.Check","Lean.Compiler.LCNF"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Decl.lean#L62-L63","name":"Lean.Compiler.Decl.check","docLink":"./Lean/Compiler/Decl.html#Lean.Compiler.Decl.check","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Decl.lean#L51-L60","name":"Lean.Compiler.toDecl","docLink":"./Lean/Compiler/Decl.html#Lean.Compiler.toDecl","doc":"Convert the given declaration from the Lean environment into `Decl`.\n\nRemarks:\n- If the declaration has an unsafe-rec version, we use it.\n- We eta-expand the declaration value.\n- We expand declarations tagged with the `[MacroInline]` attribute\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Decl.lean#L23-L28","name":"Lean.Compiler.macroInline","docLink":"./Lean/Compiler/Decl.html#Lean.Compiler.macroInline","doc":"Inline constants tagged with the `[macroInline]` attribute occurring in `e`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Compiler/Decl.lean#L15-L18","name":"Lean.Compiler.Decl","docLink":"./Lean/Compiler/Decl.html#Lean.Compiler.Decl","doc":"Declaration being processed by the Lean to Lean compiler passes.\n"}]}