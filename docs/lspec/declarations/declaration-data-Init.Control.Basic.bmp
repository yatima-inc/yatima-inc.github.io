{"name":"Init.Control.Basic","instances":[{"typeNames":[],"name":"instOrElse","className":"OrElse"},{"typeNames":["Bool"],"name":"instToBoolBool","className":"ToBool"},{"typeNames":[],"name":"instMonadControlT","className":"MonadControlT"},{"typeNames":[],"name":"instMonadControlT_1","className":"MonadControlT"}],"imports":["Init.Core"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L227-L228","name":"ForM","docLink":"./Init/Control/Basic.html#ForM","doc":"Typeclass for the polymorphic `forM` operation described in the \"do unchained\" paper.\nRemark:\n- `γ` is a \"container\" type of elements of type `α`.\n- `α` is treated as an output parameter by the typeclass resolution procedure.\n  That is, it tries to find an instance using only `m` and `γ`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L216-L218","name":"control","docLink":"./Init/Control/Basic.html#control","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L211-L213","name":"controlAt","docLink":"./Init/Control/Basic.html#controlAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L205-L208","name":"instMonadControlT_1","docLink":"./Init/Control/Basic.html#instMonadControlT_1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L200-L203","name":"instMonadControlT","docLink":"./Init/Control/Basic.html#instMonadControlT","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L193-L196","name":"MonadControlT","docLink":"./Init/Control/Basic.html#MonadControlT","doc":"Transitive closure of MonadControl. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L187-L190","name":"MonadControl","docLink":"./Init/Control/Basic.html#MonadControl","doc":"MonadControl is a way of stating that the monad `m` can be 'run inside' the monad `n`.\n\nThis is the same as [`MonadBaseControl`](https://hackage.haskell.org/package/monad-control-1.0.3.1/docs/Control-Monad-Trans-Control.html#t:MonadBaseControl) in Haskell.\nTo learn about `MonadControl`, see the comment above this docstring.\n\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L66-L67","name":"notM","docLink":"./Init/Control/Basic.html#notM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L64-L64","name":"«term_<&&>_»","docLink":"./Init/Control/Basic.html#«term_<&&>_»","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L58-L62","name":"andM","docLink":"./Init/Control/Basic.html#andM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L56-L56","name":"«term_<||>_»","docLink":"./Init/Control/Basic.html#«term_<||>_»","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L50-L54","name":"orM","docLink":"./Init/Control/Basic.html#orM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L45-L48","name":"bool","docLink":"./Init/Control/Basic.html#bool","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L42-L43","name":"instToBoolBool","docLink":"./Init/Control/Basic.html#instToBoolBool","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L37-L38","name":"ToBool","docLink":"./Init/Control/Basic.html#ToBool","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L34-L35","name":"optional","docLink":"./Init/Control/Basic.html#optional","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L31-L32","name":"guard","docLink":"./Init/Control/Basic.html#guard","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L25-L25","name":"instOrElse","docLink":"./Init/Control/Basic.html#instOrElse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L21-L23","name":"Alternative","docLink":"./Init/Control/Basic.html#Alternative","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L16-L17","name":"Functor.discard","docLink":"./Init/Control/Basic.html#Functor.discard","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L14-L14","name":"«term_<&>_»","docLink":"./Init/Control/Basic.html#«term_<&>_»","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Basic.lean#L11-L12","name":"Functor.mapRev","docLink":"./Init/Control/Basic.html#Functor.mapRev","doc":""}]}