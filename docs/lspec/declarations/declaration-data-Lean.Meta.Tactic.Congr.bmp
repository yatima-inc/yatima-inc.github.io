{"name":"Lean.Meta.Tactic.Congr","instances":[],"imports":["Init","Lean.Meta.CongrTheorems","Lean.Meta.Tactic.Assert","Lean.Meta.Tactic.Apply","Lean.Meta.Tactic.Refl","Lean.Meta.Tactic.Assumption"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Congr.lean#L102-L108","name":"Lean.MVarId.congrN.go","docLink":"./Lean/Meta/Tactic/Congr.html#Lean.MVarId.congrN.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Congr.lean#L95-L108","name":"Lean.MVarId.congrN","docLink":"./Lean/Meta/Tactic/Congr.html#Lean.MVarId.congrN","doc":"Applies `congr` recursively up to depth `n`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Congr.lean#L78-L90","name":"Lean.MVarId.congr","docLink":"./Lean/Meta/Tactic/Congr.html#Lean.MVarId.congr","doc":"Given a goal of the form `⊢ f as = f bs`, `⊢ (p → q) = (p' → q')`, or `⊢ HEq (f as) (f bs)`, try to apply congruence.\nIt takes proof irrelevance into account, the fact that `Decidable p` is a subsingleton.\nIf `closeEasy := true`, it tries to close new subgoals using `Eq.refl`, `HEq.refl`, and `assumption`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Congr.lean#L68-L71","name":"Lean.MVarId.congrImplies?","docLink":"./Lean/Meta/Tactic/Congr.html#Lean.MVarId.congrImplies?","doc":"Try to apply `implies_congr`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Congr.lean#L55-L63","name":"Lean.MVarId.hcongr?","docLink":"./Lean/Meta/Tactic/Congr.html#Lean.MVarId.hcongr?","doc":"Try to apply a `hcongr` congruence theorem, and then tries to close resulting goals\nusing `Eq.refl`, `HEq.refl`, and assumption.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Congr.lean#L41-L49","name":"Lean.MVarId.congr?","docLink":"./Lean/Meta/Tactic/Congr.html#Lean.MVarId.congr?","doc":"Try to apply a `simp` congruence theorem.\n"}]}