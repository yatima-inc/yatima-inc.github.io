{"name":"Lean.Meta.Tactic.Generalize","instances":[{"typeNames":["Lean.Meta.GeneralizeArg"],"name":"Lean.Meta.instInhabitedGeneralizeArg","className":"Inhabited"}],"imports":["Init","Lean.Meta.KAbstract","Lean.Meta.Tactic.Util","Lean.Meta.Tactic.Intro"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Generalize.lean#L79-L80","name":"Lean.Meta.generalize","docLink":"./Lean/Meta/Tactic/Generalize.html#Lean.Meta.generalize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Generalize.lean#L75-L76","name":"Lean.MVarId.generalize","docLink":"./Lean/Meta/Tactic/Generalize.html#Lean.MVarId.generalize","doc":"Telescopic `generalize` tactic. It can simultaneously generalize many terms.\nIt uses `kabstract` to occurrences of the terms that need to be generalized.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Generalize.lean#L17-L17","name":"Lean.Meta.instInhabitedGeneralizeArg","docLink":"./Lean/Meta/Tactic/Generalize.html#Lean.Meta.instInhabitedGeneralizeArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Meta/Tactic/Generalize.lean#L13-L17","name":"Lean.Meta.GeneralizeArg","docLink":"./Lean/Meta/Tactic/Generalize.html#Lean.Meta.GeneralizeArg","doc":"The `generalize` tactic takes arguments of the form `h : e = x` "}]}