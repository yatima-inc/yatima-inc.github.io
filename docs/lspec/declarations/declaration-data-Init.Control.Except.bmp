{"name":"Init.Control.Except","instances":[{"typeNames":["Except"],"name":"Except.instMonadExcept","className":"Monad"},{"typeNames":["Except","ExceptT"],"name":"ExceptT.instMonadLiftExceptExceptT","className":"MonadLift"},{"typeNames":["ExceptT"],"name":"ExceptT.instMonadLiftExceptT","className":"MonadLift"},{"typeNames":["ExceptT"],"name":"ExceptT.instMonadFunctorExceptT","className":"MonadFunctor"},{"typeNames":["ExceptT"],"name":"ExceptT.instMonadExceptT","className":"Monad"},{"typeNames":["ExceptT"],"name":"instMonadExceptOfExceptT","className":"MonadExceptOf"},{"typeNames":["ExceptT"],"name":"instMonadExceptOfExceptT_1","className":"MonadExceptOf"},{"typeNames":["ExceptT"],"name":"instInhabitedExceptT","className":"Inhabited"},{"typeNames":["Except"],"name":"instMonadExceptOfExcept","className":"MonadExceptOf"},{"typeNames":["ExceptT"],"name":"instMonadControlExceptT","className":"MonadControl"},{"typeNames":["Id"],"name":"Id.finally","className":"MonadFinally"},{"typeNames":["ExceptT"],"name":"ExceptT.finally","className":"MonadFinally"}],"imports":["Init.Control.Basic","Init.Control.Id","Init.Coe"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L171-L179","name":"ExceptT.finally","docLink":"./Init/Control/Except.html#ExceptT.finally","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L165-L169","name":"Id.finally","docLink":"./Init/Control/Except.html#Id.finally","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L161-L163","name":"tryFinally","docLink":"./Init/Control/Except.html#tryFinally","doc":"Execute `x` and then execute `finalizer` even if `x` threw an exception "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L150-L156","name":"MonadFinally","docLink":"./Init/Control/Except.html#MonadFinally","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L145-L148","name":"instMonadControlExceptT","docLink":"./Init/Control/Except.html#instMonadControlExceptT","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L141-L143","name":"liftExcept","docLink":"./Init/Control/Except.html#liftExcept","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L138-L139","name":"observing","docLink":"./Init/Control/Except.html#observing","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L133-L134","name":"MonadExcept.orelse'","docLink":"./Init/Control/Except.html#MonadExcept.orelse'","doc":"Alternative orelse operator that allows to select which exception should be used.\nThe default is to use the first exception since the standard `orelse` uses the second. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L124-L126","name":"instMonadExceptOfExcept","docLink":"./Init/Control/Except.html#instMonadExceptOfExcept","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L121-L122","name":"instInhabitedExceptT","docLink":"./Init/Control/Except.html#instInhabitedExceptT","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L117-L119","name":"instMonadExceptOfExceptT_1","docLink":"./Init/Control/Except.html#instMonadExceptOfExceptT_1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L113-L115","name":"instMonadExceptOfExceptT","docLink":"./Init/Control/Except.html#instMonadExceptOfExceptT","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L108-L109","name":"ExceptT.adapt","docLink":"./Init/Control/Except.html#ExceptT.adapt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L103-L106","name":"ExceptT.instMonadExceptT","docLink":"./Init/Control/Except.html#ExceptT.instMonadExceptT","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L101-L101","name":"ExceptT.instMonadFunctorExceptT","docLink":"./Init/Control/Except.html#ExceptT.instMonadFunctorExceptT","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L96-L99","name":"ExceptT.tryCatch","docLink":"./Init/Control/Except.html#ExceptT.tryCatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L94-L94","name":"ExceptT.instMonadLiftExceptT","docLink":"./Init/Control/Except.html#ExceptT.instMonadLiftExceptT","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L93-L93","name":"ExceptT.instMonadLiftExceptExceptT","docLink":"./Init/Control/Except.html#ExceptT.instMonadLiftExceptExceptT","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L90-L91","name":"ExceptT.lift","docLink":"./Init/Control/Except.html#ExceptT.lift","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L85-L88","name":"ExceptT.map","docLink":"./Init/Control/Except.html#ExceptT.map","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L82-L83","name":"ExceptT.bind","docLink":"./Init/Control/Except.html#ExceptT.bind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L78-L80","name":"ExceptT.bindCont","docLink":"./Init/Control/Except.html#ExceptT.bindCont","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L75-L76","name":"ExceptT.pure","docLink":"./Init/Control/Except.html#ExceptT.pure","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L69-L69","name":"ExceptT.run","docLink":"./Init/Control/Except.html#ExceptT.run","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L68-L68","name":"ExceptT.mk","docLink":"./Init/Control/Except.html#ExceptT.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L65-L66","name":"ExceptT","docLink":"./Init/Control/Except.html#ExceptT","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L58-L61","name":"Except.instMonadExcept","docLink":"./Init/Control/Except.html#Except.instMonadExcept","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L53-L56","name":"Except.orElseLazy","docLink":"./Init/Control/Except.html#Except.orElseLazy","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L48-L51","name":"Except.tryCatch","docLink":"./Init/Control/Except.html#Except.tryCatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L44-L46","name":"Except.toOption","docLink":"./Init/Control/Except.html#Except.toOption","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L42-L42","name":"Except.isOk","docLink":"./Init/Control/Except.html#Except.isOk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L38-L40","name":"Except.toBool","docLink":"./Init/Control/Except.html#Except.toBool","doc":"Returns true if the value is `Except.ok`, false otherwise. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L32-L35","name":"Except.bind","docLink":"./Init/Control/Except.html#Except.bind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L28-L30","name":"Except.mapError","docLink":"./Init/Control/Except.html#Except.mapError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L23-L26","name":"Except.map_id","docLink":"./Init/Control/Except.html#Except.map_id","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L19-L21","name":"Except.map","docLink":"./Init/Control/Except.html#Except.map","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Init/Control/Except.lean#L16-L17","name":"Except.pure","docLink":"./Init/Control/Except.html#Except.pure","doc":""}]}