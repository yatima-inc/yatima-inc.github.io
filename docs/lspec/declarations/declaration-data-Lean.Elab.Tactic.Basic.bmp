{"name":"Lean.Elab.Tactic.Basic","instances":[{"typeNames":["Lean.Elab.Tactic.TacticM"],"name":"Lean.Elab.Tactic.instMonadTacticM","className":"Monad"},{"typeNames":["Lean.Elab.Tactic.SavedState","Lean.Elab.Tactic.TacticM"],"name":"Lean.Elab.Tactic.instMonadBacktrackSavedStateTacticM","className":"Lean.MonadBacktrack"},{"typeNames":["Lean.Exception","Lean.Elab.Tactic.TacticM"],"name":"Lean.Elab.Tactic.instMonadExceptExceptionTacticM","className":"MonadExcept"},{"typeNames":["Lean.Elab.Tactic.TacticM"],"name":"Lean.Elab.Tactic.instOrElseTacticM","className":"OrElse"},{"typeNames":["Lean.Elab.Tactic.TacticM"],"name":"Lean.Elab.Tactic.instAlternativeTacticM","className":"Alternative"}],"imports":["Init","Lean.Util.CollectMVars","Lean.Parser.Command","Lean.Meta.PPGoal","Lean.Meta.Tactic.Assumption","Lean.Meta.Tactic.Contradiction","Lean.Meta.Tactic.Intro","Lean.Meta.Tactic.Clear","Lean.Meta.Tactic.Revert","Lean.Meta.Tactic.Subst","Lean.Elab.Util","Lean.Elab.Term","Lean.Elab.Binders"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L422-L423","name":"Lean.Elab.Tactic.withCaseRef","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withCaseRef","doc":"Use position of `=> $body` for error messages.\nIf there is a line break before `body`, the message will be displayed on `=>` only,\nbut the \"full range\" for the info view will still include `body`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L415-L416","name":"Lean.Elab.Tactic.getNameOfIdent'","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getNameOfIdent'","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L396-L412","name":"Lean.Elab.Tactic.tagUntaggedGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tagUntaggedGoals","doc":"Use `parentTag` to tag untagged goals at `newGoals`.\nIf there are multiple new untagged goals, they are named using `<parentTag>.<newSuffix>_<idx>` where `idx > 0`.\nIf there is only one new untagged goal, then we just use `parentTag` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L386-L391","name":"Lean.Elab.Tactic.tryTactic","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tryTactic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L380-L384","name":"Lean.Elab.Tactic.tryTactic?","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tryTactic?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L373-L378","name":"Lean.Elab.Tactic.liftMetaTactic1","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.liftMetaTactic1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L368-L371","name":"Lean.Elab.Tactic.liftMetaTactic","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.liftMetaTactic","doc":"Get the mvarid of the main goal, run the given `tactic`,\nthen set the new goals to be the resulting goal list."},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L360-L364","name":"Lean.Elab.Tactic.liftMetaTacticAux","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.liftMetaTacticAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L357-L358","name":"Lean.Elab.Tactic.liftMetaMAtMain","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.liftMetaMAtMain","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L351-L355","name":"Lean.Elab.Tactic.closeMainGoal","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.closeMainGoal","doc":"Close main goal using the given expression. If `checkUnassigned == true`, then `val` must not contain unassinged metavariables. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L343-L348","name":"Lean.Elab.Tactic.ensureHasNoMVars","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.ensureHasNoMVars","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L333-L341","name":"Lean.Elab.Tactic.evalTacticAt","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTacticAt","doc":"Evaluate `tac` at `mvarId`, and return the list of resulting subgoals. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L329-L330","name":"Lean.Elab.Tactic.withMainContext","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withMainContext","doc":"Execute `x` using the main goal local context and instances "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L325-L326","name":"Lean.Elab.Tactic.getMainTarget","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainTarget","doc":"Return expected type for the main goal. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L321-L322","name":"Lean.Elab.Tactic.getMainTag","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainTag","doc":"Return the main goal tag. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L317-L318","name":"Lean.Elab.Tactic.getMainDecl","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainDecl","doc":"Return the main goal metavariable declaration. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L307-L314","name":"Lean.Elab.Tactic.getMainGoal.loop","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainGoal.loop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L304-L314","name":"Lean.Elab.Tactic.getMainGoal","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainGoal","doc":"Return the first goal. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L299-L301","name":"Lean.Elab.Tactic.replaceMainGoal","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.replaceMainGoal","doc":"Discard the first goal and replace it by the given list of goals, \nkeeping the other goals. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L294-L295","name":"Lean.Elab.Tactic.appendGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.appendGoals","doc":"Add the given goals at the end of the current goals collection. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L289-L291","name":"Lean.Elab.Tactic.adaptExpander","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.adaptExpander","doc":"Adapt a syntax transformation to a regular tactic evaluator. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L284-L286","name":"Lean.Elab.Tactic.withMacroExpansion","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withMacroExpansion","doc":"Elaborate `x` with `stx` on the macro stack "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L278-L280","name":"Lean.Elab.Tactic.saveTacticInfoForToken","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.saveTacticInfoForToken","doc":"Save the current tactic state for a token `stx`.\nThis method is a no-op if `stx` has no position information.\nWe use this method to save the tactic state at punctuation such as `;`\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L269-L271","name":"Lean.Elab.Tactic.instAlternativeTacticM","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instAlternativeTacticM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L266-L267","name":"Lean.Elab.Tactic.instOrElseTacticM","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instOrElseTacticM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L263-L264","name":"Lean.Elab.Tactic.orElse","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.orElse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L260-L261","name":"Lean.Elab.Tactic.withoutRecover","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withoutRecover","doc":"Execute `x` with error recovery disabled "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L255-L257","name":"Lean.Elab.Tactic.instMonadExceptExceptionTacticM","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instMonadExceptExceptionTacticM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L251-L253","name":"Lean.Elab.Tactic.tryCatch","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tryCatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L247-L249","name":"Lean.Elab.Tactic.instMonadBacktrackSavedStateTacticM","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instMonadBacktrackSavedStateTacticM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L233-L245","name":"Lean.Elab.Tactic.closeUsingOrAdmit","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.closeUsingOrAdmit","doc":"Close the main goal using the given tactic. If it fails, log the error and `admit` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L226-L230","name":"Lean.Elab.Tactic.focusAndDone","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.focusAndDone","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L218-L224","name":"Lean.Elab.Tactic.focus","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.focus","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L212-L216","name":"Lean.Elab.Tactic.done","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.done","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L209-L210","name":"Lean.Elab.Tactic.throwNoGoalsToBeSolved","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.throwNoGoalsToBeSolved","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L201-L207","name":"Lean.Elab.Tactic.evalTactic.eval","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic.eval","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L190-L199","name":"Lean.Elab.Tactic.evalTactic.expandEval","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic.expandEval","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L172-L188","name":"Lean.Elab.Tactic.evalTactic.handleEx","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic.handleEx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L164-L170","name":"Lean.Elab.Tactic.evalTactic.throwExs","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic.throwExs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L147-L207","name":"Lean.Elab.Tactic.evalTactic","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L143-L145","name":"Lean.Elab.Tactic.EvalTacticFailure","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.EvalTacticFailure","doc":"Auxiliary datastructure for capturing exceptions at `evalTactic`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L130-L131","name":"Lean.Elab.Tactic.withTacticInfoContext","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withTacticInfoContext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L125-L128","name":"Lean.Elab.Tactic.mkInitialTacticInfo","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.mkInitialTacticInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L115-L123","name":"Lean.Elab.Tactic.mkTacticInfo","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.mkTacticInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L113-L113","name":"Lean.Elab.Tactic.tacticElabAttribute","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tacticElabAttribute","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L110-L111","name":"Lean.Elab.Tactic.mkTacticAttribute","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.mkTacticAttribute","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L108-L108","name":"Lean.Elab.Tactic.getMainModule","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainModule","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L107-L107","name":"Lean.Elab.Tactic.getCurrMacroScope","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getCurrMacroScope","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L103-L105","name":"Lean.Elab.Tactic.SavedState.restore","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.SavedState.restore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L100-L101","name":"Lean.Elab.Tactic.saveState","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.saveState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L80-L98","name":"Lean.Elab.Tactic.run","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.run","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L70-L72","name":"Lean.Elab.Tactic.getUnsolvedGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getUnsolvedGoals","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L65-L68","name":"Lean.Elab.Tactic.pruneSolvedGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.pruneSolvedGoals","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L62-L63","name":"Lean.Elab.Tactic.setGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.setGoals","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L59-L60","name":"Lean.Elab.Tactic.getGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getGoals","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L57-L57","name":"Lean.Elab.Tactic.instMonadTacticM","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instMonadTacticM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L53-L53","name":"Lean.Elab.Tactic.Tactic","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L52-L52","name":"Lean.Elab.Tactic.TacticM","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L48-L50","name":"Lean.Elab.Tactic.SavedState","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.SavedState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L38-L46","name":"Lean.Elab.Tactic.Context","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Context","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L31-L34","name":"Lean.Elab.Term.reportUnsolvedGoals","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Term.reportUnsolvedGoals","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L28-L29","name":"Lean.Elab.goalsToMessageData","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.goalsToMessageData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/fbb858a32cee8090e5390df1fb688b032148645b/src/Lean/Elab/Tactic/Basic.lean#L23-L26","name":"Lean.Elab.admitGoal","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.admitGoal","doc":"Assign `mvarId := sorry` "}]}